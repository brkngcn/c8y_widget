import { ActivatedRoute } from '@angular/router';
import { ContextData, ContextRouteService, ExtensionFactory, Permissions, Tab } from '@c8y/ngx-components';
import { BsModalService } from 'ngx-bootstrap/modal';
import { ContextDashboardService } from './context-dashboard.service';
import * as ɵngcc0 from '@angular/core';
export declare class AddDashboardFactory implements ExtensionFactory<Tab> {
    private permissions;
    private contextDashboardService;
    private bsModal;
    private contextRoute;
    currentContext: ContextData;
    constructor(permissions: Permissions, contextDashboardService: ContextDashboardService, bsModal: BsModalService, contextRoute: ContextRouteService);
    get(activatedRoute?: ActivatedRoute): Promise<Tab | Tab[]>;
    addDashboard(): Promise<void>;
    private hasPermission;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AddDashboardFactory, never>;
}

//# sourceMappingURL=add-dashboard.factory.d.ts.map