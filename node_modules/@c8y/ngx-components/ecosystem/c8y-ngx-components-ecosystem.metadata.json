{"__symbolic":"module","version":4,"metadata":{"ActivityLogComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-activity-log","template":"<div class=\"inner-scroll bg-gray-white flex-grow\">\n  <div class=\"card-block overflow-visible\">\n    <c8y-list-group>\n      <c8y-li-timeline *ngFor=\"let archive of archives\" [ngClass]=\"{ active: isActive(archive) }\">\n        {{ archive.created | date: 'd MMM YYYY' }}\n        {{ archive.created | date: 'shortTime' }}\n        <c8y-li>\n          <c8y-li-icon\n            [icon]=\"checkIfLast(archive) ? 'flag-checkered' : 'file-zip-o'\"\n          ></c8y-li-icon>\n          <c8y-li-body>\n            <div class=\"d-flex a-i-start\">\n              <div style=\"min-width: 0; flex: 1\">\n                <span class=\"text-truncate-wrap\" title=\" {{ archive.description || archive.name }}\">\n                  {{ archive.description || archive.name }}\n                </span>\n                <small *ngIf=\"archive.description\" class=\"text-muted\">{{\n                  archive.description\n                }}</small>\n              </div>\n              <i\n                *ngIf=\"isLoading && toActivate(archive)\"\n                [c8yIcon]=\"'circle-o-notch'\"\n                class=\"icon-spin\"\n                title=\"{{ 'Activating' | translate }}\"\n              ></i>\n\n              <span *ngIf=\"isActive(archive)\" class=\"label label-primary m-l-auto m-t-4\">{{\n                'Active' | translate\n              }}</span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-action\n            (click)=\"setActive(archive)\"\n            *ngIf=\"hasAdminPermissions && !isLoading && !isActive(archive)\"\n            icon=\"check-square-o\"\n          >\n            {{ 'Set as active`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action (click)=\"downloadArchive(archive)\" icon=\"download\">\n            {{ 'Download`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"deleteArchive(archive)\"\n            *ngIf=\"\n              hasAdminPermissions &&\n              archives.length > 1 &&\n              !checkIfLast(archive) &&\n              !isActive(archive)\n            \"\n            icon=\"trash\"\n          >\n            {{ 'Delete`archive`' | translate }}\n          </c8y-li-action>\n          <c8y-li-action\n            (click)=\"reactivateArchive()\"\n            *ngIf=\"hasAdminPermissions && canReactivate && isActive(archive)\"\n            icon=\"undo\"\n          >\n            {{ 'Reactivate archive' | translate }}\n          </c8y-li-action>\n        </c8y-li>\n      </c8y-li-timeline>\n    </c8y-list-group>\n  </div>\n</div>\n<div class=\"card-footer\">\n  <c8y-form-group *ngIf=\"!isLoading && hasAdminPermissions\" class=\"m-auto\">\n    <c8y-upload-archive [(application)]=\"application\" (refresh)=\"onRefresh()\"></c8y-upload-archive>\n  </c8y-form-group>\n</div>\n"}]}],"members":{"application":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"hasAdminPermissions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":19,"character":80}]}],"ngOnInit":[{"__symbolic":"method"}],"isActive":[{"__symbolic":"method"}],"toActivate":[{"__symbolic":"method"}],"checkIfLast":[{"__symbolic":"method"}],"showReactivate":[{"__symbolic":"method"}],"setActive":[{"__symbolic":"method"}],"deleteArchive":[{"__symbolic":"method"}],"downloadArchive":[{"__symbolic":"method"}],"reactivateArchive":[{"__symbolic":"method"}],"onRefresh":[{"__symbolic":"method"}],"refresh":[{"__symbolic":"method"}]}},"ApplicationPropertiesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":26,"character":1},"arguments":[{"selector":"c8y-application-properties","template":"<c8y-title>{{ application | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb *ngIf=\"!isMicroservice\">\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumbConfig?.icon\"\n    [label]=\"breadcrumbConfig?.label\"\n    [path]=\"breadcrumbConfig?.path\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"application | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Properties' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-breadcrumb *ngIf=\"isMicroservice\">\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"breadcrumbConfig?.icon\"\n    [label]=\"breadcrumbConfig?.label\"\n    [path]=\"breadcrumbConfig?.path\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"application | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Properties' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"row\">\n  <div [ngClass]=\"{ 'col-md-8': !isActivityLogSupported, 'col-md-12': isActivityLogSupported }\">\n    <div\n      *ngIf=\"application\"\n      [ngClass]=\"{ 'd-grid grid__col--7-5--md': isActivityLogSupported }\"\n      class=\"card content-fullpage\"\n    >\n      <form\n        (ngSubmit)=\"formGroup.valid && save(formGroup.value)\"\n        [formGroup]=\"formGroup\"\n        class=\"d-flex d-col content-fullpage\"\n        novalidate\n      >\n        <div *ngIf=\"!isLoading\" class=\"d-contents\">\n          <div class=\"card-block separator-bottom large-padding flex-no-shrink\">\n            <div class=\"d-flex-md a-i-start text-center text-left-md\">\n              <c8y-app-icon\n                *ngIf=\"!isPackage && !isFeature && !isMicroservice && !isExternal\"\n                [app]=\"application\"\n                [contextPath]=\"application.contextPath\"\n                [name]=\"application.name\"\n                class=\"icon-48\"\n              ></c8y-app-icon>\n              <i *ngIf=\"isPackage\" c8yIcon=\"big-parcel\" class=\"icon-48\"></i>\n              <i *ngIf=\"isFeature\" c8yIcon=\"tab\" class=\"icon-48\"></i>\n              <i *ngIf=\"isMicroservice\" c8yIcon=\"microchip\" class=\"icon-48\"></i>\n              <i *ngIf=\"isExternal\" c8yIcon=\"globe1\" class=\"icon-48\"></i>\n\n              <div class=\"p-t-md-16 p-l-md-16 p-r-md-32 flex-grow\">\n                <h4 class=\"text-medium m-b-8\">{{ application | humanizeAppName | async }}</h4>\n                <p *ngIf=\"!isOwner\">\n                  <em class=\"text-muted\">\n                    {{ application.description || ('No description available.' | translate) }}\n                  </em>\n                </p>\n                <div *ngIf=\"isOwner\" class=\"form-group m-b-0\">\n                  <label\n                    [ngClass]=\"{ updated: formGroup?.controls?.description?.dirty }\"\n                    class=\"editable\"\n                  >\n                    <textarea\n                      c8y-textarea-autoresize\n                      class=\"form-control no-resize\"\n                      formControlName=\"description\"\n                      name=\"description\"\n                      placeholder=\"{{ 'No description available.' | translate }}\"\n                    ></textarea>\n                  </label>\n                </div>\n              </div>\n              <div class=\"text-right-md m-t-4\">\n                <span [ngClass]=\"appState?.class\" class=\"label\">{{\n                  appState?.label | translate\n                }}</span>\n                <div class=\"fit-w m-t-2\" *ngIf=\"isPackage || isMicroservice\">\n                  <label class=\"text-label-small\" translate>Version:</label>\n                  <small class=\"p-l-4 text-bold\">{{ application.manifest?.version }}</small>\n                </div>\n                <div class=\"fit-w m-t-2\">\n                  <label class=\"text-label-small\" translate>Creation time:</label>\n                  <small class=\"p-l-4 text-bold\">{{ binaryMo?.creationTime | c8yDate }}</small>\n                </div>\n                <div class=\"m-t-8\">\n                  <button\n                    (click)=\"openApp(application); $event.stopPropagation()\"\n                    [disabled]=\"disableOpenInBrowser\"\n                    *ngIf=\"canOpenInBrowser\"\n                    class=\"btn btn-default btn-xs\"\n                    title=\"{{ 'Open' | translate }}\"\n                  >\n                    <i [c8yIcon]=\"'external-link'\"></i>\n                    {{ 'Open' | translate }}\n                  </button>\n                  <div *ngIf=\"canOpenInBrowser && disableOpenInBrowser\">\n                    <small class=\"text-muted\" translate\n                      >The application is overwritten by a custom application sharing the same\n                      path</small\n                    >\n                  </div>\n                  <span *ngIf=\"isCustomMicroservice\">\n                    <button\n                      (click)=\"subscribe()\"\n                      *ngIf=\"!isSubscribed\"\n                      class=\"btn btn-default btn-xs\"\n                      title=\"{{ 'Subscribe' | translate }}\"\n                    >\n                      <i [c8yIcon]=\"'check-circle-o'\"></i>\n                      {{ 'Subscribe' | translate }}\n                    </button>\n                    <button\n                      (click)=\"unsubscribe()\"\n                      *ngIf=\"isSubscribed\"\n                      class=\"btn btn-default btn-xs\"\n                      title=\"{{ 'Unsubscribe' | translate }}\"\n                    >\n                      <i [c8yIcon]=\"'minus-circle'\"></i>\n                      {{ 'Unsubscribe' | translate }}\n                    </button>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"inner-scroll bg-white flex-grow\">\n            <div class=\"card-block large-padding\">\n              <div *ngIf=\"isPackage\" class=\"row p-16\">\n                <c8y-properties-list\n                  [data]=\"application.manifest\"\n                  [properties]=\"packageProperties\"\n                  [title]=\"'Package details' | translate\"\n                  icon=\"info\"\n                ></c8y-properties-list>\n              </div>\n              <div *ngIf=\"package\" class=\"row p-16\">\n                <c8y-properties-list\n                  [data]=\"package.manifest\"\n                  [properties]=\"packageProperties\"\n                  [title]=\"'Source package information' | translate\"\n                  icon=\"info\"\n                ></c8y-properties-list>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-sm-5\">\n                  <c8y-form-group>\n                    <label>ID</label>\n                    <input\n                      [readonly]=\"true\"\n                      autocomplete=\"off\"\n                      class=\"form-control\"\n                      formControlName=\"id\"\n                      name=\"id\"\n                      type=\"text\"\n                    />\n                  </c8y-form-group>\n                </div>\n                <div class=\"col-sm-7\">\n                  <c8y-form-group>\n                    <label>{{ 'Name' | translate }}</label>\n                    <input\n                      [readonly]=\"!isOwner\"\n                      class=\"form-control\"\n                      formControlName=\"name\"\n                      name=\"name\"\n                      placeholder=\"{{ 'e.g. My application' | translate }}\"\n                      required\n                      type=\"text\"\n                    />\n                  </c8y-form-group>\n                </div>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"col-sm-5\">\n                  <c8y-form-group>\n                    <label>{{ 'Application key' | translate }}</label>\n                    <input\n                      [readonly]=\"application.id || !isOwner\"\n                      class=\"form-control\"\n                      name=\"key\"\n                      formControlName=\"key\"\n                      placeholder=\"{{ 'e.g. my-application-key' | translate }}\"\n                      required\n                      type=\"text\"\n                    />\n                  </c8y-form-group>\n                </div>\n\n                <div class=\"col-sm-7\">\n                  <c8y-form-group>\n                    <label>{{ 'Type' | translate }}</label>\n                    <div>\n                      <div *ngIf=\"application.id\">\n                        <p class=\"form-control-static\">\n                          <i [c8yIcon]=\"iconMap[application.type]\"></i>\n                          <span>\n                            {{ application.type | translate }}\n                          </span>\n                        </p>\n                      </div>\n                    </div>\n                  </c8y-form-group>\n                </div>\n              </div>\n\n              <div [ngSwitch]=\"application.type\">\n                <div *ngSwitchCase=\"'HOSTED'\">\n                  <c8y-form-group>\n                    <label>{{ 'Path' | translate }}</label>\n                    <div class=\"input-group\">\n                      <span class=\"input-group-addon\">/apps/</span>\n                      <input\n                        [readOnly]=\"application.id || !isOwner\"\n                        class=\"form-control\"\n                        name=\"contextPath\"\n                        placeholder=\"{{ 'e.g. my-application`used in URL`' | translate }}\"\n                        required\n                        type=\"text\"\n                        formControlName=\"contextPath\"\n                      />\n                    </div>\n                  </c8y-form-group>\n                </div>\n\n                <div *ngSwitchCase=\"'MICROSERVICE'\">\n                  <c8y-form-group>\n                    <label>{{ 'Path' | translate }}</label>\n                    <div class=\"input-group\">\n                      <span class=\"input-group-addon\">/service/</span>\n                      <input\n                        [readOnly]=\"application.id || !isOwner\"\n                        class=\"form-control\"\n                        name=\"contextPath\"\n                        placeholder=\"{{ 'e.g. my-microservice`used in URL`' | translate }}\"\n                        required\n                        type=\"text\"\n                        formControlName=\"contextPath\"\n                      />\n                    </div>\n                  </c8y-form-group>\n                  <div class=\"row\">\n                    <div *ngIf=\"application.manifest.version\" class=\"col-sm-4 m-b-16 flex-auto\">\n                      <label>{{ 'Version' | translate }}</label>\n                      <p class=\"form-control-static\">\n                        {{ application.manifest.version }}\n                      </p>\n                    </div>\n                    <div *ngIf=\"application.manifest.isolation\" class=\"col-sm-4 m-b-16 flex-auto\">\n                      <label>{{ 'Isolation' | translate }}</label>\n                      <p class=\"form-control-static\">\n                        <span *ngIf=\"singleTenant\">\n                          <i [c8yIcon]=\"'c8y-enterprise'\" class=\"c8y-icon-duocolor h4\"></i>\n                          {{ 'Single tenant' | translate }}\n                        </span>\n                        <span *ngIf=\"!singleTenant\">\n                          <i [c8yIcon]=\"'c8y-sub-tenants'\" class=\"c8y-icon-duocolor h4\"></i>\n                          {{ 'Multi tenant' | translate }}\n                        </span>\n                      </p>\n                    </div>\n                    <div *ngIf=\"application.manifest.isolation\" class=\"col-sm-4 m-b-16 flex-auto\">\n                      <label>{{ 'Billing mode' | translate }}</label>\n                      <p class=\"form-control-static\">\n                        <span\n                          *ngIf=\"subscription\"\n                          [tooltip]=\"'Resources usage assigned to: Owner' | translate\"\n                        >\n                          {{ 'Subscription' | translate }}\n                        </span>\n                        <span\n                          *ngIf=\"!subscription && singleTenant\"\n                          [tooltip]=\"'Resources usage assigned to: Subscriber | translate'\"\n                        >\n                          {{ 'Resources' | translate }}\n                        </span>\n                        <span\n                          *ngIf=\"!subscription && !singleTenant\"\n                          [tooltip]=\"'Resources usage assigned to: Owner' | translate\"\n                        >\n                          {{ 'Resources' | translate }}\n                        </span>\n                      </p>\n                    </div>\n                  </div>\n\n                  <div *ngIf=\"application.manifest.provider\" class=\"legend form-block m-t-40\">\n                    {{ 'Provider' | translate }}\n                  </div>\n                  <div class=\"list-inline\" *ngIf=\"application.manifest.provider\">\n                    <div *ngIf=\"application.manifest.provider.name\">\n                      <div class=\"col-sm-4 m-b-16\">\n                        <label>{{ 'Name' | translate }}</label>\n                        <p class=\"form-control-static\">\n                          {{ application.manifest.provider.name }}\n                        </p>\n                      </div>\n                    </div>\n                    <div *ngIf=\"application.manifest.provider.domain\">\n                      <div class=\"col-sm-4 m-b-16\">\n                        <label>{{ 'Domain' | translate }}</label>\n                        <p class=\"form-control-static\">\n                          {{ application.manifest.provider.domain }}\n                        </p>\n                      </div>\n                    </div>\n                    <div *ngIf=\"application.manifest.provider.support\">\n                      <div class=\"col-sm-4 m-b-16\">\n                        <label>{{ 'Support' | translate }}</label>\n                        <p class=\"form-control-static\">\n                          {{ application.manifest.provider.support }}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div *ngSwitchCase=\"'REPOSITORY'\">\n                  <c8y-form-group>\n                    <label>{{ 'Path' | translate }}</label>\n                    <div class=\"input-group\">\n                      <span class=\"input-group-addon\"> /apps/ </span>\n                      <input\n                        [readOnly]=\"application.id || !isOwner\"\n                        class=\"form-control\"\n                        formControlName=\"contextPath\"\n                        name=\"contextPath\"\n                        placeholder=\"{{ 'e.g. my-application`used in URL`' | translate }}\"\n                        required\n                        type=\"text\"\n                      />\n                    </div>\n                  </c8y-form-group>\n\n                  <c8y-form-group>\n                    <label>{{ 'Server URL' | translate }}</label>\n                    <input\n                      class=\"form-control\"\n                      name=\"resourcesUrl\"\n                      formControlName=\"resourcesUrl\"\n                      placeholder=\"{{ 'e.g. my-application`used in URL`' | translate }}\"\n                      required\n                      type=\"url\"\n                    />\n                  </c8y-form-group>\n\n                  <div class=\"form-group\">\n                    <label> {{ 'Username' | translate }}</label>\n                    <input\n                      class=\"form-control\"\n                      formControlName=\"username\"\n                      name=\"username\"\n                      type=\"text\"\n                    />\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label>{{ 'Password' | translate }}</label>\n                    <input\n                      class=\"form-control\"\n                      formControlName=\"password\"\n                      name=\"password\"\n                      type=\"text\"\n                    />\n                  </div>\n                </div>\n\n                <div *ngSwitchCase=\"'EXTERNAL'\">\n                  <c8y-form-group>\n                    <label>{{ 'External URL' | translate }}</label>\n                    <input\n                      [pattern]=\"'^(?!javascript:).+'\"\n                      [readOnly]=\"!isOwner\"\n                      class=\"form-control\"\n                      formControlName=\"externalUrl\"\n                      name=\"externalUrl\"\n                      placeholder=\"{{ 'e.g.' | translate }} http://www.example.com/\"\n                      required\n                      type=\"url\"\n                    />\n                    <c8y-messages>\n                      <c8y-message\n                        [name]=\"'pattern'\"\n                        [text]=\"'Valid URL required.' | translate\"\n                      ></c8y-message>\n                    </c8y-messages>\n                  </c8y-form-group>\n                </div>\n              </div>\n            </div>\n          </div>\n          <ng-container *ngIf=\"isCustomMicroservice\">\n            <div *ngIf=\"!isLoading\" class=\"d-contents\">\n              <c8y-upload-archive\n                [(application)]=\"application\"\n                (refresh)=\"onNewArchive()\"\n              ></c8y-upload-archive>\n            </div>\n          </ng-container>\n          <div\n            *ngIf=\"application && !!isOwner && hasAdminPermissions\"\n            class=\"card-footer separator\"\n          >\n            <button\n              (click)=\"cancel()\"\n              class=\"btn btn-default\"\n              title=\"{{ 'Cancel' | translate }}\"\n              type=\"button\"\n            >\n              {{ 'Cancel' | translate }}\n            </button>\n            <button\n              (click)=\"delete()\"\n              *ngIf=\"canDelete\"\n              class=\"btn btn-danger\"\n              title=\"{{ 'Delete' | translate }}\"\n              type=\"button\"\n            >\n              {{ 'Delete' | translate }}\n            </button>\n            <button\n              [disabled]=\"!application.type || formGroup.invalid || formGroup.pristine\"\n              class=\"btn btn-primary btn-form\"\n              title=\"{{ 'Save' | translate }}\"\n              type=\"submit\"\n            >\n              {{ 'Save' | translate }}\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div *ngIf=\"isActivityLogSupported\" class=\"content-fullpage d-flex d-col bg-gray-white\">\n        <div class=\"card-header separator\">\n          <h4 class=\"card-title\" translate>Activity log</h4>\n          <div class=\"m-l-auto\">\n            <button\n              (click)=\"load()\"\n              class=\"btn btn-link\"\n              title=\"{{ 'Reload' | translate }}\"\n              type=\"button\"\n            >\n              <i [ngClass]=\"{ 'icon-spin': isLoading }\" c8yIcon=\"refresh\"></i>\n              {{ 'Reload' | translate }}\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"isLoading\" class=\"p-16 text-center\">\n          <c8y-loading></c8y-loading>\n        </div>\n        <c8y-activity-log\n          *ngIf=\"!isLoading\"\n          [hasAdminPermissions]=\"hasAdminPermissions\"\n          [application]=\"application\"\n          class=\"d-contents\"\n        ></c8y-activity-log>\n      </div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":62,"character":28},{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":64,"character":20},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":65,"character":25},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":66,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":67,"character":26},{"__symbolic":"reference","module":"@c8y/client","name":"InventoryService","line":68,"character":30},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"Permissions","line":69,"character":25}]}],"ngOnInit":[{"__symbolic":"method"}],"load":[{"__symbolic":"method"}],"onApplication":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"openApp":[{"__symbolic":"method"}],"getPackage":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"subscribe":[{"__symbolic":"method"}],"unsubscribe":[{"__symbolic":"method"}],"loadApplication":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"onNewArchive":[{"__symbolic":"method"}],"resolveSourcePackage":[{"__symbolic":"method"}],"initForm":[{"__symbolic":"method"}],"isActivityLogSupportedByApp":[{"__symbolic":"method"}],"setBreadcrumbConifg":[{"__symbolic":"method"}],"loadBinaryMo":[{"__symbolic":"method"}]}},"ApplicationPropertiesGuard":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"}]}],"canActivate":[{"__symbolic":"method"}]}},"AddExternalApplicationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-add-external-application","template":"<form *ngIf=\"!createdApp; else appCreated\" [formGroup]=\"formGroup\" novalidate>\n  <c8y-wizard-header>\n    <h1 [c8yIcon]=\"'cloud-link'\"></h1>\n    <h4 translate>Add external application</h4>\n  </c8y-wizard-header>\n\n  <c8y-wizard-body>\n    <p class=\"p-16 text-medium text-center bg-white separator-bottom sticky-top\">\n      {{ 'Provide external application details' | translate }}\n    </p>\n    <div class=\"modal-body p-t-8\">\n      <c8y-form-group>\n        <label style=\"text-align: left\">{{ 'Name' | translate }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"name\"\n          name=\"name\"\n          placeholder=\"{{ 'e.g. My application' | translate }}\"\n          required\n          type=\"text\"\n        />\n      </c8y-form-group>\n\n      <c8y-form-group>\n        <label style=\"text-align: left\">{{ 'Application key' | translate }}</label>\n        <input\n          class=\"form-control\"\n          formControlName=\"key\"\n          name=\"key\"\n          placeholder=\"{{ 'e.g. my-external-application-key' | translate }}\"\n          required\n          type=\"text\"\n        />\n      </c8y-form-group>\n\n      <c8y-form-group>\n        <label style=\"text-align: left\">{{ 'External URL' | translate }}</label>\n        <input\n          [pattern]=\"'^(?!javascript:).+'\"\n          class=\"form-control\"\n          formControlName=\"externalUrl\"\n          name=\"externalUrl\"\n          placeholder=\"{{ 'e.g.' | translate }} https://www.example.com\"\n          required\n          type=\"url\"\n        />\n      </c8y-form-group>\n    </div>\n  </c8y-wizard-body>\n\n  <c8y-wizard-footer>\n    <button\n      (click)=\"back()\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Back' | translate }}\"\n      translate\n      type=\"button\"\n    >\n      Back\n    </button>\n    <button (click)=\"cancel()\" class=\"btn btn-default\" title=\"{{ 'Cancel' | translate }}\" translate>\n      Cancel\n    </button>\n    <button\n      (click)=\"save(formGroup.value)\"\n      [disabled]=\"formGroup.invalid || formGroup.pristine\"\n      class=\"btn btn-primary btn-form\"\n      title=\"{{ 'Add application' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Add application' | translate }}\n    </button>\n  </c8y-wizard-footer>\n</form>\n<ng-template #appCreated>\n  <c8y-wizard-body>\n    <div class=\"d-flex d-col j-c-center a-i-center\" style=\"min-height: 324px\">\n      <c8y-operation-result\n        text=\"{{ 'Application created' | translate }}\"\n        [size]=\"84\"\n        [vertical]=\"true\"\n        type=\"success\"\n        class=\"lead\"\n      ></c8y-operation-result>\n    </div>\n  </c8y-wizard-body>\n  <c8y-wizard-footer>\n    <button (click)=\"done()\" class=\"btn btn-default\" title=\"{{ 'Done' | translate }}\" translate>\n      Done\n    </button>\n    <a\n      (click)=\"$event.stopPropagation()\"\n      [href]=\"formGroup.value.externalUrl\"\n      target=\"_blank\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Open' | translate }}\"\n    >\n      <i c8yIcon=\"external-link\" class=\"m-r-4\"></i>\n      {{ 'Open' | translate }}\n    </a>\n  </c8y-wizard-footer>\n</ng-template>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":14,"character":32},{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":15,"character":25},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":16,"character":26},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardComponent","line":17,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"back":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"done":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"initForm":[{"__symbolic":"method"}]}},"AddWebApplicationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-add-web-application","template":"<c8y-add-application\n    [headerText]=\"headerText\"\n    [headerIcon]=\"'upload'\"\n    [successText]=\"successText\"\n    [createApplicationHandler]=\"createApplicationHandler\"\n    [uploadApplicationHandler]=\"uploadApplicationHandler\"\n    [canGoBack]=\"true\"\n  ></c8y-add-application>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"}]}],"createApplication":[{"__symbolic":"method"}],"uploadApplication":[{"__symbolic":"method"}]}},"ApplicationListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"c8y-application-list","template":"<c8y-title>{{ 'All applications' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'All applications' | translate\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\" *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n  <button\n    (click)=\"addApplication()\"\n    class=\"btn btn-link\"\n    title=\"{{ 'Add application' | translate }}\"\n  >\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add application' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"loadApplications()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(apps$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<!-- <c8y-help src=\"/users-guide/administration/#managing-applications\"></c8y-help> -->\n\n<div *ngIf=\"(apps$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No applications to display.</h3>\n  <p translate>Add your first application by clicking below.</p>\n  <p>\n    <button\n      (click)=\"addApplication()\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add application' | translate }}\"\n    >\n      {{ 'Add application' | translate }}\n    </button>\n  </p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs flex-row\" *ngIf=\"(apps$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Application' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div *ngFor=\"let app of apps$ | async\" class=\"col-xs-12 col-sm-4 col-md-3\">\n    <c8y-application-card\n      (onAppDeleted)=\"loadApplications()\"\n      (onAppCloned)=\"loadApplications()\"\n      [app]=\"app\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardService","line":25,"character":81}]}],"ngOnInit":[{"__symbolic":"method"}],"loadApplications":[{"__symbolic":"method"}],"addApplication":[{"__symbolic":"method"}]}},"ApplicationPluginsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":12,"character":1},"arguments":[{"selector":"c8y-app-plugins","template":"<c8y-title>{{ app | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'All applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"app | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Plugins' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"card content-fullpage d-grid grid__col--6-6--md\">\n  <div class=\"inner-scroll bg-gray-white\">\n    <div class=\"card-header large-padding separator sticky-top\">\n      <h4 class=\"card-title\" translate>Included plugins</h4>\n    </div>\n    <div class=\"card-block large-padding\">\n      <p class=\"d-flex a-i-start p-b-16\">\n        <i c8yIcon=\"info-circle\" class=\"text-info m-r-8 icon-20\"></i>\n        <span translate>\n          Plugins included with the application. These plugins are required for running the\n          application and cannot be removed.\n        </span>\n      </p>\n      <c8y-plugin-list\n        [emptyListText]=\"'This application doesn\\'t contain plugins.' | translate\"\n        [plugins$]=\"exportedPlugins$\"\n        class=\"separator-top d-block\"\n      ></c8y-plugin-list>\n    </div>\n  </div>\n\n  <div class=\"content-fullpage d-flex d-col\">\n    <div class=\"card-header large-padding separator\">\n      <h4 class=\"card-title\" translate>Installed plugins</h4>\n    </div>\n    <div class=\"inner-scroll flex-grow\">\n      <div class=\"card-block large-padding\">\n        <p class=\"d-flex a-i-start p-b-16\">\n          <i c8yIcon=\"info-circle\" class=\"text-info m-r-8 icon-20\"></i>\n          <span translate>\n            Plugins currently installed for this application. Upgrading the application won't change\n            any of these plugins.\n          </span>\n        </p>\n        <c8y-plugin-list\n          (selectedItems)=\"pluginsToDelete = $event\"\n          [emptyListText]=\"'No plugins installed' | translate\"\n          [plugins$]=\"installedPlugins$\"\n          [selectable]=\"true\"\n          class=\"separator-top d-block\"\n        ></c8y-plugin-list>\n      </div>\n    </div>\n\n    <div class=\"card-footer large-padding separator\" *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n      <button\n        (click)=\"removePlugins()\"\n        [disabled]=\"pluginsToDelete.length === 0 || isLoading\"\n        class=\"btn btn-default\"\n        title=\"{{ 'Remove plugins' | translate }}\"\n        translate\n      >\n        Remove plugins\n      </button>\n      <button\n        (click)=\"installPlugins()\"\n        [ngClass]=\"{ 'btn-pending': isLoading }\"\n        class=\"btn btn-default\"\n        title=\"{{ 'Install plugins' | translate }}\"\n        translate\n      >\n        Install plugins\n      </button>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":34,"character":28},{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalService","line":36,"character":28},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":37,"character":19},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":38,"character":30},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"PluginsService","line":39,"character":28},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":40,"character":26}]}],"ngOnInit":[{"__symbolic":"method"}],"installPlugins":[{"__symbolic":"method"}],"removePlugins":[{"__symbolic":"method"}],"getAllPlugins":[{"__symbolic":"method"}],"updateApplicationRemotes":[{"__symbolic":"method"}],"getRemotePluginsList":[{"__symbolic":"method"}],"extendPluginList":[{"__symbolic":"method"}],"createPluginId":[{"__symbolic":"method"}],"parsePluginId":[{"__symbolic":"method"}]}},"ApplicationPluginsGuard":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"}]}],"canActivate":[{"__symbolic":"method"}]}},"InstallPluginComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"c8y-install-plugin","template":"<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <i [c8yIcon]=\"'plugin'\"></i>\n    <h4 translate>Available plugins</h4>\n  </div>\n  <div class=\"p-t-8 p-16 text-center separator-bottom\">\n    <p class=\"text-medium m-b-8\" translate>Select the compatible plugins to install</p>\n    <c8y-filter (onSearch)=\"this.filterTerm$.next($event)\"></c8y-filter>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body p-t-0 p-b-0\">\n      <c8y-plugin-list\n        (selectedItems)=\"selectedPlugins = $event\"\n        [emptyListText]=\"'No plugins available' | translate\"\n        [plugins$]=\"filteredPlugins$\"\n        [selectable]=\"true\"\n        class=\"m-t-16\"\n      ></c8y-plugin-list>\n    </div>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"cancel()\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n      translate\n      type=\"button\"\n    >\n      Cancel\n    </button>\n    <button\n      (click)=\"install()\"\n      [disabled]=\"selectedPlugins.length === 0\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Install' | translate }}\"\n      type=\"button\"\n    >\n      {{ 'Install' | translate }} ({{ selectedPlugins.length }})\n    </button>\n  </div>\n</div>\n"}]}],"members":{"plugins$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":23,"character":34},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":23,"character":61}]}],"ngOnInit":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"install":[{"__symbolic":"method"}],"filterContainString":[{"__symbolic":"method"}]}},"PluginListItemComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"c8y-plugin-list-item","template":"<c8y-li [ngClass]=\"{ disabled: plugin.installed }\" class=\"bg-inherit\">\n  <c8y-li-checkbox\n    (change)=\"onChange($event.target.checked)\"\n    *ngIf=\"selectable\"\n    [disabled]=\"plugin.installed\"\n    class=\"p-r-0 p-l-0\"\n  ></c8y-li-checkbox>\n  <c8y-li-icon>\n    <i class=\"c8y-plugin-icon\">\n      <span>{{ plugin.name?.substr(0, 2) }}</span>\n    </i>\n  </c8y-li-icon>\n  <c8y-li-body class=\"d-flex\">\n    <div class=\"p-r-8\">\n      <p>\n        <span class=\"text-medium\">{{ plugin.name }}</span>\n        <em class=\"text-muted small m-l-8\">{{ plugin.version }}</em>\n        <span *ngIf=\"plugin.installed\">\n          <i [c8yIcon]=\"'check-circle'\" class=\"text-success\"></i>\n          <em class=\"text-muted small\" translate>Installed`plugins`</em>\n        </span>\n      </p>\n      <p class=\"small l-h-tight\">{{ plugin.description }}</p>\n    </div>\n    <span *ngIf=\"selectable\" class=\"label label-info m-l-auto a-s-start\">{{\n      plugin.contextPath\n    }}</span>\n  </c8y-li-body>\n</c8y-li>\n"}]}],"members":{"plugin":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":8,"character":3}}]}],"selectable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"isItemSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":10,"character":3}}]}],"onChange":[{"__symbolic":"method"}]}},"PluginListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"c8y-plugin-list","template":"<c8y-list-group class=\"bg-inherit\">\n  <ng-container *ngIf=\"(plugins$ | async)?.length !== 0; else emptyList\">\n    <ng-container *ngFor=\"let plugin of plugins$ | async\">\n      <c8y-plugin-list-item\n        (isItemSelected)=\"updateSelectedItems($event, plugin.id)\"\n        [plugin]=\"plugin\"\n        [selectable]=\"selectable\"\n      ></c8y-plugin-list-item>\n    </ng-container>\n  </ng-container>\n</c8y-list-group>\n<ng-template #emptyList>\n  <div class=\"c8y-empty-state text-left\" *ngIf=\"emptyListText\">\n    <h1 c8yIcon=\"plugin\"></h1>\n    <p>\n      {{ emptyListText | translate }}\n    </p>\n  </div>\n</ng-template>\n"}]}],"members":{"plugins$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":9,"character":3}}]}],"emptyListText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"selectable":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"selectedItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":12,"character":3}}]}],"updateSelectedItems":[{"__symbolic":"method"}]}},"DuplicateApplicationListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-duplicate-application-list","template":"<div class=\"c8y-wizard-list-nav\">\n  <button\n    (click)=\"select(app)\"\n    *ngFor=\"let app of existingApps\"\n    class=\"list-group-item text-truncate p-t-8 p-b-8\"\n    type=\"button\"\n  >\n    <c8y-app-icon\n      [app]=\"app\"\n      [contextPath]=\"app.contextPath\"\n      [name]=\"app.name\"\n      class=\"list-group-icon\"\n    ></c8y-app-icon>\n    <span [innerText]=\"app | humanizeAppName | async\" class=\"pointer\"></span>\n    <span [ngClass]=\"ecosystemService.getAppState(app).class\" class=\"label m-l-16\">{{\n      ecosystemService.getAppState(app).label | translate\n    }}</span>\n  </button>\n</div>\n<c8y-wizard-footer>\n  <button\n    (click)=\"back()\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Back' | translate }}\"\n    translate\n    type=\"button\"\n  >\n    Back\n  </button>\n  <button (click)=\"cancel()\" class=\"btn btn-default\" title=\"{{ 'Cancel' | translate }}\" translate>\n    Cancel\n  </button>\n</c8y-wizard-footer>\n"}]}],"members":{"stepper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"existingApps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"onSelectedApp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardComponent","line":18,"character":29}]}],"select":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"back":[{"__symbolic":"method"}]}},"DuplicateApplicationPropertiesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":10,"character":1},"arguments":[{"selector":"c8y-duplicate-application-properties","template":"<p\n  class=\"p-16 text-center text-medium separator-bottom sticky-top bg-white fit-w\"\n  *ngIf=\"!inProgress\"\n>\n  {{ 'Provide application details' | translate }}\n</p>\n\n<ng-container *ngIf=\"!inProgress\">\n  <label class=\"c8y-switch\" *ngIf=\"isSubscribedApp$ | async\">\n    <input type=\"checkbox\" [(ngModel)]=\"disableForm\" (change)=\"getAppConfig()\" />\n    <span></span> {{ 'Overrule subscribed application' | translate }}\n  </label>\n\n  <c8y-application-properties-form\n    [application]=\"newAppConfig\"\n    class=\"d-block fit-w\"\n    [disabled]=\"disableForm\"\n  ></c8y-application-properties-form>\n</ng-container>\n<c8y-progress-bar\n  *ngIf=\"inProgress\"\n  [message]=\"'Duplicating…' | translate\"\n  class=\"text-center d-block\"\n></c8y-progress-bar>\n\n<c8y-wizard-footer>\n  <button\n    *ngIf=\"!isFirstStep\"\n    (click)=\"back()\"\n    [disabled]=\"inProgress\"\n    class=\"btn btn-default\"\n    type=\"button\"\n    title=\"{{ 'Back' | translate }}\"\n  >\n    {{ 'Back' | translate }}\n  </button>\n  <button (click)=\"cancel()\" class=\"btn btn-default\" title=\"{{ 'Cancel' | translate }}\">\n    {{ 'Cancel' | translate }}\n  </button>\n  <button\n    (click)=\"duplicateApp()\"\n    [disabled]=\"inProgress\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Duplicate' | translate }}\"\n  >\n    {{ 'Duplicate' | translate }}\n  </button>\n</c8y-wizard-footer>\n"}]}],"members":{"stepper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"existingApps":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"selectedApp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"isFirstStep":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":18,"character":3}}]}],"duplicatedApp":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":19,"character":3}}]}],"applicationPropertiesForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":20,"character":3},"arguments":[{"__symbolic":"reference","name":"ApplicationPropertiesFormComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":29,"character":24},{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":31,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"duplicateApp":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"back":[{"__symbolic":"method"}],"getAppConfig":[{"__symbolic":"method"}],"updateApp":[{"__symbolic":"method"}],"updateManifest":[{"__symbolic":"method"}],"getAppManifest":[{"__symbolic":"method"}]}},"DuplicateApplicationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-duplicate-application","template":"<c8y-wizard-header>\n  <h1 [c8yIcon]=\"'copy'\"></h1>\n  <h4 translate>Duplicate application</h4>\n</c8y-wizard-header>\n\n<c8y-wizard-body>\n  <c8y-stepper\n    [customClasses]=\"['hidden']\"\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    linear\n  >\n    <!-- 1st step -->\n    <cdk-step *ngIf=\"!directlyMoveToSecondStep\">\n      <p class=\"p-16 text-center text-medium separator-bottom sticky-top bg-white\">\n        {{ 'Select application to duplicate' | translate }}\n      </p>\n      <c8y-duplicate-application-list\n        (onSelectedApp)=\"onSelectedApp($event)\"\n        *ngIf=\"stepper.selectedIndex === 0\"\n        [existingApps]=\"existingApps\"\n        [stepper]=\"stepper\"\n        class=\"d-block\"\n        style=\"min-height: 257px\"\n      ></c8y-duplicate-application-list>\n    </cdk-step>\n    <!-- 2nd step -->\n    <cdk-step>\n      <c8y-duplicate-application-properties\n        class=\"d-flex d-col j-c-center a-i-center\"\n        style=\"min-height: 257px\"\n        (duplicatedApp)=\"duplicatedApp = $event\"\n        *ngIf=\"stepper.selectedIndex === 1 || (stepper.selectedIndex === 0 && directlyMoveToSecondStep)\"\n        [existingApps]=\"existingApps\"\n        [selectedApp]=\"selectedApp\"\n        [stepper]=\"stepper\"\n        [isFirstStep]=\"directlyMoveToSecondStep\"\n      ></c8y-duplicate-application-properties>\n    </cdk-step>\n    <!-- Final step -->\n    <cdk-step>\n      <ng-container *ngIf=\"stepper.selectedIndex === 2 || (stepper.selectedIndex === 1 && directlyMoveToSecondStep)\">\n        <div\n          *ngIf=\"duplicatedApp; else duplicateAppFailed\"\n          style=\"min-height: 257px\"\n          class=\"d-flex a-i-center j-c-center\"\n        >\n          <c8y-operation-result\n            text=\"{{ 'Application created' | translate }}\"\n            [size]=\"84\"\n            [vertical]=\"true\"\n            type=\"success\"\n          ></c8y-operation-result>\n        </div>\n        <ng-template #duplicateAppFailed>\n          <div style=\"min-height: 257px\" class=\"d-flex a-i-center j-c-center\">\n            <c8y-operation-result\n              text=\"{{ 'Application creation failed' | translate }}\"\n              [size]=\"84\"\n              [vertical]=\"true\"\n              type=\"error\"\n            ></c8y-operation-result>\n          </div>\n        </ng-template>\n      </ng-container>\n    </cdk-step>\n  </c8y-stepper>\n</c8y-wizard-body>\n\n<c8y-wizard-footer *ngIf=\"stepper.selectedIndex === 2 || (stepper.selectedIndex === 1 && directlyMoveToSecondStep)\">\n  <button type=\"button\" (click)=\"done()\" class=\"btn btn-default\" title=\"{{ 'Done' | translate }}\">\n    {{ 'Done' | translate }}\n  </button>\n  <a\n    (click)=\"$event.stopPropagation()\"\n    [href]=\"getHref(duplicatedApp)\"\n    target=\"_blank\"\n    class=\"btn btn-primary\"\n    title=\"{{ 'Open' | translate }}\"\n  >\n    <i c8yIcon=\"external-link\" class=\"m-r-4\"></i>\n    {{ 'Open' | translate }}\n  </a>\n</c8y-wizard-footer>\n"}]}],"members":{"stepper":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":11,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"C8yStepper","line":11,"character":13},{"static":true}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":20,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardComponent","line":21,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"onSelectedApp":[{"__symbolic":"method"}],"getHref":[{"__symbolic":"method"}],"done":[{"__symbolic":"method"}]}},"InstallFromPackageComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-install-from-package","template":"<c8y-wizard-header>\n  <i [c8yIcon]=\"'big-parcel'\"></i>\n  <h4 translate>Install from package</h4>\n</c8y-wizard-header>\n<c8y-wizard-body>\n  <ng-container *ngIf=\"!selectedPackage\">\n    <div class=\"modal-inner-scroll\">\n      <p class=\"p-16 text-medium text-center separator-bottom sticky-top bg-white\">\n        {{ 'Select from available packages' | translate }}\n      </p>\n      <div *ngIf=\"!packages?.length\" class=\"c8y-empty-state text-center\">\n        <p class=\"text-center\">{{ 'No packages to display.' | translate }}</p>\n      </div>\n      <div *ngIf=\"packages?.length\" class=\"c8y-wizard-list-nav\" style=\"min-height: 257px\">\n        <button\n          class=\"list-group-item text-truncate\"\n          *ngFor=\"let package of packages\"\n          (click)=\"selectPackage(package)\"\n          title=\"{{ package.name }}\"\n          type=\"button\"\n        >\n          <i c8yIcon=\"big-parcel\" class=\"list-group-icon\"></i>\n          <span [innerText]=\"package.name\"></span>\n        </button>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"!isDeployed && selectedPackage\">\n    <p class=\"p-16 text-center text-medium separator-bottom sticky-top bg-white\">\n      {{ 'Provide application details' | translate }}\n    </p>\n    <div class=\"d-flex d-col a-i-center j-c-center\" style=\"min-height: 257px\">\n      <c8y-application-properties-form\n        *ngIf=\"!inProgress\"\n        [application]=\"newAppConfig\"\n        class=\"d-block fit-w\"\n      ></c8y-application-properties-form>\n      <c8y-progress-bar\n        [message]=\"'Installing…' | translate\"\n        class=\"text-center d-block\"\n        *ngIf=\"inProgress\"\n      ></c8y-progress-bar>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isDeployed\">\n    <div\n      *ngIf=\"deployedWithSuccess; else failedDeploy\"\n      class=\"d-flex a-i-center j-c-center\"\n      style=\"min-height: 257px\"\n    >\n      <c8y-operation-result\n        text=\"{{ 'Application created' | translate }}\"\n        [size]=\"84\"\n        [vertical]=\"true\"\n        type=\"success\"\n        class=\"lead\"\n      ></c8y-operation-result>\n    </div>\n    <ng-template #failedDeploy>\n      <div class=\"d-flex a-i-center j-c-center\" style=\"min-height: 257px\">\n        <c8y-operation-result\n          text=\"{{ 'Application creation failed' | translate }}\"\n          [size]=\"84\"\n          [vertical]=\"true\"\n          type=\"error\"\n          class=\"lead\"\n        ></c8y-operation-result>\n      </div>\n    </ng-template>\n  </ng-container>\n</c8y-wizard-body>\n\n<c8y-wizard-footer>\n  <button\n    *ngIf=\"!isDeployed\"\n    (click)=\"selectedPackage ? (selectedPackage = null) : back()\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Back' | translate }}\"\n    translate\n    [disabled]=\"inProgress\"\n    type=\"button\"\n  >\n    Back\n  </button>\n  <button\n    title=\"{{ isDeployed && deployedWithSuccess ? ('Close' | translate) : ('Cancel' | translate) }}\"\n    class=\"btn btn-default\"\n    type=\"button\"\n    (click)=\"cancel()\"\n  >\n    {{ isDeployed && deployedWithSuccess ? ('Close' | translate) : ('Cancel' | translate) }}\n  </button>\n\n  <button\n    title=\"{{ 'Install' | translate }}\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    (click)=\"save()\"\n    [disabled]=\"inProgress\"\n    *ngIf=\"!isDeployed\"\n  >\n    {{ 'Install' | translate }}\n  </button>\n</c8y-wizard-footer>\n"}]}],"members":{"applicationPropertiesForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":18,"character":3},"arguments":[{"__symbolic":"reference","name":"ApplicationPropertiesFormComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":23,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardComponent","line":24,"character":29}]}],"ngOnInit":[{"__symbolic":"method"}],"back":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"save":[{"__symbolic":"method"}],"selectPackage":[{"__symbolic":"method"}],"markAsDeployed":[{"__symbolic":"method"}],"loadPackages":[{"__symbolic":"method"}]}},"EcosystemNavigationFactory":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"Permissions","line":8,"character":35}]}],"get":[{"__symbolic":"method"}]}},"EcosystemTabs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"Router","line":7,"character":29},{"__symbolic":"reference","name":"EcosystemGuard"}]}],"get":[{"__symbolic":"method"}]}},"EcosystemWizardFactory":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemGuard"}]}],"get":[{"__symbolic":"method"}]}},"ERROR_MESSAGES":{"__symbolic":"error","message":"Expression form not supported","line":4,"character":2,"module":"./ecosystem.constants"},"APP_STATE":{"SUBSCRIBED":{"label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":18,"character":11},"arguments":["Subscribed`application`"]},"class":"label-primary"},"CUSTOM":{"label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":22,"character":11},"arguments":["Custom`application`"]},"class":"label-info"},"EXTERNAL":{"label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":26,"character":11},"arguments":["External`application`"]},"class":"label-warning"},"UNPACKED":{"label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":30,"character":11},"arguments":["Unpacked`application`"]},"class":"label-success"},"PACKAGE_BLUEPRINT":{"label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":34,"character":11},"arguments":["Blueprint"]},"class":"label-success"},"PACKAGE_PLUGIN":{"label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":38,"character":11},"arguments":["Plugins"]},"class":"label-info"}},"packageProperties":{"__symbolic":"error","message":"Lambda not supported","line":59,"character":15,"module":"./ecosystem.constants"},"EcosystemGuard":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"OptionsService","line":6,"character":38}]}],"canActivate":[{"__symbolic":"method"}],"isFeatureEnabled":[{"__symbolic":"method"}]}},"ApplicationState":{"__symbolic":"interface"},"Wizards":{"APPLICATION_UPLOAD":"applicationUpload","MICROSERVICE_UPLOAD":"microserviceUpload"},"ERROR_TYPE":{"TYPE_VALIDATION":"TYPE_VALIDATION","ALREADY_SUBSCRIBED":"ALREADY_SUBSCRIBED","INTERNAL_ERROR":"INTERNAL_ERROR","NO_MANIFEST_FILE":"NO_MANIFEST_FILE","INVALID_PACKAGE":"INVALID_PACKAGE","INVALID_APPLICATION":"INVALID_APPLICATION"},"ApplicationPlugin":{"__symbolic":"interface"},"EcosystemModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":123,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ApplicationListComponent"},{"__symbolic":"reference","name":"MicroserviceListComponent"},{"__symbolic":"reference","name":"ApplicationCardComponent"},{"__symbolic":"reference","name":"ApplicationPropertiesComponent"},{"__symbolic":"reference","name":"AddMicroserviceComponent"},{"__symbolic":"reference","name":"ActivityLogComponent"},{"__symbolic":"reference","name":"ApplicationPluginsComponent"},{"__symbolic":"reference","name":"PluginListItemComponent"},{"__symbolic":"reference","name":"InstallPluginComponent"},{"__symbolic":"reference","name":"PluginListComponent"},{"__symbolic":"reference","name":"AddWebApplicationComponent"},{"__symbolic":"reference","name":"AddExternalApplicationComponent"},{"__symbolic":"reference","name":"DuplicateApplicationComponent"},{"__symbolic":"reference","name":"DuplicateApplicationListComponent"},{"__symbolic":"reference","name":"DuplicateApplicationPropertiesComponent"},{"__symbolic":"reference","name":"ApplicationPropertiesComponent"},{"__symbolic":"reference","name":"InstallFromPackageComponent"},{"__symbolic":"reference","name":"AddMicroserviceComponent"},{"__symbolic":"reference","name":"ApplicationPropertiesComponent"},{"__symbolic":"reference","name":"PackagesListComponent"},{"__symbolic":"reference","name":"PackageDetailsComponent"},{"__symbolic":"reference","name":"DeployApplicationComponent"},{"__symbolic":"reference","name":"AddPackageComponent"},{"__symbolic":"reference","name":"AddApplicationComponent"},{"__symbolic":"reference","name":"ApplicationPropertiesFormComponent"},{"__symbolic":"reference","name":"FeatureListComponent"},{"__symbolic":"reference","name":"PackageArchivesComponent"},{"__symbolic":"reference","name":"UploadArchiveComponent"}],"entryComponents":[{"__symbolic":"reference","name":"AddMicroserviceComponent"},{"__symbolic":"reference","name":"AddWebApplicationComponent"},{"__symbolic":"reference","name":"AddExternalApplicationComponent"},{"__symbolic":"reference","name":"DuplicateApplicationComponent"},{"__symbolic":"reference","name":"DuplicateApplicationListComponent"},{"__symbolic":"reference","name":"DuplicateApplicationPropertiesComponent"},{"__symbolic":"reference","name":"ApplicationPropertiesComponent"},{"__symbolic":"reference","name":"ActivityLogComponent"},{"__symbolic":"reference","name":"ApplicationPluginsComponent"},{"__symbolic":"reference","name":"InstallPluginComponent"},{"__symbolic":"reference","name":"PackagesListComponent"},{"__symbolic":"reference","name":"InstallFromPackageComponent"},{"__symbolic":"reference","name":"PackageDetailsComponent"},{"__symbolic":"reference","name":"DeployApplicationComponent"},{"__symbolic":"reference","name":"AddPackageComponent"},{"__symbolic":"reference","name":"FeatureListComponent"},{"__symbolic":"reference","name":"PackageArchivesComponent"}],"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":174,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap/dropdown","name":"BsDropdownModule","line":175,"character":4},{"__symbolic":"reference","module":"ngx-bootstrap/tooltip","name":"TooltipModule","line":176,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"FormsModule","line":177,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":178,"character":4},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":179,"character":4},"member":"forChild"},"arguments":[[{"path":"ecosystem/applications","component":{"__symbolic":"reference","name":"ApplicationListComponent"}},{"path":"ecosystem/package-list","component":{"__symbolic":"reference","name":"PackagesListComponent"},"canActivate":[{"__symbolic":"reference","name":"EcosystemGuard"}]},{"path":"ecosystem/features","component":{"__symbolic":"reference","name":"FeatureListComponent"}},{"path":"ecosystem","redirectTo":"ecosystem/applications"},{"path":"microservices","component":{"__symbolic":"reference","name":"MicroserviceListComponent"}}]]},{"__symbolic":"reference","module":"ngx-bootstrap/popover","name":"PopoverModule","line":180,"character":4}],"exports":[{"__symbolic":"reference","name":"ApplicationPropertiesComponent"}],"providers":[{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_TABS","line":185,"character":15},"useClass":{"__symbolic":"reference","name":"EcosystemTabs"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_NAVIGATOR_NODES","line":190,"character":15},"useClass":{"__symbolic":"reference","name":"EcosystemNavigationFactory"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_ROUTE","line":195,"character":15},"useValue":[{"path":"properties","component":{"__symbolic":"reference","name":"ApplicationPropertiesComponent"},"icon":"list","label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":80,"character":11},"arguments":["Properties"]},"context":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ViewContext","line":81,"character":13},"member":"Application"},"priority":5,"canActivate":[{"__symbolic":"reference","name":"ApplicationPropertiesGuard"}]},{"path":"plugins","component":{"__symbolic":"reference","name":"ApplicationPluginsComponent"},"icon":"plugin","label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":89,"character":11},"arguments":["Plugins"]},"context":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ViewContext","line":90,"character":13},"member":"Application"},"priority":3,"canActivate":[{"__symbolic":"reference","name":"ApplicationPluginsGuard"},{"__symbolic":"reference","name":"EcosystemGuard"}]},{"path":"package-details","component":{"__symbolic":"reference","name":"PackageDetailsComponent"},"icon":"big-parcel","label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":98,"character":11},"arguments":["Info"]},"context":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ViewContext","line":99,"character":13},"member":"Application"},"priority":10,"canActivate":[{"__symbolic":"reference","name":"PackageGuard"},{"__symbolic":"reference","name":"EcosystemGuard"}]},{"path":"package-archives","component":{"__symbolic":"reference","name":"PackageArchivesComponent"},"icon":"c8y-archive","label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":107,"character":11},"arguments":["Archives"]},"context":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ViewContext","line":108,"character":13},"member":"Application"},"priority":5,"canActivate":[{"__symbolic":"reference","name":"PackageGuard"},{"__symbolic":"reference","name":"EcosystemGuard"}]},{"path":"properties","component":{"__symbolic":"reference","name":"ApplicationPropertiesComponent"},"icon":"list","label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":116,"character":11},"arguments":["Properties"]},"context":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ViewContext","line":117,"character":13},"member":"Microservice"},"priority":5,"canActivate":[{"__symbolic":"reference","name":"ApplicationPropertiesGuard"}]}],"multi":true},{"__symbolic":"reference","name":"EcosystemGuard"},{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","name":"ApplicationPluginsGuard"},{"__symbolic":"reference","name":"PackageGuard"},{"__symbolic":"reference","name":"ApplicationPropertiesGuard"},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":205,"character":15},"useValue":{"wizardId":"uploadApplication","component":{"__symbolic":"reference","name":"AddWebApplicationComponent"},"name":"Upload web application","c8yIcon":"upload"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":215,"character":15},"useValue":{"wizardId":"uploadPackage","component":{"__symbolic":"reference","name":"AddPackageComponent"}},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":223,"character":15},"useValue":{"wizardId":"uploadApplication","component":{"__symbolic":"reference","name":"AddExternalApplicationComponent"},"name":"External application","c8yIcon":"cloud-link"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":233,"character":15},"useValue":{"wizardId":"deployPackage","component":{"__symbolic":"reference","name":"DeployApplicationComponent"},"name":"Deploy package","c8yIcon":"big-parcel"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":243,"character":15},"useClass":{"__symbolic":"reference","name":"EcosystemWizardFactory"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":248,"character":15},"useValue":{"wizardId":"uploadApplication","component":{"__symbolic":"reference","name":"DuplicateApplicationComponent"},"name":"Duplicate existing application","c8yIcon":"copy"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":258,"character":15},"useValue":{"wizardId":"duplicateApplication","component":{"__symbolic":"reference","name":"DuplicateApplicationComponent"},"name":"Duplicate existing application","c8yIcon":"copy"},"multi":true},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_WIZARD","line":268,"character":15},"useValue":{"wizardId":"uploadMicroservice","component":{"__symbolic":"reference","name":"AddMicroserviceComponent"}},"multi":true}]}]}],"members":{}},"EcosystemService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":34,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":44,"character":19},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":45,"character":26},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HumanizeAppNamePipe","line":46,"character":29},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":47,"character":30},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":48,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AppStateService","line":49,"character":29},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ZipService","line":50,"character":24},{"__symbolic":"reference","module":"@c8y/client","name":"TenantService","line":51,"character":27}]}],"getUniqueAppConfig":[{"__symbolic":"method"}],"getApplication":[{"__symbolic":"method"}],"getApplications":[{"__symbolic":"method"}],"getMicroservices":[{"__symbolic":"method"}],"getWebApplications":[{"__symbolic":"method"}],"getFeatureApplications":[{"__symbolic":"method"}],"getPackageApplications":[{"__symbolic":"method"}],"isMicroserviceHostingAllowed":[{"__symbolic":"method"}],"canOpenAppInBrowser":[{"__symbolic":"method"}],"canDeleteApp":[{"__symbolic":"method"}],"isOwner":[{"__symbolic":"method"}],"isFeature":[{"__symbolic":"method"}],"isMicroservice":[{"__symbolic":"method"}],"isExternal":[{"__symbolic":"method"}],"isPackage":[{"__symbolic":"method"}],"cancelAppCreation":[{"__symbolic":"method"}],"updateUploadProgress":[{"__symbolic":"method"}],"setAppActiveVersion":[{"__symbolic":"method"}],"getHumanizedAppName":[{"__symbolic":"method"}],"createConfig":[{"__symbolic":"method"}],"updateAppManifest":[{"__symbolic":"method"}],"listArchives":[{"__symbolic":"method"}],"deleteArchive":[{"__symbolic":"method"}],"downloadArchive":[{"__symbolic":"method"}],"updateApp":[{"__symbolic":"method"}],"deleteApp":[{"__symbolic":"method"}],"checkIfSubscribed":[{"__symbolic":"method"}],"subscribeApp":[{"__symbolic":"method"}],"unsubscribeApp":[{"__symbolic":"method"}],"isValidAppType":[{"__symbolic":"method"}],"uploadArchiveToApp":[{"__symbolic":"method"}],"createAppForArchive":[{"__symbolic":"method"}],"reactivateArchive":[{"__symbolic":"method"}],"removeOldestArchive":[{"__symbolic":"method"}],"getAppState":[{"__symbolic":"method"}],"isPackageBlueprint":[{"__symbolic":"method"}],"isPluginsPackage":[{"__symbolic":"method"}],"isUnpacked":[{"__symbolic":"method"}],"hasExports":[{"__symbolic":"method"}],"isApplication":[{"__symbolic":"method"}],"isCustomMicroservice":[{"__symbolic":"method"}],"isOverwrittenByCustomApp":[{"__symbolic":"method"}],"hasSubscribedAppParent":[{"__symbolic":"method"}],"getAppKey":[{"__symbolic":"method"}],"getContextPath":[{"__symbolic":"method"}],"removeForbiddenCharacters":[{"__symbolic":"method"}],"isCurrentApp":[{"__symbolic":"method"}],"getCumulocityJson":[{"__symbolic":"method"}],"getAppType":[{"__symbolic":"method"}],"getBinary":[{"__symbolic":"method"}],"getBaseNameFromArchiveOrAppModel":[{"__symbolic":"method"}],"checkIfAppNameKeyPathExists":[{"__symbolic":"method"}],"removeAppProperties":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"FeatureListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-feature-list","template":"<c8y-title>{{ 'Features' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [icon]=\"'tab'\" [label]=\"'Features' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"reload$.next()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(features$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<div *ngIf=\"(features$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No features to display.</h3>\n  <p translate>No additional features are subscribed to the tenant.</p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs flex-row\" *ngIf=\"(features$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Feature' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div *ngFor=\"let feature of features$ | async\" class=\"col-xs-12 col-sm-4 col-md-3\">\n    <c8y-application-card\n      [app]=\"feature\"\n      [canEdit]=\"false\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"}]}],"ngOnInit":[{"__symbolic":"method"}],"loadFeatures":[{"__symbolic":"method"}]}},"AddMicroserviceComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-add-microservice","template":"<c8y-add-application\n    [headerText]=\"headerText\"\n    [headerIcon]=\"'microchip'\"\n    [successText]=\"successText\"\n    [createApplicationHandler]=\"createMicroserviceApplicationHandler\"\n    [uploadApplicationHandler]=\"uploadMicroserviceHandler\"\n  ></c8y-add-application>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"ModalService","line":22,"character":19},{"__symbolic":"reference","module":"@c8y/client","name":"TenantService","line":23,"character":27}]}],"createMicroserviceApplication":[{"__symbolic":"method"}],"uploadMicroservice":[{"__symbolic":"method"}],"askIfActivationAfterUploadNeeded":[{"__symbolic":"method"}],"subscribeMicroservice":[{"__symbolic":"method"}]}},"MicroserviceListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"c8y-microservice-list","template":"<c8y-title>{{ 'Microservices' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'microchip'\"\n    [label]=\"'Microservices' | translate\"\n    [path]=\"'microservices'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<ng-container *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n  <c8y-action-bar-item\n    [placement]=\"'right'\"\n    [priority]=\"100\"\n    *ngIf=\"isMicroserviceHostingAllowed$ | async\"\n  >\n    <button\n      (click)=\"addMicroservice()\"\n      class=\"btn btn-link\"\n      title=\"{{ 'Add microservice' | translate }}\"\n    >\n      <i c8yIcon=\"plus-circle\"></i>\n      {{ 'Add microservice' | translate }}\n    </button>\n  </c8y-action-bar-item>\n</ng-container>\n\n<!-- <c8y-help src=\"/users-guide/administration/#managing-microservices\"></c8y-help> -->\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"reload$.next()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(microservices$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<div *ngIf=\"(microservices$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No microservices to display.</h3>\n  <p translate>Add your first microservice by clicking below.</p>\n  <p>\n    <button\n      (click)=\"addMicroservice()\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Add microservice' | translate }}\"\n    >\n      {{ 'Add microservice' | translate }}\n    </button>\n  </p>\n</div>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs flex-row\" *ngIf=\"(microservices$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Microservice' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div *ngFor=\"let microservice of microservices$ | async\" class=\"col-xs-12 col-sm-4 col-md-3\">\n    <c8y-application-card\n      (onAppDeleted)=\"loadMicroservices()\"\n      [app]=\"microservice\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardService","line":29,"character":27}]}],"ngOnInit":[{"__symbolic":"method"}],"loadMicroservices":[{"__symbolic":"method"}],"addMicroservice":[{"__symbolic":"method"}]}},"AddPackageComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-add-package","template":"<c8y-add-application\n    [headerText]=\"headerText\"\n    [headerIcon]=\"'big-parcel'\"\n    [successText]=\"successText\"\n    [createApplicationHandler]=\"createPackageAppHandler\"\n    [uploadApplicationHandler]=\"uploadPackageHandler\"\n  ></c8y-add-application>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"}]}],"createPackageApp":[{"__symbolic":"method"}],"uploadPackage":[{"__symbolic":"method"}]}},"DeployApplicationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"c8y-deploy-application","template":"<c8y-wizard-header>\n  <div class=\"modal-header dialog-header\">\n    <h1 c8yIcon=\"output\"></h1>\n    <h4>{{ 'Deploy application' | translate }}</h4>\n  </div>\n</c8y-wizard-header>\n\n<c8y-wizard-body>\n  <ng-container *ngIf=\"!isDeployed\">\n    <div class=\"fadeIn animated d-flex a-i-center j-c-center d-col\" style=\"min-height: 309px\">\n      <p\n        class=\"bg-white fit-w p-16 text-center text-medium sticky-top bg-white separator-bottom\"\n        *ngIf=\"!inProgress\"\n      >\n        {{ headerText | translate }}\n      </p>\n      <c8y-application-properties-form\n        *ngIf=\"!inProgress\"\n        [application]=\"newAppConfig\"\n        class=\"d-block fit-w bg-gray-white\"\n      ></c8y-application-properties-form>\n\n      <c8y-progress-bar\n        *ngIf=\"inProgress\"\n        [message]=\"'Deploying…' | translate\"\n        class=\"text-center\"\n      ></c8y-progress-bar>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"isDeployed\">\n    <div\n      *ngIf=\"deployedWithSuccess; else failedDeploy\"\n      class=\"modal-body fadeIn animated\"\n      style=\"min-height: 309px\"\n    >\n      <div class=\"d-flex a-i-center j-c-center d-col\">\n        <c8y-operation-result\n          type=\"success\"\n          [size]=\"84\"\n          [vertical]=\"true\"\n          [text]=\"successMessageTemplate | translate: { packageName: package.name }\"\n          class=\"lead d-block m-b-16\"\n        ></c8y-operation-result>\n      </div>\n    </div>\n    <ng-template #failedDeploy>\n      <div class=\"modal-body fadeIn animated text-center\" style=\"min-height: 257px\">\n        <c8y-operation-result\n          type=\"error\"\n          [size]=\"84\"\n          [vertical]=\"true\"\n          text=\"{{ 'Application creation failed' | translate }}\"\n          class=\"lead\"\n        ></c8y-operation-result>\n      </div>\n    </ng-template>\n  </ng-container>\n</c8y-wizard-body>\n\n<c8y-wizard-footer>\n  <button\n    (click)=\"cancel()\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    title=\"{{ (isDeployed && deployedWithSuccess ? doneLabel : cancelLabel) | translate }}\"\n  >\n    {{ (isDeployed && deployedWithSuccess ? doneLabel : cancelLabel) | translate }}\n  </button>\n\n  <button\n    (click)=\"deployApp()\"\n    *ngIf=\"!isDeployed\"\n    [disabled]=\"inProgress\"\n    [ngClass]=\"{ 'btn-pending': inProgress }\"\n    class=\"btn btn-primary\"\n    type=\"button\"\n    title=\"{{ 'Deploy' | translate }}\"\n  >\n    {{ 'Deploy' | translate }}\n  </button>\n</c8y-wizard-footer>\n"}]}],"members":{"applicationPropertiesForm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":18,"character":3},"arguments":[{"__symbolic":"reference","name":"ApplicationPropertiesFormComponent"}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":31,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardComponent","line":32,"character":29},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":33,"character":23}]}],"ngOnInit":[{"__symbolic":"method"}],"deployApp":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"markAsDeployed":[{"__symbolic":"method"}],"getHeaderText":[{"__symbolic":"method"}]}},"PackageArchivesComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"c8y-package-archives","template":"<c8y-title>{{ application | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'big-parcel'\"\n    [label]=\"'Packages' | translate\"\n    [path]=\"'ecosystem/package-list'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"application | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Archives' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"row\">\n  <div class=\"col-lg-8\">\n    <div class=\"card content-fullpage d-flex d-col\">\n      <div class=\"card-header large-padding separator\">\n        <h4 class>{{ 'Archives' | translate }}</h4>\n      </div>\n      <c8y-activity-log class=\"d-contents\" *ngIf=\"!isLoading\" [application]=\"application\">\n      </c8y-activity-log>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":13,"character":38},{"__symbolic":"reference","name":"EcosystemService"}]}],"ngOnInit":[{"__symbolic":"method"}],"loadApplication":[{"__symbolic":"method"}]}},"PackageDetailsComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"c8y-package-details","template":"<c8y-title>{{ name | humanizeAppName | async }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'big-parcel'\"\n    [label]=\"'Packages' | translate\"\n    [path]=\"'ecosystem/package-list'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"name | humanizeAppName | async\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [label]=\"'Info' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div class=\"card content-fullpage d-grid grid__col--8-4--md grid__row--fit-auto\">\n  <div class=\"bg-gray-white grid__col--fullspan separator-bottom\">\n    <div class=\"card-block p-t-24 p-b-24 large-padding\">\n      <div class=\"content-flex-70\">\n        <div class=\"text-center\">\n          <i c8yIcon=\"big-parcel\" class=\"c8y-icon-duocolor icon-48\"></i>\n          <p>\n            <span [ngClass]=\"appState?.class\" class=\"label\">{{ appState?.label | translate }}</span>\n          </p>\n        </div>\n\n        <div class=\"flex-grow col-10\">\n          <div class=\"content-flex-80\">\n            <div class=\"col-5\">\n              <h4 class=\"card-title text-bold m-b-8\">{{ name | humanizeAppName | async }}</h4>\n              <p *ngIf=\"description\">{{ description }}</p>\n              <p *ngIf=\"!description\" class=\"text-muted\">\n                <em>{{ 'No description available.' | translate }}</em>\n              </p>\n            </div>\n            <div *ngIf=\"isPackageBlueprint\" class=\"col-3 text-right-md\">\n              <button (click)=\"deploy()\" class=\"btn btn-primary btn-xs\">\n                <i c8yIcon=\"output\" class=\"m-r-4\"></i>\n                {{ 'Deploy application' | translate }}\n              </button>\n            </div>\n            <div class=\"flex-grow\">\n              <c8y-properties-list\n                [data]=\"package.manifest\"\n                [emptyLabel]=\"'--'\"\n                [icon]=\"'info-circle'\"\n                [properties]=\"packageProperties\"\n                [title]=\"'Package info' | translate\"\n              ></c8y-properties-list>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"inner-scroll\">\n    <div class=\"card-header separator sticky-top\">\n      <h4 class=\"card-title\">{{ 'Package overview' | translate }}</h4>\n    </div>\n    <div class=\"card-block p-l-16 p-r-16\">\n      <div *ngIf=\"!readme\" class=\"c8y-empty-state text-center\">\n        <h1 c8yIcon=\"user-manual\" class=\"c8y-icon-duocolor\"></h1>\n        <div>\n          <h3 translate>No README.md found.</h3>\n          <p class=\"m-r-8\" translate>\n            To view the contents of \"README\", add the file \"README.md\" to the package.\n          </p>\n        </div>\n      </div>\n\n      <div [innerHTML]=\"readme\" class=\"markdown-content\"></div>\n    </div>\n    <div class=\"separator-bottom visible-sm visible-xs\"></div>\n  </div>\n\n  <div class=\"inner-scroll\">\n    <div class=\"card-header separator sticky-top\">\n      <h4 class=\"card-title\">{{ 'Package plugins' | translate }}</h4>\n    </div>\n    <div class=\"card-block\">\n      <!-- empty state -->\n      <div *ngIf=\"(plugins | async).length === 0\" class=\"c8y-empty-state text-center\">\n        <h1 c8yIcon=\"plugin\"></h1>\n        <div>\n          <h3 translate>No plugins to display.</h3>\n          <p class=\"m-r-8\" translate>This package doesn't contain plugins.</p>\n        </div>\n      </div>\n\n      <div>\n        <c8y-plugin-list [plugins$]=\"plugins\" [selectable]=\"false\"></c8y-plugin-list>\n      </div>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":29,"character":28},{"__symbolic":"reference","module":"@c8y/client","name":"FetchClient","line":30,"character":20},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardService","line":31,"character":20},{"__symbolic":"reference","name":"EcosystemService"}]}],"ngOnInit":[{"__symbolic":"method"}],"deploy":[{"__symbolic":"method"}],"getPlugins":[{"__symbolic":"method"}],"getPackage":[{"__symbolic":"method"}],"getReadmeFileContentAsHtml":[{"__symbolic":"method"}],"getReadmeFile":[{"__symbolic":"method"}]}},"PackagesListComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"c8y-packages-list","template":"<c8y-title>{{ 'Packages' | translate }}</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item [icon]=\"'c8y-atom'\" [label]=\"'Ecosystem' | translate\"></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-modules'\"\n    [label]=\"'Applications' | translate\"\n    [path]=\"'ecosystem/applications'\"\n  ></c8y-breadcrumb-item>\n  <c8y-breadcrumb-item [icon]=\"'big-parcel'\" [label]=\"'Packages' | translate\"></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"addPackage()\" class=\"btn btn-link\" title=\"{{ 'Add package' | translate }}\">\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add package' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button (click)=\"loadPackages()\" class=\"btn btn-link\" title=\"{{ 'Reload' | translate }}\">\n    <i [ngClass]=\"{ 'icon-spin': reloading }\" c8yIcon=\"refresh\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(packages$ | async)?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<div [ngClass]=\"listClass\" class=\"card-group\">\n  <div class=\"page-sticky-header hidden-xs flex-row\" *ngIf=\"(packages$ | async)?.length > 0\">\n    <div class=\"card-block card-column-40\">\n      <div class=\"card-appicon p-l-32 p-r-16 m-r-0 m-l-4\"></div>\n      {{ 'Package' | translate }}\n    </div>\n    <div class=\"card-block p-0 card-column-80\">\n      <div class=\"card-block card-column-80\">{{ 'Description' | translate }}</div>\n      <div class=\"card-block card-column-20\">{{ 'Type' | translate }}</div>\n      <div class=\"card-block card-column-20\"></div>\n    </div>\n  </div>\n  <div *ngFor=\"let app of packages$ | async\" class=\"col-xs-12 col-sm-4 col-md-3\">\n    <c8y-application-card\n      (onAppDeleted)=\"loadPackages()\"\n      [app]=\"app\"\n      class=\"d-contents\"\n    ></c8y-application-card>\n  </div>\n  <div *ngIf=\"(packages$ | async)?.length === 0\" class=\"c8y-empty-state text-center\">\n    <h1 c8yIcon=\"big-parcel\" class=\"c8y-icon-duocolor\"></h1>\n    <h3 translate>No packages to display.</h3>\n    <p translate>Add your first package by clicking below.</p>\n    <p>\n      <button\n        (click)=\"addPackage()\"\n        class=\"btn btn-primary\"\n        title=\"{{ 'Add package' | translate }}\"\n      >\n        {{ 'Add package' | translate }}\n      </button>\n    </p>\n  </div>\n</div>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardService","line":24,"character":81}]}],"ngOnInit":[{"__symbolic":"method"}],"loadPackages":[{"__symbolic":"method"}],"addPackage":[{"__symbolic":"method"}]}},"PackageGuard":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"}]}],"canActivate":[{"__symbolic":"method"}]}},"AddApplicationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":7,"character":1},"arguments":[{"selector":"c8y-add-application","template":"<c8y-wizard-header>\n  <h1 [c8yIcon]=\"headerIcon\"></h1>\n  <h4>{{ headerText | translate }}</h4>\n</c8y-wizard-header>\n\n<div class=\"modal-inner-scroll animated fadeIn\">\n  <p class=\"p-16 text-center text-medium separator-bottom sticky-top bg-component\">\n    {{ 'Upload a *.zip file' | translate }}\n  </p>\n    <c8y-form-group\n      *ngIf=\"!isAppCreated; else appCreated\"\n      [hasError]=\"errorMessage\"\n      class=\"m-t-16 m-l-auto m-r-auto\"\n      style=\"max-width: 285px\"\n    >\n      <c8y-drop-area\n        (dropped)=\"onFileDroppedEvent($event)\"\n        [accept]=\"'.zip'\"\n        [loading]=\"isLoading\"\n        [maxAllowedFiles]=\"1\"\n        [progress]=\"progress | async\"\n        class=\"drop-area\"\n      >\n      </c8y-drop-area>\n      <c8y-messages>\n        <c8y-message *ngIf=\"errorMessage\">\n          {{ errorMessage | translate }}\n        </c8y-message>\n      </c8y-messages>\n    </c8y-form-group>\n    <ng-template #appCreated>\n      <div class=\"d-flex a-i-center j-c-center\" style=\"min-height: 285px\">\n        <c8y-operation-result\n          text=\"{{ successText | translate }}\"\n          [vertical]=\"true\"\n          [size]=\"84\"\n          class=\"lead\"\n          type=\"success\"\n        >\n        </c8y-operation-result>\n      </div>\n    </ng-template>\n  \n</div>\n<c8y-wizard-footer>\n  <button\n    (click)=\"back()\"\n    *ngIf=\"!isAppCreated && canGoBack\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Back' | translate }}\"\n    translate\n    type=\"button\"\n  >\n    Back\n  </button>\n  <button\n    (click)=\"cancel()\"\n    *ngIf=\"!isAppCreated\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Cancel' | translate }}\"\n    translate\n    type=\"button\"\n  >\n    Cancel\n  </button>\n  <button\n    (click)=\"done()\"\n    *ngIf=\"isAppCreated\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Done' | translate }}\"\n    translate\n    type=\"button\"\n  >\n    Done\n  </button>\n  <a\n    (click)=\"$event.stopPropagation()\"\n    *ngIf=\"isAppCreated && canOpenInBrowser\"\n    [href]=\"getHref(createdApp)\"\n    target=\"_blank\"\n    class=\"btn btn-primary\"\n    title=\"{{ 'Open' | translate }}\"\n  >\n    <i c8yIcon=\"external-link\" class=\"m-r-4\"></i>\n    {{ 'Open' | translate }}\n  </a>\n</c8y-wizard-footer>\n"}]}],"members":{"headerText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"headerIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":13,"character":3}}]}],"successText":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":14,"character":3}}]}],"createApplicationHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":15,"character":3}}]}],"uploadApplicationHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":16,"character":3}}]}],"canGoBack":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":17,"character":3}}]}],"dropAreaComponent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":19,"character":3},"arguments":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"DropAreaComponent","line":19,"character":13}]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":30,"character":26},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":31,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardComponent","line":32,"character":29}]}],"onFileDroppedEvent":[{"__symbolic":"method"}],"onFile":[{"__symbolic":"method"}],"getHref":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}],"done":[{"__symbolic":"method"}],"back":[{"__symbolic":"method"}],"cancelFileUpload":[{"__symbolic":"method"}]}},"ApplicationCardComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"c8y-application-card","template":"<div class=\"card pointer card--d-col\">\n  <div (click)=\"detail()\" class=\"card-block text-center card-column-40\">\n    <div class=\"card-appicon\">\n      <c8y-app-icon\n        *ngIf=\"!isPackage && !isFeature && !isMicroservice && !isExternal\"\n        [app]=\"app\"\n        [contextPath]=\"app.contextPath\"\n        [name]=\"app.name\"\n      ></c8y-app-icon>\n      <i *ngIf=\"isPackage\" c8yIcon=\"big-parcel\"></i>\n      <i *ngIf=\"isFeature\" c8yIcon=\"tab\"></i>\n      <i *ngIf=\"isMicroservice\" c8yIcon=\"microchip\"></i>\n      <i *ngIf=\"isExternal\" c8yIcon=\"globe1\"></i>\n    </div>\n    <p class=\"e2e-appCardName text-medium\" title=\"{{ app | humanizeAppName | async }}\">\n      {{ app | humanizeAppName | async }}\n    </p>\n    <small *ngIf=\"app.manifest?.version && (isPackage || isMicroservice)\" class=\"text-muted\">\n      <em>{{ app.manifest.version }}</em>\n    </small>\n  </div>\n  <div (click)=\"detail()\" class=\"card-block p-0 no-min-height card--d-col card-column-80 flex-grow\">\n    <div class=\"card-block no-min-height p-t-0 p-b-0 card-column-80\">\n      <div *ngIf=\"app.description\" class=\"text-center-grid\">\n        <div class=\"p-b-8 card-hidden-grid\"></div>\n        <p class=\"small l-h-tight p-b-8 p-l-0 p-r-0\">{{ app.description | translate }}</p>\n      </div>\n    </div>\n    <div class=\"card-block no-min-height p-t-0 p-b-0 card-column-20 text-center-grid\">\n      <span [ngClass]=\"appState.class\" class=\"label\">{{ appState.label | translate }}</span>\n    </div>\n    <div class=\"card-footer no-min-height p-t-0 p-b-0 card-column-20 text-center-grid\">\n      <div class=\"p-b-16 card-hidden-list\"></div>\n      <button\n        (click)=\"openApp(); $event.stopPropagation()\"\n        *ngIf=\"canOpenInBrowser\"\n        [disabled]=\"disableOpenInBrowser\"\n        class=\"btn btn-xs btn-default\"\n        [title]=\"openButtonTitle | translate\"\n      >\n        <i c8yIcon=\"external-link\" class=\"m-r-4\"></i>\n        {{ 'Open' | translate }}\n      </button>\n      <div class=\"p-b-32 card-hidden-list\"></div>\n    </div>\n  </div>\n\n  <div *ngIf=\"canEdit || canOpenInBrowser || canDelete\" class=\"card-actions m-t-0\">\n    <div class=\"dropdown\" dropdown>\n      <button\n        class=\"dropdown-toggle c8y-dropdown\"\n        dropdownToggle\n        title=\"{{ 'Settings' | translate }}\"\n      >\n        <i c8yIcon=\"ellipsis-v\"></i>\n      </button>\n      <ul *dropdownMenu class=\"dropdown-menu dropdown-menu-right\">\n        <li *ngIf=\"canEdit\">\n          <button (click)=\"detail()\" title=\"{{ 'Edit' | translate }}\">\n            <i c8yIcon=\"pencil\" class=\"m-r-4\"></i>\n            {{ 'Edit' | translate }}\n          </button>\n        </li>\n        <ng-container *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n          <li>\n            <button\n              (click)=\"delete()\"\n              href=\"\"\n              title=\"{{ canDelete ? 'Delete' : (CANNOT_DELETE_HINT | translate) }}\"\n              [disabled]=\"!canDelete\"\n            >\n              <i c8yIcon=\"trash\" class=\"m-r-4\"></i>\n              {{ 'Delete' | translate }}\n            </button>\n          </li>\n          <li *ngIf=\"canClone\">\n            <button\n              (click)=\"clone()\"\n              href=\"\"\n              [title]=\"'Clone application' | translate\"\n            >\n              <i c8yIcon=\"copy\" class=\"m-r-4\"></i>\n              {{ 'Clone application' | translate }}\n            </button>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n  </div>\n</div>\n"}]}],"members":{"app":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":22,"character":3}}]}],"canEdit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":23,"character":3}}]}],"onAppDeleted":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":24,"character":3}}]}],"onAppCloned":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":25,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":44,"character":32},{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":46,"character":26},{"__symbolic":"reference","module":"@angular/router","name":"Router","line":47,"character":20},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"WizardService","line":48,"character":27}]}],"ngOnInit":[{"__symbolic":"method"}],"detail":[{"__symbolic":"method"}],"openApp":[{"__symbolic":"method"}],"delete":[{"__symbolic":"method"}],"clone":[{"__symbolic":"method"}]}},"ApplicationPropertiesFormComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"c8y-application-properties-form","template":"<form\n  (ngSubmit)=\"(formGroup.valid)\"\n  [formGroup]=\"formGroup\"\n  class=\"c8y-wizard-form text-left\"\n  name=\"appDeployForm\"\n  novalidate\n>\n  <c8y-form-group>\n    <label for=\"name\" translate>Name</label>\n    <input\n      class=\"form-control\"\n      formControlName=\"name\"\n      name=\"name\"\n      placeholder=\"{{ 'e.g. My application' | translate }}\"\n      required\n      type=\"text\"\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label for=\"key\" translate>Application key</label>\n    <input\n      class=\"form-control\"\n      formControlName=\"key\"\n      name=\"key\"\n      placeholder=\"{{ 'e.g. my-application-key' | translate }}\"\n      required\n      type=\"text\"\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label for=\"contextPath\" translate>Path</label>\n    <div class=\"input-group\">\n      <span class=\"input-group-addon\">/apps/</span>\n      <input\n        class=\"form-control\"\n        formControlName=\"contextPath\"\n        name=\"contextPath\"\n        placeholder=\"{{ 'e.g. my-application' | translate }}\"\n        required\n        type=\"text\"\n      />\n    </div>\n  </c8y-form-group>\n  <c8y-form-group *ngIf=\"isPackage\">\n    <label for=\"version\" translate>Use package version</label>\n    <div class=\"input-group\">\n      <input\n        class=\"form-control\"\n        disabled\n        formControlName=\"version\"\n        name=\"version\"\n        [placeholder]=\"'e.g. {{ example }}' | translate: { example: '1.0.0' }\"\n        type=\"text\"\n      />\n    </div>\n  </c8y-form-group>\n</form>\n"}]}],"members":{"application":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":10,"character":3}}]}],"isPackage":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":12,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":14,"character":35}]}],"ngOnChanges":[{"__symbolic":"method"}],"initForm":[{"__symbolic":"method"}],"setForm":[{"__symbolic":"method"}]}},"UploadArchiveComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"c8y-upload-archive","template":"<c8y-drop-area\n  (dropped)=\"onFileDroppedEvent($event)\"\n  [accept]=\"'.zip'\"\n  [files]=\"fileList\"\n  [loading]=\"uploadInProgress\"\n  [maxAllowedFiles]=\"1\"\n  [message]=\"'Upload a *.zip file' | translate\"\n  [progress]=\"uploadProgress | async\"\n  [forceHideList]=\"true\"\n  class=\"drop-area-sm\"\n>\n</c8y-drop-area>\n"}]}],"members":{"application":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":11,"character":3}}]}],"applicationChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":12,"character":3}}]}],"refresh":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":13,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"EcosystemService"},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"AlertService","line":23,"character":80}]}],"onFileDroppedEvent":[{"__symbolic":"method"}],"onFile":[{"__symbolic":"method"}]}}},"origins":{"ActivityLogComponent":"./activity-log/activity-log.component","ApplicationPropertiesComponent":"./application-properties/application-properties.component","ApplicationPropertiesGuard":"./application-properties/application-properties.guard","AddExternalApplicationComponent":"./applications/add-external-applicaiton/add-external-application.component","AddWebApplicationComponent":"./applications/add-web-application/add-web-application.component","ApplicationListComponent":"./applications/application-list/application-list.component","ApplicationPluginsComponent":"./applications/application-plugins/application-plugins.component","ApplicationPluginsGuard":"./applications/application-plugins/application-plugins.guard","InstallPluginComponent":"./applications/application-plugins/install-plugin.component","PluginListItemComponent":"./applications/application-plugins/plugin-list-item.component","PluginListComponent":"./applications/application-plugins/plugin-list.component","DuplicateApplicationListComponent":"./applications/duplicate-application/duplicate-application-list/duplicate-application-list.component","DuplicateApplicationPropertiesComponent":"./applications/duplicate-application/duplicate-application-properties/duplicate-application-properties.component","DuplicateApplicationComponent":"./applications/duplicate-application/duplicate-application.component","InstallFromPackageComponent":"./applications/install-from-package/install-from-package.component","EcosystemNavigationFactory":"./ecosystem-navigation.factory","EcosystemTabs":"./ecosystem-tabs.factory","EcosystemWizardFactory":"./ecosystem-wizard.factory","ERROR_MESSAGES":"./ecosystem.constants","APP_STATE":"./ecosystem.constants","packageProperties":"./ecosystem.constants","EcosystemGuard":"./ecosystem.guard","ApplicationState":"./ecosystem.model","Wizards":"./ecosystem.model","ERROR_TYPE":"./ecosystem.model","ApplicationPlugin":"./ecosystem.model","EcosystemModule":"./ecosystem.module","EcosystemService":"./ecosystem.service","FeatureListComponent":"./features/feature-list.component","AddMicroserviceComponent":"./microservices/add-microservice.component","MicroserviceListComponent":"./microservices/microservice-list.component","AddPackageComponent":"./packages/add-package.component","DeployApplicationComponent":"./packages/deploy-application/deploy-application.component","PackageArchivesComponent":"./packages/package-archives/package-archives.component","PackageDetailsComponent":"./packages/package-details/package-details.component","PackagesListComponent":"./packages/package-list/packages-list.component","PackageGuard":"./packages/package.guard","AddApplicationComponent":"./shared/add-application.component","ApplicationCardComponent":"./shared/application-card.component","ApplicationPropertiesFormComponent":"./shared/application-properties-form.component","UploadArchiveComponent":"./shared/upload-archive.component"},"importAs":"@c8y/ngx-components/ecosystem"}