import { OnInit, ChangeDetectorRef } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { GroupNode } from './group-node';
import { Subject } from 'rxjs';
import { AssetSelectorComponent } from './asset-selector.component';
import { IIdentified } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
export declare class AssetSelectorNodeComponent implements OnInit {
    private translateService;
    private cd;
    parentAssetSelector: AssetSelectorComponent;
    /**
     * The current node.
     */
    node: GroupNode;
    /**
     * All preselected items.
     */
    preselected: IIdentified | IIdentified[];
    /**
     * Should the path be shown.
     */
    showPath: boolean;
    /**
     * Can the user select multiple assets.
     */
    multi: boolean;
    /**
     * The current path to the node.
     */
    view: 'tree' | 'miller';
    /**
     * Used only for miller-view, displays the column level for the current node.
     * E.g if the index is one, this will be second column.
     */
    index: any;
    /**
     * Sets the active node.
     */
    active: GroupNode;
    /**
     * All currently selected assets.
     */
    selectedItems: IIdentified[] | IIdentified;
    breadcrumb: string;
    /**
     * @ignore
     */
    level: number;
    /**
     * @ignore
     */
    unsubscribe$: Subject<any>;
    /** sets the `btn-pending` class in the load more button */
    isLoading: boolean;
    /**
     * @ignore
     */
    get expandTitle(): any;
    /**
     * @ignore only di
     */
    constructor(translateService: TranslateService, cd: ChangeDetectorRef, parentAssetSelector: AssetSelectorComponent);
    /**
     * @ignore
     */
    ngOnInit(): Promise<void>;
    /**
     * Opens a node.
     */
    click(): void;
    setupBreadcrumbsAndLevel(node: GroupNode): void;
    /**
     * Selects the node and emits a change on the parent component.
     * @param node The node to select.
     */
    selected(node: GroupNode): void;
    /**
     * Handles clicks on a item in Miller View.
     * @param node The node that was clicked.
     */
    millerViewClick(node: GroupNode): void;
    /**
     * @ignore
     */
    ngOnDestroy(): void;
    isSelected(): boolean;
    isActive(): boolean;
    isGroupSelected(): boolean;
    private updateSelection;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AssetSelectorNodeComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AssetSelectorNodeComponent, "c8y-asset-selector-node", never, { "preselected": "preselected"; "showPath": "showPath"; "multi": "multi"; "view": "view"; "selectedItems": "selectedItems"; "node": "node"; "index": "index"; "active": "active"; }, {}, never, never>;
}

//# sourceMappingURL=asset-selector-node.component.d.ts.map