{"version":3,"file":"miller-view.component.d.ts","sources":["miller-view.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, OnInit, SimpleChanges } from '@angular/core';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectionChangeEvent, AssetSelectorOptions } from './asset-selector.model';\nimport { AssetSelectorBase } from './asset-selector-base';\nimport { GroupNode } from './group-node';\nexport declare class MillerViewComponent extends AssetSelectorBase implements OnInit {\n    protected groupNodeService: GroupNodeService;\n    protected inventory: InventoryService;\n    protected assetSelectorService: AssetSelectorService;\n    protected cd: ChangeDetectorRef;\n    /**\n     * Config object containing all options for the asset selector.\n     */\n    config: AssetSelectorOptions;\n    /**\n     * The asset to use as root.\n     */\n    asset: IIdentified;\n    /**\n     * The selected devices.\n     */\n    selectedDevice: IManagedObject;\n    /**\n     * The node to use as root. You can either set this, or the asset to start from.\n     */\n    rootNode: GroupNode;\n    /**\n     * Emits if the selection changes\n     */\n    onSelected: EventEmitter<AssetSelectionChangeEvent>;\n    /**\n     * @ignore\n     */\n    millerViewWrapper: ElementRef;\n    /**\n     * The column array will contain all currently selected nodes\n     *  which will form the miller view columns (only one per level).\n     */\n    columns: any[];\n    /**\n     * The current filter applied. Used for the empty state text in the view.\n     */\n    filterText: string;\n    /**\n     * Index of the column used to check where to show the loading state.\n     */\n    columnIndex: number;\n    container: '' | 'body';\n    configOptionsDefault: AssetSelectorOptions;\n    constructor(groupNodeService: GroupNodeService, inventory: InventoryService, assetSelectorService: AssetSelectorService, cd: ChangeDetectorRef);\n    /**\n     * @ignore\n     */\n    ngOnInit(): Promise<void>;\n    /**\n     * @ignore\n     */\n    ngOnChanges(changes: SimpleChanges): Promise<void>;\n    /**\n     * Create a new column with the selected node as root.\n     */\n    addNewColumn(node: any): void;\n    /**\n     * Change the loading state of the asset selector.\n     */\n    onLoad(event: any): void;\n    /**\n     * Add the selected node to the selected array.\n     */\n    onSelectionChange(event: AssetSelectionChangeEvent): void;\n}\n"]}