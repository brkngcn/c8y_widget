{"__symbolic":"module","version":4,"metadata":{"ActilityDeviceRegistrationButtonComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"c8y-actility-registration-button","template":"<button (click)=\"open()\">\n  <i c8yIcon=\"c8y-device-connect\"></i>\n  {{ 'Actility LoRa' | translate }}\n</button>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalService","line":9,"character":36}]}],"open":[{"__symbolic":"method"}]}},"ActilityDeviceRegistrationFactory":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":4,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"TenantUiService","line":8,"character":37}]}],"get":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ActilityDeviceRegistrationModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":8,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":9,"character":12},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CommonModule","line":9,"character":24}],"declarations":[{"__symbolic":"reference","name":"ActilityDeviceRegistrationButtonComponent"},{"__symbolic":"reference","name":"ActilityDeviceRegistrationComponent"}],"providers":[{"__symbolic":"reference","name":"ɵa"},{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components/register-device","name":"HOOK_DEVICE_REGISTRATION","line":14,"character":15},"useClass":{"__symbolic":"reference","name":"ActilityDeviceRegistrationFactory"},"multi":true}]}]}],"members":{}},"ActilityDeviceRegistrationComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"c8y-actility-registration","template":"<c8y-modal [headerClasses]=\"'dialog-header'\" [customFooter]=\"true\">\n  <ng-container c8y-modal-title>\n    <span [c8yIcon]=\"'c8y-device-connect'\"></span>\n    <h4>{{ 'Actility LoRa registration' | translate }}</h4>\n  </ng-container>\n\n  <ng-container *ngIf=\"state === 'loadPending'; else registrationForm\">\n    <div class=\"p-16 text-center\">\n      <c8y-loading></c8y-loading>\n    </div>\n  </ng-container>\n\n  <!--Formly schema is rendered-->\n  <ng-template #registrationForm>\n    <c8y-stepper\n      [hideStepProgress]=\"true\"\n      linear\n      *ngIf=\"(errorMessages$ | async).length === 0; else errorMessagesPresent\"\n    >\n      <cdk-step [stepControl]=\"form\">\n        <div class=\"p-b-16\">\n          <p\n            class=\"\n              p-l-24 p-r-24 p-t-16 p-b-16\n              m-b-0\n              sticky-top\n              separator-bottom\n              lead\n              text-center\n              bg-component\n            \"\n          >\n          {{ 'Register a single Actility device' | translate }}\n          </p>\n          <formly-form\n            [form]=\"form\"\n            [fields]=\"fields\"\n            [model]=\"model\"\n            class=\"formly-group-array-cols d-block p-l-24 p-r-24\"\n          ></formly-form>\n        </div>\n\n        <c8y-stepper-buttons\n          [labels]=\"registrationStepLabels\"\n          (onNext)=\"register($event)\"\n          (onCancel)=\"bsModalRef.hide()\"\n          [showButtons]=\"{ cancel: true, next: true }\"\n          [pending]=\"state === 'registrationPending'\"\n          [disabled]=\"!form?.valid\"\n          class=\"sticky-bottom d-block p-t-16 p-b-16 separator-top bg-white\"\n        ></c8y-stepper-buttons>\n      </cdk-step>\n      <cdk-step state=\"final\">\n        <!--success scenario-->\n        <div class=\"p-16 text-center\" *ngIf=\"state === 'registrationPending'\">\n          <c8y-loading></c8y-loading>\n        </div>\n        <div class=\"m-24\">\n          <c8y-operation-result\n            *ngIf=\"state === 'registrationSuccess'\"\n            text=\"{{ 'Device registered' | translate }}\"\n            [size]=\"84\"\n            [vertical]=\"true\"\n            type=\"success\"\n            class=\"lead m-b-0\"\n          ></c8y-operation-result>\n        </div>\n        <c8y-stepper-buttons\n          class=\"sticky-bottom d-block p-t-16 p-b-16 separator-top bg-white\"\n          (onCustom)=\"bsModalRef.hide()\"\n          [showButtons]=\"{ custom: true }\"\n          [labels]=\"finalStepLabels\"\n        ></c8y-stepper-buttons>\n      </cdk-step>\n    </c8y-stepper>\n  </ng-template>\n\n  <!--Failure scenario-->\n  <ng-template #errorMessagesPresent>\n    <div class=\"m-24\">\n      <c8y-operation-result\n        *ngIf=\"state === 'registrationError'\"\n        text=\"{{ 'Failed to register' | translate }}\"\n        [size]=\"84\"\n        [vertical]=\"true\"\n        type=\"error\"\n        class=\"lead\"\n      ></c8y-operation-result>\n      <div\n        *ngFor=\"let msg of errorMessages$ | async\"\n        class=\"m-b-8\"\n        [ngClass]=\"{\n          'text-center': state === 'registrationError',\n          'alert alert-danger': state === 'loadError'\n        }\"\n      >\n        <span [innerHTML]=\"msg | translate\"></span>\n      </div>\n    </div>\n    <div class=\"modal-footer\">\n      <button\n        title=\"{{ 'Close' | translate }}\"\n        (click)=\"bsModalRef.hide()\"\n        type=\"button\"\n        class=\"btn btn-default\"\n        translate\n      >\n        Close\n      </button>\n    </div>\n  </ng-template>\n</c8y-modal>"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-bootstrap/modal","name":"BsModalRef","line":217,"character":23},{"__symbolic":"reference","name":"ɵa"}]}],"getConnectivityPlans$":[{"__symbolic":"method"}],"getDeviceProfiles$":[{"__symbolic":"method"}],"getDeviceProtocols$":[{"__symbolic":"method"}],"getConnections$":[{"__symbolic":"method"}],"register":[{"__symbolic":"method"}],"getActilityDeviceToSend":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":29,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/client","name":"InventoryService","line":40,"character":30},{"__symbolic":"reference","module":"@c8y/client","name":"FetchClient","line":41,"character":20},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":42,"character":30},{"__symbolic":"reference","module":"@c8y/client","name":"ApplicationService","line":43,"character":32},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"OptionsService","line":44,"character":28}]}],"getConnections":[{"__symbolic":"method"}],"getConnectivityPlans":[{"__symbolic":"method"}],"getDeviceProfiles":[{"__symbolic":"method"}],"getDeviceProtocols":[{"__symbolic":"method"}],"register":[{"__symbolic":"method"}],"hasAvailableConnections":[{"__symbolic":"method"}],"throwNoConnectivitySettingsError":[{"__symbolic":"method"}],"throwNoConnectivityPlansError":[{"__symbolic":"method"}],"throwNoFreeSlotsInConnectivityPlansError":[{"__symbolic":"method"}],"throwDeviceProfilesFetchError":[{"__symbolic":"method"}],"throwNoDeviceProfilesError":[{"__symbolic":"method"}],"throwDeviceProtocolsFetchError":[{"__symbolic":"method"}],"throwNoDeviceProtocolsError":[{"__symbolic":"method"}],"throwRegistrationError":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}}},"origins":{"ActilityDeviceRegistrationButtonComponent":"./actility-device-registration-button.component","ActilityDeviceRegistrationFactory":"./actility-device-registration.factory","ActilityDeviceRegistrationModule":"./actility-device-registration.module","ActilityDeviceRegistrationComponent":"./actility-device-registration.component","ɵa":"./actility-device-registration.service"},"importAs":"@c8y/ngx-components/actility-device-registration"}