(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@c8y/ngx-components'), require('@c8y/ngx-components/datapoint-selector'), require('@c8y/ngx-components/icon-selector'), require('ngx-bootstrap/popover'), require('@angular/forms'), require('@c8y/ngx-components/context-dashboard'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/widgets/kpi-widget', ['exports', '@angular/core', '@c8y/ngx-components', '@c8y/ngx-components/datapoint-selector', '@c8y/ngx-components/icon-selector', 'ngx-bootstrap/popover', '@angular/forms', '@c8y/ngx-components/context-dashboard', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].widgets = global.c8y["ngx-components"].widgets || {}, global.c8y["ngx-components"].widgets["kpi-widget"] = {}), global.ng.core, global.c8y["ngx-components"], global.c8y["ngx-components"]["datapoint-selector"], global.c8y["ngx-components"]["icon-selector"], global.popover, global.ng.forms, global.c8y["ngx-components"]["context-dashboard"], global.rxjs, global.rxjs.operators));
})(this, (function (exports, core, ngxComponents, datapointSelector, iconSelector, popover, forms, contextDashboard, rxjs, operators) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    function exactlyASingleDatapointActive() {
        return function (control) {
            var datapoints = control.value;
            if (!datapoints || !datapoints.length) {
                return null;
            }
            var activeDatapoints = datapoints.filter(function (datapoint) { return datapoint.__active; });
            if (activeDatapoints.length === 1) {
                return null;
            }
            return { exactlyOneDatapointNeedsToBeActive: true };
        };
    }
    var KpiWidgetConfigComponent = /** @class */ (function () {
        function KpiWidgetConfigComponent(formBuilder, form, iconSelector, widgetConfig, datapointLibrary) {
            this.formBuilder = formBuilder;
            this.form = form;
            this.iconSelector = iconSelector;
            this.widgetConfig = widgetConfig;
            this.datapointLibrary = datapointLibrary;
            this.datapointSelectionConfig = {};
            this.defaultFormOptions = {
                showRedRange: true,
                showYellowRange: true
            };
            this.availableIcons = [];
            this.limits = {
                fontSizeMax: 72,
                fontSizeMin: 18,
                numberOfDecimalPlacesMax: 10,
                numberOfDecimalPlacesMin: 0
            };
        }
        KpiWidgetConfigComponent.prototype.onBeforeSave = function (config) {
            if (this.formGroup.valid) {
                Object.assign(config, this.formGroup.value);
                return true;
            }
            return false;
        };
        KpiWidgetConfigComponent.prototype.ngOnInit = function () {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function () {
                var _e;
                return __generator(this, function (_f) {
                    switch (_f.label) {
                        case 0:
                            if ((_a = this.widgetConfig.context) === null || _a === void 0 ? void 0 : _a.id) {
                                this.datapointSelectionConfig.contextAsset = (_b = this.widgetConfig) === null || _b === void 0 ? void 0 : _b.context;
                            }
                            this.initForm();
                            if (!((_c = this.config) === null || _c === void 0 ? void 0 : _c.datapoints)) return [3 /*break*/, 2];
                            _e = this.config;
                            return [4 /*yield*/, this.datapointLibrary.updateDatapoints((_d = this.config) === null || _d === void 0 ? void 0 : _d.datapoints)];
                        case 1:
                            _e.datapoints = _f.sent();
                            this.formGroup.patchValue({ datapoints: this.config.datapoints });
                            _f.label = 2;
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
        KpiWidgetConfigComponent.prototype.openIconSelector = function () {
            return __awaiter(this, void 0, void 0, function () {
                var icon, _a_1;
                return __generator(this, function (_e) {
                    switch (_e.label) {
                        case 0:
                            _e.trys.push([0, 2, , 3]);
                            return [4 /*yield*/, this.iconSelector.selectIcon({
                                    currentSelection: this.formGroup.value.icon
                                })];
                        case 1:
                            icon = _e.sent();
                            this.formGroup.patchValue({ icon: icon });
                            return [3 /*break*/, 3];
                        case 2:
                            _a_1 = _e.sent();
                            return [3 /*break*/, 3];
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        KpiWidgetConfigComponent.prototype.initForm = function () {
            this.formGroup = this.formBuilder.group({
                numberOfDecimalPlaces: [
                    1,
                    [
                        forms.Validators.required,
                        forms.Validators.min(this.limits.numberOfDecimalPlacesMin),
                        forms.Validators.max(this.limits.numberOfDecimalPlacesMax)
                    ]
                ],
                showTimestamp: [true, []],
                showTrend: [true, []],
                showIcon: [true, []],
                icon: ['water', [forms.Validators.required, forms.Validators.minLength(1)]],
                fontSize: [
                    36,
                    [
                        forms.Validators.required,
                        forms.Validators.min(this.limits.fontSizeMin),
                        forms.Validators.max(this.limits.fontSizeMax)
                    ]
                ],
                datapoints: [
                    [],
                    [forms.Validators.required, forms.Validators.minLength(1), exactlyASingleDatapointActive()]
                ]
            });
            this.form.form.addControl('config', this.formGroup);
            this.formGroup.patchValue(this.config);
        };
        return KpiWidgetConfigComponent;
    }());
    KpiWidgetConfigComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-kpi-widget-config',
                    template: "<form [formGroup]=\"formGroup\" class=\"row\">\n  <div class=\"col-sm-6\">\n    <c8y-datapoint-selection-list\n      [defaultFormOptions]=\"defaultFormOptions\"\n      [config]=\"datapointSelectionConfig\"\n      [minActiveCount]=\"1\"\n      [maxActiveCount]=\"1\"\n      formControlName=\"datapoints\"\n      name=\"datapoints\"\n    >\n    </c8y-datapoint-selection-list>\n  </div>\n  <div class=\"col-sm-6\">\n    <c8y-form-group>\n      <label translate>Icon</label>\n      <div class=\"d-flex a-i-center\">\n        <div class=\"p-r-8 icon-32 text-muted\">\n          <i [c8yIcon]=\"formGroup.value.icon\"></i>\n        </div>\n        <button class=\"btn btn-default btn-xs\" (click)=\"openIconSelector()\">\n          {{ 'Change' | translate }}\n        </button>\n      </div>\n    </c8y-form-group>\n    <c8y-form-group>\n      <label [title]=\"'Number of decimal places' | translate\" translate>\n        Number of decimal places\n      </label>\n      <input\n        class=\"form-control\"\n        formControlName=\"numberOfDecimalPlaces\"\n        name=\"numberOfDecimalPlaces\"\n        type=\"number\"\n        [placeholder]=\"'e.g. {{ example }}' | translate: { example: 1 }\"\n      />\n      <c8y-messages [show]=\"formGroup.controls?.numberOfDecimalPlaces?.touched && formGroup?.controls?.numberOfDecimalPlaces?.errors\">\n      </c8y-messages>\n    </c8y-form-group>\n    <div>\n      <label> {{ 'Display' | translate }}</label>\n      <div class=\"d-flex gap-16 flex-wrap\">\n        <c8y-form-group>\n          <label [title]=\"'Show timestamp' | translate\" class=\"c8y-checkbox\">\n            <input type=\"checkbox\" formControlName=\"showTimestamp\" name=\"showTimestamp\" />\n            <span></span>\n            <span translate>Show timestamp</span>\n          </label>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label [title]=\"'Show icon' | translate\" class=\"c8y-checkbox\">\n            <input type=\"checkbox\" formControlName=\"showIcon\" name=\"showIcon\" />\n            <span></span>\n            <span translate>Show icon</span>\n          </label>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label [title]=\"'Show trend icon' | translate\" class=\"c8y-checkbox\">\n            <input type=\"checkbox\" formControlName=\"showTrend\" name=\"showTrend\" />\n            <span></span>\n            <span translate>Show trend icon</span>\n            <button\n              class=\"btn btn-clean\"\n              popover=\"{{\n                'Indicates the trend between the last two measurement values.' | translate\n              }}\"\n              container=\"body\"\n              [outsideClick]=\"true\"\n            >\n              <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n            </button>\n          </label>\n        </c8y-form-group>\n      </div>\n\n      <c8y-form-group>\n        <label [title]=\"'Font size of measurement value (px)' | translate\" translate>\n          Font size of measurement value (px)\n        </label>\n        <input\n          class=\"form-control\"\n          formControlName=\"fontSize\"\n          name=\"fontSize\"\n          type=\"number\"\n          [placeholder]=\"'e.g. {{ example }}' | translate: { example: 36 }\"\n        />\n        <c8y-messages [show]=\"formGroup.controls?.fontSize?.touched && formGroup?.controls?.fontSize?.errors\">\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n  </div>\n</form>\n",
                    viewProviders: [{ provide: forms.ControlContainer, useExisting: forms.NgForm }]
                },] }
    ];
    KpiWidgetConfigComponent.ctorParameters = function () { return [
        { type: forms.FormBuilder },
        { type: forms.NgForm },
        { type: iconSelector.IconSelectorService },
        { type: contextDashboard.WidgetConfigComponent },
        { type: datapointSelector.DatapointLibraryService }
    ]; };
    KpiWidgetConfigComponent.propDecorators = {
        config: [{ type: core.Input }]
    };

    var ColorClass;
    (function (ColorClass) {
        ColorClass["danger"] = "text-danger";
        ColorClass["warning"] = "text-warning";
        ColorClass["unknown"] = "";
    })(ColorClass || (ColorClass = {}));
    var KpiWidgetViewComponent = /** @class */ (function () {
        function KpiWidgetViewComponent(measurementRealtime, datapointLib, dashboard) {
            this.measurementRealtime = measurementRealtime;
            this.datapointLib = datapointLib;
            this.dashboard = dashboard;
            this.config = { datapoints: [] };
            this.state$ = rxjs.NEVER;
            // used to differentiate between loading state and empty state
            this.noDataInitiallyInDB = false;
        }
        KpiWidgetViewComponent.prototype.ngOnInit = function () {
            return __awaiter(this, void 0, void 0, function () {
                var datapoints, datapoint;
                return __generator(this, function (_c) {
                    datapoints = this.config.datapoints || [];
                    datapoint = datapoints.find(function (tmp) { return tmp.__active; });
                    if (!datapoint) {
                        return [2 /*return*/];
                    }
                    this.state$ = this.setupObservable(datapoint);
                    return [2 /*return*/];
                });
            });
        };
        KpiWidgetViewComponent.prototype.setupObservable = function (datapoint) {
            this.assignContextFromContextDashboard(datapoint);
            var latestMeasurement$ = this.getLatestMeasurement$(datapoint);
            var lastTwoValues$ = this.getLastTwoValuesOfObservable$(latestMeasurement$);
            var previousValue$ = lastTwoValues$.pipe(operators.map(function (res) { return res[0]; }), operators.startWith(undefined));
            var datapointUpdate$ = this.getDatapointLibraryEntry$(datapoint);
            var combineMeasurementAndDatapointLibEntry$ = rxjs.combineLatest([
                latestMeasurement$,
                datapointUpdate$
            ]);
            var unit$ = combineMeasurementAndDatapointLibEntry$.pipe(operators.map(function (_c) {
                var _d = __read(_c, 2), latestMeasurementValue = _d[0], currentDatapoint = _d[1];
                return currentDatapoint.unit || latestMeasurementValue.unit || '';
            }), operators.startWith(''), operators.distinctUntilChanged());
            return rxjs.combineLatest([
                latestMeasurement$,
                previousValue$,
                this.getTrendOfLatestMeasurements$(lastTwoValues$),
                unit$,
                this.getColorClass$(combineMeasurementAndDatapointLibEntry$)
            ]).pipe(operators.map(function (_c) {
                var _d = __read(_c, 5), latestMeasurement = _d[0], previousValue = _d[1], trend = _d[2], unit = _d[3], colorClass = _d[4];
                return {
                    latestMeasurement: latestMeasurement,
                    previousValue: previousValue,
                    trend: trend,
                    unit: unit,
                    colorClass: colorClass
                };
            }));
        };
        KpiWidgetViewComponent.prototype.getLatestMeasurement$ = function (datapoint) {
            var _this = this;
            return this.measurementRealtime
                .latestValueOfSpecificMeasurement$(datapoint.fragment, datapoint.series, datapoint.__target, 
            // we only need the last two values in case we want to show a trend
            this.config.showTrend ? 2 : 1, 
            // null will be emitted in case no measurement was found initially
            true)
                .pipe(operators.tap(function (measurement) {
                if (!measurement) {
                    _this.noDataInitiallyInDB = true;
                }
            }), operators.filter(function (measurement) { return !!measurement; }), operators.map(function (measurement) {
                return {
                    unit: measurement[datapoint.fragment][datapoint.series].unit,
                    value: measurement[datapoint.fragment][datapoint.series].value,
                    date: measurement.time
                };
            }));
        };
        KpiWidgetViewComponent.prototype.getDatapointLibraryEntry$ = function (datapoint) {
            return rxjs.from(this.datapointLib.updateDatapoints([datapoint], true)).pipe(operators.map(function (tmp) { return tmp[0]; }), operators.filter(function (tmp) { return !!tmp; }), operators.startWith(datapoint));
        };
        KpiWidgetViewComponent.prototype.getColorClass$ = function (measurementAndDatapointCombination$) {
            var _this = this;
            return measurementAndDatapointCombination$.pipe(operators.map(function (_c) {
                var _d = __read(_c, 2), latestMeasurementValue = _d[0], currentDatapoint = _d[1];
                if (_this.inRangeOf(currentDatapoint, latestMeasurementValue.value, 'redRangeMin', 'redRangeMax')) {
                    return ColorClass.danger;
                }
                if (_this.inRangeOf(currentDatapoint, latestMeasurementValue.value, 'yellowRangeMin', 'yellowRangeMax')) {
                    return ColorClass.warning;
                }
                return ColorClass.unknown;
            }), operators.startWith(ColorClass.unknown), operators.distinctUntilChanged());
        };
        KpiWidgetViewComponent.prototype.getLastTwoValuesOfObservable$ = function (input$) {
            return input$.pipe(operators.pairwise());
        };
        KpiWidgetViewComponent.prototype.getTrendOfLatestMeasurements$ = function (latestMeasurement$) {
            return latestMeasurement$.pipe(operators.map(function (res) {
                if (res.length === 2) {
                    var oldValue = res[0].value;
                    var newValue = res[1].value;
                    if (oldValue < newValue) {
                        return '45deg';
                    }
                    if (oldValue > newValue) {
                        return '135deg';
                    }
                }
                return '90deg';
            }), operators.startWith('90deg'), operators.distinctUntilChanged());
        };
        KpiWidgetViewComponent.prototype.inRangeOf = function (datapoint, measurementValue, minAttribute, maxAttribute) {
            if (typeof datapoint[minAttribute] === 'number' &&
                typeof datapoint[maxAttribute] === 'number') {
                if (measurementValue >= datapoint[minAttribute] &&
                    measurementValue < datapoint[maxAttribute]) {
                    return true;
                }
            }
            return false;
        };
        KpiWidgetViewComponent.prototype.assignContextFromContextDashboard = function (datapoint) {
            var _a, _b;
            if (!((_a = this.dashboard) === null || _a === void 0 ? void 0 : _a.isDeviceTypeDashboard)) {
                return;
            }
            var context = (_b = this.dashboard) === null || _b === void 0 ? void 0 : _b.context;
            if (context === null || context === void 0 ? void 0 : context.id) {
                var name = context.name, id = context.id;
                datapoint.__target = { name: name, id: id };
            }
        };
        return KpiWidgetViewComponent;
    }());
    KpiWidgetViewComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-kpi-widget-view',
                    template: "<div\n  class=\"kpi-widget__container d-flex d-col fit-h fit-w a-i-center j-c-center\"\n  *ngIf=\"state$ | async as lastState; else noMeasurementFound\"\n>\n  <div class=\"d-flex a-i-center j-c-center fit-w\">\n    <div\n      class=\"m-r-16 flex-no-shrink text-muted\"\n      [ngClass]=\"lastState.colorClass\"\n      *ngIf=\"config.icon && config.showIcon\"\n    >\n      <i class=\"icon-32\" [c8yIcon]=\"config.icon\"></i>\n    </div>\n    <div class=\"text-truncate\">\n      <span\n        class=\"text-truncate text-medium\"\n        [ngClass]=\"lastState.colorClass\"\n        [ngStyle]=\"{ 'font-size': (config.fontSize || '36') + 'px' }\"\n        title=\"{{\n          lastState.colorClass === 'text-danger'\n            ? ('Within red range:' | translate)\n            : lastState.colorClass === 'text-warning'\n            ? ('Within yellow range:' | translate)\n            : ''\n        }} {{\n          lastState.latestMeasurement.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')\n        }} {{ lastState.unit || '' }}\"\n      >\n        {{\n          lastState.latestMeasurement.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')\n        }}\n        <small class=\"text-regular\">{{ lastState.unit || '' }}</small>\n      </span>\n    </div>\n    <div\n      class=\"dot dot-info dot-30 m-l-16 flex-no-shrink\"\n      *ngIf=\"config?.showTrend && lastState.previousValue as previousValue\"\n    >\n      <i\n        class=\"icon-20\"\n        [title]=\"\n          ('Previous value' | translate) +\n          ': ' +\n          (previousValue.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')) +\n          ' (' +\n          (previousValue.date | date: 'medium') +\n          ')'\n        \"\n        c8yIcon=\"arrow-dotted-up\"\n        [ngStyle]=\"{ transform: 'rotate(' + lastState.trend + ')' }\"\n      ></i>\n    </div>\n  </div>\n  <div class=\"d-flex j-c-center\">\n    <p *ngIf=\"config?.showTimestamp\" class=\"icon-flex text-center text-muted small\">\n      <i c8yIcon=\"calendar\"></i>\n      {{ lastState.latestMeasurement.date | date: 'medium' }}\n    </p>\n  </div>\n</div>\n\n<ng-template #noMeasurementFound>\n  <div class=\"d-flex fit-h fit-w j-c-center a-i-center\">\n    <c8y-ui-empty-state\n      *ngIf=\"noDataInitiallyInDB\"\n      class=\"fit-w\"\n      [icon]=\"'line-chart'\"\n      [title]=\"'No measurement to display.' | translate\"\n      [subtitle]=\"'Waiting for measurements to be created.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n    <c8y-loading *ngIf=\"!noDataInitiallyInDB\"></c8y-loading>\n  </div>\n</ng-template>\n",
                    providers: [ngxComponents.MeasurementRealtimeService]
                },] }
    ];
    KpiWidgetViewComponent.ctorParameters = function () { return [
        { type: ngxComponents.MeasurementRealtimeService },
        { type: datapointSelector.DatapointLibraryService },
        { type: contextDashboard.ContextDashboardComponent, decorators: [{ type: core.Optional }] }
    ]; };
    KpiWidgetViewComponent.propDecorators = {
        config: [{ type: core.Input }]
    };

    // import for the preview img to get into the build.
    var previewImage = '';
    try {
        // tslint:disable-next-line: no-var-requires
        previewImage = require('@c8y/style/img/kpi-widget.png');
    }
    catch (ex) {
        // intended empty
    }
    var ɵ0 = [
        {
            id: 'kpi.widget',
            label: ngxComponents.gettext('KPI Widget'),
            description: ngxComponents.gettext('Displays the last measurement value of a device.'),
            component: KpiWidgetViewComponent,
            configComponent: KpiWidgetConfigComponent,
            previewImage: previewImage,
            data: {
                settings: {
                    noNewWidgets: false,
                    widgetDefaults: {
                        _width: 2,
                        _height: 2
                    },
                    ng1: {
                        options: {
                            noDeviceTarget: true,
                            groupsSelectable: false
                        }
                    }
                }
            }
        }
    ];
    var KpiWidgetModule = /** @class */ (function () {
        function KpiWidgetModule() {
        }
        return KpiWidgetModule;
    }());
    KpiWidgetModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [ngxComponents.CoreModule, datapointSelector.DatapointSelectorModule, iconSelector.IconSelectorModule, popover.PopoverModule],
                    declarations: [KpiWidgetViewComponent, KpiWidgetConfigComponent],
                    providers: [
                        {
                            provide: ngxComponents.HOOK_COMPONENTS,
                            useValue: ɵ0,
                            multi: true
                        }
                    ]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.KpiWidgetModule = KpiWidgetModule;
    exports["ɵ0"] = ɵ0;
    exports["ɵa"] = KpiWidgetViewComponent;
    exports["ɵb"] = KpiWidgetConfigComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-widgets-kpi-widget.umd.js.map
