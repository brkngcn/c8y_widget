(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@angular/forms'),require('@angular/common'),require('@c8y/ngx-components'),require('ngx-bootstrap/popover'),require('@c8y/client'),require('ngx-bootstrap/modal'),require('@c8y/ngx-components/context-dashboard'),require('@angular/cdk/drag-drop'),require('@c8y/ngx-components/assets-navigator'),require('ngx-bootstrap/collapse'),require('ngx-bootstrap/dropdown'),exports, require('@angular/cdk/drag-drop'), require('@angular/core'), require('@c8y/ngx-components'), require('@c8y/ngx-components/assets-navigator'), require('ngx-bootstrap/collapse'), require('ngx-bootstrap/dropdown'), require('ngx-bootstrap/modal'), require('ngx-bootstrap/popover'), require('@angular/forms'), require('rxjs/operators'), require('@c8y/ngx-components/context-dashboard'), require('rxjs'), require('@c8y/client'), require('lodash-es'), require('@c8y/client'), require('@c8y/client')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/datapoint-selector', ['@angular/core','@angular/forms','@angular/common','@c8y/ngx-components','ngx-bootstrap/popover','@c8y/client','ngx-bootstrap/modal','@c8y/ngx-components/context-dashboard','@angular/cdk/drag-drop','@c8y/ngx-components/assets-navigator','ngx-bootstrap/collapse','ngx-bootstrap/dropdown','exports', '@angular/cdk/drag-drop', '@angular/core', '@c8y/ngx-components', '@c8y/ngx-components/assets-navigator', 'ngx-bootstrap/collapse', 'ngx-bootstrap/dropdown', 'ngx-bootstrap/modal', 'ngx-bootstrap/popover', '@angular/forms', 'rxjs/operators', '@c8y/ngx-components/context-dashboard', 'rxjs', '@c8y/client', 'lodash-es', '@c8y/client', '@c8y/client'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ng.forms,global.ng.common,global.c8y.ngxComponents,global.ngxBootstrap.popover,global.c8y.client,global.ngxBootstrap.modal,global.c8y.ngxComponents.contextDashboard,global.ng.cdk.dragDrop,global.c8y.ngxComponents.assetsNavigator,global.ngxBootstrap.collapse,global.ngxBootstrap.dropdown,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"]["datapoint-selector"] = {}), global.ng.cdk.dragDrop, global.ng.core, global.c8y["ngx-components"], global.c8y["ngx-components"]["assets-navigator"], global.collapse, global.dropdown, global.i1$2, global.popover, global.ng.forms, global.rxjs.operators, global.c8y["ngx-components"]["context-dashboard"], global.rxjs, global.client, global.lodashEs, global.i1$1, global.i3));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,ɵngcc8,ɵngcc9,ɵngcc10,ɵngcc11,exports, dragDrop, i0, i2, assetsNavigator, collapse, dropdown, i1$2, popover, i1, operators, contextDashboard, rxjs, client, lodashEs, i1$1, i3) { 
function DatapointAttributesFormComponent_div_0_fieldset_1_div_4_c8y_message_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    var item_r10 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r10.key)("text", item_r10.value);
} }
var _c0 = function () { return { example: "Temperature" }; };
function DatapointAttributesFormComponent_div_0_fieldset_1_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(2, "label", 7);
    ɵngcc0.ɵɵtext(3, "Label");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "input", 11);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(7, DatapointAttributesFormComponent_div_0_fieldset_1_div_4_c8y_message_7_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(8, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(5, 3, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(8, _c0)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ctx_r6.formGroup.controls.label.touched && ctx_r6.formGroup.controls.label.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 6, ctx_r6.customValidationErrorMessages["label"]));
} }
function DatapointAttributesFormComponent_div_0_fieldset_1_div_5_c8y_message_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    var item_r12 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r12.key)("text", item_r12.value);
} }
var _c1 = function () { return { example: "\u00BAC" }; };
function DatapointAttributesFormComponent_div_0_fieldset_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(2, "label", 7);
    ɵngcc0.ɵɵtext(3, "Unit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "input", 15);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(7, DatapointAttributesFormComponent_div_0_fieldset_1_div_5_c8y_message_7_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(8, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(5, 3, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(8, _c1)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ctx_r7.formGroup.controls.unit.touched && ctx_r7.formGroup.controls.unit.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 6, ctx_r7.customValidationErrorMessages["unit"]));
} }
function DatapointAttributesFormComponent_div_0_fieldset_1_div_6_c8y_message_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    var item_r14 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r14.key)("text", item_r14.value);
} }
var _c2 = function (a0) { return { "has-error": a0 }; };
var _c3 = function () { return { example: 25 }; };
function DatapointAttributesFormComponent_div_0_fieldset_1_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(2, "label", 7);
    ɵngcc0.ɵɵtext(3, "Target");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "input", 17);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(7, DatapointAttributesFormComponent_div_0_fieldset_1_div_6_c8y_message_7_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(8, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c2, ((ctx_r8.range == null ? null : ctx_r8.range.touched) || ctx_r8.formGroup.controls.target.touched) && (ctx_r8.formGroup.controls == null ? null : ctx_r8.formGroup.controls.target == null ? null : ctx_r8.formGroup.controls.target.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(5, 4, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(11, _c3)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r8.range == null ? null : ctx_r8.range.touched) || ctx_r8.formGroup.controls.target.touched) && ctx_r8.formGroup.controls.target.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 7, ctx_r8.customValidationErrorMessages["target"]));
} }
function DatapointAttributesFormComponent_div_0_fieldset_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 6);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Details");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵtemplate(4, DatapointAttributesFormComponent_div_0_fieldset_1_div_4_Template, 9, 9, "div", 9);
    ɵngcc0.ɵɵtemplate(5, DatapointAttributesFormComponent_div_0_fieldset_1_div_5_Template, 9, 9, "div", 9);
    ɵngcc0.ɵɵtemplate(6, DatapointAttributesFormComponent_div_0_fieldset_1_div_6_Template, 9, 12, "div", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.unit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.target) && ctx_r1.showTarget);
} }
function DatapointAttributesFormComponent_div_0_fieldset_2_c8y_message_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    var item_r16 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r16.key)("text", item_r16.value);
} }
var _c4 = function () { return { example: 0 }; };
var _c5 = function () { return { example: 100 }; };
function DatapointAttributesFormComponent_div_0_fieldset_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 6);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 18);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(6, "label", 7);
    ɵngcc0.ɵɵtext(7, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "input", 19);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(13, "label", 7);
    ɵngcc0.ɵɵtext(14, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "input", 20);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelementStart(17, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(18, DatapointAttributesFormComponent_div_0_fieldset_2_c8y_message_18_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(19, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c2, (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range == null ? null : ctx_r2.range.controls == null ? null : ctx_r2.range.controls.min == null ? null : ctx_r2.range.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(9, 7, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(17, _c4)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range.controls == null ? null : ctx_r2.range.controls.min == null ? null : ctx_r2.range.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(18, _c2, (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range == null ? null : ctx_r2.range.controls == null ? null : ctx_r2.range.controls.max == null ? null : ctx_r2.range.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(16, 10, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(20, _c5)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range.controls == null ? null : ctx_r2.range.controls.max == null ? null : ctx_r2.range.controls.max.errors));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(19, 13, ctx_r2.customValidationErrorMessages["max"]));
} }
var _c6 = function () { return { example: 50 }; };
var _c7 = function () { return { example: 75 }; };
function DatapointAttributesFormComponent_div_0_fieldset_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 21);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Yellow range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(6, "label", 7);
    ɵngcc0.ɵɵtext(7, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "input", 19);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(13, "label", 7);
    ɵngcc0.ɵɵtext(14, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "input", 20);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelement(17, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c2, ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.min == null ? null : ctx_r3.yellowRange.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(9, 6, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(14, _c6)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.min == null ? null : ctx_r3.yellowRange.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c2, ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.max == null ? null : ctx_r3.yellowRange.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(16, 9, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(17, _c7)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.max == null ? null : ctx_r3.yellowRange.controls.max.errors));
} }
function DatapointAttributesFormComponent_div_0_fieldset_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 22);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Red range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(6, "label", 7);
    ɵngcc0.ɵɵtext(7, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "input", 19);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(13, "label", 7);
    ɵngcc0.ɵɵtext(14, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "input", 20);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelement(17, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c2, ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange == null ? null : ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.min == null ? null : ctx_r4.redRange.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(9, 6, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(14, _c7)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.min == null ? null : ctx_r4.redRange.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c2, ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange == null ? null : ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.max == null ? null : ctx_r4.redRange.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(16, 9, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(17, _c5)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.max == null ? null : ctx_r4.redRange.controls.max.errors));
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_option_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var type_r20 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", type_r20.val);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, type_r20.text), " ");
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_option_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var type_r21 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", type_r21.val);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, type_r21.text), " ");
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_option_29_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var type_r22 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", type_r22.val);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, type_r22.text), " ");
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 23);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Chart");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 24);
    ɵngcc0.ɵɵelementStart(4, "div", 25);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(6, "label", 26);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementStart(9, "button", 27);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelement(11, "i", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 29);
    ɵngcc0.ɵɵelementStart(13, "select", 30);
    ɵngcc0.ɵɵtemplate(14, DatapointAttributesFormComponent_div_0_fieldset_5_option_14_Template, 3, 4, "option", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "div", 25);
    ɵngcc0.ɵɵelementStart(16, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(17, "label", 32);
    ɵngcc0.ɵɵtext(18, "Chart type");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "div", 29);
    ɵngcc0.ɵɵelementStart(20, "select", 33);
    ɵngcc0.ɵɵtemplate(21, DatapointAttributesFormComponent_div_0_fieldset_5_option_21_Template, 3, 4, "option", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(22, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(23, "div", 25);
    ɵngcc0.ɵɵelementStart(24, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(25, "label", 34);
    ɵngcc0.ɵɵtext(26, "Y Axis");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(27, "div", 29);
    ɵngcc0.ɵɵelementStart(28, "select", 35);
    ɵngcc0.ɵɵtemplate(29, DatapointAttributesFormComponent_div_0_fieldset_5_option_29_Template, 3, 4, "option", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(30, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 8, "Display"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(10, 10, "Value displayed when data is aggregated"));
    ɵngcc0.ɵɵproperty("placement", "right")("triggers", "focus")("container", "body");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.CHART_RENDER_TYPES);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.CHART_LINE_TYPES);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.AXIS_TYPES);
} }
function DatapointAttributesFormComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, DatapointAttributesFormComponent_div_0_fieldset_1_Template, 7, 3, "fieldset", 2);
    ɵngcc0.ɵɵtemplate(2, DatapointAttributesFormComponent_div_0_fieldset_2_Template, 20, 21, "fieldset", 2);
    ɵngcc0.ɵɵtemplate(3, DatapointAttributesFormComponent_div_0_fieldset_3_Template, 18, 18, "fieldset", 3);
    ɵngcc0.ɵɵtemplate(4, DatapointAttributesFormComponent_div_0_fieldset_4_Template, 18, 18, "fieldset", 4);
    ɵngcc0.ɵɵtemplate(5, DatapointAttributesFormComponent_div_0_fieldset_5_Template, 31, 12, "fieldset", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("formGroup", ctx_r0.formGroup);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r0.formGroup.controls == null ? null : ctx_r0.formGroup.controls.label) || (ctx_r0.formGroup.controls == null ? null : ctx_r0.formGroup.controls.unit) || (ctx_r0.formGroup.controls == null ? null : ctx_r0.formGroup.controls.target));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.range && ctx_r0.showRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.yellowRange && ctx_r0.showYellowRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.redRange && ctx_r0.showRedRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.chart && ctx_r0.showChart);
} }
function DatapointSelectionListComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " At least {{ minActive }} active data points must be selected. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("translateParams", ctx_r0.formArray.errors == null ? null : ctx_r0.formArray.errors.minActiveCount);
} }
function DatapointSelectionListComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " At maximum {{ maxActive }} active data points are allowed to be selected. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("translateParams", ctx_r1.formArray.errors == null ? null : ctx_r1.formArray.errors.maxActiveCount);
} }
function DatapointSelectionListComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelement(1, "h1", 12);
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵelementStart(4, "strong", 9);
    ɵngcc0.ɵɵtext(5, "No data points to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "small", 9);
    ɵngcc0.ɵɵtext(7, "Add your first data point.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointSelectionListComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    var _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "c8y-datapoint-selector-list-item", 14);
    ɵngcc0.ɵɵlistener("removed", function DatapointSelectionListComponent_div_8_Template_c8y_datapoint_selector_list_item_removed_1_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); var index_r5 = restoredCtx.index; var ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onItemRemoved(index_r5); });
    ɵngcc0.ɵɵelementStart(2, "c8y-li-drag-handle", 15);
    ɵngcc0.ɵɵelement(3, "i", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var dpForm_r4 = ctx.$implicit;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("formGroup", dpForm_r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("defaultFormOptions", ctx_r3.defaultFormOptions)("activeToggleDisabled", ctx_r3.maxActiveCountReached)("showActiveToggle", true)("showAddRemoveButton", false)("showOptions", true)("editable", true)("colorPickerDisabled", false)("actions", ctx_r3.actions)("optionToRemove", true)("datapointLibraryEntries", ctx_r3.datapointLibraryEntries)("hasUnlinkTemplateOption", true);
} }
var _c8 = [[["", 8, "alert"]]];
var _c9 = [".alert"];
function DatapointSelectorListItemComponent_c8y_li_icon_4_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 26);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_c8y_li_icon_4_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(2); return ctx_r13.addOrRemoveItem(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 27);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Remove"));
} }
function DatapointSelectorListItemComponent_c8y_li_icon_4_button_2_Template(rf, ctx) { if (rf & 1) {
    var _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 26);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_c8y_li_icon_4_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); var ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.addOrRemoveItem(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 28);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Select"));
} }
function DatapointSelectorListItemComponent_c8y_li_icon_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li-icon", 24);
    ɵngcc0.ɵɵtemplate(1, DatapointSelectorListItemComponent_c8y_li_icon_4_button_1_Template, 3, 3, "button", 25);
    ɵngcc0.ɵɵtemplate(2, DatapointSelectorListItemComponent_c8y_li_icon_4_button_2_Template, 3, 3, "button", 25);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isSelected);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r1.isSelected);
} }
function DatapointSelectorListItemComponent_c8y_li_checkbox_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li-checkbox", 29);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_c8y_li_checkbox_5_Template_c8y_li_checkbox_click_0_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("displayAsSwitch", true);
} }
function DatapointSelectorListItemComponent_small_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 30);
    ɵngcc0.ɵɵelement(1, "i", 31);
    ɵngcc0.ɵɵelementStart(2, "span", 9);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ctx_r3.formGroup.value.__target.name);
} }
function DatapointSelectorListItemComponent_button_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 32);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 33);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("popover", ɵngcc0.ɵɵpipeBind1(1, 2, "Some entries are invalid. Check the input fields with red borders."))("outsideClick", true);
} }
function DatapointSelectorListItemComponent_c8y_li_action_18_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 34);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_c8y_li_action_18_Template_c8y_li_action_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.remove(ctx_r18.formGroup.value); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "minus-circle")("label", ɵngcc0.ɵɵpipeBind1(1, 2, "Remove from list"));
} }
function DatapointSelectorListItemComponent_c8y_li_action_19_Template(rf, ctx) { if (rf & 1) {
    var _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li-action", 34);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_c8y_li_action_19_Template_c8y_li_action_click_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r22); var action_r20 = restoredCtx.$implicit; var ctx_r21 = ɵngcc0.ɵɵnextContext(); return action_r20.callback(ctx_r21.formGroup.value); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var action_r20 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("icon", action_r20.icon)("label", action_r20.label);
} }
function DatapointSelectorListItemComponent_div_33_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtext(0);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(1, 1, "Using a data point template sets color, label, unit and ranges. Removing the template allows you to set the values manually."), " ");
} }
function DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_c8y_li_2_Template(rf, ctx) { if (rf & 1) {
    var _r34 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 47);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_c8y_li_2_Template_c8y_li_click_0_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r34); var item_r32 = restoredCtx.$implicit; var ctx_r33 = ɵngcc0.ɵɵnextContext(3); return ctx_r33.dataPointTemplateSelected(item_r32); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 48);
    ɵngcc0.ɵɵelement(2, "c8y-li-icon", 49);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var item_r32 = ctx.$implicit;
    var ctx_r29 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("active", ctx_r29.formGroup.value.__template === item_r32.id);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", item_r32.c8y_Kpi == null ? null : item_r32.c8y_Kpi.label)("pattern", ctx_r29.pattern);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("color", item_r32.c8y_Kpi == null ? null : item_r32.c8y_Kpi.color);
} }
function DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_ng_template_3_c8y_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 51);
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2, "No match found.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_ng_template_3_c8y_li_0_Template, 3, 0, "c8y-li", 50);
} if (rf & 2) {
    var ctx_r31 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r31.pattern.length > 0);
} }
var _c10 = function () { return { standalone: true }; };
function DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_Template(rf, ctx) { if (rf & 1) {
    var _r37 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-typeahead", 44);
    ɵngcc0.ɵɵlistener("onSearch", function DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_Template_c8y_typeahead_onSearch_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); var ctx_r36 = ɵngcc0.ɵɵnextContext(2); return ctx_r36.setPipe($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_c8y_li_2_Template, 3, 5, "c8y-li", 45);
    ɵngcc0.ɵɵtemplate(3, DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_ng_template_3_Template, 1, 1, "ng-template", null, 46, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r30 = ɵngcc0.ɵɵreference(4);
    var ctx_r26 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(1, 10, "No template"))("ngModel", ctx_r26.formGroup.value.__template ? ctx_r26.formGroup.value.details : undefined)("ngModelOptions", ɵngcc0.ɵɵpureFunction0(12, _c10))("displayProperty", "label")("hideNew", true)("disabled", ctx_r26.isSelected && ctx_r26.disableTypeaheadIfSelected);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yForOf", ctx_r26.datapointLibraryEntries)("c8yForLoadMore", "auto")("c8yForPipe", ctx_r26.filterPipe)("c8yForNotFound", _r30);
} }
function DatapointSelectorListItemComponent_div_33_button_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 52);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 53);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    var _r8 = ɵngcc0.ɵɵreference(36);
    ɵngcc0.ɵɵproperty("popover", _r8)("outsideClick", true)("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Info"));
} }
function DatapointSelectorListItemComponent_div_33_button_10_Template(rf, ctx) { if (rf & 1) {
    var _r39 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 54);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_div_33_button_10_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r39); var ctx_r38 = ɵngcc0.ɵɵnextContext(2); return ctx_r38.unlinkDatapointTemplate(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 55);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 1, "Unlink data point template"));
} }
function DatapointSelectorListItemComponent_div_33_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 35);
    ɵngcc0.ɵɵelementStart(1, "label", 36);
    ɵngcc0.ɵɵtext(2, "Data point template");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 37);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_div_33_Template_button_click_3_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelement(4, "i", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, DatapointSelectorListItemComponent_div_33_ng_template_5_Template, 2, 3, "ng-template", null, 39, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementStart(7, "div", 40);
    ɵngcc0.ɵɵtemplate(8, DatapointSelectorListItemComponent_div_33_c8y_typeahead_8_Template, 5, 13, "c8y-typeahead", 41);
    ɵngcc0.ɵɵtemplate(9, DatapointSelectorListItemComponent_div_33_button_9_Template, 3, 5, "button", 42);
    ɵngcc0.ɵɵtemplate(10, DatapointSelectorListItemComponent_div_33_button_10_Template, 3, 3, "button", 43);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r24 = ɵngcc0.ɵɵreference(6);
    var ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("popover", _r24)("outsideClick", true);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.datapointLibraryEntries);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.formGroup.value.__template);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r7.formGroup.value.__template && ctx_r7.hasUnlinkTemplateOption);
} }
function DatapointSelectorListItemComponent_ng_template_35_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-datapoint-template-popover", 56);
} if (rf & 2) {
    var ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("datapoint", ctx_r9.formGroup.value.details);
} }
function DatapointSelectorListItemComponent_c8y_datapoint_attributes_form_37_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-datapoint-attributes-form", 57);
} if (rf & 2) {
    var ctx_r10 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("showTarget", ctx_r10.defaultFormOptions.showTarget)("showRange", ctx_r10.defaultFormOptions.showRange)("showYellowRange", ctx_r10.defaultFormOptions.showYellowRange)("showRedRange", ctx_r10.defaultFormOptions.showRedRange)("showChart", ctx_r10.defaultFormOptions.showChart)("showFormIfTemplateWasSelected", ctx_r10.defaultFormOptions.showFormIfTemplateWasSelected);
} }
var _c11 = [[["c8y-li-drag-handle"]]];
var _c12 = ["c8y-li-drag-handle"];
var _c13 = function (a6) { return { view: "miller", groupsSelectable: true, columnHeaders: true, showChildDevices: true, showUnassignedDevices: true, singleColumn: true, search: a6 }; };
function DatapointSelectorComponent_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelementStart(1, "c8y-asset-selector-miller", 12);
    ɵngcc0.ɵɵlistener("ngModelChange", function DatapointSelectorComponent_div_1_Template_c8y_asset_selector_miller_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.contextAsset = $event; })("onSelected", function DatapointSelectorComponent_div_1_Template_c8y_asset_selector_miller_onSelected_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r9); var ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.selectionChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r0.contextAsset)("asset", ctx_r0.contextAsset)("container", "")("config", ɵngcc0.ɵɵpureFunction1(4, _c13, ctx_r0.allowSearch));
} }
function DatapointSelectorComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelement(2, "h1", 15);
    ɵngcc0.ɵɵelementStart(3, "div");
    ɵngcc0.ɵɵelementStart(4, "p");
    ɵngcc0.ɵɵelementStart(5, "strong", 16);
    ɵngcc0.ɵɵtext(6, "No data points to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "small", 16);
    ɵngcc0.ɵɵtext(8, "Select an asset from the list.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointSelectorComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointSelectorComponent_div_7_div_6_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 28);
} }
function DatapointSelectorComponent_div_7_div_6_ng_template_4_i_0_Template(rf, ctx) { if (rf & 1) {
    var _r19 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 30);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorComponent_div_7_div_6_ng_template_4_i_0_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); var ctx_r18 = ɵngcc0.ɵɵnextContext(4); return ctx_r18.searchString = ""; });
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointSelectorComponent_div_7_div_6_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DatapointSelectorComponent_div_7_div_6_ng_template_4_i_0_Template, 1, 0, "i", 29);
} if (rf & 2) {
    var ctx_r16 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r16.searchString);
} }
function DatapointSelectorComponent_div_7_div_6_Template(rf, ctx) { if (rf & 1) {
    var _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 23);
    ɵngcc0.ɵɵelementStart(1, "input", 24);
    ɵngcc0.ɵɵlistener("ngModelChange", function DatapointSelectorComponent_div_7_div_6_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r21); var ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.searchStringChanged($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(2, "span", 25);
    ɵngcc0.ɵɵtemplate(3, DatapointSelectorComponent_div_7_div_6_i_3_Template, 1, 0, "i", 26);
    ɵngcc0.ɵɵtemplate(4, DatapointSelectorComponent_div_7_div_6_ng_template_4_Template, 1, 1, "ng-template", null, 27, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var _r15 = ɵngcc0.ɵɵreference(5);
    var ctx_r12 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r12.searchString);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r12.searchString)("ngIfElse", _r15);
} }
function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "c8y-ui-empty-state", 34);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var datapoints_r25 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", "c8y-data-points")("title", ɵngcc0.ɵɵpipeBind1(2, 4, "No data points to display."))("subtitle", datapoints_r25.length ? ɵngcc0.ɵɵpipeBind1(3, 6, "Try another search term.") : ɵngcc0.ɵɵpipeBind1(4, 8, "Select an asset with data points from the list."))("horizontal", true);
} }
function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_c8y_list_item_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-list-item", 35);
    ɵngcc0.ɵɵelementStart(1, "div", 36);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, "Due to the large number, only a subset of data points are displayed. Use search to narrow down the number of results."), " ");
} }
function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_c8y_datapoint_selector_list_item_4_Template(rf, ctx) { if (rf & 1) {
    var _r32 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-datapoint-selector-list-item", 37);
    ɵngcc0.ɵɵlistener("added", function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_c8y_datapoint_selector_list_item_4_Template_c8y_datapoint_selector_list_item_added_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r32); var ctx_r31 = ɵngcc0.ɵɵnextContext(5); return ctx_r31.datapointAdded($event); })("removed", function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_c8y_datapoint_selector_list_item_4_Template_c8y_datapoint_selector_list_item_removed_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r32); var ctx_r33 = ɵngcc0.ɵɵnextContext(5); return ctx_r33.datapointRemoved($event); });
    ɵngcc0.ɵɵpipe(1, "includesDatapoint");
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var dp_r30 = ctx.$implicit;
    var ctx_r28 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵproperty("ngModel", dp_r30)("isSelected", ɵngcc0.ɵɵpipeBind2(1, 5, ctx_r28.selectedDatapoints, dp_r30))("datapointLibraryEntries", ctx_r28.datapointLibraryEntries)("disableTypeaheadIfSelected", true)("highlightText", ɵngcc0.ɵɵpipeBind1(2, 8, ctx_r28.searchStringChanges$));
} }
function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_div_1_Template, 5, 10, "div", 10);
    ɵngcc0.ɵɵelementStart(2, "c8y-list-group");
    ɵngcc0.ɵɵtemplate(3, DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_c8y_list_item_3_Template, 4, 3, "c8y-list-item", 32);
    ɵngcc0.ɵɵtemplate(4, DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_c8y_datapoint_selector_list_item_4_Template, 3, 10, "c8y-datapoint-selector-list-item", 33);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var datapoints_r25 = ctx.ngIf;
    var filteredDatapoints_r22 = ɵngcc0.ɵɵnextContext(2).ngIf;
    var ctx_r24 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !filteredDatapoints_r22.length);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", datapoints_r25.length > ctx_r24.maxNumberOfDatapoints && filteredDatapoints_r22.length >= ctx_r24.maxNumberOfDatapoints);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", filteredDatapoints_r22)("ngForTrackBy", ctx_r24.trackByFn);
} }
function DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_ng_container_1_Template, 5, 4, "ng-container", 31);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r23 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r23.datapoints$));
} }
function DatapointSelectorComponent_div_7_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatapointSelectorComponent_div_7_ng_container_7_ng_container_1_Template, 3, 3, "ng-container", 22);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    var _r3 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r13.loadingDatapoints)("ngIfElse", _r3);
} }
function DatapointSelectorComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "div", 19);
    ɵngcc0.ɵɵelementStart(2, "p", 20);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(6, DatapointSelectorComponent_div_7_div_6_Template, 6, 3, "div", 21);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, DatapointSelectorComponent_div_7_ng_container_7_Template, 2, 2, "ng-container", 22);
    ɵngcc0.ɵɵpipe(8, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    var _r3 = ɵngcc0.ɵɵreference(6);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(3, 5, "Available data points"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 7, "Available data points"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r5.loadingDatapoints);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(8, 9, ctx_r5.filteredDatapoints$))("ngIfElse", _r3);
} }
function DatapointSelectorComponent_div_14_small_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 45);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var selectedDp_r35 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", selectedDp_r35 == null ? null : selectedDp_r35.__target == null ? null : selectedDp_r35.__target.name, " ");
} }
var _c14 = function () { return { doNotUseLabel: true, includeDevice: true }; };
function DatapointSelectorComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    var _r39 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 38);
    ɵngcc0.ɵɵelementStart(1, "button", 39);
    ɵngcc0.ɵɵlistener("click", function DatapointSelectorComponent_div_14_Template_button_click_1_listener() { var restoredCtx = ɵngcc0.ɵɵrestoreView(_r39); var selectedDp_r35 = restoredCtx.$implicit; var ctx_r38 = ɵngcc0.ɵɵnextContext(); return ctx_r38.datapointRemoved(selectedDp_r35); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 40);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 41);
    ɵngcc0.ɵɵpipe(5, "datapointLabel");
    ɵngcc0.ɵɵelement(6, "i", 42);
    ɵngcc0.ɵɵelementStart(7, "span", 43);
    ɵngcc0.ɵɵelementStart(8, "span", 43);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵpipe(10, "datapointLabel");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(11, DatapointSelectorComponent_div_14_small_11_Template, 2, 1, "small", 44);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var selectedDp_r35 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 6, "Remove"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind2(5, 8, selectedDp_r35, ɵngcc0.ɵɵpureFunction0(13, _c14)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵstyleProp("color", selectedDp_r35.color);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(10, 11, selectedDp_r35));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", selectedDp_r35 == null ? null : selectedDp_r35.__target == null ? null : selectedDp_r35.__target.name);
} }
function DatapointSelectorComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelement(2, "h1", 15);
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵelementStart(4, "strong", 16);
    ɵngcc0.ɵɵtext(5, "No data points selected.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointTemplatePopoverComponent_ng_container_6_li_1_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 11);
} if (rf & 2) {
    var attribute_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵstyleProp("color", attribute_r1.labelColor);
} }
function DatapointTemplatePopoverComponent_ng_container_6_li_1_span_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r5 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r5.datapoint["min"], " \u2014 ", ctx_r5.datapoint["max"], " ");
} }
function DatapointTemplatePopoverComponent_ng_container_6_li_1_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r6.datapoint["yellowRangeMin"], " \u2014 ", ctx_r6.datapoint["yellowRangeMax"], " ");
} }
function DatapointTemplatePopoverComponent_ng_container_6_li_1_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", ctx_r7.datapoint["redRangeMin"], " \u2014 ", ctx_r7.datapoint["redRangeMax"], " ");
} }
function DatapointTemplatePopoverComponent_ng_container_6_li_1_span_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var attribute_r1 = ɵngcc0.ɵɵnextContext(2).$implicit;
    var ctx_r8 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r8.datapoint[attribute_r1.key], " ");
} }
function DatapointTemplatePopoverComponent_ng_container_6_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵelementStart(1, "label", 6);
    ɵngcc0.ɵɵtemplate(2, DatapointTemplatePopoverComponent_ng_container_6_li_1_i_2_Template, 1, 2, "i", 7);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerStart(5, 8);
    ɵngcc0.ɵɵtemplate(6, DatapointTemplatePopoverComponent_ng_container_6_li_1_span_6_Template, 2, 2, "span", 9);
    ɵngcc0.ɵɵtemplate(7, DatapointTemplatePopoverComponent_ng_container_6_li_1_span_7_Template, 2, 2, "span", 9);
    ɵngcc0.ɵɵtemplate(8, DatapointTemplatePopoverComponent_ng_container_6_li_1_span_8_Template, 2, 2, "span", 9);
    ɵngcc0.ɵɵtemplate(9, DatapointTemplatePopoverComponent_ng_container_6_li_1_span_9_Template, 2, 1, "span", 10);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var attribute_r1 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", attribute_r1.labelColor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 6, attribute_r1.label), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitch", attribute_r1.key);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "min");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "yellowRangeMin");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "redRangeMin");
} }
function DatapointTemplatePopoverComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DatapointTemplatePopoverComponent_ng_container_6_li_1_Template, 10, 8, "li", 4);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var attribute_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.datapoint[attribute_r1.key] !== undefined);
} }
'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var AXIS_TYPES = [
        { val: undefined, text: i2.gettext('Auto') },
        { val: 'left', text: i2.gettext('Left') },
        { val: 'right', text: i2.gettext('Right') }
    ];
    var CHART_LINE_TYPES = [
        { val: 'line', text: i2.gettext('Line') },
        { val: 'points', text: i2.gettext('Points') },
        { val: 'linePoints', text: i2.gettext('Line and points') },
        { val: 'bars', text: i2.gettext('Bars') },
        { val: 'step-before', text: i2.gettext('Step before') },
        { val: 'step-after', text: i2.gettext('Step after') }
    ];
    var CHART_RENDER_TYPES = [
        { val: 'min', text: i2.gettext('Minimum') },
        { val: 'max', text: i2.gettext('Maximum') },
        { val: 'area', text: i2.gettext('Minimum and maximum') }
    ];

    var DatapointAttributesFormValidationService = /** @class */ (function () {
        function DatapointAttributesFormValidationService(formBuilder) {
            this.formBuilder = formBuilder;
        }
        DatapointAttributesFormValidationService.prototype.getDefaultFormGroup = function (fieldsToRemove) {
            var e_1, _b;
            if (fieldsToRemove === void 0) { fieldsToRemove = []; }
            var formFields = {
                __active: [true, []],
                __target: this.getTargetFormGroup(),
                __template: [undefined, []],
                color: ['', this.getColorValidators()],
                label: ['', this.getLabelValidators()],
                description: ['', this.getDescriptionValidators()],
                fragment: ['', this.getFragmentValidators()],
                series: ['', this.getSeriesValidators()],
                range: this.getMinMaxFormGroup(),
                unit: [undefined, this.getUnitValidators()],
                target: [undefined, this.getTargetValidators()],
                redRange: this.getMinMaxFormGroup(),
                yellowRange: this.getMinMaxFormGroup(),
                chart: this.getChartFormGroup()
            };
            if (fieldsToRemove.length) {
                try {
                    for (var fieldsToRemove_1 = __values(fieldsToRemove), fieldsToRemove_1_1 = fieldsToRemove_1.next(); !fieldsToRemove_1_1.done; fieldsToRemove_1_1 = fieldsToRemove_1.next()) {
                        var field = fieldsToRemove_1_1.value;
                        delete formFields[field];
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (fieldsToRemove_1_1 && !fieldsToRemove_1_1.done && (_b = fieldsToRemove_1.return)) _b.call(fieldsToRemove_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            return this.formBuilder.group(formFields, {
                validators: this.getOverallValidators()
            });
        };
        DatapointAttributesFormValidationService.prototype.convertToBackendFormat = function (formDataStructure) {
            if (!formDataStructure) {
                return {};
            }
            var __active = formDataStructure.__active, __target = formDataStructure.__target, __template = formDataStructure.__template, color = formDataStructure.color, label = formDataStructure.label, description = formDataStructure.description, fragment = formDataStructure.fragment, series = formDataStructure.series, range = formDataStructure.range, unit = formDataStructure.unit, target = formDataStructure.target, redRange = formDataStructure.redRange, yellowRange = formDataStructure.yellowRange, chart = formDataStructure.chart;
            var obj = {
                __active: __active,
                __target: __target,
                __template: __template,
                color: color,
                label: label,
                description: description,
                fragment: fragment,
                series: series,
                min: range === null || range === void 0 ? void 0 : range.min,
                max: range === null || range === void 0 ? void 0 : range.max,
                unit: unit,
                target: target,
                redRangeMin: redRange === null || redRange === void 0 ? void 0 : redRange.min,
                redRangeMax: redRange === null || redRange === void 0 ? void 0 : redRange.max,
                yellowRangeMin: yellowRange === null || yellowRange === void 0 ? void 0 : yellowRange.min,
                yellowRangeMax: yellowRange === null || yellowRange === void 0 ? void 0 : yellowRange.max,
                renderType: chart === null || chart === void 0 ? void 0 : chart.renderType,
                lineType: chart === null || chart === void 0 ? void 0 : chart.lineType,
                yAxisType: chart === null || chart === void 0 ? void 0 : chart.yAxisType
            };
            return obj;
        };
        DatapointAttributesFormValidationService.prototype.convertToFormGroupFormat = function (backendDataStructure) {
            if (!backendDataStructure) {
                return {};
            }
            var __active = backendDataStructure.__active, __target = backendDataStructure.__target, __template = backendDataStructure.__template, color = backendDataStructure.color, label = backendDataStructure.label, description = backendDataStructure.description, fragment = backendDataStructure.fragment, series = backendDataStructure.series, min = backendDataStructure.min, max = backendDataStructure.max, unit = backendDataStructure.unit, target = backendDataStructure.target, redRangeMin = backendDataStructure.redRangeMin, redRangeMax = backendDataStructure.redRangeMax, yellowRangeMin = backendDataStructure.yellowRangeMin, yellowRangeMax = backendDataStructure.yellowRangeMax, renderType = backendDataStructure.renderType, lineType = backendDataStructure.lineType, yAxisType = backendDataStructure.yAxisType;
            var obj = {
                __active: __active,
                __target: __target,
                __template: __template,
                color: color,
                label: label,
                description: description,
                fragment: fragment,
                series: series,
                range: {
                    min: this.convertStringToNumber(min),
                    max: this.convertStringToNumber(max)
                },
                unit: unit,
                target: this.convertStringToNumber(target),
                redRange: {
                    min: this.convertStringToNumber(redRangeMin),
                    max: this.convertStringToNumber(redRangeMax)
                },
                yellowRange: {
                    min: this.convertStringToNumber(yellowRangeMin),
                    max: this.convertStringToNumber(yellowRangeMax)
                },
                chart: renderType || lineType || yAxisType ? { renderType: renderType, lineType: lineType, yAxisType: yAxisType } : undefined
            };
            return obj;
        };
        DatapointAttributesFormValidationService.prototype.getColorValidators = function () {
            return [i1.Validators.required, i1.Validators.minLength(4)];
        };
        DatapointAttributesFormValidationService.prototype.getLabelValidators = function () {
            return [i1.Validators.required, i1.Validators.minLength(1), i1.Validators.maxLength(120)];
        };
        DatapointAttributesFormValidationService.prototype.getDescriptionValidators = function () {
            return [];
        };
        DatapointAttributesFormValidationService.prototype.getFragmentValidators = function () {
            return [
                i1.Validators.required,
                i1.Validators.minLength(1),
                i1.Validators.maxLength(120),
                i1.Validators.pattern(/^[^.]*$/)
            ];
        };
        DatapointAttributesFormValidationService.prototype.getSeriesValidators = function () {
            return [
                i1.Validators.required,
                i1.Validators.minLength(1),
                i1.Validators.maxLength(120),
                i1.Validators.pattern(/^[^.]*$/)
            ];
        };
        DatapointAttributesFormValidationService.prototype.getMinMaxValidators = function () {
            return [i2.C8yValidators.minMaxValidator(), i2.C8yValidators.requireBothMinAndMax()];
        };
        DatapointAttributesFormValidationService.prototype.getUnitValidators = function () {
            return [];
        };
        DatapointAttributesFormValidationService.prototype.getTargetValidators = function () {
            return [];
        };
        DatapointAttributesFormValidationService.prototype.getOverallValidators = function () {
            return [
                i2.C8yValidators.withinScale('redRange.min'),
                i2.C8yValidators.withinScale('redRange.max'),
                i2.C8yValidators.withinScale('yellowRange.min'),
                i2.C8yValidators.withinScale('yellowRange.max'),
                i2.C8yValidators.withinScale('target')
            ];
        };
        DatapointAttributesFormValidationService.prototype.getMinMaxFormGroup = function () {
            return this.formBuilder.group({ min: [undefined, []], max: [undefined, []] }, { validators: this.getMinMaxValidators() });
        };
        DatapointAttributesFormValidationService.prototype.getChartFormGroup = function () {
            return this.formBuilder.group({
                renderType: [CHART_RENDER_TYPES[0].val, []],
                lineType: [CHART_LINE_TYPES[0].val, []],
                yAxisType: [AXIS_TYPES[0].val, []]
            });
        };
        DatapointAttributesFormValidationService.prototype.getTargetFormGroup = function () {
            return this.formBuilder.group({
                id: [undefined, []],
                name: [undefined, []]
            });
        };
        DatapointAttributesFormValidationService.prototype.convertStringToNumber = function (possibleString) {
            if (typeof possibleString === 'string') {
                try {
                    return Number.parseFloat(possibleString);
                }
                catch (_a) {
                    return undefined;
                }
            }
            else {
                return possibleString;
            }
        };
DatapointAttributesFormValidationService.ɵfac = function DatapointAttributesFormValidationService_Factory(t) { return new (t || DatapointAttributesFormValidationService)(ɵngcc0.ɵɵinject(ɵngcc1.FormBuilder)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointAttributesFormValidationService, [{
        type: i0.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: ɵngcc1.FormBuilder }]; }, null); })();
        return DatapointAttributesFormValidationService;
    }());
    DatapointAttributesFormValidationService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DatapointAttributesFormValidationService_Factory() { return new DatapointAttributesFormValidationService(i0__namespace.ɵɵinject(i1__namespace.FormBuilder)); }, token: DatapointAttributesFormValidationService, providedIn: "root" });
    DatapointAttributesFormValidationService.ctorParameters = function () { return [
        { type: i1.FormBuilder }
    ]; };

    var DatapointAttributesFormComponent = /** @class */ (function () {
        function DatapointAttributesFormComponent(formValidations) {
            this.formValidations = formValidations;
            this.showTarget = true;
            this.showRange = true;
            this.showYellowRange = true;
            this.showRedRange = true;
            this.showChart = true;
            this.showFormIfTemplateWasSelected = false;
            this.rawValue = {};
            this.CHART_RENDER_TYPES = CHART_RENDER_TYPES;
            this.CHART_LINE_TYPES = CHART_LINE_TYPES;
            this.AXIS_TYPES = AXIS_TYPES;
            this.customValidationErrorMessages = {};
            this.formGroup = this.formValidations.getDefaultFormGroup();
            this.setSubForms();
        }
        DatapointAttributesFormComponent.prototype.validate = function (control) {
            var _a;
            return ((_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.valid) ? null : { formInvalid: {} };
        };
        DatapointAttributesFormComponent.prototype.writeValue = function (obj) {
            this.rawValue = obj || {};
            if (obj) {
                this.formGroup.patchValue(this.formValidations.convertToFormGroupFormat(obj), {
                    emitEvent: false
                });
            }
        };
        DatapointAttributesFormComponent.prototype.registerOnChange = function (fn) {
            var _this = this;
            this.formGroup.valueChanges
                .pipe(operators.map(this.formValidations.convertToBackendFormat), operators.map(function (formValue) { return Object.assign(_this.rawValue, formValue); }))
                .subscribe(fn);
        };
        DatapointAttributesFormComponent.prototype.registerOnTouched = function (fn) {
            this.formGroup.valueChanges.pipe(operators.take(1)).subscribe(fn);
        };
        DatapointAttributesFormComponent.prototype.setDisabledState = function (isDisabled) {
            isDisabled ? this.formGroup.disable() : this.formGroup.enable();
        };
        DatapointAttributesFormComponent.prototype.setSubForms = function () {
            if (!this.formGroup) {
                this.range = this.yellowRange = this.redRange = this.chart = undefined;
                return;
            }
            this.range = this.formGroup.get('range');
            this.yellowRange = this.formGroup.get('yellowRange');
            this.redRange = this.formGroup.get('redRange');
            this.chart = this.formGroup.get('chart');
        };
DatapointAttributesFormComponent.ɵfac = function DatapointAttributesFormComponent_Factory(t) { return new (t || DatapointAttributesFormComponent)(ɵngcc0.ɵɵdirectiveInject(DatapointAttributesFormValidationService)); };
DatapointAttributesFormComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointAttributesFormComponent, selectors: [["c8y-datapoint-attributes-form"]], inputs: { showTarget: "showTarget", showRange: "showRange", showYellowRange: "showYellowRange", showRedRange: "showRedRange", showChart: "showChart", showFormIfTemplateWasSelected: "showFormIfTemplateWasSelected" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: i1.NG_VALUE_ACCESSOR,
                useExisting: i0.forwardRef(function () { return DatapointAttributesFormComponent; }),
                multi: true
            },
            {
                provide: i1.NG_VALIDATORS,
                useExisting: i0.forwardRef(function () { return DatapointAttributesFormComponent; }),
                multi: true
            }
        ])], decls: 1, vars: 1, consts: [[3, "formGroup", 4, "ngIf"], [3, "formGroup"], ["class", "c8y-fieldset", 4, "ngIf"], ["class", "c8y-fieldset", "formGroupName", "yellowRange", 4, "ngIf"], ["class", "c8y-fieldset", "formGroupName", "redRange", 4, "ngIf"], ["class", "c8y-fieldset", "formGroupName", "chart", 4, "ngIf"], [1, "c8y-fieldset"], ["translate", ""], [1, "row"], ["class", "col-md-6", 4, "ngIf"], [1, "col-md-6"], ["name", "label", "formControlName", "label", 1, "form-control", 3, "placeholder"], [3, "show"], [3, "name", "text", 4, "ngFor", "ngForOf"], [3, "name", "text"], ["name", "unit", "formControlName", "unit", 1, "form-control", 3, "placeholder"], [3, "ngClass"], ["type", "number", "name", "target", "formControlName", "target", 1, "form-control", 3, "placeholder"], ["formGroupName", "range", 1, "row"], ["type", "number", "name", "min", "formControlName", "min", 1, "form-control", 3, "placeholder"], ["type", "number", "name", "max", "formControlName", "max", 1, "form-control", 3, "placeholder"], ["formGroupName", "yellowRange", 1, "c8y-fieldset"], ["formGroupName", "redRange", 1, "c8y-fieldset"], ["formGroupName", "chart", 1, "c8y-fieldset"], [1, "tight-grid"], [1, "col-xs-6", "col-sm-4"], ["for", "display"], [1, "btn-clean", "text-info", 3, "popover", "placement", "triggers", "container"], ["c8yIcon", "question-circle-o"], [1, "c8y-select-wrapper"], ["formControlName", "renderType", 1, "form-control"], [3, "ngValue", 4, "ngFor", "ngForOf"], ["for", "chartType", "translate", ""], ["formControlName", "lineType", 1, "form-control"], ["for", "yAxis", "translate", ""], ["formControlName", "yAxisType", 1, "form-control"], [3, "ngValue"]], template: function DatapointAttributesFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DatapointAttributesFormComponent_div_0_Template, 6, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.rawValue == null ? null : ctx.rawValue.__template) || ctx.showFormIfTemplateWasSelected);
    } }, directives: [ɵngcc2.NgIf, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc3.C8yTranslateDirective, ɵngcc3.FormGroupComponent, ɵngcc1.DefaultValueAccessor, ɵngcc3.RequiredInputPlaceholderDirective, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc3.MessagesComponent, ɵngcc2.NgForOf, ɵngcc3.MessageDirective, ɵngcc2.NgClass, ɵngcc1.NumberValueAccessor, ɵngcc1.FormGroupName, ɵngcc4.PopoverDirective, ɵngcc3.IconDirective, ɵngcc1.SelectControlValueAccessor, ɵngcc1.NgSelectOption, ɵngcc1.ɵNgSelectMultipleOption], pipes: [ɵngcc3.C8yTranslatePipe, ɵngcc2.KeyValuePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointAttributesFormComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-datapoint-attributes-form',
                template: "<div [formGroup]=\"formGroup\" *ngIf=\"!rawValue?.__template || showFormIfTemplateWasSelected\">\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"formGroup.controls?.label || formGroup.controls?.unit || formGroup.controls?.target\">\n    <legend translate>Details</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.label\">\n        <c8y-form-group>\n          <label translate>Label</label>\n          <input\n            class=\"form-control\"\n            name=\"label\"\n            formControlName=\"label\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'Temperature' }\"\n          />\n          <c8y-messages [show]=\"formGroup.controls.label.touched && formGroup.controls.label.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['label'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.unit\">\n        <c8y-form-group>\n          <label translate>Unit</label>\n          <input\n            class=\"form-control\"\n            name=\"unit\"\n            formControlName=\"unit\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: '\u00BAC' }\"\n          />\n          <c8y-messages [show]=\"formGroup.controls.unit.touched && formGroup.controls.unit.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['unit'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.target && showTarget\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || formGroup.controls.target.touched) &&\n              formGroup.controls?.target?.errors\n          }\"\n        >\n          <label translate>Target</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"target\"\n            formControlName=\"target\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 25 }\"\n          />\n          <c8y-messages\n            [show]=\"\n              (range?.touched || formGroup.controls.target.touched) &&\n              formGroup.controls.target.errors\n            \"\n          >\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['target'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"range && showRange\">\n    <legend translate>Range</legend>\n    <div class=\"row\" formGroupName=\"range\">\n      <div class=\"col-md-6\">\n        <c8y-form-group [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.min?.errors }\">\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 0 }\"\n          />\n          <c8y-messages [show]=\"range?.touched && range.controls?.min?.errors\"> </c8y-messages>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-6\">\n        <c8y-form-group [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.max?.errors }\">\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n          />\n          <c8y-messages [show]=\"range?.touched && range.controls?.max?.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['max'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" formGroupName=\"yellowRange\" *ngIf=\"yellowRange && showYellowRange\">\n    <legend translate>Yellow range</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || yellowRange?.touched) && yellowRange?.controls?.min?.errors\n          }\"\n        >\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 50 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.min?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || yellowRange?.touched) && yellowRange?.controls?.max?.errors\n          }\"\n        >\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.max?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" formGroupName=\"redRange\" *ngIf=\"redRange && showRedRange\">\n    <legend translate>Red range</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error': (range?.touched || redRange?.touched) && redRange?.controls?.min?.errors\n          }\"\n        >\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.min?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error': (range?.touched || redRange?.touched) && redRange?.controls?.max?.errors\n          }\"\n        >\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.max?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"chart && showChart\" formGroupName=\"chart\">\n    <legend translate>Chart</legend>\n    <div class=\"tight-grid\">\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"display\">\n            {{ 'Display' | translate }}\n            <button\n              class=\"btn-clean text-info\"\n              popover=\"{{ 'Value displayed when data is aggregated' | translate }}\"\n              [placement]=\"'right'\"\n              [triggers]=\"'focus'\"\n              [container]=\"'body'\"\n            >\n              <i c8yIcon=\"question-circle-o\"></i>\n            </button>\n          </label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"renderType\">\n              <option *ngFor=\"let type of CHART_RENDER_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"chartType\" translate>Chart type</label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"lineType\">\n              <option *ngFor=\"let type of CHART_LINE_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n            <span></span>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"yAxis\" translate>Y Axis</label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"yAxisType\">\n              <option *ngFor=\"let type of AXIS_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n            <span></span>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n</div>\n",
                providers: [
                    {
                        provide: i1.NG_VALUE_ACCESSOR,
                        useExisting: i0.forwardRef(function () { return DatapointAttributesFormComponent; }),
                        multi: true
                    },
                    {
                        provide: i1.NG_VALIDATORS,
                        useExisting: i0.forwardRef(function () { return DatapointAttributesFormComponent; }),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: DatapointAttributesFormValidationService }]; }, { showTarget: [{
            type: i0.Input
        }], showRange: [{
            type: i0.Input
        }], showYellowRange: [{
            type: i0.Input
        }], showRedRange: [{
            type: i0.Input
        }], showChart: [{
            type: i0.Input
        }], showFormIfTemplateWasSelected: [{
            type: i0.Input
        }] }); })();
        return DatapointAttributesFormComponent;
    }());
    DatapointAttributesFormComponent.ctorParameters = function () { return [
        { type: DatapointAttributesFormValidationService }
    ]; };
    DatapointAttributesFormComponent.propDecorators = {
        showTarget: [{ type: i0.Input }],
        showRange: [{ type: i0.Input }],
        showYellowRange: [{ type: i0.Input }],
        showRedRange: [{ type: i0.Input }],
        showChart: [{ type: i0.Input }],
        showFormIfTemplateWasSelected: [{ type: i0.Input }]
    };

    var DATAPOINT_LIBRARY_FRAGMENT = 'c8y_Kpi';

    var DatapointLibraryService = /** @class */ (function () {
        function DatapointLibraryService(inventory, appState, measurements, color) {
            var _this = this;
            this.inventory = inventory;
            this.appState = appState;
            this.measurements = measurements;
            this.color = color;
            this.appState.currentUser.pipe(operators.filter(function (user) { return !user; })).subscribe(function () {
                _this.cache = undefined;
            });
        }
        DatapointLibraryService.prototype.getAllDatapointLibraryEntriesCached = function (forceCacheRenew) {
            if (forceCacheRenew === void 0) { forceCacheRenew = false; }
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    if (forceCacheRenew) {
                        this.cache = undefined;
                    }
                    if (!this.cache) {
                        this.cache = this.getAllDatapointLibraryEntries();
                    }
                    return [2 /*return*/, this.cache];
                });
            });
        };
        DatapointLibraryService.prototype.getFirstDatapointLibraryPage = function () {
            return __awaiter(this, void 0, void 0, function () {
                var filterObj;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            filterObj = {
                                currentPage: 1,
                                pageSize: 50,
                                fragmentType: DATAPOINT_LIBRARY_FRAGMENT,
                                withTotalPages: true
                            };
                            return [4 /*yield*/, this.inventory.list(filterObj)];
                        case 1: return [2 /*return*/, (_b.sent())];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.getAllDatapointLibraryItemsCached = function () {
            return __awaiter(this, void 0, void 0, function () {
                var res;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            if (!this.cache) {
                                this.cache = this.getAllDatapointLibraryEntries();
                            }
                            return [4 /*yield*/, this.cache];
                        case 1:
                            res = _b.sent();
                            return [2 /*return*/, res.map(function (tmp) { return tmp[DATAPOINT_LIBRARY_FRAGMENT]; })];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.updateDatapoints = function (datapoints, skipUpdatingTarget) {
            if (skipUpdatingTarget === void 0) { skipUpdatingTarget = false; }
            return __awaiter(this, void 0, void 0, function () {
                var currentTargetsPromise, _b, currentTemplates, currentTargets, currentTemplateVersions, _loop_1, datapoints_1, datapoints_1_1, datapoint;
                var e_1, _c;
                var _this = this;
                return __generator(this, function (_d) {
                    switch (_d.label) {
                        case 0:
                            if (!Array.isArray(datapoints)) {
                                return [2 /*return*/, datapoints];
                            }
                            currentTargetsPromise = !skipUpdatingTarget ? this.getCurrentVersionOfTargetsFromDatapoints(datapoints) : Promise.resolve([]);
                            return [4 /*yield*/, Promise.all([
                                    this.getCurrentTemplatesFromDatapoints(datapoints),
                                    currentTargetsPromise
                                ])];
                        case 1:
                            _b = __read.apply(void 0, [_d.sent(), 2]), currentTemplates = _b[0], currentTargets = _b[1];
                            currentTemplateVersions = currentTemplates
                                .map(function (tmp) { return _this.mapDatapointLibraryEntry(tmp); })
                                .filter(function (tmp) { return !!tmp; });
                            _loop_1 = function (datapoint) {
                                var fragment = datapoint.fragment, series = datapoint.series, __active = datapoint.__active, __target = datapoint.__target, color = datapoint.color, label = datapoint.label, __template = datapoint.__template;
                                var foundCurrentTemplateVersion = currentTemplateVersions.find(function (tmp) { return tmp.__template === datapoint.__template; });
                                if (foundCurrentTemplateVersion) {
                                    Object.assign(datapoint, foundCurrentTemplateVersion);
                                    Object.assign(datapoint, {
                                        fragment: fragment,
                                        series: series,
                                        __active: __active,
                                        __target: __target,
                                        color: color,
                                        label: label,
                                        __template: __template
                                    });
                                }
                                var foundCurrentTarget = currentTargets.find(function (target) { return target.id === (__target === null || __target === void 0 ? void 0 : __target.id); });
                                if (foundCurrentTarget) {
                                    var id = foundCurrentTarget.id, name = foundCurrentTarget.name;
                                    datapoint.__target = { id: id, name: name };
                                }
                            };
                            try {
                                for (datapoints_1 = __values(datapoints), datapoints_1_1 = datapoints_1.next(); !datapoints_1_1.done; datapoints_1_1 = datapoints_1.next()) {
                                    datapoint = datapoints_1_1.value;
                                    _loop_1(datapoint);
                                }
                            }
                            catch (e_1_1) { e_1 = { error: e_1_1 }; }
                            finally {
                                try {
                                    if (datapoints_1_1 && !datapoints_1_1.done && (_c = datapoints_1.return)) _c.call(datapoints_1);
                                }
                                finally { if (e_1) throw e_1.error; }
                            }
                            return [2 /*return*/, datapoints];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.getDatapointsOfAsset = function (parentReference, ignoreDatapointTemplates) {
            return __awaiter(this, void 0, void 0, function () {
                var _b, kpiResponse, details, kpis, sortedDetails;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0: return [4 /*yield*/, Promise.all([
                                (ignoreDatapointTemplates
                                    ? Promise.resolve(null)
                                    : this.inventory.assetKPIsList(parentReference, { pageSize: i2.MAX_PAGE_SIZE })),
                                this.inventory.getMeasurementsAndSeries(parentReference)
                            ])];
                        case 1:
                            _b = __read.apply(void 0, [_c.sent(), 2]), kpiResponse = _b[0], details = _b[1];
                            kpis = kpiResponse && kpiResponse.data ? kpiResponse.data : [];
                            sortedDetails = lodashEs.sortBy(details, ['fragment', 'series']);
                            return [4 /*yield*/, this.combineFragmentSeriesTuplesWithDetails(sortedDetails, parentReference, kpis)];
                        case 2: return [2 /*return*/, _c.sent()];
                    }
                });
            });
        };
        /**
         * Requests the last measurement with the given fragment and series to extract it's unit.
         * If the source attribute is provided, it will check the last measurement for this specific source.
         * @returns found unit or an empty string instead
         */
        DatapointLibraryService.prototype.guessUnitOfDatapoint = function (fragment, series, source) {
            return __awaiter(this, void 0, void 0, function () {
                var measurementfilter, lastMeasurements, measurement, pathToUnit, unit, _a_1;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            measurementfilter = {
                                valueFragmentSeries: series,
                                valueFragmentType: fragment,
                                pageSize: 1,
                                revert: true,
                                dateFrom: '1970-01-01'
                            };
                            if (source === null || source === void 0 ? void 0 : source.id) {
                                measurementfilter.source = source === null || source === void 0 ? void 0 : source.id;
                            }
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.measurements.list(measurementfilter)];
                        case 2:
                            lastMeasurements = (_b.sent()).data;
                            measurement = lastMeasurements[0];
                            if (measurement) {
                                pathToUnit = fragment + "." + series + ".unit";
                                unit = lodashEs.get(measurement, pathToUnit);
                                if ((unit === null || unit === void 0 ? void 0 : unit.length) && typeof unit === 'string') {
                                    return [2 /*return*/, unit];
                                }
                            }
                            return [3 /*break*/, 4];
                        case 3:
                            _a_1 = _b.sent();
                            return [3 /*break*/, 4];
                        case 4: return [2 /*return*/, ''];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.combineFragmentSeriesTuplesWithDetails = function (tuples, target, kpis) {
            return __awaiter(this, void 0, void 0, function () {
                var datapoints;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            datapoints = tuples.map(function (tuple) {
                                var _a;
                                var foundDatapointLibraryEntry = kpis.find(function (kpi) { return kpi[DATAPOINT_LIBRARY_FRAGMENT] &&
                                    kpi[DATAPOINT_LIBRARY_FRAGMENT].fragment === tuple.fragment &&
                                    kpi[DATAPOINT_LIBRARY_FRAGMENT].series === tuple.series; });
                                var datapoint = _this.mapDatapointLibraryEntry(foundDatapointLibraryEntry) || tuple;
                                if (!datapoint.label) {
                                    datapoint.label = datapoint.fragment + " \u2192 " + datapoint.series;
                                }
                                if (!((_a = datapoint.unit) === null || _a === void 0 ? void 0 : _a.length)) {
                                    datapoint.unit = '';
                                }
                                datapoint.__target = target;
                                return datapoint;
                            });
                            return [4 /*yield*/, this.assignColorToDatapoints(datapoints)];
                        case 1:
                            _b.sent();
                            return [2 /*return*/, datapoints];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.assignColorToDatapoints = function (datapoints) {
            return __awaiter(this, void 0, void 0, function () {
                var datapointsWithoutColor;
                var _this = this;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            datapointsWithoutColor = datapoints.filter(function (datapoint) { return !datapoint.color; });
                            return [4 /*yield*/, Promise.all(datapointsWithoutColor.map(function (datapoint) { return _this.color.generateColorForDatapoint(datapoint.fragment, datapoint.series).then(function (color) { return (datapoint.color = color); }); }))];
                        case 1:
                            _b.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.getAllDatapointLibraryEntries = function () {
            return __awaiter(this, void 0, void 0, function () {
                var entries, filterObj, res;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            entries = new Array();
                            filterObj = {
                                currentPage: 1,
                                pageSize: i2.MAX_PAGE_SIZE,
                                fragmentType: DATAPOINT_LIBRARY_FRAGMENT
                            };
                            return [4 /*yield*/, this.inventory.list(filterObj)];
                        case 1:
                            res = _b.sent();
                            _b.label = 2;
                        case 2:
                            if (!res.data.length) return [3 /*break*/, 4];
                            entries.push.apply(entries, __spreadArray([], __read(res.data)));
                            if (res.data.length < res.paging.pageSize) {
                                return [3 /*break*/, 4];
                            }
                            return [4 /*yield*/, res.paging.next()];
                        case 3:
                            res = _b.sent();
                            return [3 /*break*/, 2];
                        case 4: return [2 /*return*/, entries];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.mapDatapointLibraryEntry = function (entry) {
            if (!entry || !entry[DATAPOINT_LIBRARY_FRAGMENT]) {
                return null;
            }
            var datapoint = entry[DATAPOINT_LIBRARY_FRAGMENT];
            datapoint.__template = entry.id;
            return datapoint;
        };
        DatapointLibraryService.prototype.getCurrentTemplatesFromDatapoints = function (datapoints) {
            return __awaiter(this, void 0, void 0, function () {
                var datapointsWithTemplateId, usedTemplateIds;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            datapointsWithTemplateId = datapoints.filter(function (dp) { return !!dp.__template; });
                            usedTemplateIds = datapointsWithTemplateId.map(function (dp) { return dp.__template; });
                            return [4 /*yield*/, this.getMOsByIds(usedTemplateIds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.getCurrentVersionOfTargetsFromDatapoints = function (datapoints) {
            return __awaiter(this, void 0, void 0, function () {
                var datapointsWithTarget, usedTargetIds;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            datapointsWithTarget = datapoints.filter(function (dp) { var _a; return !!((_a = dp.__target) === null || _a === void 0 ? void 0 : _a.id); });
                            usedTargetIds = datapointsWithTarget.map(function (dp) { return dp.__target.id; });
                            return [4 /*yield*/, this.getMOsByIds(usedTargetIds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        DatapointLibraryService.prototype.getMOsByIds = function (ids) {
            return __awaiter(this, void 0, void 0, function () {
                var uniqManagedObjectIds, managedObjects, _a_2;
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0:
                            uniqManagedObjectIds = lodashEs.uniq(ids);
                            if (!uniqManagedObjectIds.length) {
                                return [2 /*return*/, []];
                            }
                            _b.label = 1;
                        case 1:
                            _b.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, this.inventory.list({
                                    ids: uniqManagedObjectIds.join(),
                                    pageSize: i2.MAX_PAGE_SIZE
                                })];
                        case 2:
                            managedObjects = (_b.sent()).data;
                            return [2 /*return*/, managedObjects];
                        case 3:
                            _a_2 = _b.sent();
                            // Fail silently in case we are not able to talk to the inventory API.
                            // Should only be reached in case of an server side error.
                            // instead of failing, pretend like we didn't receive any items.
                            console.warn("Failed to get the current version of the following managedObjects: " + uniqManagedObjectIds.join() + ".");
                            return [2 /*return*/, []];
                        case 4: return [2 /*return*/];
                    }
                });
            });
        };
DatapointLibraryService.ɵfac = function DatapointLibraryService_Factory(t) { return new (t || DatapointLibraryService)(ɵngcc0.ɵɵinject(ɵngcc5.InventoryService), ɵngcc0.ɵɵinject(ɵngcc3.AppStateService), ɵngcc0.ɵɵinject(ɵngcc5.MeasurementService), ɵngcc0.ɵɵinject(ɵngcc3.ColorService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointLibraryService, [{
        type: i0.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: ɵngcc5.InventoryService }, { type: ɵngcc3.AppStateService }, { type: ɵngcc5.MeasurementService }, { type: ɵngcc3.ColorService }]; }, null); })();
        return DatapointLibraryService;
    }());
    DatapointLibraryService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DatapointLibraryService_Factory() { return new DatapointLibraryService(i0__namespace.ɵɵinject(i1__namespace$1.InventoryService), i0__namespace.ɵɵinject(i2__namespace.AppStateService), i0__namespace.ɵɵinject(i3__namespace.MeasurementService), i0__namespace.ɵɵinject(i2__namespace.ColorService)); }, token: DatapointLibraryService, providedIn: "root" });
    DatapointLibraryService.ctorParameters = function () { return [
        { type: client.InventoryService },
        { type: i2.AppStateService },
        { type: client.MeasurementService },
        { type: i2.ColorService }
    ]; };

    var DatapointSelectorModalComponent = /** @class */ (function () {
        function DatapointSelectorModalComponent(bsModal, elementRef) {
            var _this = this;
            this.bsModal = bsModal;
            this.elementRef = elementRef;
            this.allowChangingContext = true;
            this.allowSearch = true;
            this.allowDatapointsFromMultipleAssets = true;
            this.selectedDatapoints = new Array();
            this.title = i2.gettext('Data point selector');
            this.saveButtonLabel = i2.gettext('Add data points');
            this.guessDatapointUnit = true;
            this.defaultActiveState = true;
            this.assetSelectorConfig = {};
            this.result = new Promise(function (resolve, reject) {
                _this.save = resolve;
                _this.cancel = reject;
            });
        }
        DatapointSelectorModalComponent.prototype.ngOnInit = function () {
            this.applyWorkaroundForAngularJSModalsThatMightBeOpenedInParallel();
        };
        DatapointSelectorModalComponent.prototype.saveChanges = function () {
            this.bsModal.hide();
            this.save(this.selectedDatapoints);
        };
        DatapointSelectorModalComponent.prototype.close = function () {
            this.bsModal.hide();
            this.cancel();
        };
        /**
         * changes the z-index of the modal, to make sure this modal is on top.
         * required as angularJS modals are placing them selves on top via adjusting z-index.
         * while angular modals use the order within the dom for this..
         */
        DatapointSelectorModalComponent.prototype.applyWorkaroundForAngularJSModalsThatMightBeOpenedInParallel = function () {
            var modalContainer = lodashEs.get(this.elementRef, 'nativeElement.parentElement.parentElement.parentElement');
            modalContainer.style.zIndex = '1060';
        };
DatapointSelectorModalComponent.ɵfac = function DatapointSelectorModalComponent_Factory(t) { return new (t || DatapointSelectorModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc6.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
DatapointSelectorModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointSelectorModalComponent, selectors: [["c8y-datapoint-selector-modal"]], decls: 14, vars: 20, consts: [[1, "modal-header", "separator"], [1, "text-medium"], [1, "modal-inner-scroll", "modal-inner-scroll--fixed"], [3, "contextAsset", "guessDatapointUnit", "allowDatapointsFromMultipleAssets", "allowChangingContext", "defaultActiveState", "allowSearch", "ngModel", "ngModelChange"], [1, "modal-footer"], ["type", "button", "translate", "", 1, "btn", "btn-default", 3, "title", "click"], [1, "btn", "btn-primary", 3, "title", "disabled", "click"]], template: function DatapointSelectorModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "h4", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "div", 2);
        ɵngcc0.ɵɵelementStart(5, "c8y-datapoint-selector", 3);
        ɵngcc0.ɵɵlistener("ngModelChange", function DatapointSelectorModalComponent_Template_c8y_datapoint_selector_ngModelChange_5_listener($event) { return ctx.selectedDatapoints = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵelementStart(7, "button", 5);
        ɵngcc0.ɵɵlistener("click", function DatapointSelectorModalComponent_Template_button_click_7_listener() { return ctx.close(); });
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵtext(9, " Cancel ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "button", 6);
        ɵngcc0.ɵɵlistener("click", function DatapointSelectorModalComponent_Template_button_click_10_listener() { return ctx.saveChanges(); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 12, ctx.title));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("contextAsset", ctx.contextAsset)("guessDatapointUnit", ctx.guessDatapointUnit)("allowDatapointsFromMultipleAssets", ctx.allowDatapointsFromMultipleAssets)("allowChangingContext", ctx.allowChangingContext)("defaultActiveState", ctx.defaultActiveState)("allowSearch", ctx.allowSearch)("ngModel", ctx.selectedDatapoints);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(8, 14, "Cancel"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 16, ctx.saveButtonLabel))("disabled", !(ctx.selectedDatapoints == null ? null : ctx.selectedDatapoints.length));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(13, 18, ctx.saveButtonLabel), " ");
    } }, directives: function () { return [DatapointSelectorComponent, ɵngcc1.NgControlStatus, ɵngcc1.NgModel, ɵngcc3.C8yTranslateDirective]; }, pipes: function () { return [ɵngcc3.C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectorModalComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-datapoint-selector-modal',
                template: "<div class=\"modal-header separator\">\n  <h4 class=\"text-medium\">{{ title | translate }}</h4>\n</div>\n<div class=\"modal-inner-scroll modal-inner-scroll--fixed\">\n  <c8y-datapoint-selector\n    [contextAsset]=\"contextAsset\"\n    [guessDatapointUnit]=\"guessDatapointUnit\"\n    [allowDatapointsFromMultipleAssets]=\"allowDatapointsFromMultipleAssets\"\n    [allowChangingContext]=\"allowChangingContext\"\n    [defaultActiveState]=\"defaultActiveState\"\n    [allowSearch]=\"allowSearch\"\n    [(ngModel)]=\"selectedDatapoints\"\n  ></c8y-datapoint-selector>\n</div>\n<div class=\"modal-footer\">\n  <button\n    type=\"button\"\n    [title]=\"'Cancel' | translate\"\n    class=\"btn btn-default\"\n    (click)=\"close()\"\n    translate\n  >\n    Cancel\n  </button>\n  <button\n    [title]=\"saveButtonLabel | translate\"\n    class=\"btn btn-primary\"\n    [disabled]=\"!this.selectedDatapoints?.length\"\n    (click)=\"saveChanges()\"\n  >\n    {{ saveButtonLabel | translate }}\n  </button>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc6.BsModalRef }, { type: ɵngcc0.ElementRef }]; }, null); })();
        return DatapointSelectorModalComponent;
    }());
    DatapointSelectorModalComponent.ctorParameters = function () { return [
        { type: i1$2.BsModalRef },
        { type: i0.ElementRef }
    ]; };

    var DatapointSelectorService = /** @class */ (function () {
        function DatapointSelectorService(modal) {
            this.modal = modal;
        }
        DatapointSelectorService.prototype.selectDataPoints = function (initialState) {
            if (initialState === void 0) { initialState = {}; }
            var modal = this.modal.show(DatapointSelectorModalComponent, {
                ignoreBackdropClick: true,
                keyboard: false,
                initialState: initialState,
                class: 'modal-lg'
            });
            var content = modal.content;
            return content.result;
        };
DatapointSelectorService.ɵfac = function DatapointSelectorService_Factory(t) { return new (t || DatapointSelectorService)(ɵngcc0.ɵɵinject(ɵngcc6.BsModalService)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectorService, [{
        type: i0.Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: ɵngcc6.BsModalService }]; }, null); })();
        return DatapointSelectorService;
    }());
    DatapointSelectorService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function DatapointSelectorService_Factory() { return new DatapointSelectorService(i0__namespace.ɵɵinject(i1__namespace$2.BsModalService)); }, token: DatapointSelectorService, providedIn: "root" });
    DatapointSelectorService.ctorParameters = function () { return [
        { type: i1$2.BsModalService }
    ]; };

    var DatapointSelectionListComponent = /** @class */ (function () {
        function DatapointSelectionListComponent(datapointSelector, datapointLibrary, formBuilder, widgetComponent) {
            var _this = this;
            this.datapointSelector = datapointSelector;
            this.datapointLibrary = datapointLibrary;
            this.formBuilder = formBuilder;
            this.widgetComponent = widgetComponent;
            this.actions = [];
            this.allowDragAndDrop = true;
            this.config = {};
            this.defaultFormOptions = {};
            this.minActiveCount = 1;
            this.resolveContext = true;
            this.maxActiveCountReached = false;
            this.usedValidators = {};
            this.formArray = this.formBuilder.array([]);
            this.isValid = this.formArray.statusChanges.pipe(operators.map(function (status) { return status === 'VALID'; }));
            this.datapointLibraryEntries = rxjs.from(this.datapointLibrary.getFirstDatapointLibraryPage()).pipe(operators.shareReplay());
            this.change = this.formArray.valueChanges.pipe(operators.map(function (res) { return _this.transformValue(res); }));
        }
        DatapointSelectionListComponent.prototype.ngOnChanges = function (changes) {
            if (!changes.maxActiveCount && !changes.minActiveCount) {
                return;
            }
            if (changes.maxActiveCount) {
                this.usedValidators.maxActiveCount = i2.C8yValidators.maxActiveCount(this.maxActiveCount);
            }
            if (changes.minActiveCount) {
                this.usedValidators.minActiveCount = i2.C8yValidators.minActiveCount(this.minActiveCount);
            }
            var validators = Object.values(this.usedValidators);
            this.formArray.setValidators(validators);
        };
        DatapointSelectionListComponent.prototype.registerOnTouched = function (fn) {
            this.formArray.valueChanges.pipe(operators.take(1)).subscribe(fn);
        };
        DatapointSelectionListComponent.prototype.validate = function (control) {
            return this.formArray.valid ? null : { formInvalid: {} };
        };
        DatapointSelectionListComponent.prototype.ngOnInit = function () {
            var _a;
            var context = (_a = this.widgetComponent) === null || _a === void 0 ? void 0 : _a.context;
            if ((context === null || context === void 0 ? void 0 : context.id) && this.resolveContext) {
                var name = context.name, id = context.id, c8y_IsDevice = context.c8y_IsDevice;
                this.config.contextAsset = { name: name, id: id, c8y_IsDevice: c8y_IsDevice };
            }
        };
        DatapointSelectionListComponent.prototype.writeValue = function (obj) {
            var _this = this;
            this.formArray.clear();
            if (obj === null || obj === void 0 ? void 0 : obj.length) {
                obj.forEach(function (val) {
                    var formgroup = _this.formBuilder.group({ details: [] });
                    formgroup.patchValue({ details: val });
                    _this.formArray.push(formgroup);
                });
            }
            this.calculateMaxActiveCount();
        };
        DatapointSelectionListComponent.prototype.registerOnChange = function (fn) {
            var _this = this;
            this.formArray.valueChanges
                .pipe(operators.map(function (res) { return _this.transformValue(res); }), 
            // check maxActiveCount
            operators.tap(function (res) {
                _this.calculateMaxActiveCount();
            }))
                .subscribe(fn);
        };
        DatapointSelectionListComponent.prototype.add = function () {
            var _this = this;
            var _a, _b, _c;
            var allowChangingContext = !((_a = this.widgetComponent) === null || _a === void 0 ? void 0 : _a.isDeviceTypeDashboard) && ((_b = this.config) === null || _b === void 0 ? void 0 : _b.allowChangingContext) !== false;
            this.datapointSelector
                .selectDataPoints(Object.assign(Object.assign({}, (this.config || {})), { selectedDatapoints: this.transformValue(this.formArray.value), defaultActiveState: true, allowChangingContext: allowChangingContext, allowSearch: !((_c = this.config) === null || _c === void 0 ? void 0 : _c.contextAsset) }))
                .then(function (result) {
                _this.writeValue(result);
            }, function (error) {
                // nothing to do, modal was closed
            });
        };
        DatapointSelectionListComponent.prototype.onItemRemoved = function (index) {
            this.formArray.removeAt(index);
        };
        DatapointSelectionListComponent.prototype.drop = function (event) {
            var currentSorting = this.formArray.value;
            dragDrop.moveItemInArray(currentSorting, event.previousIndex, event.currentIndex);
            this.formArray.setValue(currentSorting);
        };
        DatapointSelectionListComponent.prototype.transformValue = function (formArrayValue) {
            if (!formArrayValue) {
                return [];
            }
            return formArrayValue.map(function (tmp) { return Object.assign.apply(Object, __spreadArray([{}], __read(Object.values(tmp)))); });
        };
        DatapointSelectionListComponent.prototype.calculateMaxActiveCount = function () {
            if (this.maxActiveCount) {
                var currentlyActive = this.formArray.value.filter(function (tmp) { var _a; return (_a = tmp.details) === null || _a === void 0 ? void 0 : _a.__active; }).length;
                this.maxActiveCountReached = currentlyActive >= this.maxActiveCount;
            }
            this.maxActiveCountReached = false;
        };
DatapointSelectionListComponent.ɵfac = function DatapointSelectionListComponent_Factory(t) { return new (t || DatapointSelectionListComponent)(ɵngcc0.ɵɵdirectiveInject(DatapointSelectorService), ɵngcc0.ɵɵdirectiveInject(DatapointLibraryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.WidgetConfigComponent, 8)); };
DatapointSelectionListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointSelectionListComponent, selectors: [["c8y-datapoint-selection-list"]], inputs: { actions: "actions", allowDragAndDrop: "allowDragAndDrop", config: "config", defaultFormOptions: "defaultFormOptions", minActiveCount: "minActiveCount", resolveContext: "resolveContext", maxActiveCount: "maxActiveCount" }, outputs: { isValid: "isValid", change: "change" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: i1.NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: i0.forwardRef(function () { return DatapointSelectionListComponent; })
            },
            {
                provide: i1.NG_VALIDATORS,
                useExisting: i0.forwardRef(function () { return DatapointSelectionListComponent; }),
                multi: true
            }
        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c9, decls: 15, vars: 8, consts: [[1, "card-header", "separator", "sticky-top", "bg-component"], ["translate", "", 1, "card-title", "h4"], ["cdkDropList", "", 1, "flex-grow", "ff-scroll-fix", "cdk-droplist", 3, "cdkDropListDisabled", "cdkDropListDropped"], ["class", "alert alert-info", "role", "alert", "ngNonBindable", "", "translate", "", 3, "translateParams", 4, "ngIf"], ["class", "c8y-empty-state", 4, "ngIf"], [3, "formGroup", 4, "ngFor", "ngForOf"], [1, "card-footer", "bg-component", "sticky-bottom", "separator"], [1, "btn", "btn-default", "btn-sm", 3, "title", "click"], ["c8yIcon", "plus-circle"], ["translate", ""], ["role", "alert", "translate", "", 1, "alert", "alert-info", 3, "translateParams"], [1, "c8y-empty-state"], [1, "c8y-icon", "c8y-icon-data-points", "c8y-icon-duocolor"], [3, "formGroup"], ["formControlName", "details", "cdkDrag", "", 1, "d-block", 3, "defaultFormOptions", "activeToggleDisabled", "showActiveToggle", "showAddRemoveButton", "showOptions", "editable", "colorPickerDisabled", "actions", "optionToRemove", "datapointLibraryEntries", "hasUnlinkTemplateOption", "removed"], ["cdkDragHandle", ""], ["c8yIcon", "drag-reorder"]], template: function DatapointSelectionListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c8);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵtext(2, "Data points");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "c8y-list-group", 2);
        ɵngcc0.ɵɵlistener("cdkDropListDropped", function DatapointSelectionListComponent_Template_c8y_list_group_cdkDropListDropped_3_listener($event) { return ctx.drop($event); });
        ɵngcc0.ɵɵtemplate(4, DatapointSelectionListComponent_div_4_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(5, DatapointSelectionListComponent_div_5_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵtemplate(7, DatapointSelectionListComponent_div_7_Template, 8, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(8, DatapointSelectionListComponent_div_8_Template, 4, 12, "div", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵlistener("click", function DatapointSelectionListComponent_Template_button_click_10_listener() { return ctx.add(); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelement(12, "i", 8);
        ɵngcc0.ɵɵelementStart(13, "span", 9);
        ɵngcc0.ɵɵtext(14, "Add data point");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("cdkDropListDisabled", !ctx.allowDragAndDrop || (ctx.formArray.controls == null ? null : ctx.formArray.controls.length) < 2);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formArray.errors == null ? null : ctx.formArray.errors.minActiveCount);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formArray.errors == null ? null : ctx.formArray.errors.maxActiveCount);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.formArray.controls == null ? null : ctx.formArray.controls.length));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.formArray.controls);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 6, "Add data point"));
    } }, directives: function () { return [ɵngcc3.C8yTranslateDirective, ɵngcc3.ListGroupComponent, ɵngcc8.CdkDropList, ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc3.IconDirective, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, DatapointSelectorListItemComponent, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc8.CdkDrag, ɵngcc3.ListItemDragHandleComponent, ɵngcc8.CdkDragHandle]; }, pipes: function () { return [ɵngcc3.C8yTranslatePipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectionListComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-datapoint-selection-list',
                template: "<div class=\"card-header separator sticky-top bg-component\">\n  <span class=\"card-title h4\" translate>Data points</span>\n</div>\n\n<c8y-list-group\n  class=\"flex-grow ff-scroll-fix cdk-droplist\"\n  cdkDropList\n  (cdkDropListDropped)=\"drop($event)\"\n  [cdkDropListDisabled]=\"!allowDragAndDrop || formArray.controls?.length < 2\"\n>\n  <div\n    class=\"alert alert-info\"\n    role=\"alert\"\n    ngNonBindable\n    *ngIf=\"formArray.errors?.minActiveCount\"\n    translate\n    [translateParams]=\"formArray.errors?.minActiveCount\"\n  >\n    At least {{ minActive }} active data points must be selected.\n  </div>\n\n  <div\n    class=\"alert alert-info\"\n    role=\"alert\"\n    ngNonBindable\n    *ngIf=\"formArray.errors?.maxActiveCount\"\n    translate\n    [translateParams]=\"formArray.errors?.maxActiveCount\"\n  >\n    At maximum {{ maxActive }} active data points are allowed to be selected.\n  </div>\n\n  <ng-content select=\".alert\"></ng-content>\n\n  <div class=\"c8y-empty-state\" *ngIf=\"!formArray.controls?.length\">\n    <h1 class=\"c8y-icon c8y-icon-data-points c8y-icon-duocolor\"></h1>\n    <div>\n      <p>\n        <strong translate>No data points to display.</strong>\n      </p>\n      <small translate>Add your first data point.</small>\n    </div>\n  </div>\n  <div [formGroup]=\"dpForm\" *ngFor=\"let dpForm of formArray.controls; let index = index\">\n    <c8y-datapoint-selector-list-item\n      class=\"d-block\"\n      [defaultFormOptions]=\"defaultFormOptions\"\n      [activeToggleDisabled]=\"maxActiveCountReached\"\n      [showActiveToggle]=\"true\"\n      [showAddRemoveButton]=\"false\"\n      [showOptions]=\"true\"\n      [editable]=\"true\"\n      [colorPickerDisabled]=\"false\"\n      [actions]=\"actions\"\n      [optionToRemove]=\"true\"\n      [datapointLibraryEntries]=\"datapointLibraryEntries\"\n      [hasUnlinkTemplateOption]=\"true\"\n      formControlName=\"details\"\n      (removed)=\"onItemRemoved(index)\"\n      cdkDrag\n    >\n      <c8y-li-drag-handle cdkDragHandle>\n        <i c8yIcon=\"drag-reorder\"></i>\n      </c8y-li-drag-handle>\n    </c8y-datapoint-selector-list-item>\n  </div>\n</c8y-list-group>\n\n<div class=\"card-footer bg-component sticky-bottom separator\">\n  <button [title]=\"'Add data point' | translate\" class=\"btn btn-default btn-sm\" (click)=\"add()\">\n    <i c8yIcon=\"plus-circle\"></i>\n    <span translate>Add data point</span>\n  </button>\n</div>\n",
                providers: [
                    {
                        provide: i1.NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: i0.forwardRef(function () { return DatapointSelectionListComponent; })
                    },
                    {
                        provide: i1.NG_VALIDATORS,
                        useExisting: i0.forwardRef(function () { return DatapointSelectionListComponent; }),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: DatapointSelectorService }, { type: DatapointLibraryService }, { type: ɵngcc1.FormBuilder }, { type: ɵngcc7.WidgetConfigComponent, decorators: [{
                type: i0.Optional
            }] }]; }, { actions: [{
            type: i0.Input
        }], allowDragAndDrop: [{
            type: i0.Input
        }], config: [{
            type: i0.Input
        }], defaultFormOptions: [{
            type: i0.Input
        }], minActiveCount: [{
            type: i0.Input
        }], resolveContext: [{
            type: i0.Input
        }], isValid: [{
            type: i0.Output
        }], change: [{
            type: i0.Output
        }], maxActiveCount: [{
            type: i0.Input
        }] }); })();
        return DatapointSelectionListComponent;
    }());
    DatapointSelectionListComponent.ctorParameters = function () { return [
        { type: DatapointSelectorService },
        { type: DatapointLibraryService },
        { type: i1.FormBuilder },
        { type: contextDashboard.WidgetConfigComponent, decorators: [{ type: i0.Optional }] }
    ]; };
    DatapointSelectionListComponent.propDecorators = {
        actions: [{ type: i0.Input }],
        allowDragAndDrop: [{ type: i0.Input }],
        config: [{ type: i0.Input }],
        defaultFormOptions: [{ type: i0.Input }],
        maxActiveCount: [{ type: i0.Input }],
        minActiveCount: [{ type: i0.Input }],
        resolveContext: [{ type: i0.Input }],
        isValid: [{ type: i0.Output }],
        change: [{ type: i0.Output }]
    };

    var DatapointSelectorListItemComponent = /** @class */ (function () {
        function DatapointSelectorListItemComponent(formBuilder) {
            this.formBuilder = formBuilder;
            this.defaultFormOptions = {};
            this.isSelected = false;
            this.isCollapsed = true;
            this.showAddRemoveButton = true;
            this.editable = true;
            this.showActiveToggle = false;
            this.activeToggleDisabled = false;
            this.showOptions = false;
            this.actions = [];
            this.optionToRemove = false;
            this.hasUnlinkTemplateOption = false;
            this.added = new i0.EventEmitter();
            this.removed = new i0.EventEmitter();
            this.colorPickerDisabled = true;
            this.disableTypeaheadIfSelected = false;
            this.pattern = '';
            this.formGroup = this.formBuilder.group({
                details: [],
                color: [],
                __active: [],
                __target: [],
                fragment: [],
                series: [],
                __template: []
            });
            this.isValid$ = this.formGroup.statusChanges.pipe(operators.map(function (status) { return status === 'VALID'; }), operators.startWith(this.formGroup.valid));
        }
        DatapointSelectorListItemComponent.prototype.validate = function (control) {
            var _a;
            return ((_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.valid) ? null : { formInvalid: {} };
        };
        DatapointSelectorListItemComponent.prototype.writeValue = function (obj) {
            this.formGroup.patchValue(Object.assign(Object.assign({}, obj), { details: obj }));
        };
        DatapointSelectorListItemComponent.prototype.registerOnChange = function (fn) {
            var _this = this;
            this.formGroup.valueChanges.pipe(operators.map(function (tmp) { return _this.transformFormValue(tmp); })).subscribe(fn);
        };
        DatapointSelectorListItemComponent.prototype.registerOnTouched = function (fn) {
            this.formGroup.valueChanges.pipe(operators.take(1)).subscribe(fn);
        };
        DatapointSelectorListItemComponent.prototype.setDisabledState = function (isDisabled) {
            isDisabled ? this.formGroup.disable() : this.formGroup.enable();
        };
        DatapointSelectorListItemComponent.prototype.collapse = function () {
            this.isCollapsed = !this.isCollapsed;
        };
        DatapointSelectorListItemComponent.prototype.addOrRemoveItem = function () {
            var value = this.transformFormValue(this.formGroup.value);
            if (this.isSelected) {
                this.removed.emit(value);
            }
            else {
                this.added.emit(value);
            }
        };
        DatapointSelectorListItemComponent.prototype.remove = function (dp) {
            this.removed.emit(this.transformFormValue(this.formGroup.value));
        };
        DatapointSelectorListItemComponent.prototype.setPipe = function (filterStr) {
            var _this = this;
            this.pattern = filterStr;
            this.filterPipe = rxjs.pipe(operators.map(function (data) {
                return _this.filterDatapointLabel(data, filterStr);
            }));
        };
        DatapointSelectorListItemComponent.prototype.unlinkDatapointTemplate = function () {
            var details = this.formGroup.value.details || {};
            this.resetUnusedProperties(details);
            this.formGroup.patchValue({ __template: undefined, details: details });
        };
        DatapointSelectorListItemComponent.prototype.dataPointTemplateSelected = function (template) {
            var e_1, _b;
            var attributesToAssign = [
                'color',
                'label',
                'min',
                'max',
                'yellowRangeMax',
                'yellowRangeMin',
                'redRangeMax',
                'redRangeMin',
                'target',
                'orientation',
                'unit'
            ];
            var _c = this.formGroup.value, fragment = _c.fragment, series = _c.series, __target = _c.__target, __active = _c.__active;
            var dataPoint = {
                fragment: fragment,
                series: series,
                __active: __active,
                __target: __target,
                __template: template.id
            };
            try {
                for (var attributesToAssign_1 = __values(attributesToAssign), attributesToAssign_1_1 = attributesToAssign_1.next(); !attributesToAssign_1_1.done; attributesToAssign_1_1 = attributesToAssign_1.next()) {
                    var attribute = attributesToAssign_1_1.value;
                    var value = template[DATAPOINT_LIBRARY_FRAGMENT][attribute];
                    dataPoint[attribute] = value;
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (attributesToAssign_1_1 && !attributesToAssign_1_1.done && (_b = attributesToAssign_1.return)) _b.call(attributesToAssign_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.writeValue(dataPoint);
            this.setPipe('');
        };
        DatapointSelectorListItemComponent.prototype.resetUnusedProperties = function (details) {
            var _b = this.defaultFormOptions, showTarget = _b.showTarget, showYellowRange = _b.showYellowRange, showRedRange = _b.showRedRange;
            details.__template = undefined;
            if (!showTarget) {
                details.target = undefined;
            }
            if (!showYellowRange) {
                details.yellowRangeMin = undefined;
                details.yellowRangeMax = undefined;
            }
            if (!showRedRange) {
                details.redRangeMin = undefined;
                details.redRangeMax = undefined;
            }
        };
        DatapointSelectorListItemComponent.prototype.filterDatapointLabel = function (kpis, filterStr) {
            return kpis.filter(function (mo) { return mo[DATAPOINT_LIBRARY_FRAGMENT] &&
                mo[DATAPOINT_LIBRARY_FRAGMENT].label &&
                typeof mo[DATAPOINT_LIBRARY_FRAGMENT].label === 'string' &&
                mo[DATAPOINT_LIBRARY_FRAGMENT].label.toLowerCase().indexOf(filterStr.toLowerCase()) > -1; });
        };
        DatapointSelectorListItemComponent.prototype.transformFormValue = function (formValue) {
            var obj = Object.assign({}, formValue.details || {}, formValue);
            delete obj.details;
            return obj;
        };
DatapointSelectorListItemComponent.ɵfac = function DatapointSelectorListItemComponent_Factory(t) { return new (t || DatapointSelectorListItemComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder)); };
DatapointSelectorListItemComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointSelectorListItemComponent, selectors: [["c8y-datapoint-selector-list-item"]], contentQueries: function DatapointSelectorListItemComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, i2.ListItemDragHandleComponent, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dragHandle = _t.first);
    } }, inputs: { defaultFormOptions: "defaultFormOptions", isSelected: "isSelected", isCollapsed: "isCollapsed", showAddRemoveButton: "showAddRemoveButton", editable: "editable", showActiveToggle: "showActiveToggle", activeToggleDisabled: "activeToggleDisabled", showOptions: "showOptions", actions: "actions", optionToRemove: "optionToRemove", hasUnlinkTemplateOption: "hasUnlinkTemplateOption", colorPickerDisabled: "colorPickerDisabled", disableTypeaheadIfSelected: "disableTypeaheadIfSelected", datapointLibraryEntries: "datapointLibraryEntries", highlightText: "highlightText" }, outputs: { added: "added", removed: "removed" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: i1.NG_VALUE_ACCESSOR,
                useExisting: i0.forwardRef(function () { return DatapointSelectorListItemComponent; }),
                multi: true
            },
            {
                provide: i1.NG_VALIDATORS,
                useExisting: i0.forwardRef(function () { return DatapointSelectorListItemComponent; }),
                multi: true
            }
        ])], ngContentSelectors: _c12, decls: 38, vars: 28, consts: [[1, "c8y-list__item__collapse--container-small", 3, "formGroup"], ["li", ""], ["class", "a-s-center p-r-4", 4, "ngIf"], ["formControlName", "__active", "class", "a-s-center p-r-0", 3, "displayAsSwitch", "click", 4, "ngIf"], [1, "d-flex", "a-i-center", "p-l-4"], [1, "c8y-list__item__colorpicker", "p-t-0", "p-b-0", "p-l-0", 3, "title"], [1, "c8y-colorpicker"], ["type", "color", "formControlName", "color", 3, "click"], [1, "btn-clean", "data-point-label", "text-truncate", 3, "title", "click"], [1, "text-truncate"], [3, "text", "pattern", "shouldTrimPattern"], ["class", "text-truncate text-muted icon-flex", 4, "ngIf"], ["class", "btn-clean m-l-auto", "container", "body", 3, "popover", "outsideClick", 4, "ngIf"], [3, "icon", "label", "click", 4, "ngIf"], [3, "icon", "label", "click", 4, "ngFor", "ngForOf"], [1, "data-point-details"], [1, "list-unstyled", "small", "m-b-16"], [1, "p-t-4", "p-b-4", "flex-row", "separator-top-bottom"], ["translate", "", 1, "small", "m-b-0", "m-r-8", "flex-item-v-start", "text-muted"], [1, "flex-item-right"], [1, "p-t-4", "p-b-4", "flex-row", "separator-bottom"], ["class", "form-group", 4, "ngIf"], ["datapointOverviewPopoverTemplate", ""], ["formControlName", "details", 3, "showTarget", "showRange", "showYellowRange", "showRedRange", "showChart", "showFormIfTemplateWasSelected", 4, "ngIf"], [1, "a-s-center", "p-r-4"], ["class", "btn btn-clean text-primary", 3, "title", "click", 4, "ngIf"], [1, "btn", "btn-clean", "text-primary", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"], ["c8yIcon", "plus-circle", 1, "text-primary"], ["formControlName", "__active", 1, "a-s-center", "p-r-0", 3, "displayAsSwitch", "click"], [1, "text-truncate", "text-muted", "icon-flex"], ["c8yIcon", "exchange"], ["container", "body", 1, "btn-clean", "m-l-auto", 3, "popover", "outsideClick"], ["c8yIcon", "warning", 1, "text-danger"], [3, "icon", "label", "click"], [1, "form-group"], ["translate", "", 1, "d-inline-block"], ["container", "body", 1, "btn", "btn-clean", 3, "popover", "outsideClick", "click"], [1, "m-l-4", "text-info", 3, "c8yIcon"], ["datapointHintPopoverTemplate", ""], [1, "d-flex"], ["class", "flex-grow", 3, "placeholder", "ngModel", "ngModelOptions", "displayProperty", "hideNew", "disabled", "onSearch", 4, "ngIf"], ["class", "btn btn-info btn-xs btn-icon a-s-center m-l-8", "placement", "left", "container", "body", 3, "popover", "outsideClick", "title", 4, "ngIf"], ["class", "btn btn-danger btn-xs btn-icon a-s-center m-l-8", 3, "title", "click", 4, "ngIf"], [1, "flex-grow", 3, "placeholder", "ngModel", "ngModelOptions", "displayProperty", "hideNew", "disabled", "onSearch"], ["class", "p-l-8 p-r-8 c8y-list__item--link interact", 3, "active", "click", 4, "c8yFor", "c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound"], ["notFoundTemplate", ""], [1, "p-l-8", "p-r-8", "c8y-list__item--link", "interact", 3, "active", "click"], [3, "text", "pattern"], ["icon", "circle"], ["class", "bg-gray-lighter p-8", 4, "ngIf"], [1, "bg-gray-lighter", "p-8"], ["placement", "left", "container", "body", 1, "btn", "btn-info", "btn-xs", "btn-icon", "a-s-center", "m-l-8", 3, "popover", "outsideClick", "title"], ["c8yIcon", "info", 1, "text-info"], [1, "btn", "btn-danger", "btn-xs", "btn-icon", "a-s-center", "m-l-8", 3, "title", "click"], ["c8yIcon", "unlink"], [3, "datapoint"], ["formControlName", "details", 3, "showTarget", "showRange", "showYellowRange", "showRedRange", "showChart", "showFormIfTemplateWasSelected"]], template: function DatapointSelectorListItemComponent_Template(rf, ctx) { if (rf & 1) {
        var _r41 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵprojectionDef(_c11);
        ɵngcc0.ɵɵelementStart(0, "c8y-li", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "c8y-li-drag-handle");
        ɵngcc0.ɵɵprojection(3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, DatapointSelectorListItemComponent_c8y_li_icon_4_Template, 3, 2, "c8y-li-icon", 2);
        ɵngcc0.ɵɵtemplate(5, DatapointSelectorListItemComponent_c8y_li_checkbox_5_Template, 1, 1, "c8y-li-checkbox", 3);
        ɵngcc0.ɵɵelementStart(6, "div", 4);
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "input", 7);
        ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_Template_input_click_10_listener($event) { return $event.stopPropagation(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(11, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(12, "button", 8);
        ɵngcc0.ɵɵlistener("click", function DatapointSelectorListItemComponent_Template_button_click_12_listener() { ɵngcc0.ɵɵrestoreView(_r41); var _r0 = ɵngcc0.ɵɵreference(1); return _r0.collapsed = !_r0.collapsed; });
        ɵngcc0.ɵɵelementStart(13, "span", 9);
        ɵngcc0.ɵɵelement(14, "c8y-highlight", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(15, DatapointSelectorListItemComponent_small_15_Template, 4, 1, "small", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(16, DatapointSelectorListItemComponent_button_16_Template, 3, 4, "button", 12);
        ɵngcc0.ɵɵpipe(17, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(18, DatapointSelectorListItemComponent_c8y_li_action_18_Template, 2, 4, "c8y-li-action", 13);
        ɵngcc0.ɵɵtemplate(19, DatapointSelectorListItemComponent_c8y_li_action_19_Template, 1, 2, "c8y-li-action", 14);
        ɵngcc0.ɵɵelementStart(20, "c8y-li-collapse");
        ɵngcc0.ɵɵelementStart(21, "div", 15);
        ɵngcc0.ɵɵelementStart(22, "ul", 16);
        ɵngcc0.ɵɵelementStart(23, "li", 17);
        ɵngcc0.ɵɵelementStart(24, "label", 18);
        ɵngcc0.ɵɵtext(25, "Fragment");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(26, "span", 19);
        ɵngcc0.ɵɵelement(27, "c8y-highlight", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "li", 20);
        ɵngcc0.ɵɵelementStart(29, "label", 18);
        ɵngcc0.ɵɵtext(30, "Series");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(31, "span", 19);
        ɵngcc0.ɵɵelement(32, "c8y-highlight", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(33, DatapointSelectorListItemComponent_div_33_Template, 11, 6, "div", 21);
        ɵngcc0.ɵɵpipe(34, "async");
        ɵngcc0.ɵɵtemplate(35, DatapointSelectorListItemComponent_ng_template_35_Template, 1, 1, "ng-template", null, 22, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(37, DatapointSelectorListItemComponent_c8y_datapoint_attributes_form_37_Template, 1, 6, "c8y-datapoint-attributes-form", 23);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.formGroup);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showAddRemoveButton);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showActiveToggle);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(8, 22, "Change color"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵstyleProp("background-color", ctx.formGroup.value.color);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("title", ctx.formGroup.value.details == null ? null : ctx.formGroup.value.details.label);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("text", ctx.formGroup.value.details == null ? null : ctx.formGroup.value.details.label)("pattern", ctx.highlightText)("shouldTrimPattern", true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formGroup.value.__target);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(17, 24, ctx.isValid$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.optionToRemove);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.actions);
        ɵngcc0.ɵɵadvance(8);
        ɵngcc0.ɵɵproperty("text", ctx.formGroup.value.fragment)("pattern", ctx.highlightText)("shouldTrimPattern", true);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("text", ctx.formGroup.value.series)("pattern", ctx.highlightText)("shouldTrimPattern", true);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(34, 26, ctx.datapointLibraryEntries && ctx.datapointLibraryEntries));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.defaultFormOptions);
    } }, directives: function () { return [ɵngcc3.ListItemComponent, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc3.ListItemDragHandleComponent, ɵngcc2.NgIf, ɵngcc1.DefaultValueAccessor, ɵngcc3.RequiredInputPlaceholderDirective, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc3.HighlightComponent, ɵngcc2.NgForOf, ɵngcc3.ListItemCollapseComponent, ɵngcc3.C8yTranslateDirective, ɵngcc3.ListItemIconComponent, ɵngcc3.IconDirective, ɵngcc3.ListItemCheckboxComponent, ɵngcc4.PopoverDirective, ɵngcc3.ListItemActionComponent, ɵngcc3.TypeaheadComponent, ɵngcc1.NgModel, ɵngcc3.ForOfDirective, DatapointTemplatePopoverComponent, DatapointAttributesFormComponent]; }, pipes: function () { return [ɵngcc3.C8yTranslatePipe, ɵngcc2.AsyncPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectorListItemComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-datapoint-selector-list-item',
                template: "<c8y-li class=\"c8y-list__item__collapse--container-small\" [formGroup]=\"formGroup\" #li>\n  <c8y-li-drag-handle><ng-content select=\"c8y-li-drag-handle\"></ng-content></c8y-li-drag-handle>\n  <c8y-li-icon *ngIf=\"showAddRemoveButton\" class=\"a-s-center p-r-4\">\n    <button\n      *ngIf=\"isSelected\"\n      class=\"btn btn-clean text-primary\"\n      (click)=\"addOrRemoveItem()\"\n      [title]=\"'Remove' | translate\"\n    >\n      <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n    </button>\n    <button\n      *ngIf=\"!isSelected\"\n      class=\"btn btn-clean text-primary\"\n      (click)=\"addOrRemoveItem()\"\n      [title]=\"'Select' | translate\"\n    >\n      <i c8yIcon=\"plus-circle\" class=\"text-primary\"></i>\n    </button>\n  </c8y-li-icon>\n\n  <c8y-li-checkbox\n    *ngIf=\"showActiveToggle\"\n    [displayAsSwitch]=\"true\"\n    formControlName=\"__active\"\n    (click)=\"$event.stopPropagation()\"\n    class=\"a-s-center p-r-0\"\n  ></c8y-li-checkbox>\n\n  <div class=\"d-flex a-i-center p-l-4\">\n    <div class=\"c8y-list__item__colorpicker p-t-0 p-b-0 p-l-0\" [title]=\"'Change color' | translate\">\n      <div class=\"c8y-colorpicker\">\n        <input type=\"color\" formControlName=\"color\" (click)=\"$event.stopPropagation()\" />\n        <span [style.background-color]=\"formGroup.value.color\"></span>\n      </div>\n    </div>\n    <button\n      class=\"btn-clean data-point-label text-truncate\"\n      [title]=\"formGroup.value.details?.label\"\n      (click)=\"li.collapsed = !li.collapsed\"\n    >\n      <span class=\"text-truncate\">\n        <c8y-highlight\n          [text]=\"formGroup.value.details?.label\"\n          [pattern]=\"highlightText\"\n          [shouldTrimPattern]=\"true\"\n        ></c8y-highlight>\n      </span>\n      <small class=\"text-truncate text-muted icon-flex\" *ngIf=\"formGroup.value.__target\">\n        <i c8yIcon=\"exchange\"></i>\n        <span class=\"text-truncate\">{{ formGroup.value.__target.name }}</span>\n      </small>\n    </button>\n\n    <button\n      class=\"btn-clean m-l-auto\"\n      *ngIf=\"!(isValid$ | async)\"\n      [popover]=\"'Some entries are invalid. Check the input fields with red borders.' | translate\"\n      container=\"body\"\n      [outsideClick]=\"true\"\n    >\n      <i class=\"text-danger\" c8yIcon=\"warning\"></i>\n    </button>\n  </div>\n\n  <c8y-li-action\n    *ngIf=\"optionToRemove\"\n    [icon]=\"'minus-circle'\"\n    [label]=\"'Remove from list' | translate\"\n    (click)=\"remove(formGroup.value)\"\n  ></c8y-li-action>\n  <c8y-li-action\n    *ngFor=\"let action of actions\"\n    [icon]=\"action.icon\"\n    [label]=\"action.label\"\n    (click)=\"action.callback(formGroup.value)\"\n  ></c8y-li-action>\n  <c8y-li-collapse>\n    <div class=\"data-point-details\">\n      <ul class=\"list-unstyled small m-b-16\">\n        <li class=\"p-t-4 p-b-4 flex-row separator-top-bottom\">\n          <label class=\"small m-b-0 m-r-8 flex-item-v-start text-muted\" translate>Fragment</label>\n          <span class=\"flex-item-right\">\n            <c8y-highlight\n              [text]=\"formGroup.value.fragment\"\n              [pattern]=\"highlightText\"\n              [shouldTrimPattern]=\"true\"\n            ></c8y-highlight>\n          </span>\n        </li>\n        <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n          <label class=\"small m-b-0 m-r-8 flex-item-v-start text-muted\" translate>Series</label>\n          <span class=\"flex-item-right\">\n            <c8y-highlight\n              [text]=\"formGroup.value.series\"\n              [pattern]=\"highlightText\"\n              [shouldTrimPattern]=\"true\"\n            ></c8y-highlight>\n          </span>\n        </li>\n      </ul>\n      <div\n        class=\"form-group\"\n        *ngIf=\"datapointLibraryEntries && datapointLibraryEntries | async as libraryEntries\"\n      >\n        <label class=\"d-inline-block\" translate>Data point template</label>\n        <button\n          class=\"btn btn-clean\"\n          [popover]=\"datapointHintPopoverTemplate\"\n          (click)=\"$event.stopPropagation()\"\n          container=\"body\"\n          [outsideClick]=\"true\"\n        >\n          <i [c8yIcon]=\"'question-circle-o'\" class=\"m-l-4 text-info\"></i>\n        </button>\n\n        <ng-template #datapointHintPopoverTemplate>\n          {{\n            'Using a data point template sets color, label, unit and ranges. Removing the template allows you to set the values manually.'\n              | translate\n          }}\n        </ng-template>\n        <div class=\"d-flex\">\n          <c8y-typeahead\n            [placeholder]=\"'No template' | translate\"\n            [ngModel]=\"formGroup.value.__template ? formGroup.value.details : undefined\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            (onSearch)=\"setPipe($event)\"\n            [displayProperty]=\"'label'\"\n            [hideNew]=\"true\"\n            *ngIf=\"datapointLibraryEntries\"\n            [disabled]=\"isSelected && disableTypeaheadIfSelected\"\n            class=\"flex-grow\"\n          >\n            <c8y-li\n              *c8yFor=\"\n                let item of datapointLibraryEntries;\n                loadMore: 'auto';\n                pipe: filterPipe;\n                notFound: notFoundTemplate\n              \"\n              class=\"p-l-8 p-r-8 c8y-list__item--link interact\"\n              (click)=\"dataPointTemplateSelected(item)\"\n              [active]=\"formGroup.value.__template === item.id\"\n            >\n              <c8y-highlight [text]=\"item.c8y_Kpi?.label\" [pattern]=\"pattern\"></c8y-highlight>\n              <c8y-li-icon icon=\"circle\" [style.color]=\"item.c8y_Kpi?.color\"></c8y-li-icon>\n            </c8y-li>\n            <ng-template #notFoundTemplate>\n              <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0\">\n                <span>No match found.</span>\n              </c8y-li>\n            </ng-template>\n          </c8y-typeahead>\n          <button\n            *ngIf=\"formGroup.value.__template\"\n            class=\"btn btn-info btn-xs btn-icon a-s-center m-l-8\"\n            [popover]=\"datapointOverviewPopoverTemplate\"\n            placement=\"left\"\n            container=\"body\"\n            [outsideClick]=\"true\"\n            [title]=\"'Info' | translate\"\n          >\n            <i c8yIcon=\"info\" class=\"text-info\"></i>\n          </button>\n          <button\n            *ngIf=\"formGroup.value.__template && hasUnlinkTemplateOption\"\n            class=\"btn btn-danger btn-xs btn-icon a-s-center m-l-8\"\n            (click)=\"unlinkDatapointTemplate()\"\n            [title]=\"'Unlink data point template' | translate\"\n          >\n            <i c8yIcon=\"unlink\"></i>\n          </button>\n        </div>\n      </div>\n      <ng-template #datapointOverviewPopoverTemplate>\n        <c8y-datapoint-template-popover\n          [datapoint]=\"formGroup.value.details\"\n        ></c8y-datapoint-template-popover>\n      </ng-template>\n      <c8y-datapoint-attributes-form\n        *ngIf=\"defaultFormOptions\"\n        [showTarget]=\"defaultFormOptions.showTarget\"\n        [showRange]=\"defaultFormOptions.showRange\"\n        [showYellowRange]=\"defaultFormOptions.showYellowRange\"\n        [showRedRange]=\"defaultFormOptions.showRedRange\"\n        [showChart]=\"defaultFormOptions.showChart\"\n        [showFormIfTemplateWasSelected]=\"defaultFormOptions.showFormIfTemplateWasSelected\"\n        formControlName=\"details\"\n      ></c8y-datapoint-attributes-form>\n    </div>\n  </c8y-li-collapse>\n</c8y-li>\n",
                providers: [
                    {
                        provide: i1.NG_VALUE_ACCESSOR,
                        useExisting: i0.forwardRef(function () { return DatapointSelectorListItemComponent; }),
                        multi: true
                    },
                    {
                        provide: i1.NG_VALIDATORS,
                        useExisting: i0.forwardRef(function () { return DatapointSelectorListItemComponent; }),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.FormBuilder }]; }, { defaultFormOptions: [{
            type: i0.Input
        }], isSelected: [{
            type: i0.Input
        }], isCollapsed: [{
            type: i0.Input
        }], showAddRemoveButton: [{
            type: i0.Input
        }], editable: [{
            type: i0.Input
        }], showActiveToggle: [{
            type: i0.Input
        }], activeToggleDisabled: [{
            type: i0.Input
        }], showOptions: [{
            type: i0.Input
        }], actions: [{
            type: i0.Input
        }], optionToRemove: [{
            type: i0.Input
        }], hasUnlinkTemplateOption: [{
            type: i0.Input
        }], added: [{
            type: i0.Output
        }], removed: [{
            type: i0.Output
        }], colorPickerDisabled: [{
            type: i0.Input
        }], disableTypeaheadIfSelected: [{
            type: i0.Input
        }], datapointLibraryEntries: [{
            type: i0.Input
        }], highlightText: [{
            type: i0.Input
        }], dragHandle: [{
            type: i0.ContentChild,
            args: [i2.ListItemDragHandleComponent]
        }] }); })();
        return DatapointSelectorListItemComponent;
    }());
    DatapointSelectorListItemComponent.ctorParameters = function () { return [
        { type: i1.FormBuilder }
    ]; };
    DatapointSelectorListItemComponent.propDecorators = {
        defaultFormOptions: [{ type: i0.Input }],
        isSelected: [{ type: i0.Input }],
        isCollapsed: [{ type: i0.Input }],
        showAddRemoveButton: [{ type: i0.Input }],
        editable: [{ type: i0.Input }],
        showActiveToggle: [{ type: i0.Input }],
        activeToggleDisabled: [{ type: i0.Input }],
        showOptions: [{ type: i0.Input }],
        datapointLibraryEntries: [{ type: i0.Input }],
        actions: [{ type: i0.Input }],
        optionToRemove: [{ type: i0.Input }],
        hasUnlinkTemplateOption: [{ type: i0.Input }],
        added: [{ type: i0.Output }],
        removed: [{ type: i0.Output }],
        colorPickerDisabled: [{ type: i0.Input }],
        disableTypeaheadIfSelected: [{ type: i0.Input }],
        highlightText: [{ type: i0.Input }],
        dragHandle: [{ type: i0.ContentChild, args: [i2.ListItemDragHandleComponent,] }]
    };

    var DatapointSelectorComponent = /** @class */ (function () {
        function DatapointSelectorComponent(datapointService) {
            this.datapointService = datapointService;
            this.allowChangingContext = true;
            this.allowDatapointsFromMultipleAssets = true;
            this.selectedDatapoints = new Array();
            this.defaultActiveState = true;
            this.ignoreDatapointTemplates = false;
            this.guessDatapointUnit = true;
            this.allowSearch = true;
            this.searchString = '';
            this.maxNumberOfDatapoints = 50;
            this.loadingDatapoints = false;
            this.assetSelection = new rxjs.BehaviorSubject(null);
            this.searchString$ = new rxjs.BehaviorSubject('');
            this.touched = false;
            this.setupObservables();
        }
        DatapointSelectorComponent.prototype.ngOnInit = function () {
            if (!this.ignoreDatapointTemplates) {
                this.datapointLibraryEntries = rxjs.from(this.datapointService.getFirstDatapointLibraryPage());
            }
            if (this.contextAsset) {
                this.selectionChanged(this.contextAsset);
            }
        };
        DatapointSelectorComponent.prototype.writeValue = function (obj) {
            this.selectedDatapoints = obj;
        };
        DatapointSelectorComponent.prototype.registerOnChange = function (fn) {
            this.onChange = fn;
        };
        DatapointSelectorComponent.prototype.registerOnTouched = function (fn) {
            this.onTouched = fn;
        };
        DatapointSelectorComponent.prototype.datapointAdded = function (dp) {
            this.markAsTouched();
            dp.__active = this.defaultActiveState;
            if (this.guessDatapointUnit && !dp.unit) {
                this.datapointService.guessUnitOfDatapoint(dp.fragment, dp.series, dp.__target).then(function (unit) {
                    dp.unit = unit;
                });
            }
            this.selectedDatapoints = __spreadArray(__spreadArray([], __read(this.selectedDatapoints)), [dp]);
            this.emitCurrentSelection();
        };
        DatapointSelectorComponent.prototype.datapointRemoved = function (dp) {
            this.markAsTouched();
            this.selectedDatapoints = this.selectedDatapoints.filter(function (tmp) {
                var _a, _b;
                return tmp.fragment !== dp.fragment ||
                    tmp.series !== dp.series ||
                    ((_a = tmp.__target) === null || _a === void 0 ? void 0 : _a.id) !== ((_b = dp.__target) === null || _b === void 0 ? void 0 : _b.id);
            });
            this.emitCurrentSelection();
        };
        DatapointSelectorComponent.prototype.selectionChanged = function (evt) {
            if (Array.isArray(evt) && evt.length !== 0) {
                return this.selectAsset(evt[0]);
            }
            if (!Array.isArray(evt) && evt.items) {
                return this.selectionChanged(evt.items);
            }
            if (!Array.isArray(evt) && evt.id) {
                return this.selectAsset(evt);
            }
            // reset selection
            this.assetSelection.next(null);
        };
        DatapointSelectorComponent.prototype.trackByFn = function (_index, item) {
            var _a;
            return item.fragment + "-" + ((_a = item.__target) === null || _a === void 0 ? void 0 : _a.id) + "-" + item.series;
        };
        DatapointSelectorComponent.prototype.searchStringChanged = function (newValue) {
            if (newValue === void 0) { newValue = ''; }
            this.searchString$.next(newValue);
            this.searchString = newValue;
        };
        DatapointSelectorComponent.prototype.setupObservables = function () {
            var _this = this;
            this.datapoints$ = this.assetSelection.pipe(operators.tap(function () {
                _this.loadingDatapoints = true;
            }), operators.switchMap(function (asset) { return (asset === null || asset === void 0 ? void 0 : asset.id)
                ? _this.datapointService.getDatapointsOfAsset(asset, _this.ignoreDatapointTemplates)
                : []; }), operators.tap(function () { return (_this.loadingDatapoints = false); }), operators.shareReplay(1));
            this.searchStringChanges$ = this.searchString$.pipe(operators.distinctUntilChanged(), operators.debounceTime(500), operators.shareReplay(1));
            this.filteredDatapoints$ = rxjs.combineLatest([this.searchStringChanges$, this.datapoints$]).pipe(operators.map(function (_d) {
                var _e = __read(_d, 2), searchString = _e[0], datapoints = _e[1];
                if (!searchString) {
                    return datapoints;
                }
                var lowerCaseSearchString = searchString.toLowerCase();
                return datapoints.filter(function (datapoint) { return _this.includesSearchString(datapoint, lowerCaseSearchString); });
            }), operators.map(function (filtered) { return filtered.slice(0, _this.maxNumberOfDatapoints); }));
        };
        DatapointSelectorComponent.prototype.selectAsset = function (asset) {
            this.assetSelection.next(asset);
            this.searchStringChanged();
            if (!this.allowDatapointsFromMultipleAssets) {
                this.clearSelection();
            }
        };
        DatapointSelectorComponent.prototype.clearSelection = function () {
            this.selectedDatapoints = [];
            this.emitCurrentSelection();
        };
        DatapointSelectorComponent.prototype.emitCurrentSelection = function () {
            this.onChange(this.selectedDatapoints);
        };
        DatapointSelectorComponent.prototype.markAsTouched = function () {
            if (!this.touched) {
                this.onTouched();
                this.touched = true;
            }
        };
        DatapointSelectorComponent.prototype.includesSearchString = function (datapoint, lowerCaseSearchString) {
            var _a, _b, _c;
            var label = (_a = datapoint.label) === null || _a === void 0 ? void 0 : _a.toLowerCase();
            if (label && label.includes(lowerCaseSearchString)) {
                return true;
            }
            var fragment = (_b = datapoint.fragment) === null || _b === void 0 ? void 0 : _b.toLowerCase();
            if (fragment && fragment.includes(lowerCaseSearchString)) {
                return true;
            }
            var series = (_c = datapoint.series) === null || _c === void 0 ? void 0 : _c.toLowerCase();
            if (series && series.includes(lowerCaseSearchString)) {
                return true;
            }
            return false;
        };
DatapointSelectorComponent.ɵfac = function DatapointSelectorComponent_Factory(t) { return new (t || DatapointSelectorComponent)(ɵngcc0.ɵɵdirectiveInject(DatapointLibraryService)); };
DatapointSelectorComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointSelectorComponent, selectors: [["c8y-datapoint-selector"]], inputs: { allowChangingContext: "allowChangingContext", allowDatapointsFromMultipleAssets: "allowDatapointsFromMultipleAssets", defaultActiveState: "defaultActiveState", ignoreDatapointTemplates: "ignoreDatapointTemplates", guessDatapointUnit: "guessDatapointUnit", allowSearch: "allowSearch", contextAsset: "contextAsset" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: i1.NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: i0.forwardRef(function () { return DatapointSelectorComponent; })
            }
        ])], decls: 16, vars: 11, consts: [[1, "d-grid", "grid__row--1", "fit-h", 3, "ngClass"], ["class", "d-flex d-col p-relative bg-gray-white", 4, "ngIf"], [1, "inner-scroll", "bg-component"], ["noDeviceEmptyState", ""], ["loadingData", ""], ["class", "bg-inherit", 4, "ngIf", "ngIfElse"], [1, "inner-scroll", "bg-gray-white"], ["translate", "", 1, "text-medium", "m-b-4", "p-l-16", "p-r-16", "p-t-8", "p-b-8", "separator-bottom", "sticky-top", "text-truncate", 3, "title"], [1, "d-flex", "flex-wrap", "gap-8", "p-l-16", "p-r-16", "p-b-16"], ["class", "c8y-datapoint-pill", 4, "ngFor", "ngForOf"], ["class", "p-16", 4, "ngIf"], [1, "d-flex", "d-col", "p-relative", "bg-gray-white"], [1, "d-contents", 3, "ngModel", "asset", "container", "config", "ngModelChange", "onSelected"], [1, "p-16"], [1, "c8y-empty-state", "text-left"], [1, "c8y-icon", "c8y-icon-data-points", "c8y-icon-duocolor"], ["translate", ""], [1, "p-16", "text-center"], [1, "bg-inherit"], [1, "p-l-16", "p-r-16", "p-t-8", "p-b-8", "sticky-top", "bg-inherit", "separator-bottom"], [1, "text-medium", "text-truncate", 3, "title"], ["id", "search", "class", "input-group input-group-search m-t-4", 4, "ngIf"], [4, "ngIf", "ngIfElse"], ["id", "search", 1, "input-group", "input-group-search", "m-t-4"], ["type", "search", "placeholder", "Search\u2026", 1, "form-control", 3, "ngModel", "ngModelChange"], [1, "input-group-addon"], ["c8yIcon", "search", 4, "ngIf", "ngIfElse"], ["clearSearchString", ""], ["c8yIcon", "search"], ["c8yIcon", "times", "class", "text-muted", 3, "click", 4, "ngIf"], ["c8yIcon", "times", 1, "text-muted", 3, "click"], [4, "ngIf"], ["class", "sticky-top", "style", "top: 72px", "translate", "", 4, "ngIf"], ["class", "d-contents", 3, "ngModel", "isSelected", "datapointLibraryEntries", "disableTypeaheadIfSelected", "highlightText", "added", "removed", 4, "ngFor", "ngForOf", "ngForTrackBy"], [3, "icon", "title", "subtitle", "horizontal"], ["translate", "", 1, "sticky-top", 2, "top", "72px"], [1, "alert", "alert-warning", "m-b-0"], [1, "d-contents", 3, "ngModel", "isSelected", "datapointLibraryEntries", "disableTypeaheadIfSelected", "highlightText", "added", "removed"], [1, "c8y-datapoint-pill"], ["type", "button", 1, "c8y-datapoint-pill__btn", 3, "title", "click"], ["c8yIcon", "remove", 1, "icon-14"], [1, "c8y-datapoint-pill__label", 3, "title"], ["c8yIcon", "circle", 1, "m-r-4", "icon-14"], [1, "text-truncate"], ["class", "text-muted text-10", 4, "ngIf"], [1, "text-muted", "text-10"]], template: function DatapointSelectorComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, DatapointSelectorComponent_div_1_Template, 2, 6, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵtemplate(3, DatapointSelectorComponent_ng_template_3_Template, 9, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, DatapointSelectorComponent_ng_template_5_Template, 2, 0, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(7, DatapointSelectorComponent_div_7_Template, 9, 11, "div", 5);
        ɵngcc0.ɵɵpipe(8, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "p", 7);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵtext(12, " Selected data points ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "div", 8);
        ɵngcc0.ɵɵtemplate(14, DatapointSelectorComponent_div_14_Template, 12, 14, "div", 9);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(15, DatapointSelectorComponent_div_15_Template, 6, 0, "div", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵproperty("ngClass", ctx.allowChangingContext ? "grid__col--3-6-3--md" : "grid__col--8-4--md");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.allowChangingContext);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(8, 7, ctx.assetSelection))("ngIfElse", _r1);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 9, "Selected data points"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.selectedDatapoints);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.selectedDatapoints || !ctx.selectedDatapoints.length);
    } }, directives: function () { return [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc3.C8yTranslateDirective, ɵngcc2.NgForOf, ɵngcc9.MillerViewComponent, ɵngcc1.NgControlStatus, ɵngcc1.NgModel, ɵngcc3.LoadingComponent, ɵngcc1.DefaultValueAccessor, ɵngcc3.IconDirective, ɵngcc3.ListGroupComponent, ɵngcc3.EmptyStateComponent, ɵngcc3.ListItemComponent, DatapointSelectorListItemComponent]; }, pipes: function () { return [ɵngcc2.AsyncPipe, ɵngcc3.C8yTranslatePipe, IncludesDatapointPipe, DatapointLabelPipe]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectorComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-datapoint-selector',
                template: "<div class=\"d-grid grid__row--1 fit-h\" [ngClass]=\"allowChangingContext ? 'grid__col--3-6-3--md' : 'grid__col--8-4--md'\">\n  <div class=\"d-flex d-col p-relative bg-gray-white\" *ngIf=\"allowChangingContext\">\n    <c8y-asset-selector-miller\n      [(ngModel)]=\"contextAsset\"\n      [asset]=\"contextAsset\"\n      (onSelected)=\"selectionChanged($event)\"\n      [container]=\"''\"\n      [config]=\"{\n        view: 'miller',\n        groupsSelectable: true,\n        columnHeaders: true,\n        showChildDevices: true,\n        showUnassignedDevices: true,\n        singleColumn: true,\n        search: allowSearch\n      }\"\n      class=\"d-contents\"\n    ></c8y-asset-selector-miller>\n  </div>\n  <!-- center column -->\n  <div class=\"inner-scroll bg-component\">\n    <ng-template #noDeviceEmptyState>\n      <div class=\"p-16\">\n        <div class=\"c8y-empty-state text-left\">\n          <h1 class=\"c8y-icon c8y-icon-data-points c8y-icon-duocolor\"></h1>\n          <div>\n            <p>\n              <strong translate>No data points to display.</strong>\n            </p>\n            <small translate>Select an asset from the list.</small>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template #loadingData>\n      <div class=\"p-16 text-center\">\n        <c8y-loading></c8y-loading>\n      </div>\n    </ng-template>\n    <div *ngIf=\"assetSelection | async as asset; else noDeviceEmptyState\" class=\"bg-inherit\">\n      <div class=\"p-l-16 p-r-16 p-t-8 p-b-8 sticky-top bg-inherit separator-bottom\">\n        <p\n          class=\"text-medium text-truncate\"\n          [title]=\"'Available data points' | translate\"\n        >\n          {{ 'Available data points' | translate }}\n        </p>\n        <div *ngIf=\"!loadingDatapoints\" id=\"search\" class=\"input-group input-group-search m-t-4\">\n          <input\n            type=\"search\"\n            class=\"form-control\"\n            placeholder=\"Search\u2026\"\n            [ngModel]=\"searchString\"\n            (ngModelChange)=\"searchStringChanged($event)\"\n          />\n          <span class=\"input-group-addon\">\n            <i c8yIcon=\"search\" *ngIf=\"!searchString; else clearSearchString\"></i>\n            <ng-template #clearSearchString>\n                <i\n                  c8yIcon=\"times\"\n                  class=\"text-muted\"\n                  *ngIf=\"searchString\"\n                  (click)=\"searchString = ''\"\n                ></i>\n            </ng-template>\n          </span>\n        </div>\n      </div>\n      <ng-container *ngIf=\"filteredDatapoints$ | async as filteredDatapoints; else loadingData\">\n        <ng-container *ngIf=\"!loadingDatapoints; else loadingData\">\n          <ng-container *ngIf=\"datapoints$ | async as datapoints\">\n            <div class=\"p-16\" *ngIf=\"!filteredDatapoints.length\">\n              <c8y-ui-empty-state\n                [icon]=\"'c8y-data-points'\"\n                [title]=\"'No data points to display.' | translate\"\n                [subtitle]=\"datapoints.length ? ('Try another search term.' | translate) : ('Select an asset with data points from the list.' | translate)\"\n                [horizontal]=\"true\"\n              ></c8y-ui-empty-state>\n            </div>\n\n\n\n            <c8y-list-group>\n              <c8y-list-item *ngIf=\"datapoints.length > maxNumberOfDatapoints && filteredDatapoints.length >= maxNumberOfDatapoints\"\n                class=\"sticky-top\"\n                style=\"top: 72px\"\n                translate\n              >\n                <div class=\"alert alert-warning m-b-0\">\n                  {{ 'Due to the large number, only a subset of data points are displayed. Use search to narrow down the number of results.' | translate}}\n                </div>\n              </c8y-list-item>\n              <c8y-datapoint-selector-list-item\n                [ngModel]=\"dp\"\n                [isSelected]=\"selectedDatapoints | includesDatapoint: dp\"\n                [datapointLibraryEntries]=\"datapointLibraryEntries\"\n                [disableTypeaheadIfSelected]=\"true\"\n                (added)=\"datapointAdded($event)\"\n                (removed)=\"datapointRemoved($event)\"\n                [highlightText]=\"searchStringChanges$ | async\"\n                class=\"d-contents\"\n                *ngFor=\"let dp of filteredDatapoints; trackBy: trackByFn\"\n              ></c8y-datapoint-selector-list-item>\n            </c8y-list-group>\n          </ng-container>\n        </ng-container>\n      </ng-container>\n    </div>\n  </div>\n  <!-- last column  -->\n  <div class=\"inner-scroll bg-gray-white\">\n    <p\n      class=\"text-medium m-b-4 p-l-16 p-r-16 p-t-8 p-b-8 separator-bottom sticky-top text-truncate\"\n      [title]=\"'Selected data points' | translate\"\n      translate\n    >\n      Selected data points\n    </p>\n    <div class=\"d-flex flex-wrap gap-8 p-l-16 p-r-16 p-b-16\">\n      <div class=\"c8y-datapoint-pill\" *ngFor=\"let selectedDp of selectedDatapoints\">\n        <button\n          [title]=\"'Remove' | translate\"\n          type=\"button\"\n          class=\"c8y-datapoint-pill__btn\"\n          (click)=\"datapointRemoved(selectedDp)\"\n        >\n          <i c8yIcon=\"remove\" class=\"icon-14\"></i>\n        </button>\n        <div\n          class=\"c8y-datapoint-pill__label\"\n          [title]=\"selectedDp | datapointLabel: { doNotUseLabel: true, includeDevice: true }\"\n        >\n          <i\n            c8yIcon=\"circle\"\n            class=\"m-r-4 icon-14\"\n            [style.color]=\"selectedDp.color\"\n          ></i>\n          <span class=\"text-truncate\">\n            <span class=\"text-truncate\">{{ selectedDp | datapointLabel }}</span>\n            <small class=\"text-muted text-10\" *ngIf=\"selectedDp?.__target?.name\">\n              {{ selectedDp?.__target?.name }}\n            </small>\n          </span>\n        </div>\n      </div>\n    </div>\n    <div class=\"p-16\" *ngIf=\"!selectedDatapoints || !selectedDatapoints.length\">\n      <div class=\"c8y-empty-state text-left\">\n        <h1 class=\"c8y-icon c8y-icon-data-points c8y-icon-duocolor\"></h1>\n        <p>\n          <strong translate>No data points selected.</strong>\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n",
                providers: [
                    {
                        provide: i1.NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: i0.forwardRef(function () { return DatapointSelectorComponent; })
                    }
                ]
            }]
    }], function () { return [{ type: DatapointLibraryService }]; }, { allowChangingContext: [{
            type: i0.Input
        }], allowDatapointsFromMultipleAssets: [{
            type: i0.Input
        }], defaultActiveState: [{
            type: i0.Input
        }], ignoreDatapointTemplates: [{
            type: i0.Input
        }], guessDatapointUnit: [{
            type: i0.Input
        }], allowSearch: [{
            type: i0.Input
        }], contextAsset: [{
            type: i0.Input
        }] }); })();
        return DatapointSelectorComponent;
    }());
    DatapointSelectorComponent.ctorParameters = function () { return [
        { type: DatapointLibraryService }
    ]; };
    DatapointSelectorComponent.propDecorators = {
        contextAsset: [{ type: i0.Input }],
        allowChangingContext: [{ type: i0.Input }],
        allowDatapointsFromMultipleAssets: [{ type: i0.Input }],
        defaultActiveState: [{ type: i0.Input }],
        ignoreDatapointTemplates: [{ type: i0.Input }],
        guessDatapointUnit: [{ type: i0.Input }],
        allowSearch: [{ type: i0.Input }]
    };

    var DatapointTemplatePopoverComponent = /** @class */ (function () {
        function DatapointTemplatePopoverComponent() {
            this.attributes = [
                {
                    label: i2.gettext('Fragment'),
                    key: 'fragment'
                },
                {
                    label: i2.gettext('Series'),
                    key: 'series'
                },
                {
                    label: i2.gettext('Unit'),
                    key: 'unit'
                },
                {
                    label: i2.gettext('Range'),
                    key: 'min'
                },
                {
                    label: i2.gettext('Target'),
                    key: 'target'
                },
                {
                    label: i2.gettext('Yellow range'),
                    labelColor: 'yellow',
                    key: 'yellowRangeMin'
                },
                {
                    label: i2.gettext('Red range'),
                    labelColor: 'red',
                    key: 'redRangeMin'
                }
            ];
        }
DatapointTemplatePopoverComponent.ɵfac = function DatapointTemplatePopoverComponent_Factory(t) { return new (t || DatapointTemplatePopoverComponent)(); };
DatapointTemplatePopoverComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointTemplatePopoverComponent, selectors: [["c8y-datapoint-template-popover"]], inputs: { attributes: "attributes", datapoint: "datapoint" }, decls: 7, vars: 5, consts: [[1, "text-medium"], ["c8yIcon", "circle"], [1, "list-unstyled", "small", "p-t-16"], [4, "ngFor", "ngForOf"], ["class", "p-t-4 p-b-4 flex-row separator-bottom text-nowrap", 4, "ngIf"], [1, "p-t-4", "p-b-4", "flex-row", "separator-bottom", "text-nowrap"], [1, "small", "m-b-0", "m-r-8"], ["c8yIcon", "square", 3, "color", 4, "ngIf"], [3, "ngSwitch"], ["class", "flex-item-right", 4, "ngSwitchCase"], ["class", "flex-item-right", 4, "ngSwitchDefault"], ["c8yIcon", "square"], [1, "flex-item-right"]], template: function DatapointTemplatePopoverComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p", 0);
        ɵngcc0.ɵɵelement(1, "i", 1);
        ɵngcc0.ɵɵtext(2);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "p");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "ul", 2);
        ɵngcc0.ɵɵtemplate(6, DatapointTemplatePopoverComponent_ng_container_6_Template, 2, 1, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("color", ctx.datapoint.color);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.datapoint.label, "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ctx.datapoint.description);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.attributes);
    } }, directives: [ɵngcc3.IconDirective, ɵngcc2.NgForOf, ɵngcc2.NgIf, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc2.NgSwitchDefault], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointTemplatePopoverComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-datapoint-template-popover',
                template: "<p class=\"text-medium\">\n  <i c8yIcon=\"circle\" [style.color]=\"datapoint.color\"></i>\n  {{ datapoint.label }}\n</p>\n<p>{{ datapoint.description }}</p>\n\n<ul class=\"list-unstyled small p-t-16\">\n  <ng-container *ngFor=\"let attribute of attributes; let i = index\">\n    <li\n      class=\"p-t-4 p-b-4 flex-row separator-bottom text-nowrap\"\n      *ngIf=\"datapoint[attribute.key] !== undefined\"\n    >\n      <label class=\"small m-b-0 m-r-8\">\n        <i *ngIf=\"attribute.labelColor\" c8yIcon=\"square\" [style.color]=\"attribute.labelColor\"></i>\n        {{ attribute.label | translate }}\n      </label>\n      <ng-container [ngSwitch]=\"attribute.key\">\n        <span *ngSwitchCase=\"'min'\" class=\"flex-item-right\">\n          {{ datapoint['min'] }} \u2014 {{ datapoint['max'] }}\n        </span>\n        <span *ngSwitchCase=\"'yellowRangeMin'\" class=\"flex-item-right\">\n          {{ datapoint['yellowRangeMin'] }} \u2014 {{ datapoint['yellowRangeMax'] }}\n        </span>\n        <span *ngSwitchCase=\"'redRangeMin'\" class=\"flex-item-right\">\n          {{ datapoint['redRangeMin'] }} \u2014 {{ datapoint['redRangeMax'] }}\n        </span>\n        <span *ngSwitchDefault class=\"flex-item-right\">\n          {{ datapoint[attribute.key] }}\n        </span>\n      </ng-container>\n    </li>\n  </ng-container>\n</ul>\n"
            }]
    }], function () { return []; }, { attributes: [{
            type: i0.Input
        }], datapoint: [{
            type: i0.Input
        }] }); })();
        return DatapointTemplatePopoverComponent;
    }());
    DatapointTemplatePopoverComponent.propDecorators = {
        datapoint: [{ type: i0.Input }],
        attributes: [{ type: i0.Input }]
    };

    var DatapointLabelPipe = /** @class */ (function () {
        function DatapointLabelPipe() {
        }
        DatapointLabelPipe.prototype.transform = function (datapoint, options) {
            if (options === void 0) { options = { includeDevice: false, doNotUseLabel: false }; }
            var _a, _b, _c, _d;
            var label = '';
            try {
                if (!(options === null || options === void 0 ? void 0 : options.doNotUseLabel) && datapoint.label) {
                    label = datapoint.label;
                }
                else {
                    label = datapoint.fragment + " \u2192 " + datapoint.series;
                }
                if ((options === null || options === void 0 ? void 0 : options.includeDevice) && (((_a = datapoint.__target) === null || _a === void 0 ? void 0 : _a.name) || ((_b = datapoint.__target) === null || _b === void 0 ? void 0 : _b.id))) {
                    label += " (" + (((_c = datapoint.__target) === null || _c === void 0 ? void 0 : _c.name) || ((_d = datapoint.__target) === null || _d === void 0 ? void 0 : _d.id)) + ")";
                }
            }
            catch (e) {
                // nothing to do
            }
            return label;
        };
DatapointLabelPipe.ɵfac = function DatapointLabelPipe_Factory(t) { return new (t || DatapointLabelPipe)(); };
DatapointLabelPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "datapointLabel", type: DatapointLabelPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointLabelPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'datapointLabel'
            }]
    }], function () { return []; }, null); })();
        return DatapointLabelPipe;
    }());

    var FilterDatapointsPipe = /** @class */ (function () {
        function FilterDatapointsPipe() {
        }
        FilterDatapointsPipe.prototype.transform = function (datapoints, searchString) {
            var _this = this;
            if (!searchString || !datapoints || !Array.isArray(datapoints)) {
                return datapoints;
            }
            var lowerCaseSearchString = searchString.toLowerCase().trim();
            return datapoints.filter(function (datapoint) { return _this.includesSearchStringIgnoringCasing(datapoint, lowerCaseSearchString); });
        };
        FilterDatapointsPipe.prototype.includesSearchStringIgnoringCasing = function (datapoint, lowerCaseSearchString) {
            var _a, _b, _c;
            var label = (_a = datapoint.label) === null || _a === void 0 ? void 0 : _a.toLowerCase();
            if (label && label.includes(lowerCaseSearchString)) {
                return true;
            }
            var fragment = (_b = datapoint.fragment) === null || _b === void 0 ? void 0 : _b.toLowerCase();
            if (fragment && fragment.includes(lowerCaseSearchString)) {
                return true;
            }
            var series = (_c = datapoint.series) === null || _c === void 0 ? void 0 : _c.toLowerCase();
            if (series && series.includes(lowerCaseSearchString)) {
                return true;
            }
            return false;
        };
FilterDatapointsPipe.ɵfac = function FilterDatapointsPipe_Factory(t) { return new (t || FilterDatapointsPipe)(); };
FilterDatapointsPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "filterDatapoints", type: FilterDatapointsPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FilterDatapointsPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'filterDatapoints'
            }]
    }], function () { return []; }, null); })();
        return FilterDatapointsPipe;
    }());

    var IncludesDatapointPipe = /** @class */ (function () {
        function IncludesDatapointPipe() {
        }
        IncludesDatapointPipe.prototype.transform = function (datapointList, datapoint) {
            if (!Array.isArray(datapointList) || !datapoint) {
                return false;
            }
            return datapointList.some(function (tmp) {
                var _a, _b;
                return tmp.fragment === datapoint.fragment &&
                    tmp.series === datapoint.series &&
                    ((_a = tmp.__target) === null || _a === void 0 ? void 0 : _a.id) === ((_b = datapoint.__target) === null || _b === void 0 ? void 0 : _b.id);
            });
        };
IncludesDatapointPipe.ɵfac = function IncludesDatapointPipe_Factory(t) { return new (t || IncludesDatapointPipe)(); };
IncludesDatapointPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: "includesDatapoint", type: IncludesDatapointPipe, pure: true });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IncludesDatapointPipe, [{
        type: i0.Pipe,
        args: [{
                name: 'includesDatapoint'
            }]
    }], function () { return []; }, null); })();
        return IncludesDatapointPipe;
    }());

    var DatapointSelectorModule = /** @class */ (function () {
        function DatapointSelectorModule() {
        }
DatapointSelectorModule.ɵfac = function DatapointSelectorModule_Factory(t) { return new (t || DatapointSelectorModule)(); };
DatapointSelectorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DatapointSelectorModule });
DatapointSelectorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            assetsNavigator.AssetSelectorModule,
            collapse.CollapseModule,
            i2.CoreModule,
            dropdown.BsDropdownModule,
            i1$2.ModalModule,
            popover.PopoverModule,
            dragDrop.DragDropModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectorModule, [{
        type: i0.NgModule,
        args: [{
                imports: [
                    assetsNavigator.AssetSelectorModule,
                    collapse.CollapseModule,
                    i2.CoreModule,
                    dropdown.BsDropdownModule,
                    i1$2.ModalModule,
                    popover.PopoverModule,
                    dragDrop.DragDropModule
                ],
                declarations: [
                    DatapointSelectorComponent,
                    DatapointSelectorModalComponent,
                    DatapointSelectorListItemComponent,
                    DatapointSelectionListComponent,
                    DatapointTemplatePopoverComponent,
                    IncludesDatapointPipe,
                    DatapointLabelPipe,
                    FilterDatapointsPipe,
                    DatapointAttributesFormComponent
                ],
                exports: [
                    DatapointSelectorComponent,
                    DatapointSelectorModalComponent,
                    DatapointSelectorListItemComponent,
                    DatapointSelectionListComponent,
                    DatapointTemplatePopoverComponent,
                    IncludesDatapointPipe,
                    DatapointLabelPipe,
                    DatapointAttributesFormComponent
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatapointSelectorModule, { declarations: [DatapointSelectorComponent, DatapointSelectorModalComponent, DatapointSelectorListItemComponent, DatapointSelectionListComponent, DatapointTemplatePopoverComponent, IncludesDatapointPipe, DatapointLabelPipe, FilterDatapointsPipe, DatapointAttributesFormComponent], imports: [ɵngcc9.AssetSelectorModule, ɵngcc10.CollapseModule, ɵngcc3.CoreModule, ɵngcc11.BsDropdownModule, ɵngcc6.ModalModule, ɵngcc4.PopoverModule, ɵngcc8.DragDropModule], exports: [DatapointSelectorComponent, DatapointSelectorModalComponent, DatapointSelectorListItemComponent, DatapointSelectionListComponent, DatapointTemplatePopoverComponent, IncludesDatapointPipe, DatapointLabelPipe, DatapointAttributesFormComponent] }); })();
        return DatapointSelectorModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AXIS_TYPES = AXIS_TYPES;
    exports.CHART_LINE_TYPES = CHART_LINE_TYPES;
    exports.CHART_RENDER_TYPES = CHART_RENDER_TYPES;
    exports.DATAPOINT_LIBRARY_FRAGMENT = DATAPOINT_LIBRARY_FRAGMENT;
    exports.DatapointAttributesFormComponent = DatapointAttributesFormComponent;
    exports.DatapointAttributesFormValidationService = DatapointAttributesFormValidationService;
    exports.DatapointLibraryService = DatapointLibraryService;
    exports.DatapointSelectionListComponent = DatapointSelectionListComponent;
    exports.DatapointSelectorComponent = DatapointSelectorComponent;
    exports.DatapointSelectorListItemComponent = DatapointSelectorListItemComponent;
    exports.DatapointSelectorModalComponent = DatapointSelectorModalComponent;
    exports.DatapointSelectorModule = DatapointSelectorModule;
    exports.DatapointSelectorService = DatapointSelectorService;
    exports["ɵa"] = DatapointTemplatePopoverComponent;
    exports["ɵb"] = IncludesDatapointPipe;
    exports["ɵc"] = DatapointLabelPipe;
    exports["ɵd"] = FilterDatapointsPipe;

    Object.defineProperty(exports, '__esModule', { value: true });
exports.DatapointTemplatePopoverComponent = DatapointTemplatePopoverComponent;
exports.IncludesDatapointPipe = IncludesDatapointPipe;
exports.DatapointLabelPipe = DatapointLabelPipe;

}));

//# sourceMappingURL=c8y-ngx-components-datapoint-selector.umd.js.map