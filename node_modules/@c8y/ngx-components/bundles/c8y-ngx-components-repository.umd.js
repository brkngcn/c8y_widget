(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@c8y/ngx-components/repository/firmware'), require('@c8y/ngx-components/repository/software'), require('@c8y/ngx-components/repository/configuration')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/repository', ['exports', '@angular/core', '@c8y/ngx-components/repository/firmware', '@c8y/ngx-components/repository/software', '@c8y/ngx-components/repository/configuration'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].repository = {}), global.ng.core, global.c8y["ngx-components"].repository.firmware, global.c8y["ngx-components"].repository.software, global.c8y["ngx-components"].repository.configuration));
})(this, (function (exports, core, firmware, software, configuration) { 'use strict';

    var RepositoryModule = /** @class */ (function () {
        function RepositoryModule() {
        }
        return RepositoryModule;
    }());
    RepositoryModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [
                        configuration.ConfigurationRepositoryModule,
                        firmware.FirmwareRepositoryModule,
                        software.SoftwareRepositoryModule,
                    ]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.RepositoryModule = RepositoryModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-repository.umd.js.map
