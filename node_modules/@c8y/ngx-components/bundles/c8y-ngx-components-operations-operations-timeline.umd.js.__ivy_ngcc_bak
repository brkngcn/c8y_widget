(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@c8y/ngx-components'), require('@c8y/ngx-components/operations/shared'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('ngx-bootstrap/collapse'), require('ngx-bootstrap/tooltip')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/operations-timeline', ['exports', '@angular/core', '@c8y/ngx-components', '@c8y/ngx-components/operations/shared', 'rxjs', 'rxjs/operators', '@angular/common', 'ngx-bootstrap/collapse', 'ngx-bootstrap/tooltip'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations["operations-timeline"] = {}), global.ng.core, global.c8y["ngx-components"], global.c8y["ngx-components"].operations.shared, global.rxjs, global.rxjs.operators, global.ng.common, global.collapse, global.tooltip));
})(this, (function (exports, core, ngxComponents, shared, rxjs, operators, common, collapse, tooltip) { 'use strict';

    var OperationsTimelineComponent = /** @class */ (function () {
        function OperationsTimelineComponent(realtime, operationsService) {
            this.realtime = realtime;
            this.operationsService = operationsService;
            this.filterPipe = rxjs.pipe(operators.tap());
            this.footerTemplates = [];
            this.propertiesToHide = [];
            this.OPERATION_STATUS_OPTIONS_MAP = shared.OPERATION_STATUS_OPTIONS_MAP;
        }
        return OperationsTimelineComponent;
    }());
    OperationsTimelineComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-operations-timeline',
                    template: "<div class=\"card\" *ngIf=\"!operations?.data || !operations?.data?.length\">\n  <div class=\"c8y-empty-state text-left\">\n    <h1 class=\"c8y-icon c8y-icon-energy c8y-icon-duocolor m-l-8\"></h1>\n    <p>{{ 'No recent operations found.' | translate }}</p>\n  </div>\n</div>\n\n<c8y-list-group>\n  <c8y-li-timeline\n    *c8yFor=\"\n      let op of operations;\n      pipe: filterPipe;\n      realtime: realtime;\n      realtimeOptions: { entityOrId: sourceId }\n    \"\n  >\n    {{ op.creationTime | date: 'medium' }}\n    <c8y-li #li (click)=\"li.toggleCollapsed()\">\n      <c8y-li-icon>\n        <i\n          [c8yIcon]=\"OPERATION_STATUS_OPTIONS_MAP[op.status].icon\"\n          [ngClass]=\"OPERATION_STATUS_OPTIONS_MAP[op.status].styleClass\"\n          [tooltip]=\"op.status | translate\"\n        ></i>\n      </c8y-li-icon>\n      <c8y-li-body>\n        <div class=\"flex-row\">\n          <div>\n            {{ op.status | translate }} <br class=\"visible-xs visible-sm\" />\n            <ng-container\n              *ngIf=\"bodyTemplate; else defaultBody\"\n              [ngTemplateOutlet]=\"bodyTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: op }\"\n            ></ng-container>\n            <ng-template #defaultBody>\n              <small>{{ op.description }}</small>\n            </ng-template>\n          </div>\n          <div class=\"flex-item-right showOnHover\" *ngIf=\"op.status === 'PENDING'\">\n            <button\n              class=\"btn btn-clean\"\n              title=\"{{ 'Cancel operation' | translate }}\"\n              (click)=\"$event.stopPropagation(); operationsService.cancel(op)\"\n            >\n              <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n            </button>\n          </div>\n        </div>\n      </c8y-li-body>\n\n      <c8y-li-collapse>\n        <div class=\"legend form-block\" translate>Details</div>\n        <ul class=\"list-unstyled small\">\n          <li\n            class=\"p-t-4 p-b-4 flex-row separator-bottom\"\n            *ngFor=\"let prop of operationsService.getStandardKeys(op) | keyvalue\"\n          >\n            <label class=\"small m-b-0 m-r-8 flex-item-v-start\">\n              {{ prop.value | translate }}\n            </label>\n            <span class=\"flex-item-right\">\n              {{ op[prop.key] | translate }}\n            </span>\n          </li>\n          <li\n            class=\"p-t-4 p-b-4 flex-row separator-bottom\"\n            *ngFor=\"let key of operationsService.getNonStandardKeys(op, propertiesToHide)\"\n          >\n            <label class=\"small m-b-0 m-r-8 flex-item-v-start\">\n              {{ key | humanize | translate }}\n            </label>\n            <span class=\"flex-item-right text-code\">\n              {{ op[key] | json }}\n            </span>\n          </li>\n        </ul>\n        <ng-container\n          *ngFor=\"let footer of footerTemplates\"\n          [ngTemplateOutlet]=\"footer\"\n          [ngTemplateOutletContext]=\"{ $implicit: op }\"\n        ></ng-container>\n      </c8y-li-collapse>\n    </c8y-li>\n  </c8y-li-timeline>\n</c8y-list-group>\n"
                },] }
    ];
    OperationsTimelineComponent.ctorParameters = function () { return [
        { type: ngxComponents.OperationRealtimeService },
        { type: shared.OperationsService }
    ]; };
    OperationsTimelineComponent.propDecorators = {
        operations: [{ type: core.Input }],
        sourceId: [{ type: core.Input }],
        filterPipe: [{ type: core.Input }],
        bodyTemplate: [{ type: core.Input }],
        footerTemplates: [{ type: core.Input }],
        propertiesToHide: [{ type: core.Input }]
    };

    var OperationsTimelineModule = /** @class */ (function () {
        function OperationsTimelineModule() {
        }
        return OperationsTimelineModule;
    }());
    OperationsTimelineModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [common.CommonModule, ngxComponents.CoreModule, collapse.CollapseModule, tooltip.TooltipModule, shared.OperationsSharedModule],
                    declarations: [OperationsTimelineComponent],
                    exports: [OperationsTimelineComponent]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.OperationsTimelineComponent = OperationsTimelineComponent;
    exports.OperationsTimelineModule = OperationsTimelineModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-operations-operations-timeline.umd.js.map
