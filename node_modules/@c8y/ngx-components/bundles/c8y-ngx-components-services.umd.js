(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('@c8y/ngx-components'),require('@angular/router'),require('@angular/common'),require('ngx-bootstrap/tooltip'),require('@c8y/client'),require('@c8y/ngx-components/device-grid'),exports, require('@angular/core'), require('@c8y/ngx-components'), require('@c8y/ngx-components/device-grid'), require('@angular/forms'), require('lodash-es'), require('@angular/router'), require('@c8y/client'), require('ngx-bootstrap/tooltip')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/services', ['@angular/core','@c8y/ngx-components','@angular/router','@angular/common','ngx-bootstrap/tooltip','@c8y/client','@c8y/ngx-components/device-grid','exports', '@angular/core', '@c8y/ngx-components', '@c8y/ngx-components/device-grid', '@angular/forms', 'lodash-es', '@angular/router', '@c8y/client', 'ngx-bootstrap/tooltip'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.c8y.ngxComponents,global.ng.router,global.ng.common,global.ngxBootstrap.tooltip,global.c8y.client,global.c8y.ngxComponents.deviceGrid,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].services = {}), global.ng.core, global.c8y["ngx-components"], global.c8y["ngx-components"]["device-grid"], global.ng.forms, global.lodashEs, global.ng.router, global.client, global.tooltip));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,exports, i0, ngxComponents, deviceGrid, forms, lodashEs, router, client, tooltip) { 
var _c0 = function (a1) { return ["/service", a1]; };
function StatusCellRendererComponent_ng_container_1_i_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 4);
    ɵngcc0.ɵɵpipe(1, "translate");
} if (rf & 2) {
    var option_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵclassMap(option_r2.class);
    ɵngcc0.ɵɵproperty("c8yIcon", option_r2.icon)("tooltip", ɵngcc0.ɵɵpipeBind1(1, 5, option_r2.label));
} }
function StatusCellRendererComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, StatusCellRendererComponent_ng_container_1_i_1_Template, 2, 7, "i", 3);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var option_r2 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", option_r2.key);
} }
function StatusCellRendererComponent_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 5);
} if (rf & 2) {
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("tooltip", ctx_r1.context.item.status);
} }
function ServicesDeviceTabComponent_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ServicesDeviceTabComponent_ng_container_5_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵelement(2, "h1", 8);
    ɵngcc0.ɵɵelementStart(3, "h3", 9);
    ɵngcc0.ɵɵtext(4, "No services to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} }
function ServicesDeviceTabComponent_ng_container_5_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "h1", 10);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "p");
    ɵngcc0.ɵɵelementStart(3, "strong");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "small");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 2, "No results to display."));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 4, "Refine your search terms or check your spelling."));
} }
function ServicesDeviceTabComponent_ng_container_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, ServicesDeviceTabComponent_ng_container_5_ng_container_1_Template, 5, 0, "ng-container", 5);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵtemplate(3, ServicesDeviceTabComponent_ng_container_5_ng_template_3_Template, 9, 6, "ng-template", null, 6, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var _r4 = ɵngcc0.ɵɵreference(4);
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 2, ctx_r1.sizeRequest) === 0)("ngIfElse", _r4);
} }
function ServicesDeviceTabComponent_ng_container_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-column", 11);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var column_r6 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("name", column_r6.name);
} }
var _c1 = function () { return []; };
'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var LastUpdatedDateCellRendererComponent = /** @class */ (function () {
        function LastUpdatedDateCellRendererComponent(context) {
            this.context = context;
        }
LastUpdatedDateCellRendererComponent.ɵfac = function LastUpdatedDateCellRendererComponent_Factory(t) { return new (t || LastUpdatedDateCellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CellRendererContext)); };
LastUpdatedDateCellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LastUpdatedDateCellRendererComponent, selectors: [["ng-component"]], decls: 2, vars: 3, template: function LastUpdatedDateCellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtext(0);
        ɵngcc0.ɵɵpipe(1, "c8yDate");
    } if (rf & 2) {
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(1, 1, ctx.context.value));
    } }, pipes: [ɵngcc1.DatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LastUpdatedDateCellRendererComponent, [{
        type: i0.Component,
        args: [{
                template: "{{ context.value | c8yDate }}"
            }]
    }], function () { return [{ type: ɵngcc1.CellRendererContext }]; }, null); })();
        return LastUpdatedDateCellRendererComponent;
    }());
    LastUpdatedDateCellRendererComponent.ctorParameters = function () { return [
        { type: ngxComponents.CellRendererContext }
    ]; };

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || Array.prototype.slice.call(from));
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var LastUpdatedDateGridColumn = /** @class */ (function (_super) {
        __extends(LastUpdatedDateGridColumn, _super);
        function LastUpdatedDateGridColumn(initialColumnConfig) {
            var _this = _super.call(this, initialColumnConfig) || this;
            var self = _this;
            _this.path = 'lastUpdated';
            _this.name = 'lastUpdatedDate';
            _this.header = ngxComponents.gettext('Last updated');
            _this.cellRendererComponent = LastUpdatedDateCellRendererComponent;
            _this.filterable = true;
            _this.filteringConfig = {
                fields: [{
                        type: 'object',
                        key: 'lastUpdated',
                        fieldGroup: [
                            {
                                type: 'date-time',
                                key: 'after',
                                templateOptions: {
                                    label: ngxComponents.gettext('Show services updated after')
                                },
                                expressionProperties: {
                                    'templateOptions.maxDate': function (model) { return model === null || model === void 0 ? void 0 : model.before; },
                                },
                            },
                            {
                                type: 'date-time',
                                key: 'before',
                                templateOptions: {
                                    label: ngxComponents.gettext('And before`date`')
                                },
                                expressionProperties: {
                                    'templateOptions.minDate': function (model) { return model === null || model === void 0 ? void 0 : model.after; },
                                },
                            }
                        ]
                    }],
                formGroup: new forms.FormGroup({}),
                getFilter: function (model) {
                    var _a, _b;
                    var filter = {};
                    var dates = model && model.lastUpdated;
                    if (dates && (dates.after || dates.before)) {
                        filter.__and = [];
                        if (dates.after) {
                            var after = self.formatDate(dates.after);
                            filter.__and.push({
                                __or: (_a = {},
                                    _a[self.path] = { __gt: after },
                                    _a[self.path + ".date"] = { __gt: after },
                                    _a)
                            });
                        }
                        if (dates.before) {
                            var before = self.formatDate(dates.before);
                            filter.__and.push({
                                __or: (_b = {},
                                    _b[self.path] = { __lt: before },
                                    _b[self.path + ".date"] = { __lt: before },
                                    _b)
                            });
                        }
                    }
                    return filter;
                }
            };
            _this.sortable = true;
            _this.sortingConfig = {
                pathSortingConfigs: [{ path: _this.path + ".date" }, { path: _this.path }]
            };
            return _this;
        }
        LastUpdatedDateGridColumn.prototype.formatDate = function (dateToFormat) {
            return new Date(dateToFormat).toISOString();
        };
        return LastUpdatedDateGridColumn;
    }(deviceGrid.BaseDeviceGridColumn));

    var NameCellRendererComponent = /** @class */ (function () {
        function NameCellRendererComponent(context) {
            this.context = context;
        }
NameCellRendererComponent.ɵfac = function NameCellRendererComponent_Factory(t) { return new (t || NameCellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CellRendererContext)); };
NameCellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NameCellRendererComponent, selectors: [["ng-component"]], decls: 2, vars: 5, consts: [[1, "interact", 3, "routerLink", "title"]], template: function NameCellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("routerLink", ɵngcc0.ɵɵpureFunction1(3, _c0, ctx.context.item.id))("title", ctx.context.item.name);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.context.item.name, " ");
    } }, directives: [ɵngcc2.RouterLinkWithHref], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NameCellRendererComponent, [{
        type: i0.Component,
        args: [{
                template: "\n    <a [routerLink]=\"['/service', context.item.id]\" [title]=\"context.item.name\" class=\"interact\">\n      {{ context.item.name }}\n    </a>\n  "
            }]
    }], function () { return [{ type: ɵngcc1.CellRendererContext }]; }, null); })();
        return NameCellRendererComponent;
    }());
    NameCellRendererComponent.ctorParameters = function () { return [
        { type: ngxComponents.CellRendererContext }
    ]; };

    var ServiceNameGridColumn = /** @class */ (function (_super) {
        __extends(ServiceNameGridColumn, _super);
        function ServiceNameGridColumn(initialColumnConfig) {
            var _this = _super.call(this, initialColumnConfig) || this;
            _this.name = 'name';
            _this.path = 'name';
            _this.header = ngxComponents.gettext('Name');
            _this.cellRendererComponent = NameCellRendererComponent;
            _this.filterable = true;
            _this.filteringConfig = {
                fields: ngxComponents.getBasicInputArrayFormFieldConfig({
                    key: 'names',
                    label: ngxComponents.gettext('Filter services by name'),
                    addText: ngxComponents.gettext('Add next`name`'),
                    tooltip: ngxComponents.gettext('Use * as a wildcard character'),
                    placeholder: ngxComponents.gettext('daemon`SERVICE_NAME`')
                }),
                getFilter: function (model) {
                    var filter = {};
                    if (model.names.length) {
                        filter.name = { __in: model.names };
                    }
                    return filter;
                }
            };
            _this.sortable = true;
            _this.sortingConfig = {
                pathSortingConfigs: [{ path: _this.path }]
            };
            return _this;
        }
        return ServiceNameGridColumn;
    }(deviceGrid.BaseDeviceGridColumn));

    var ServiceTypeGridColumn = /** @class */ (function (_super) {
        __extends(ServiceTypeGridColumn, _super);
        function ServiceTypeGridColumn(initialColumnConfig) {
            var _this = _super.call(this, initialColumnConfig) || this;
            _this.name = 'serviceType';
            _this.path = 'serviceType';
            _this.header = ngxComponents.gettext('Type');
            _this.filterable = true;
            _this.filteringConfig = {
                fields: ngxComponents.getBasicInputArrayFormFieldConfig({
                    key: 'serviceTypes',
                    label: ngxComponents.gettext('Filter services by type'),
                    addText: ngxComponents.gettext('Add next`type`'),
                    tooltip: ngxComponents.gettext('Use * as a wildcard character'),
                    placeholder: 'systemd'
                }),
                getFilter: function (model) {
                    var filter = {};
                    if (model.serviceTypes.length) {
                        filter.serviceType = { __in: model.serviceTypes };
                    }
                    return filter;
                }
            };
            _this.sortable = true;
            _this.sortingConfig = {
                pathSortingConfigs: [{ path: _this.path }]
            };
            return _this;
        }
        return ServiceTypeGridColumn;
    }(deviceGrid.BaseDeviceGridColumn));

    /**
     * Extension hook allowing to register custom service statuses and configure their visual presentation.
     */
    var HOOK_SERVICE_STATUS = new i0.InjectionToken('SERVICE_STATUS');
    /**
     * Standard status options supported by the platform.
     */
    var SERVICE_STATUS_OPTIONS = [
        {
            key: 'up',
            label: ngxComponents.gettext('Up'),
            icon: 'check-circle',
            class: 'text-success'
        },
        {
            key: 'down',
            label: ngxComponents.gettext('Down'),
            icon: 'exclamation-circle',
            class: 'text-danger'
        },
        {
            key: 'unknown',
            label: ngxComponents.gettext('Unknown'),
            icon: 'inactive-state'
        }
    ];

    /**
     * The service for system wide registered service status options.
     * It provides the standard service statuses plus all custom status options
     * registered with the <code>HOOK_SERVICE_STATUS</code> extension hook.
     */
    var StatusOptionsService = /** @class */ (function () {
        function StatusOptionsService(options) {
            this._options = __spreadArray(__spreadArray([], __read(SERVICE_STATUS_OPTIONS)), __read(lodashEs.flatten(options)));
        }
        Object.defineProperty(StatusOptionsService.prototype, "options", {
            get: function () {
                return this._options;
            },
            enumerable: false,
            configurable: true
        });
StatusOptionsService.ɵfac = function StatusOptionsService_Factory(t) { return new (t || StatusOptionsService)(ɵngcc0.ɵɵinject(HOOK_SERVICE_STATUS, 8)); };
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StatusOptionsService, [{
        type: i0.Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: Array, decorators: [{
                type: i0.Optional
            }, {
                type: i0.Inject,
                args: [HOOK_SERVICE_STATUS]
            }] }]; }, null); })();
        return StatusOptionsService;
    }());
    StatusOptionsService.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function StatusOptionsService_Factory() { return new StatusOptionsService(i0__namespace.ɵɵinject(HOOK_SERVICE_STATUS, 8)); }, token: StatusOptionsService, providedIn: "root" });
    StatusOptionsService.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: i0.Optional }, { type: i0.Inject, args: [HOOK_SERVICE_STATUS,] }] }
    ]; };

    var StatusCellRendererComponent = /** @class */ (function () {
        function StatusCellRendererComponent(context, statusOptionsService) {
            this.context = context;
            this.statusOptionsService = statusOptionsService;
        }
StatusCellRendererComponent.ɵfac = function StatusCellRendererComponent_Factory(t) { return new (t || StatusCellRendererComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.CellRendererContext), ɵngcc0.ɵɵdirectiveInject(StatusOptionsService)); };
StatusCellRendererComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StatusCellRendererComponent, selectors: [["ng-component"]], decls: 3, vars: 2, consts: [[3, "ngSwitch"], [4, "ngFor", "ngForOf"], ["c8yIcon", "job", "class", "text-primary", "container", "body", "placement", "top", 3, "tooltip", 4, "ngSwitchDefault"], ["container", "body", "placement", "top", 3, "c8yIcon", "class", "tooltip", 4, "ngSwitchCase"], ["container", "body", "placement", "top", 3, "c8yIcon", "tooltip"], ["c8yIcon", "job", "container", "body", "placement", "top", 1, "text-primary", 3, "tooltip"]], template: function StatusCellRendererComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "span", 0);
        ɵngcc0.ɵɵtemplate(1, StatusCellRendererComponent_ng_container_1_Template, 2, 1, "ng-container", 1);
        ɵngcc0.ɵɵtemplate(2, StatusCellRendererComponent_i_2_Template, 1, 1, "i", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngSwitch", ctx.context.item.status);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.statusOptionsService.options);
    } }, directives: [ɵngcc3.NgSwitch, ɵngcc3.NgForOf, ɵngcc3.NgSwitchDefault, ɵngcc3.NgSwitchCase, ɵngcc1.IconDirective, ɵngcc4.TooltipDirective], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StatusCellRendererComponent, [{
        type: i0.Component,
        args: [{
                template: "<span [ngSwitch]=\"context.item.status\">\n  <ng-container *ngFor=\"let option of statusOptionsService.options\">\n    <i\n      *ngSwitchCase=\"option.key\"\n      [c8yIcon]=\"option.icon\"\n      class=\"{{ option.class }}\"\n      [tooltip]=\"option.label | translate\"\n      container=\"body\"\n      placement=\"top\"\n    ></i>\n  </ng-container>\n  <i\n    *ngSwitchDefault\n    c8yIcon=\"job\"\n    class=\"text-primary\"\n    [tooltip]=\"context.item.status\"\n    container=\"body\"\n    placement=\"top\"\n  ></i>\n</span>\n"
            }]
    }], function () { return [{ type: ɵngcc1.CellRendererContext }, { type: StatusOptionsService }]; }, null); })();
        return StatusCellRendererComponent;
    }());
    StatusCellRendererComponent.ctorParameters = function () { return [
        { type: ngxComponents.CellRendererContext },
        { type: StatusOptionsService }
    ]; };

    var StatusGridColumn = /** @class */ (function (_super) {
        __extends(StatusGridColumn, _super);
        function StatusGridColumn(statusOptionsService, initialColumnConfig) {
            var _this = _super.call(this, initialColumnConfig) || this;
            _this.name = 'status';
            _this.path = 'status';
            _this.header = ngxComponents.gettext('Status');
            _this.dataType = "icon" /* Icon */;
            _this.cellRendererComponent = StatusCellRendererComponent;
            _this.filterable = true;
            _this.resizable = false;
            _this.filteringConfig = {
                fields: __spreadArray([
                    {
                        key: 'statusOptions',
                        type: 'object',
                        templateOptions: {
                            label: ngxComponents.gettext('Show devices with status')
                        },
                        fieldGroup: __spreadArray([], __read(statusOptionsService.options.map(function (option) { return ({
                            key: option.key,
                            type: 'switch',
                            templateOptions: {
                                label: option.label
                            }
                        }); })))
                    }
                ], __read(ngxComponents.getBasicInputArrayFormFieldConfig({
                    key: 'custom',
                    label: ngxComponents.gettext('or filter by custom status'),
                    addText: ngxComponents.gettext('Add next`custom status`'),
                    tooltip: ngxComponents.gettext('Use * as a wildcard character'),
                    placeholder: ngxComponents.gettext('restarting`SERVICE_STATUS`'),
                    optional: true
                }))),
                getFilter: function (model) {
                    var filter = {};
                    filter.status = {
                        __in: __spreadArray(__spreadArray([], __read(lodashEs.entries((model === null || model === void 0 ? void 0 : model.statusOptions) || {})
                            .filter(function (_a) {
                            var _b = __read(_a, 2), _ = _b[0], value = _b[1];
                            return !!value;
                        })
                            .map(function (_a) {
                            var _b = __read(_a, 2), key = _b[0], _ = _b[1];
                            return key;
                        }))), __read(model.custom.filter(function (c) { return !!c; })))
                    };
                    return filter;
                }
            };
            _this.sortable = true;
            _this.sortingConfig = {
                pathSortingConfigs: [{ path: _this.path }]
            };
            return _this;
        }
        return StatusGridColumn;
    }(deviceGrid.BaseDeviceGridColumn));

    var SERVICE_FRAGMENT$1 = 'c8y_Service';
    var ServicesDeviceTabComponent = /** @class */ (function () {
        function ServicesDeviceTabComponent(route, inventoryService, gridService, statusOptionsService) {
            var _this = this;
            this.route = route;
            this.inventoryService = inventoryService;
            this.gridService = gridService;
            this.statusOptionsService = statusOptionsService;
            this.deviceId = this.route.snapshot.parent.data.contextData.id;
            this.sizeRequestDone = false;
            this.refresh$ = new i0.EventEmitter();
            this.pagination = {
                pageSize: 50,
                currentPage: 1
            };
            this.columns = [
                new StatusGridColumn(this.statusOptionsService),
                new ServiceNameGridColumn(),
                new ServiceTypeGridColumn(),
                new LastUpdatedDateGridColumn()
            ];
            this.queriesUtil = new client.QueriesUtil();
            this.serverSideDataCallback = this.onDataSourceModifier.bind(this);
            this.sizeRequest = this.inventoryService
                .childAdditionsList(this.deviceId, {
                query: "type eq " + SERVICE_FRAGMENT$1,
                withTotalPages: true,
                pageSize: 1
            })
                .then(function (response) {
                var _a;
                _this.sizeRequestDone = true;
                return (_a = response === null || response === void 0 ? void 0 : response.paging) === null || _a === void 0 ? void 0 : _a.totalPages;
            });
        }
        ServicesDeviceTabComponent.prototype.onDataSourceModifier = function (dataSourceModifier) {
            return __awaiter(this, void 0, void 0, function () {
                var serverSideDataResult, query, dataRequest, filtererdSizeRequest, _b, dataResponse, size, filteredSize, res, data, paging;
                return __generator(this, function (_c) {
                    switch (_c.label) {
                        case 0:
                            query = this.queriesUtil.buildQuery(this.queriesUtil.addAndFilter(this.gridService.getQueryObj(dataSourceModifier.columns), {
                                type: SERVICE_FRAGMENT$1
                            }));
                            dataRequest = this.inventoryService.childAdditionsList(this.deviceId, {
                                query: query,
                                withTotalPages: true,
                                pageSize: dataSourceModifier.pagination.pageSize,
                                currentPage: dataSourceModifier.pagination.currentPage
                            });
                            filtererdSizeRequest = this.inventoryService
                                .childAdditionsList(this.deviceId, {
                                query: query,
                                withTotalPages: true,
                                pageSize: 1
                            })
                                .then(function (response) { var _a; return (_a = response === null || response === void 0 ? void 0 : response.paging) === null || _a === void 0 ? void 0 : _a.totalPages; });
                            return [4 /*yield*/, Promise.all([
                                    dataRequest,
                                    this.sizeRequest,
                                    filtererdSizeRequest
                                ])];
                        case 1:
                            _b = __read.apply(void 0, [_c.sent(), 3]), dataResponse = _b[0], size = _b[1], filteredSize = _b[2];
                            res = dataResponse.res, data = dataResponse.data, paging = dataResponse.paging;
                            serverSideDataResult = {
                                res: res,
                                data: data,
                                paging: paging,
                                filteredSize: filteredSize,
                                size: size
                            };
                            return [2 /*return*/, serverSideDataResult];
                    }
                });
            });
        };
        ServicesDeviceTabComponent.prototype.trackByName = function (_index, column) {
            return column.name;
        };
ServicesDeviceTabComponent.ɵfac = function ServicesDeviceTabComponent_Factory(t) { return new (t || ServicesDeviceTabComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.InventoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.DeviceGridService), ɵngcc0.ɵɵdirectiveInject(StatusOptionsService)); };
ServicesDeviceTabComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ServicesDeviceTabComponent, selectors: [["c8y-services-device-tab"]], decls: 7, vars: 14, consts: [[1, "content-fullpage"], [3, "title", "refresh", "actionControls", "pagination", "columns", "infiniteScroll", "serverSideDataCallback"], [1, "c8y-empty-state"], [4, "ngIf"], [4, "ngFor", "ngForOf", "ngForTrackBy"], [4, "ngIf", "ngIfElse"], ["noResults", ""], [1, "text-center"], ["c8yIcon", "c8y-tools", 1, "c8y-icon-duocolor"], ["translate", ""], ["c8yIcon", "search"], [3, "name"]], template: function ServicesDeviceTabComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "c8y-data-grid", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementStart(3, "div", 2);
        ɵngcc0.ɵɵtemplate(4, ServicesDeviceTabComponent_ng_container_4_Template, 2, 0, "ng-container", 3);
        ɵngcc0.ɵɵtemplate(5, ServicesDeviceTabComponent_ng_container_5_Template, 5, 4, "ng-container", 3);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(6, ServicesDeviceTabComponent_ng_container_6_Template, 2, 1, "ng-container", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 11, "Services"))("refresh", ctx.refresh$)("actionControls", ɵngcc0.ɵɵpureFunction0(13, _c1))("pagination", ctx.pagination)("columns", ctx.columns)("infiniteScroll", "auto")("serverSideDataCallback", ctx.serverSideDataCallback);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.sizeRequestDone);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.sizeRequestDone);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.columns)("ngForTrackBy", ctx.trackByName);
    } }, directives: [ɵngcc1.DataGridComponent, ɵngcc3.NgIf, ɵngcc3.NgForOf, ɵngcc1.LoadingComponent, ɵngcc1.IconDirective, ɵngcc1.C8yTranslateDirective, ɵngcc1.ColumnDirective], pipes: [ɵngcc1.C8yTranslatePipe, ɵngcc3.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServicesDeviceTabComponent, [{
        type: i0.Component,
        args: [{
                selector: 'c8y-services-device-tab',
                template: "<div class=\"content-fullpage\">\n  <c8y-data-grid\n    [title]=\"'Services' | translate\"\n    [refresh]=\"refresh$\"\n    [actionControls]=\"[]\"\n    [pagination]=\"pagination\"\n    [columns]=\"columns\"\n    [infiniteScroll]=\"'auto'\"\n    [serverSideDataCallback]=\"serverSideDataCallback\"\n  >\n    <div class=\"c8y-empty-state\">\n      <ng-container *ngIf=\"!sizeRequestDone\">\n        <c8y-loading></c8y-loading>\n      </ng-container>\n      <ng-container *ngIf=\"sizeRequestDone\">\n        <ng-container *ngIf=\"(sizeRequest | async) === 0; else noResults\">\n          <div class=\"text-center\">\n            <h1 class=\"c8y-icon-duocolor\" c8yIcon=\"c8y-tools\"></h1>\n            <h3 translate>No services to display.</h3>\n          </div>\n        </ng-container>\n        <ng-template #noResults>\n          <h1 c8yIcon=\"search\"></h1>\n          <div>\n            <p>\n              <strong>{{ 'No results to display.' | translate }}</strong>\n            </p>\n            <small>{{ 'Refine your search terms or check your spelling.' | translate }}</small>\n          </div>\n        </ng-template>\n      </ng-container>\n    </div>\n    <ng-container *ngFor=\"let column of columns; trackBy: trackByName\">\n      <c8y-column [name]=\"column.name\"></c8y-column>\n    </ng-container>\n  </c8y-data-grid>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc2.ActivatedRoute }, { type: ɵngcc5.InventoryService }, { type: ɵngcc6.DeviceGridService }, { type: StatusOptionsService }]; }, null); })();
        return ServicesDeviceTabComponent;
    }());
    ServicesDeviceTabComponent.ctorParameters = function () { return [
        { type: router.ActivatedRoute },
        { type: client.InventoryService },
        { type: deviceGrid.DeviceGridService },
        { type: StatusOptionsService }
    ]; };

    var SERVICE_FRAGMENT = 'c8y_Service';
    var ServicesDeviceTabGuard = /** @class */ (function () {
        function ServicesDeviceTabGuard(inventoryService) {
            this.inventoryService = inventoryService;
        }
        ServicesDeviceTabGuard.prototype.canActivate = function (route) {
            var contextData = lodashEs.get(route, 'data.contextData') || lodashEs.get(route, 'parent.data.contextData');
            return this.inventoryService
                .childAdditionsList(contextData, { query: "type eq " + SERVICE_FRAGMENT, pageSize: 1 })
                .then(function (result) { var _a; return !!((_a = result === null || result === void 0 ? void 0 : result.data) === null || _a === void 0 ? void 0 : _a.length); });
        };
ServicesDeviceTabGuard.ɵfac = function ServicesDeviceTabGuard_Factory(t) { return new (t || ServicesDeviceTabGuard)(ɵngcc0.ɵɵinject(ɵngcc5.InventoryService)); };
ServicesDeviceTabGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ServicesDeviceTabGuard, factory: function (t) { return ServicesDeviceTabGuard.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServicesDeviceTabGuard, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc5.InventoryService }]; }, null); })();
        return ServicesDeviceTabGuard;
    }());
    ServicesDeviceTabGuard.ctorParameters = function () { return [
        { type: client.InventoryService }
    ]; };

    var ServicesBreadcrumbFactory = /** @class */ (function () {
        function ServicesBreadcrumbFactory(inventoryService) {
            this.inventoryService = inventoryService;
        }
        ServicesBreadcrumbFactory.prototype.get = function (route) {
            var _a, _b, _c, _d;
            return __awaiter(this, void 0, void 0, function () {
                var _e, context, contextData, routeConfig, serviceMO, breadcrumb, breadcrumbItems, device;
                return __generator(this, function (_f) {
                    switch (_f.label) {
                        case 0:
                            _e = route.snapshot.data, context = _e.context, contextData = _e.contextData;
                            routeConfig = route.snapshot.routeConfig;
                            this.contextData = contextData || this.contextData;
                            if (!((context === ngxComponents.ViewContext.Service || ((_a = routeConfig) === null || _a === void 0 ? void 0 : _a.context) === ngxComponents.ViewContext.Service) &&
                                !!this.contextData)) return [3 /*break*/, 2];
                            return [4 /*yield*/, this.inventoryService.detail(this.contextData, { withParents: true })];
                        case 1:
                            serviceMO = (_b = (_f.sent())) === null || _b === void 0 ? void 0 : _b.data;
                            breadcrumb = { items: [] };
                            breadcrumbItems = [];
                            device = (_d = (_c = serviceMO === null || serviceMO === void 0 ? void 0 : serviceMO.additionParents) === null || _c === void 0 ? void 0 : _c.references[0]) === null || _d === void 0 ? void 0 : _d.managedObject;
                            if (device) {
                                breadcrumbItems.push({
                                    label: device.name,
                                    path: "/device/" + device.id
                                });
                                breadcrumbItems.push({
                                    label: ngxComponents.gettext('Services'),
                                    path: "/device/" + device.id + "/services"
                                });
                                breadcrumbItems.push({
                                    label: serviceMO.name
                                });
                            }
                            breadcrumb.items = breadcrumbItems;
                            return [2 /*return*/, breadcrumb];
                        case 2: return [2 /*return*/];
                    }
                });
            });
        };
ServicesBreadcrumbFactory.ɵfac = function ServicesBreadcrumbFactory_Factory(t) { return new (t || ServicesBreadcrumbFactory)(ɵngcc0.ɵɵinject(ɵngcc5.InventoryService)); };
ServicesBreadcrumbFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ServicesBreadcrumbFactory, factory: function (t) { return ServicesBreadcrumbFactory.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServicesBreadcrumbFactory, [{
        type: i0.Injectable
    }], function () { return [{ type: ɵngcc5.InventoryService }]; }, null); })();
        return ServicesBreadcrumbFactory;
    }());
    ServicesBreadcrumbFactory.ctorParameters = function () { return [
        { type: client.InventoryService }
    ]; };

    var ɵ0 = [
        {
            context: ngxComponents.ViewContext.Device,
            path: 'services',
            component: ServicesDeviceTabComponent,
            label: ngxComponents.gettext('Services'),
            icon: 'statistics',
            priority: 500,
            canActivate: [ServicesDeviceTabGuard]
        }
    ];
    var ServicesDeviceTabModule = /** @class */ (function () {
        function ServicesDeviceTabModule() {
        }
ServicesDeviceTabModule.ɵfac = function ServicesDeviceTabModule_Factory(t) { return new (t || ServicesDeviceTabModule)(); };
ServicesDeviceTabModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ServicesDeviceTabModule });
ServicesDeviceTabModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        ServicesDeviceTabGuard,
        ServicesBreadcrumbFactory,
        {
            provide: ngxComponents.HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        },
        { provide: ngxComponents.HOOK_BREADCRUMB, useClass: ServicesBreadcrumbFactory, multi: true }
    ], imports: [[ngxComponents.CoreModule, router.RouterModule, tooltip.TooltipModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServicesDeviceTabModule, [{
        type: i0.NgModule,
        args: [{
                imports: [ngxComponents.CoreModule, router.RouterModule, tooltip.TooltipModule],
                declarations: [
                    ServicesDeviceTabComponent,
                    LastUpdatedDateCellRendererComponent,
                    NameCellRendererComponent,
                    StatusCellRendererComponent
                ],
                providers: [
                    ServicesDeviceTabGuard,
                    ServicesBreadcrumbFactory,
                    {
                        provide: ngxComponents.HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    { provide: ngxComponents.HOOK_BREADCRUMB, useClass: ServicesBreadcrumbFactory, multi: true }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ServicesDeviceTabModule, { declarations: [ServicesDeviceTabComponent, LastUpdatedDateCellRendererComponent, NameCellRendererComponent, StatusCellRendererComponent], imports: [ɵngcc1.CoreModule, ɵngcc2.RouterModule, ɵngcc4.TooltipModule] }); })();
        return ServicesDeviceTabModule;
    }());

    var ServicesModule = /** @class */ (function () {
        function ServicesModule() {
        }
ServicesModule.ɵfac = function ServicesModule_Factory(t) { return new (t || ServicesModule)(); };
ServicesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ServicesModule });
ServicesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[ngxComponents.CoreModule, ServicesDeviceTabModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ServicesModule, [{
        type: i0.NgModule,
        args: [{
                imports: [ngxComponents.CoreModule, ServicesDeviceTabModule]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ServicesModule, { imports: [ɵngcc1.CoreModule, ServicesDeviceTabModule] }); })();
        return ServicesModule;
    }());

    /**
     * Generated bundle index. Do not edit.
     */

    exports.HOOK_SERVICE_STATUS = HOOK_SERVICE_STATUS;
    exports.LastUpdatedDateCellRendererComponent = LastUpdatedDateCellRendererComponent;
    exports.LastUpdatedDateGridColumn = LastUpdatedDateGridColumn;
    exports.NameCellRendererComponent = NameCellRendererComponent;
    exports.SERVICE_STATUS_OPTIONS = SERVICE_STATUS_OPTIONS;
    exports.ServiceNameGridColumn = ServiceNameGridColumn;
    exports.ServiceTypeGridColumn = ServiceTypeGridColumn;
    exports.ServicesDeviceTabComponent = ServicesDeviceTabComponent;
    exports.ServicesDeviceTabGuard = ServicesDeviceTabGuard;
    exports.ServicesDeviceTabModule = ServicesDeviceTabModule;
    exports.ServicesModule = ServicesModule;
    exports.StatusCellRendererComponent = StatusCellRendererComponent;
    exports.StatusGridColumn = StatusGridColumn;
    exports.StatusOptionsService = StatusOptionsService;
    exports["ɵ0"] = ɵ0;
    exports["ɵa"] = ServicesDeviceTabModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-services.umd.js.map