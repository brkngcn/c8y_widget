(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(require('@angular/core'),require('ngx-bootstrap/modal'),require('@c8y/ngx-components'),require('@c8y/client'),require('@angular/router'),require('@angular/forms'),require('@angular/common'),require('@c8y/ngx-components/operations/operations-timeline'),exports, require('@angular/core'), require('ngx-bootstrap/modal'), require('@angular/upgrade/static'), require('@c8y/ngx-components'), require('@angular/router'), require('@c8y/client'), require('lodash-es'), require('rxjs'), require('rxjs/operators'), require('@angular/common'), require('@c8y/ngx-components/operations/operations-timeline')) :
  typeof define === 'function' && define.amd ? define('@c8y/ngx-components/device-shell', ['@angular/core','ngx-bootstrap/modal','@c8y/ngx-components','@c8y/client','@angular/router','@angular/forms','@angular/common','@c8y/ngx-components/operations/operations-timeline','exports', '@angular/core', 'ngx-bootstrap/modal', '@angular/upgrade/static', '@c8y/ngx-components', '@angular/router', '@c8y/client', 'lodash-es', 'rxjs', 'rxjs/operators', '@angular/common', '@c8y/ngx-components/operations/operations-timeline'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.ng.core,global.ngxBootstrap.modal,global.c8y.ngxComponents,global.c8y.client,global.ng.router,global.ng.forms,global.ng.common,global.c8y.ngxComponents.operations.operationsTimeline,(global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"]["device-shell"] = {}), global.ng.core, global.modal, global.ng.upgrade["static"], global.c8y["ngx-components"], global.ng.router, global.client, global.lodashEs, global.rxjs, global.rxjs.operators, global.ng.common, global.c8y["ngx-components"].operations["operations-timeline"]));
})(this, (function (ɵngcc0,ɵngcc1,ɵngcc2,ɵngcc3,ɵngcc4,ɵngcc5,ɵngcc6,ɵngcc7,exports, core, modal, _static, ngxComponents, router, client, lodashEs, rxjs, operators, common, operationsTimeline) { 
var _c0 = function (a0) { return { deliveryType: a0 }; };
function DeviceShellComponent_ng_container_20_button_1_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 20);
    ɵngcc0.ɵɵlistener("click", function DeviceShellComponent_ng_container_20_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); var deliveryType_r5 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.execute(deliveryType_r5.name); });
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵelementStart(2, "span", 21);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var deliveryType_r5 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", !(ctx_r6.command == null ? null : ctx_r6.command.text) || ɵngcc0.ɵɵpipeBind1(1, 3, ctx_r6.sendingCommand$));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", deliveryType_r5.default ? ɵngcc0.ɵɵpipeBind1(3, 5, "Execute") : ɵngcc0.ɵɵpipeBind2(4, 7, ctx_r6.executeViaLabel, ɵngcc0.ɵɵpureFunction1(15, _c0, deliveryType_r5.name)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", deliveryType_r5.default ? ɵngcc0.ɵɵpipeBind1(6, 10, "Execute") : ɵngcc0.ɵɵpipeBind2(7, 12, ctx_r6.executeViaLabel, ɵngcc0.ɵɵpureFunction1(17, _c0, deliveryType_r5.name)), " ");
} }
function DeviceShellComponent_ng_container_20_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DeviceShellComponent_ng_container_20_button_1_Template, 8, 19, "button", 19);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var deliveryType_r5 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", deliveryType_r5.isSupportedByCommand);
} }
function DeviceShellComponent_ng_template_28_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var operation_r11 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate((operation_r11.c8y_Command == null ? null : operation_r11.c8y_Command.text) || operation_r11.description);
} }
function DeviceShellComponent_ng_template_30_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 23);
    ɵngcc0.ɵɵtext(2, "Command");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "pre", 24);
    ɵngcc0.ɵɵtext(4, "              ");
    ɵngcc0.ɵɵelementStart(5, "code");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var operation_r12 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(operation_r12.c8y_Command.text);
} }
function DeviceShellComponent_ng_template_30_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵelementStart(1, "div", 23);
    ɵngcc0.ɵɵtext(2, "Response");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "pre", 24);
    ɵngcc0.ɵɵtext(4, "              ");
    ɵngcc0.ɵɵelementStart(5, "code");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(7, "\n          ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var operation_r12 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵtextInterpolate(operation_r12.c8y_Command.result);
} }
function DeviceShellComponent_ng_template_30_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DeviceShellComponent_ng_template_30_div_0_Template, 8, 1, "div", 22);
    ɵngcc0.ɵɵtemplate(1, DeviceShellComponent_ng_template_30_div_1_Template, 8, 1, "div", 22);
} if (rf & 2) {
    var operation_r12 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngIf", operation_r12.c8y_Command == null ? null : operation_r12.c8y_Command.text);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", operation_r12.c8y_Command == null ? null : operation_r12.c8y_Command.result);
} }
var _c1 = function (a0) { return [a0]; };
var _c2 = function () { return ["c8y_Command"]; };
'use strict';

  /* https://stackoverflow.com/a/65290658 */
  function rootScopeFactory($injector) {
      return $injector.get('$rootScope').$new();
  }
  var CommandTemplatesComponent = /** @class */ (function () {
      function CommandTemplatesComponent(modalRef) {
          this.modalRef = modalRef;
          this.onTemplateSelected = new core.EventEmitter();
      }
CommandTemplatesComponent.ɵfac = function CommandTemplatesComponent_Factory(t) { return new (t || CommandTemplatesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef)); };
CommandTemplatesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CommandTemplatesComponent, selectors: [["c8y-command-templates"]], features: [ɵngcc0.ɵɵProvidersFeature([
            {
                deps: ['$injector'],
                provide: '$scope',
                useFactory: rootScopeFactory
            }
        ])], decls: 1, vars: 0, consts: [[3, "close", "dismiss"]], template: function CommandTemplatesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-command-templates-directive", 0);
        ɵngcc0.ɵɵlistener("close", function CommandTemplatesComponent_Template_c8y_command_templates_directive_close_0_listener($event) { ctx.modalRef.hide(); return ctx.onTemplateSelected.next($event); })("dismiss", function CommandTemplatesComponent_Template_c8y_command_templates_directive_dismiss_0_listener() { return ctx.modalRef.hide(); });
        ɵngcc0.ɵɵelementEnd();
    } }, directives: function () { return [CommandTemplates]; }, encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CommandTemplatesComponent, [{
        type: core.Component,
        args: [{
                selector: 'c8y-command-templates',
                template: "<c8y-command-templates-directive\n    (close)=\"modalRef.hide(); onTemplateSelected.next($event)\"\n    (dismiss)=\"modalRef.hide()\"\n  ></c8y-command-templates-directive>",
                providers: [
                    {
                        deps: ['$injector'],
                        provide: '$scope',
                        useFactory: rootScopeFactory
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }]; }, null); })();
      return CommandTemplatesComponent;
  }());
  CommandTemplatesComponent.ctorParameters = function () { return [
      { type: modal.BsModalRef }
  ]; };

  /*! *****************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  /* global Reflect, Promise */
  var extendStatics = function (d, b) {
      extendStatics = Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
          function (d, b) { for (var p in b)
              if (Object.prototype.hasOwnProperty.call(b, p))
                  d[p] = b[p]; };
      return extendStatics(d, b);
  };
  function __extends(d, b) {
      if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() { this.constructor = d; }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }
  var __assign = function () {
      __assign = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
              s = arguments[i];
              for (var p in s)
                  if (Object.prototype.hasOwnProperty.call(s, p))
                      t[p] = s[p];
          }
          return t;
      };
      return __assign.apply(this, arguments);
  };
  function __rest(s, e) {
      var t = {};
      for (var p in s)
          if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
              t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
          for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
              if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                  t[p[i]] = s[p[i]];
          }
      return t;
  }
  function __decorate(decorators, target, key, desc) {
      var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
      if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
          r = Reflect.decorate(decorators, target, key, desc);
      else
          for (var i = decorators.length - 1; i >= 0; i--)
              if (d = decorators[i])
                  r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
      return c > 3 && r && Object.defineProperty(target, key, r), r;
  }
  function __param(paramIndex, decorator) {
      return function (target, key) { decorator(target, key, paramIndex); };
  }
  function __metadata(metadataKey, metadataValue) {
      if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
          return Reflect.metadata(metadataKey, metadataValue);
  }
  function __awaiter(thisArg, _arguments, P, generator) {
      function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
      return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) { try {
              step(generator.next(value));
          }
          catch (e) {
              reject(e);
          } }
          function rejected(value) { try {
              step(generator["throw"](value));
          }
          catch (e) {
              reject(e);
          } }
          function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
  }
  function __generator(thisArg, body) {
      var _ = { label: 0, sent: function () { if (t[0] & 1)
              throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
      return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
      function verb(n) { return function (v) { return step([n, v]); }; }
      function step(op) {
          if (f)
              throw new TypeError("Generator is already executing.");
          while (_)
              try {
                  if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                      return t;
                  if (y = 0, t)
                      op = [op[0] & 2, t.value];
                  switch (op[0]) {
                      case 0:
                      case 1:
                          t = op;
                          break;
                      case 4:
                          _.label++;
                          return { value: op[1], done: false };
                      case 5:
                          _.label++;
                          y = op[1];
                          op = [0];
                          continue;
                      case 7:
                          op = _.ops.pop();
                          _.trys.pop();
                          continue;
                      default:
                          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                              _ = 0;
                              continue;
                          }
                          if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                              _.label = op[1];
                              break;
                          }
                          if (op[0] === 6 && _.label < t[1]) {
                              _.label = t[1];
                              t = op;
                              break;
                          }
                          if (t && _.label < t[2]) {
                              _.label = t[2];
                              _.ops.push(op);
                              break;
                          }
                          if (t[2])
                              _.ops.pop();
                          _.trys.pop();
                          continue;
                  }
                  op = body.call(thisArg, _);
              }
              catch (e) {
                  op = [6, e];
                  y = 0;
              }
              finally {
                  f = t = 0;
              }
          if (op[0] & 5)
              throw op[1];
          return { value: op[0] ? op[1] : void 0, done: true };
      }
  }
  var __createBinding = Object.create ? (function (o, m, k, k2) {
      if (k2 === undefined)
          k2 = k;
      Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
  }) : (function (o, m, k, k2) {
      if (k2 === undefined)
          k2 = k;
      o[k2] = m[k];
  });
  function __exportStar(m, o) {
      for (var p in m)
          if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
              __createBinding(o, m, p);
  }
  function __values(o) {
      var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
      if (m)
          return m.call(o);
      if (o && typeof o.length === "number")
          return {
              next: function () {
                  if (o && i >= o.length)
                      o = void 0;
                  return { value: o && o[i++], done: !o };
              }
          };
      throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
  }
  function __read(o, n) {
      var m = typeof Symbol === "function" && o[Symbol.iterator];
      if (!m)
          return o;
      var i = m.call(o), r, ar = [], e;
      try {
          while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
              ar.push(r.value);
      }
      catch (error) {
          e = { error: error };
      }
      finally {
          try {
              if (r && !r.done && (m = i["return"]))
                  m.call(i);
          }
          finally {
              if (e)
                  throw e.error;
          }
      }
      return ar;
  }
  /** @deprecated */
  function __spread() {
      for (var ar = [], i = 0; i < arguments.length; i++)
          ar = ar.concat(__read(arguments[i]));
      return ar;
  }
  /** @deprecated */
  function __spreadArrays() {
      for (var s = 0, i = 0, il = arguments.length; i < il; i++)
          s += arguments[i].length;
      for (var r = Array(s), k = 0, i = 0; i < il; i++)
          for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
              r[k] = a[j];
      return r;
  }
  function __spreadArray(to, from, pack) {
      if (pack || arguments.length === 2)
          for (var i = 0, l = from.length, ar; i < l; i++) {
              if (ar || !(i in from)) {
                  if (!ar)
                      ar = Array.prototype.slice.call(from, 0, i);
                  ar[i] = from[i];
              }
          }
      return to.concat(ar || Array.prototype.slice.call(from));
  }
  function __await(v) {
      return this instanceof __await ? (this.v = v, this) : new __await(v);
  }
  function __asyncGenerator(thisArg, _arguments, generator) {
      if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
      var g = generator.apply(thisArg, _arguments || []), i, q = [];
      return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
      function verb(n) { if (g[n])
          i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
      function resume(n, v) { try {
          step(g[n](v));
      }
      catch (e) {
          settle(q[0][3], e);
      } }
      function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
      function fulfill(value) { resume("next", value); }
      function reject(value) { resume("throw", value); }
      function settle(f, v) { if (f(v), q.shift(), q.length)
          resume(q[0][0], q[0][1]); }
  }
  function __asyncDelegator(o) {
      var i, p;
      return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
      function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
  }
  function __asyncValues(o) {
      if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
      var m = o[Symbol.asyncIterator], i;
      return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
      function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
      function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
  }
  function __makeTemplateObject(cooked, raw) {
      if (Object.defineProperty) {
          Object.defineProperty(cooked, "raw", { value: raw });
      }
      else {
          cooked.raw = raw;
      }
      return cooked;
  }
  ;
  var __setModuleDefault = Object.create ? (function (o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
  }) : function (o, v) {
      o["default"] = v;
  };
  function __importStar(mod) {
      if (mod && mod.__esModule)
          return mod;
      var result = {};
      if (mod != null)
          for (var k in mod)
              if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                  __createBinding(result, mod, k);
      __setModuleDefault(result, mod);
      return result;
  }
  function __importDefault(mod) {
      return (mod && mod.__esModule) ? mod : { default: mod };
  }
  function __classPrivateFieldGet(receiver, state, kind, f) {
      if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a getter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
      return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
  }
  function __classPrivateFieldSet(receiver, state, value, kind, f) {
      if (kind === "m")
          throw new TypeError("Private method is not writable");
      if (kind === "a" && !f)
          throw new TypeError("Private accessor was defined without a setter");
      if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
      return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
  }

  var CommandTemplates = /** @class */ (function (_super) {
      __extends(CommandTemplates, _super);
      function CommandTemplates(elementRef, injector) {
          return _super.call(this, 'c8yCommandTemplates', elementRef, injector) || this;
      }
CommandTemplates.ɵfac = function CommandTemplates_Factory(t) { return new (t || CommandTemplates)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector)); };
CommandTemplates.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CommandTemplates, selectors: [["c8y-command-templates-directive"]], outputs: { close: "close", dismiss: "dismiss" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CommandTemplates, [{
        type: core.Directive,
        args: [{
                selector: 'c8y-command-templates-directive'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Injector }]; }, { close: [{
            type: core.Output
        }], dismiss: [{
            type: core.Output
        }] }); })();
      return CommandTemplates;
  }(_static.UpgradeComponent));
  CommandTemplates.ctorParameters = function () { return [
      { type: core.ElementRef },
      { type: core.Injector }
  ]; };
  CommandTemplates.propDecorators = {
      close: [{ type: core.Output }],
      dismiss: [{ type: core.Output }]
  };

  var CommandTemplatesModule = /** @class */ (function () {
      function CommandTemplatesModule() {
      }
CommandTemplatesModule.ɵfac = function CommandTemplatesModule_Factory(t) { return new (t || CommandTemplatesModule)(); };
CommandTemplatesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CommandTemplatesModule });
CommandTemplatesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CommandTemplatesModule, [{
        type: core.NgModule,
        args: [{
                declarations: [CommandTemplates, CommandTemplatesComponent],
                exports: [CommandTemplatesComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CommandTemplatesModule, { declarations: [CommandTemplates, CommandTemplatesComponent], exports: [CommandTemplatesComponent] }); })();
      return CommandTemplatesModule;
  }());

  var DeviceShellGuard = /** @class */ (function () {
      function DeviceShellGuard() {
          this.operation = 'c8y_Command';
      }
      DeviceShellGuard.prototype.canActivate = function (route) {
          var device = route.data.contextData || route.parent.data.contextData;
          var supportedOperations = (device && device.c8y_SupportedOperations) || [];
          return supportedOperations.indexOf(this.operation) >= 0;
      };
DeviceShellGuard.ɵfac = function DeviceShellGuard_Factory(t) { return new (t || DeviceShellGuard)(); };
DeviceShellGuard.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DeviceShellGuard, factory: function (t) { return DeviceShellGuard.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceShellGuard, [{
        type: core.Injectable
    }], function () { return []; }, null); })();
      return DeviceShellGuard;
  }());

  exports.CommandDeliveryType = void 0;
  (function (CommandDeliveryType) {
      CommandDeliveryType["DEFAULT"] = "Default";
      CommandDeliveryType["SMS"] = "SMS";
  })(exports.CommandDeliveryType || (exports.CommandDeliveryType = {}));

  var DeviceShellService = /** @class */ (function () {
      function DeviceShellService(optionsService, operationService) {
          this.optionsService = optionsService;
          this.operationService = operationService;
      }
      DeviceShellService.prototype.getDeliveryTypes = function () {
          return [
              {
                  name: ngxComponents.gettext(exports.CommandDeliveryType.DEFAULT),
                  default: true
              },
              {
                  name: ngxComponents.gettext(exports.CommandDeliveryType.SMS)
              }
          ];
      };
      DeviceShellService.prototype.canSendCommandsViaSMS = function () {
          return this.optionsService.getSystemOption('messaging', 'provider', false);
      };
      DeviceShellService.prototype.createCommandOperation = function (deviceId, command, deliveryType) {
          var operation = {
              deviceId: deviceId,
              description: ngxComponents.gettext('Execute shell command') + (command.name ? ": " + command.name : ''),
              deliveryType: deliveryType === exports.CommandDeliveryType.SMS ? exports.CommandDeliveryType.SMS : undefined,
              c8y_Command: {
                  text: command.text
              }
          };
          return this.operationService.create(operation);
      };
DeviceShellService.ɵfac = function DeviceShellService_Factory(t) { return new (t || DeviceShellService)(ɵngcc0.ɵɵinject(ɵngcc2.OptionsService), ɵngcc0.ɵɵinject(ɵngcc3.OperationService)); };
DeviceShellService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: DeviceShellService, factory: function (t) { return DeviceShellService.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceShellService, [{
        type: core.Injectable
    }], function () { return [{ type: ɵngcc2.OptionsService }, { type: ɵngcc3.OperationService }]; }, null); })();
      return DeviceShellService;
  }());
  DeviceShellService.ctorParameters = function () { return [
      { type: ngxComponents.OptionsService },
      { type: client.OperationService }
  ]; };

  var DeviceShellSharedModule = /** @class */ (function () {
      function DeviceShellSharedModule() {
      }
DeviceShellSharedModule.ɵfac = function DeviceShellSharedModule_Factory(t) { return new (t || DeviceShellSharedModule)(); };
DeviceShellSharedModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DeviceShellSharedModule });
DeviceShellSharedModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [DeviceShellService] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceShellSharedModule, [{
        type: core.NgModule,
        args: [{
                providers: [DeviceShellService]
            }]
    }], function () { return []; }, null); })();
      return DeviceShellSharedModule;
  }());

  var DeviceShellComponent = /** @class */ (function () {
      function DeviceShellComponent(service, operationRealtime, moRealtime, operationService, route, modalService, alertService) {
          this.service = service;
          this.operationRealtime = operationRealtime;
          this.moRealtime = moRealtime;
          this.operationService = operationService;
          this.route = route;
          this.modalService = modalService;
          this.alertService = alertService;
          this.device = this.route.snapshot.parent.data.contextData;
          this.device$ = rxjs.of({});
          this.deliveryTypes = (this.service.getDeliveryTypes() || []).map(function (deliveryType) { return (Object.assign(Object.assign({}, deliveryType), { isSupportedByCommand: true })); });
          this.command = {};
          this.smsEnabled = false;
          this.sendingCommand$ = new rxjs.BehaviorSubject(false);
          this.filterPipe = rxjs.pipe(operators.map(function (operations) { return (operations || []).filter(function (operation) { return !!operation.c8y_Command; }); }));
          this.executeViaLabel = ngxComponents.gettext('Execute via ({{deliveryType}})');
          this.destroyed$ = new rxjs.Subject();
      }
      DeviceShellComponent.prototype.ngOnInit = function () {
          return __awaiter(this, void 0, void 0, function () {
              var _a, _b;
              var _this = this;
              return __generator(this, function (_c) {
                  switch (_c.label) {
                      case 0:
                          _a = this;
                          return [4 /*yield*/, this.service.canSendCommandsViaSMS()];
                      case 1:
                          _a.smsEnabled = _c.sent();
                          this.device$ = this.moRealtime.onUpdate$(this.device.id).pipe(operators.startWith(this.device));
                          _b = this;
                          return [4 /*yield*/, this.operationService.list({
                                  deviceId: this.device.id,
                                  fragmentType: 'c8y_Command',
                                  dateFrom: new Date(0).toISOString(),
                                  dateTo: new Date().toISOString(),
                                  pageSize: 50,
                                  withTotalPages: true,
                                  revert: true
                              })];
                      case 2:
                          _b.operations = _c.sent();
                          this.operationRealtime
                              .onCreate$(this.device.id)
                              .pipe(operators.takeUntil(this.destroyed$))
                              .subscribe(function () { return _this.alertService.success(ngxComponents.gettext('Command sent.')); });
                          this.operationRealtime
                              .onUpdate$(this.device.id)
                              .pipe(operators.filter(function (op) { return op.failureReason !== 'Operation cancelled by user.'; }), // avoid duplicate alerts
                          operators.takeUntil(this.destroyed$))
                              .subscribe(function () { return _this.alertService.success(ngxComponents.gettext('Command status updated.')); });
                          return [2 /*return*/];
                  }
              });
          });
      };
      DeviceShellComponent.prototype.getPredefinedCommand = function () {
          var _this = this;
          var modal = this.modalService.show(CommandTemplatesComponent);
          modal.content.onTemplateSelected.pipe(operators.takeUntil(this.destroyed$)).subscribe(function (result) {
              _this.command = Object.assign({}, result.commandTemplate);
              _this.deliveryTypes = _this.deliveryTypes.map(function (deliveryType) { return (Object.assign(Object.assign({}, deliveryType), { isSupportedByCommand: lodashEs.isEmpty(_this.command.deliveryTypes) ||
                      lodashEs.includes(_this.command.deliveryTypes, deliveryType.name) })); });
          });
      };
      DeviceShellComponent.prototype.resetSupportedDeliveryTypes = function () {
          this.deliveryTypes = (this.service.getDeliveryTypes() || []).map(function (deliveryType) { return (Object.assign(Object.assign({}, deliveryType), { isSupportedByCommand: true })); });
      };
      DeviceShellComponent.prototype.execute = function (commandDeliveryType) {
          return __awaiter(this, void 0, void 0, function () {
              var useSMS;
              return __generator(this, function (_a) {
                  switch (_a.label) {
                      case 0:
                          useSMS = commandDeliveryType === exports.CommandDeliveryType.SMS;
                          if (useSMS && !this.smsEnabled) {
                              this.alertService.warning(ngxComponents.gettext('SMS transport is not configured.'));
                              return [2 /*return*/];
                          }
                          this.sendingCommand$.next(true);
                          return [4 /*yield*/, this.service.createCommandOperation(this.device.id, this.command, commandDeliveryType)];
                      case 1:
                          _a.sent();
                          this.command.text = '';
                          this.resetSupportedDeliveryTypes();
                          this.sendingCommand$.next(false);
                          return [2 /*return*/];
                  }
              });
          });
      };
      DeviceShellComponent.prototype.ngOnDestroy = function () {
          this.destroyed$.next();
          this.destroyed$.complete();
      };
DeviceShellComponent.ɵfac = function DeviceShellComponent_Factory(t) { return new (t || DeviceShellComponent)(ɵngcc0.ɵɵdirectiveInject(DeviceShellService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OperationRealtimeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ManagedObjectRealtimeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.OperationService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlertService)); };
DeviceShellComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceShellComponent, selectors: [["c8y-device-shell"]], features: [ɵngcc0.ɵɵProvidersFeature([ngxComponents.OperationRealtimeService, ngxComponents.ManagedObjectRealtimeService])], decls: 32, vars: 28, consts: [[3, "placement"], [3, "service"], [1, "card", "content-fullpage", "d-grid", "grid__col--6-6--md"], [1, "inner-scroll", "d-flex", "d-col", "bg-white"], [1, "card-header", "large-padding", "separator", "sticky-top"], [1, "card-title"], [1, "card-block", "d-flex", "d-col", "flex-grow", "large-padding"], [1, "flex-row", "p-b-16"], ["type", "button", 1, "btn", "btn-default", "btn-sm", 3, "title", "click"], [1, "flex-item-right"], [3, "mo"], [1, "form-control", "inner-scroll", "flex-grow", "bg-gray-lighter", 3, "ngModel", "ngModelChange"], [1, "card-footer", "large-padding", "separator"], [4, "ngFor", "ngForOf"], [1, "inner-scroll", "bg-gray-white"], [1, "card-block", "large-padding"], [3, "operations", "sourceId", "filterPipe", "bodyTemplate", "footerTemplates", "propertiesToHide"], ["timelineItemBody", ""], ["timelineItemFooter", ""], ["class", "btn btn-primary", "type", "button", 3, "disabled", "click", 4, "ngIf"], ["type", "button", 1, "btn", "btn-primary", 3, "disabled", "click"], [3, "title"], [4, "ngIf"], ["translate", "", 1, "legend", "form-block"], [1, "text-pre-normal"]], template: function DeviceShellComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelement(1, "c8y-realtime-btn", 1);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "h4", 5);
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 6);
        ɵngcc0.ɵɵelementStart(9, "div", 7);
        ɵngcc0.ɵɵelementStart(10, "button", 8);
        ɵngcc0.ɵɵlistener("click", function DeviceShellComponent_Template_button_click_10_listener() { return ctx.getPredefinedCommand(); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 9);
        ɵngcc0.ɵɵelement(15, "device-status", 10);
        ɵngcc0.ɵɵpipe(16, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "textarea", 11);
        ɵngcc0.ɵɵlistener("ngModelChange", function DeviceShellComponent_Template_textarea_ngModelChange_17_listener($event) { return ctx.command.text = $event; })("ngModelChange", function DeviceShellComponent_Template_textarea_ngModelChange_17_listener($event) { return $event || ctx.resetSupportedDeliveryTypes(); });
        ɵngcc0.ɵɵtext(18, "      ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(19, "div", 12);
        ɵngcc0.ɵɵtemplate(20, DeviceShellComponent_ng_container_20_Template, 2, 1, "ng-container", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "div", 14);
        ɵngcc0.ɵɵelementStart(22, "div", 4);
        ɵngcc0.ɵɵelementStart(23, "h4", 5);
        ɵngcc0.ɵɵtext(24);
        ɵngcc0.ɵɵpipe(25, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(26, "div", 15);
        ɵngcc0.ɵɵelement(27, "c8y-operations-timeline", 16);
        ɵngcc0.ɵɵtemplate(28, DeviceShellComponent_ng_template_28_Template, 2, 1, "ng-template", null, 17, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(30, DeviceShellComponent_ng_template_30_Template, 2, 2, "ng-template", null, 18, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        var _r1 = ɵngcc0.ɵɵreference(29);
        var _r3 = ɵngcc0.ɵɵreference(31);
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("service", ctx.operationRealtime);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(7, 15, "Command"), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 17, "Display a list of predefined commands"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(13, 19, "Predefined commands"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("mo", ɵngcc0.ɵɵpipeBind1(16, 21, ctx.device$));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.command.text);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.deliveryTypes);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(25, 23, "Operations"), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("operations", ctx.operations)("sourceId", ctx.device.id)("filterPipe", ctx.filterPipe)("bodyTemplate", _r1)("footerTemplates", ɵngcc0.ɵɵpureFunction1(25, _c1, _r3))("propertiesToHide", ɵngcc0.ɵɵpureFunction0(27, _c2));
    } }, directives: [ɵngcc2.ActionBarItemComponent, ɵngcc2.RealtimeButtonComponent, ɵngcc2.DeviceStatusComponent, ɵngcc5.DefaultValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc6.NgForOf, ɵngcc7.OperationsTimelineComponent, ɵngcc6.NgIf, ɵngcc2.C8yTranslateDirective], pipes: [ɵngcc2.C8yTranslatePipe, ɵngcc6.AsyncPipe], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceShellComponent, [{
        type: core.Component,
        args: [{
                selector: 'c8y-device-shell',
                template: "<c8y-action-bar-item [placement]=\"'right'\">\n  <c8y-realtime-btn [service]=\"operationRealtime\"></c8y-realtime-btn>\n</c8y-action-bar-item>\n\n<div class=\"card content-fullpage d-grid grid__col--6-6--md\">\n  <div class=\"inner-scroll d-flex d-col bg-white\">\n    <div class=\"card-header large-padding separator sticky-top\">\n      <h4 class=\"card-title\">\n        {{ 'Command' | translate }}\n      </h4>\n    </div>\n\n    <div class=\"card-block d-flex d-col flex-grow large-padding\">\n      <div class=\"flex-row p-b-16\">\n        <button\n          class=\"btn btn-default btn-sm\"\n          type=\"button\"\n          (click)=\"getPredefinedCommand()\"\n          [title]=\"'Display a list of predefined commands' | translate\"\n        >\n          {{ 'Predefined commands' | translate }}\n        </button>\n\n        <div class=\"flex-item-right\">\n          <device-status [mo]=\"device$ | async\"></device-status>\n        </div>\n      </div>\n      <textarea\n        class=\"form-control inner-scroll flex-grow bg-gray-lighter\"\n        [(ngModel)]=\"command.text\"\n        (ngModelChange)=\"$event || resetSupportedDeliveryTypes()\"\n      >\n      </textarea>\n    </div>\n\n    <div class=\"card-footer large-padding separator\">\n      <ng-container *ngFor=\"let deliveryType of deliveryTypes\">\n        <button\n          class=\"btn btn-primary\"\n          type=\"button\"\n          *ngIf=\"deliveryType.isSupportedByCommand\"\n          [disabled]=\"!command?.text || (sendingCommand$ | async)\"\n          (click)=\"execute(deliveryType.name)\"\n        >\n          <span\n            [title]=\"\n              deliveryType.default\n                ? ('Execute' | translate)\n                : (executeViaLabel | translate: { deliveryType: deliveryType.name })\n            \"\n          >\n            {{\n              deliveryType.default\n                ? ('Execute' | translate)\n                : (executeViaLabel | translate: { deliveryType: deliveryType.name })\n            }}\n          </span>\n        </button>\n      </ng-container>\n    </div>\n  </div>\n  <div class=\"inner-scroll bg-gray-white\">\n    <div class=\"card-header large-padding separator sticky-top\">\n      <h4 class=\"card-title\">\n        {{ 'Operations' | translate }}\n      </h4>\n    </div>\n    <div class=\"card-block large-padding\">\n      <c8y-operations-timeline\n        [operations]=\"operations\"\n        [sourceId]=\"device.id\"\n        [filterPipe]=\"filterPipe\"\n        [bodyTemplate]=\"timelineItemBody\"\n        [footerTemplates]=\"[timelineItemFooter]\"\n        [propertiesToHide]=\"['c8y_Command']\"\n      ></c8y-operations-timeline>\n      <ng-template #timelineItemBody let-operation>\n        <small>{{ operation.c8y_Command?.text || operation.description }}</small>\n      </ng-template>\n      <ng-template #timelineItemFooter let-operation>\n        <div *ngIf=\"operation.c8y_Command?.text\">\n          <div class=\"legend form-block\" translate>Command</div>\n          <pre class=\"text-pre-normal\">\n              <code>{{operation.c8y_Command.text}}</code>\n          </pre>\n        </div>\n        <div *ngIf=\"operation.c8y_Command?.result\">\n          <div class=\"legend form-block\" translate>Response</div>\n          <pre class=\"text-pre-normal\">\n              <code>{{operation.c8y_Command.result}}</code>\n          </pre>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</div>\n",
                providers: [ngxComponents.OperationRealtimeService, ngxComponents.ManagedObjectRealtimeService]
            }]
    }], function () { return [{ type: DeviceShellService }, { type: ɵngcc2.OperationRealtimeService }, { type: ɵngcc2.ManagedObjectRealtimeService }, { type: ɵngcc3.OperationService }, { type: ɵngcc4.ActivatedRoute }, { type: ɵngcc1.BsModalService }, { type: ɵngcc2.AlertService }]; }, null); })();
      return DeviceShellComponent;
  }());
  DeviceShellComponent.ctorParameters = function () { return [
      { type: DeviceShellService },
      { type: ngxComponents.OperationRealtimeService },
      { type: ngxComponents.ManagedObjectRealtimeService },
      { type: client.OperationService },
      { type: router.ActivatedRoute },
      { type: modal.BsModalService },
      { type: ngxComponents.AlertService }
  ]; };

  var ShellModule = /** @class */ (function () {
      function ShellModule() {
      }
ShellModule.ɵfac = function ShellModule_Factory(t) { return new (t || ShellModule)(); };
ShellModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ShellModule });
ShellModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            common.CommonModule,
            ngxComponents.CoreModule,
            operationsTimeline.OperationsTimelineModule,
            CommandTemplatesModule,
            DeviceShellSharedModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ShellModule, [{
        type: core.NgModule,
        args: [{
                imports: [
                    common.CommonModule,
                    ngxComponents.CoreModule,
                    operationsTimeline.OperationsTimelineModule,
                    CommandTemplatesModule,
                    DeviceShellSharedModule
                ],
                declarations: [DeviceShellComponent],
                exports: [DeviceShellComponent]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ShellModule, { declarations: [DeviceShellComponent], imports: [ɵngcc6.CommonModule, ɵngcc2.CoreModule, ɵngcc7.OperationsTimelineModule, CommandTemplatesModule, DeviceShellSharedModule], exports: [DeviceShellComponent] }); })();
      return ShellModule;
  }());

  var DEVICE_SHELL_ROUTE = {
      path: 'shell',
      context: ngxComponents.ViewContext.Device,
      component: DeviceShellComponent,
      label: ngxComponents.gettext('Shell'),
      icon: 'terminal',
      canActivate: [DeviceShellGuard]
  };
  var ɵ0 = DEVICE_SHELL_ROUTE;
  var DeviceShellModule = /** @class */ (function () {
      function DeviceShellModule() {
      }
DeviceShellModule.ɵfac = function DeviceShellModule_Factory(t) { return new (t || DeviceShellModule)(); };
DeviceShellModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DeviceShellModule });
DeviceShellModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        DeviceShellGuard,
        {
            provide: ngxComponents.HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[ShellModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceShellModule, [{
        type: core.NgModule,
        args: [{
                imports: [ShellModule],
                providers: [
                    DeviceShellGuard,
                    {
                        provide: ngxComponents.HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceShellModule, { imports: [ShellModule] }); })();
      return DeviceShellModule;
  }());

  /**
   * Generated bundle index. Do not edit.
   */

  exports.CommandTemplates = CommandTemplates;
  exports.CommandTemplatesComponent = CommandTemplatesComponent;
  exports.CommandTemplatesModule = CommandTemplatesModule;
  exports.DeviceShellComponent = DeviceShellComponent;
  exports.DeviceShellGuard = DeviceShellGuard;
  exports.DeviceShellModule = DeviceShellModule;
  exports.DeviceShellService = DeviceShellService;
  exports.DeviceShellSharedModule = DeviceShellSharedModule;
  exports.ShellModule = ShellModule;
  exports.rootScopeFactory = rootScopeFactory;
  exports["ɵ0"] = ɵ0;
  exports["ɵa"] = ShellModule;
  exports["ɵb"] = DeviceShellComponent;

  Object.defineProperty(exports, '__esModule', { value: true });

}));

//# sourceMappingURL=c8y-ngx-components-device-shell.umd.js.map