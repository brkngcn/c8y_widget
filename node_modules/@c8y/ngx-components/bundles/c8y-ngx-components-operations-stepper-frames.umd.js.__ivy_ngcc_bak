(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@c8y/ngx-components')) :
    typeof define === 'function' && define.amd ? define('@c8y/ngx-components/operations/stepper-frames', ['exports', '@angular/core', '@c8y/ngx-components'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.c8y = global.c8y || {}, global.c8y["ngx-components"] = global.c8y["ngx-components"] || {}, global.c8y["ngx-components"].operations = global.c8y["ngx-components"].operations || {}, global.c8y["ngx-components"].operations["stepper-frames"] = {}), global.ng.core, global.c8y["ngx-components"]));
})(this, (function (exports, core, ngxComponents) { 'use strict';

    var PreviewBlockDirective = /** @class */ (function () {
        function PreviewBlockDirective(templateRef) {
            this.templateRef = templateRef;
            this.show = true;
        }
        return PreviewBlockDirective;
    }());
    PreviewBlockDirective.decorators = [
        { type: core.Directive, args: [{
                    selector: '[previewBlock]'
                },] }
    ];
    PreviewBlockDirective.ctorParameters = function () { return [
        { type: core.TemplateRef }
    ]; };
    PreviewBlockDirective.propDecorators = {
        label: [{ type: core.Input, args: ['previewBlock',] }],
        show: [{ type: core.Input, args: ['previewBlockIf',] }]
    };

    var PreviewSelectionFrameComponent = /** @class */ (function () {
        function PreviewSelectionFrameComponent() {
            this.showType = false;
        }
        Object.defineProperty(PreviewSelectionFrameComponent.prototype, "_type", {
            set: function (type) {
                this.type = type;
                this.showType = true;
            },
            enumerable: false,
            configurable: true
        });
        return PreviewSelectionFrameComponent;
    }());
    PreviewSelectionFrameComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-preview-selection-frame',
                    template: "<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"flex-row p-b-8 p-t-4 j-c-center\">\n    <div>\n      <h4 class=\"text-center text-normal\">{{ header | translate }}</h4>\n      <p *ngIf=\"name || description\" class=\"text-center p-t-16 p-b-8 text-truncate\">\n        <strong *ngIf=\"name\" [title]=\"name\">{{ name }}</strong\n        ><br />\n        <small *ngIf=\"description\" [title]=\"description\">{{ description }}</small>\n      </p>\n      <p class=\"text-center\" *ngIf=\"showType\">\n        <span class=\"label label-primary\" *ngIf=\"type; else noType\">\n          {{ type }}\n        </span>\n        <ng-template #noType>\n          <span class=\"label label-default\">\n            {{ 'Undefined' | translate }}\n          </span>\n        </ng-template>\n      </p>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"previewBlocks?.length\" class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block\">\n      <ng-container *ngFor=\"let block of previewBlocks\">\n        <div *ngIf=\"block.show\" class=\"flex-row p-b-8 j-c-center\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <div class=\"text-truncate\" [title]=\"block.label | translate\">\n              <span class=\"legend form-block\">{{ block.label | translate }}</span>\n              <ng-container *ngTemplateOutlet=\"block.templateRef\"></ng-container>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<div [style.display]=\"listRef?.nativeElement?.children?.length ? 'contents' : 'none'\">\n  <div class=\"col-xs-12 flex-grow no-gutter\">\n    <div class=\"card-inner-scroll fit-h\">\n      <div #list class=\"card-block p-t-0 p-b-0\">\n        <ng-content select=\"[list]\"> </ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n"
                },] }
    ];
    PreviewSelectionFrameComponent.propDecorators = {
        header: [{ type: core.Input }],
        name: [{ type: core.Input }],
        description: [{ type: core.Input }],
        _type: [{ type: core.Input, args: ['type',] }],
        listRef: [{ type: core.ViewChild, args: ['list',] }],
        previewBlocks: [{ type: core.ContentChildren, args: [PreviewBlockDirective,] }]
    };

    var SelectStepFrameComponent = /** @class */ (function () {
        function SelectStepFrameComponent() {
        }
        return SelectStepFrameComponent;
    }());
    SelectStepFrameComponent.decorators = [
        { type: core.Component, args: [{
                    selector: 'c8y-select-step-frame',
                    template: "<div class=\"card-block overflow-visible flex-no-shrink col-xs-12 p-b-0 p-t-4 separator-bottom\">\n  <div class=\"flex-row j-c-center m-b-24\">\n    <div class=\"col-xs-12 col-sm-8\">\n      <h4 class=\"text-normal text-center m-b-16\">\n        {{ header | translate }}\n      </h4>\n      <ng-content select=\"[filters]\"></ng-content>\n    </div>\n  </div>\n  <ng-content select=\"[header]\"></ng-content>\n</div>\n<c8y-search-result-empty *ngIf=\"noResults\"> </c8y-search-result-empty>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <ng-content select=\"[list]\"></ng-content>\n    </div>\n  </div>\n</div>\n"
                },] }
    ];
    SelectStepFrameComponent.propDecorators = {
        header: [{ type: core.Input }],
        noResults: [{ type: core.Input }]
    };

    var StepperFramesModule = /** @class */ (function () {
        function StepperFramesModule() {
        }
        return StepperFramesModule;
    }());
    StepperFramesModule.decorators = [
        { type: core.NgModule, args: [{
                    imports: [ngxComponents.CoreModule],
                    declarations: [PreviewSelectionFrameComponent, SelectStepFrameComponent, PreviewBlockDirective],
                    exports: [PreviewSelectionFrameComponent, SelectStepFrameComponent, PreviewBlockDirective]
                },] }
    ];

    /**
     * Generated bundle index. Do not edit.
     */

    exports.PreviewBlockDirective = PreviewBlockDirective;
    exports.PreviewSelectionFrameComponent = PreviewSelectionFrameComponent;
    exports.SelectStepFrameComponent = SelectStepFrameComponent;
    exports.StepperFramesModule = StepperFramesModule;

    Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=c8y-ngx-components-operations-stepper-frames.umd.js.map
