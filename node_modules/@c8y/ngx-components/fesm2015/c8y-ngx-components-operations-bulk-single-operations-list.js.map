{"version":3,"file":"c8y-ngx-components-operations-bulk-single-operations-list.js","sources":["../../operations/bulk-single-operations-list/single-operation-item.component.ts","../../operations/bulk-single-operations-list/single-operations-list.component.ts","../../operations/bulk-single-operations-list/bulk-single-operations-list.module.ts","../../operations/bulk-single-operations-list/c8y-ngx-components-operations-bulk-single-operations-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { InventoryService, IOperation, OperationService } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport {\n  OperationStatusOptionsMap,\n  OPERATION_STATUS_LABELS,\n  OPERATION_STATUS_OPTIONS_MAP\n} from '@c8y/ngx-components/operations/shared';\nimport { omit } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-single-operation-item',\n  templateUrl: './single-operation-item.component.html'\n})\nexport class SingleOperationItemComponent {\n  device = {};\n  OPERATION_STATUS_LABELS = OPERATION_STATUS_LABELS;\n  OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap = OPERATION_STATUS_OPTIONS_MAP;\n  @Input()\n  operation: IOperation;\n  @Input()\n  readOnly: boolean = false;\n  @ViewChild('failureReason', { static: true }) failureReasonRef: ElementRef;\n\n  constructor(\n    private alertService: AlertService,\n    private inventoryService: InventoryService,\n    private operationService: OperationService\n  ) {}\n\n  async ngOnInit() {\n    this.device = (await this.inventoryService.detail(this.operation.deviceId))?.data;\n  }\n\n  async retrySingleOperation(singleOperation) {\n    const operationToCreate = omit(singleOperation, [\n      'id',\n      'self',\n      'status',\n      'failureReason',\n      'creationTime',\n      'delivery'\n    ]);\n\n    try {\n      await this.operationService.create(operationToCreate);\n      this.alertService.success(gettext('Operation created.'));\n    } catch (er) {\n      this.alertService.addServerFailure(er);\n    }\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { IOperation, IOperationBulk, IResultList, OperationStatus } from '@c8y/client';\nimport { StatusFilterComponent } from '@c8y/ngx-components/operations/status-filter';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport {\n  StatusOption,\n  OperationStatusOptionsMap,\n  OPERATION_STATUS_LABELS,\n  OPERATION_STATUS_OPTIONS_MAP\n} from '@c8y/ngx-components/operations/shared';\n\n@Component({\n  selector: 'c8y-single-operations-list',\n  templateUrl: './single-operations-list.component.html'\n})\nexport class SingleOperationsListComponent implements AfterViewInit, OnChanges {\n  @Input()\n  bulkOperation: Partial<IOperationBulk>;\n  @Input()\n  readOnly: boolean = false;\n  @Output() onRetryFailedOperations: EventEmitter<Partial<IOperationBulk>> = new EventEmitter();\n\n  @ViewChild(StatusFilterComponent, { static: false })\n  statusFilter: StatusFilterComponent;\n\n  OPERATION_STATUS = { ...OperationStatus, ALL: gettext('ALL') };\n  OPERATION_STATUS_LABELS = OPERATION_STATUS_LABELS;\n  OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap = OPERATION_STATUS_OPTIONS_MAP;\n  singleOperations: IResultList<IOperation>;\n\n  constructor(private bulkOperationsService: BulkOperationsService) {}\n\n  async ngAfterViewInit() {\n    if (this.statusFilter) {\n      this.filterOperationsByType();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.bulkOperation && !changes.bulkOperation.firstChange) {\n      this.filterOperationsByType();\n    }\n  }\n\n  filterOperationsByType() {\n    if (this.statusFilter) {\n      const typeFilter = this.getFilterTypeOfSingleOperations();\n      this.statusFilter.preset(\n        typeFilter === this.OPERATION_STATUS.ALL\n          ? []\n          : [{ label: this.OPERATION_STATUS_LABELS[typeFilter] }]\n      );\n    } else {\n      setTimeout(this.filterOperationsByType.bind(this));\n    }\n  }\n\n  getFilterTypeOfSingleOperations() {\n    const progress = this.bulkOperation.progress;\n\n    if (progress.failed > 0) {\n      return this.OPERATION_STATUS.FAILED;\n    } else if (progress.failed === 0 && progress.successful === 0 && progress.pending === 0) {\n      return this.OPERATION_STATUS.EXECUTING;\n    } else if (progress.failed === 0 && progress.successful === 0 && progress.executing === 0) {\n      return this.OPERATION_STATUS.PENDING;\n    } else if (progress.failed === 0 && progress.pending === 0 && progress.executing === 0) {\n      return this.OPERATION_STATUS.SUCCESSFUL;\n    }\n\n    return this.OPERATION_STATUS.ALL;\n  }\n\n  async getOperationsByStatus(filter: StatusOption[]) {\n    this.singleOperations = await this.bulkOperationsService.getSingleOperationsByStatus(\n      filter[0] && filter[0].label,\n      this.bulkOperation.id\n    );\n  }\n\n  retryBulkOperation() {\n    this.onRetryFailedOperations.emit(this.bulkOperation);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CoreModule } from '@c8y/ngx-components';\nimport { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';\n\nimport { SingleOperationItemComponent } from './single-operation-item.component';\nimport { SingleOperationsListComponent } from './single-operations-list.component';\n\n/**\n * This module allows for displaying the list of single operations in a bulk operations details.\n */\n@NgModule({\n  imports: [CoreModule, PopoverModule, RouterModule, TooltipModule, StatusFilterModule],\n  declarations: [SingleOperationsListComponent, SingleOperationItemComponent],\n  entryComponents: [SingleOperationsListComponent, SingleOperationItemComponent],\n  exports: [SingleOperationsListComponent, SingleOperationItemComponent]\n})\nexport class BulkSingleOperationsListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}