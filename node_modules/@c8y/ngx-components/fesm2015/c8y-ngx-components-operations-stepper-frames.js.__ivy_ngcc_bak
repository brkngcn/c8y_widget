import { Directive, TemplateRef, Input, Component, ViewChild, ContentChildren, NgModule } from '@angular/core';
import { CoreModule } from '@c8y/ngx-components';

class PreviewBlockDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
        this.show = true;
    }
}
PreviewBlockDirective.decorators = [
    { type: Directive, args: [{
                selector: '[previewBlock]'
            },] }
];
PreviewBlockDirective.ctorParameters = () => [
    { type: TemplateRef }
];
PreviewBlockDirective.propDecorators = {
    label: [{ type: Input, args: ['previewBlock',] }],
    show: [{ type: Input, args: ['previewBlockIf',] }]
};

class PreviewSelectionFrameComponent {
    constructor() {
        this.showType = false;
    }
    set _type(type) {
        this.type = type;
        this.showType = true;
    }
}
PreviewSelectionFrameComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-preview-selection-frame',
                template: "<div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n  <div class=\"flex-row p-b-8 p-t-4 j-c-center\">\n    <div>\n      <h4 class=\"text-center text-normal\">{{ header | translate }}</h4>\n      <p *ngIf=\"name || description\" class=\"text-center p-t-16 p-b-8 text-truncate\">\n        <strong *ngIf=\"name\" [title]=\"name\">{{ name }}</strong\n        ><br />\n        <small *ngIf=\"description\" [title]=\"description\">{{ description }}</small>\n      </p>\n      <p class=\"text-center\" *ngIf=\"showType\">\n        <span class=\"label label-primary\" *ngIf=\"type; else noType\">\n          {{ type }}\n        </span>\n        <ng-template #noType>\n          <span class=\"label label-default\">\n            {{ 'Undefined' | translate }}\n          </span>\n        </ng-template>\n      </p>\n    </div>\n  </div>\n</div>\n<div *ngIf=\"previewBlocks?.length\" class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block\">\n      <ng-container *ngFor=\"let block of previewBlocks\">\n        <div *ngIf=\"block.show\" class=\"flex-row p-b-8 j-c-center\">\n          <div class=\"col-xs-12 col-sm-6\">\n            <div class=\"text-truncate\" [title]=\"block.label | translate\">\n              <span class=\"legend form-block\">{{ block.label | translate }}</span>\n              <ng-container *ngTemplateOutlet=\"block.templateRef\"></ng-container>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</div>\n<div [style.display]=\"listRef?.nativeElement?.children?.length ? 'contents' : 'none'\">\n  <div class=\"col-xs-12 flex-grow no-gutter\">\n    <div class=\"card-inner-scroll fit-h\">\n      <div #list class=\"card-block p-t-0 p-b-0\">\n        <ng-content select=\"[list]\"> </ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n"
            },] }
];
PreviewSelectionFrameComponent.propDecorators = {
    header: [{ type: Input }],
    name: [{ type: Input }],
    description: [{ type: Input }],
    _type: [{ type: Input, args: ['type',] }],
    listRef: [{ type: ViewChild, args: ['list',] }],
    previewBlocks: [{ type: ContentChildren, args: [PreviewBlockDirective,] }]
};

class SelectStepFrameComponent {
}
SelectStepFrameComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-select-step-frame',
                template: "<div class=\"card-block overflow-visible flex-no-shrink col-xs-12 p-b-0 p-t-4 separator-bottom\">\n  <div class=\"flex-row j-c-center m-b-24\">\n    <div class=\"col-xs-12 col-sm-8\">\n      <h4 class=\"text-normal text-center m-b-16\">\n        {{ header | translate }}\n      </h4>\n      <ng-content select=\"[filters]\"></ng-content>\n    </div>\n  </div>\n  <ng-content select=\"[header]\"></ng-content>\n</div>\n<c8y-search-result-empty *ngIf=\"noResults\"> </c8y-search-result-empty>\n<div class=\"col-xs-12 flex-grow no-gutter\">\n  <div class=\"card-inner-scroll fit-h\">\n    <div class=\"card-block p-t-0 p-b-0\">\n      <ng-content select=\"[list]\"></ng-content>\n    </div>\n  </div>\n</div>\n"
            },] }
];
SelectStepFrameComponent.propDecorators = {
    header: [{ type: Input }],
    noResults: [{ type: Input }]
};

class StepperFramesModule {
}
StepperFramesModule.decorators = [
    { type: NgModule, args: [{
                imports: [CoreModule],
                declarations: [PreviewSelectionFrameComponent, SelectStepFrameComponent, PreviewBlockDirective],
                exports: [PreviewSelectionFrameComponent, SelectStepFrameComponent, PreviewBlockDirective]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { PreviewBlockDirective, PreviewSelectionFrameComponent, SelectStepFrameComponent, StepperFramesModule };
//# sourceMappingURL=c8y-ngx-components-operations-stepper-frames.js.map
