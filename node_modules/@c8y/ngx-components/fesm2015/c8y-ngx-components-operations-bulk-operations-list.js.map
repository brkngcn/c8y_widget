{"version":3,"file":"c8y-ngx-components-operations-bulk-operations-list.js","sources":["../../operations/bulk-operations-list/modals/bulk-operations-modal.component.ts","../../operations/bulk-operations-list/modals/bulk-operation-modals.service.ts","../../operations/bulk-operations-list/bulk-operations-list.component.ts","../../operations/bulk-operations-list/type-list/bulk-operation-type-list.component.ts","../../operations/bulk-operations-list/bulk-operations-list.module.ts","../../operations/bulk-operations-list/c8y-ngx-components-operations-bulk-operations-list.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewContainerRef, ViewChild, ComponentFactoryResolver } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { OperationType } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operations-modal',\n  templateUrl: 'bulk-operations-modal.component.html'\n})\nexport class BulkOperationsModalComponent {\n  @ViewChild('container', { static: false, read: ViewContainerRef }) container;\n  showComponent: boolean = false;\n  constructor(private bsModalRef: BsModalRef, private resolver: ComponentFactoryResolver) {}\n\n  cancel() {\n    this.bsModalRef.hide();\n  }\n\n  createComponent(item: OperationType) {\n    if (item && item.component) {\n      this.showComponent = true;\n      const factory = this.resolver.resolveComponentFactory(item.component);\n      this.container.createComponent(factory);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BulkOperationsModalComponent } from './bulk-operations-modal.component';\n\n@Injectable()\nexport class BulkOperationModalsService {\n  private bsModalRef: BsModalRef;\n\n  constructor(private bsModalService: BsModalService) {}\n\n  showNewBulkOperationModal() {\n    this.bsModalRef = this.bsModalService.show(BulkOperationsModalComponent, {\n      backdrop: 'static',\n      class: 'modal-sm'\n    });\n  }\n\n  hideNewBulkOperationModal() {\n    if (this.bsModalRef) {\n      this.bsModalRef.hide();\n    }\n  }\n}\n","import { Component, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { IOperationBulk, IResultList } from '@c8y/client';\nimport { DatePickerComponent, OperationBulkRealtimeService } from '@c8y/ngx-components';\nimport {\n  BulkOperationsService,\n  OperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { StatusFilterComponent } from '@c8y/ngx-components/operations/status-filter';\nimport { flatten } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, Observable, pipe } from 'rxjs';\nimport { map, shareReplay, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport {\n  OperationStatusOptionsMap,\n  BulkOperationListItemComponent,\n  BULK_OPERATION_STATUS_OPTIONS\n} from '@c8y/ngx-components/operations/bulk-operation-list-item';\nimport { StatusOption } from '@c8y/ngx-components/operations/shared';\nimport { BulkOperationModalsService } from './modals/bulk-operation-modals.service';\n@Component({\n  selector: 'c8y-bulk-operations',\n  templateUrl: './bulk-operations-list.component.html',\n  providers: [OperationBulkRealtimeService]\n})\nexport class BulkOperationsListComponent implements OnInit {\n  bulkTypes: OperationType[] = [];\n  selectedTypeFilters = this.getTypeFilters();\n  bulkOperationStatusOptions: OperationStatusOptionsMap = BULK_OPERATION_STATUS_OPTIONS;\n\n  filterPipe;\n  refreshLoading: boolean = false;\n  statusFilter$: BehaviorSubject<StatusOption[]> = new BehaviorSubject(null);\n  typeFilter$: BehaviorSubject<OperationType[]> = new BehaviorSubject(null);\n  timeFilter$: BehaviorSubject<any> = new BehaviorSubject(null);\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  @ViewChildren(BulkOperationListItemComponent)\n  listItems: QueryList<BulkOperationListItemComponent>;\n  @ViewChild('statusFilter', { static: true }) statusFilter: StatusFilterComponent;\n  @ViewChild(DatePickerComponent, { static: true }) datePicker: DatePickerComponent;\n\n  bulkOperations$: Observable<IResultList<IOperationBulk>> = combineLatest(\n    this.statusFilter$,\n    this.timeFilter$,\n    this.typeFilter$,\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.refreshLoading = true;\n    }),\n    switchMap(([statusFilters, timeFilters]) => this.filter(statusFilters, timeFilters)),\n    withLatestFrom(this.typeFilter$),\n    map(([result, typeFilter]: [IResultList<IOperationBulk>, OperationType[]]) => {\n      this.filterPipe = pipe(map((data: []) => this.filterByType(data, typeFilter)));\n      return { ...result, data: this.filterByType(result.data, typeFilter) };\n    }),\n    tap(() => {\n      this.refreshLoading = false;\n    }),\n    shareReplay(1)\n  );\n\n  private allFilterFragments: string[];\n\n  constructor(\n    public realtime: OperationBulkRealtimeService,\n    private bulkOperationsService: BulkOperationsService,\n    private bulkOperationModalsService: BulkOperationModalsService\n  ) {\n    this.allFilterFragments = this.flattenFilterFragments(this.getTypeFilters());\n  }\n\n  ngOnInit() {\n    this.bulkTypes = this.bulkOperationsService.getBulkTypes();\n  }\n\n  filterByType(bulkOperations: IOperationBulk[], typeFilter) {\n    const flattenedFragments: string[] = this.flattenFilterFragments(typeFilter);\n    if (\n      // return data unfiltered if no filters selected...\n      !flattenedFragments.length ||\n      // ...or when all filters are selected\n      this.allFilterFragments.every(fragment => flattenedFragments.includes(fragment))\n    ) {\n      return bulkOperations;\n    }\n\n    const filteredData = bulkOperations.filter(item => {\n      return Object.keys(item.operationPrototype).some(key => flattenedFragments.includes(key));\n    });\n\n    return filteredData;\n  }\n\n  resetFilter() {\n    this.statusFilter$.next(null);\n    this.timeFilter$.next(null);\n    this.typeFilter$.next(null);\n\n    this.datePicker.clearFilter();\n    this.selectedTypeFilters = this.getTypeFilters();\n    this.statusFilter.reset();\n  }\n\n  isFilterApplied() {\n    return (\n      !!this.statusFilter$.getValue()?.length ||\n      !!this.typeFilter$.getValue()?.length ||\n      !!this.timeFilter$.getValue()\n    );\n  }\n\n  filter(statusFilters, timeFilter) {\n    const status =\n      statusFilters && statusFilters.length > 0\n        ? {\n            generalStatus: flatten(statusFilters.map(statusFilter => statusFilter.generalStatuses))\n          }\n        : {};\n\n    const time = timeFilter\n      ? {\n          ...(timeFilter.dateFrom && {\n            dateFrom: timeFilter.dateFrom.toISOString()\n          }),\n          ...(timeFilter.dateTo && {\n            dateTo: timeFilter.dateTo.toISOString()\n          })\n        }\n      : {};\n    return this.getBulkOperations({ ...status, ...time });\n  }\n\n  getBulkOperations(filter?) {\n    return this.bulkOperationsService.getBulkOperations(filter);\n  }\n\n  getTypeFilters() {\n    return this.bulkOperationsService.getBulkTypes();\n  }\n\n  addBulkOperation() {\n    this.bulkOperationModalsService.showNewBulkOperationModal();\n  }\n\n  openFailedOperation(failedParentId) {\n    this.listItems.forEach(item => {\n      if (item.bulkOperation.id === failedParentId) {\n        item.listItem.collapsed = false;\n        item.listItem.element.nativeElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    });\n  }\n\n  compareOperations(operationA: IOperationBulk, operationB: IOperationBulk): number {\n    return new Date(operationA.startDate).getTime() - new Date(operationB.startDate).getTime();\n  }\n\n  private flattenFilterFragments(filters: OperationType[]): string[] {\n    return (filters || []).reduce((flattened, current) => flattened.concat(current.fragments), []);\n  }\n}\n","import { Component, EventEmitter, Output, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  BulkOperationsService,\n  OperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { BulkOperationModalsService } from '../modals/bulk-operation-modals.service';\n\n@Component({\n  selector: 'c8y-bulk-operation-type-list',\n  templateUrl: './bulk-operation-type-list.component.html'\n})\nexport class BulkOperationTypeListComponent implements OnInit {\n  @Output() onCustomType: EventEmitter<OperationType> = new EventEmitter();\n  bulkList: OperationType[] = [];\n\n  constructor(\n    private router: Router,\n    private bulkOperationsService: BulkOperationsService,\n    private bulkOperationModalsService: BulkOperationModalsService\n  ) {}\n\n  ngOnInit() {\n    this.bulkList = this.bulkOperationsService.getBulkTypes();\n  }\n\n  handleClick(item: OperationType) {\n    if (item.path) {\n      this.bulkOperationModalsService.hideNewBulkOperationModal();\n      this.router.navigateByUrl(item.path);\n    } else if (item.component) {\n      this.onCustomType.emit(item);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CoreModule, Route } from '@c8y/ngx-components';\nimport { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';\nimport { BulkOperationSchedulerModule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\nimport { BulkOperationListItemModule } from '@c8y/ngx-components/operations/bulk-operation-list-item';\n\nimport { BulkOperationsListComponent } from './bulk-operations-list.component';\nimport { BulkOperationModalsService } from './modals/bulk-operation-modals.service';\nimport { BulkOperationsModalComponent } from './modals/bulk-operations-modal.component';\nimport { BulkOperationTypeListComponent } from './type-list/bulk-operation-type-list.component';\n\nexport const bulkOperationListRoutes: Route[] = [\n  {\n    path: 'devicecontrol/bulk',\n    component: BulkOperationsListComponent\n  }\n];\n\n/**\n * This module allows for displaying the list of bulk operations and their details.\n */\n@NgModule({\n  imports: [\n    CoreModule,\n    PopoverModule,\n    TooltipModule,\n    StatusFilterModule,\n    BulkOperationSchedulerModule,\n    BulkOperationListItemModule,\n    RouterModule.forChild(bulkOperationListRoutes)\n  ],\n  providers: [BulkOperationModalsService],\n  declarations: [\n    BulkOperationsListComponent,\n    BulkOperationTypeListComponent,\n    BulkOperationsModalComponent\n  ],\n  entryComponents: [\n    BulkOperationsListComponent,\n    BulkOperationTypeListComponent,\n    BulkOperationsModalComponent\n  ],\n  exports: [\n    BulkOperationsListComponent,\n    BulkOperationTypeListComponent,\n    BulkOperationsModalComponent\n  ]\n})\nexport class BulkOperationsListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}