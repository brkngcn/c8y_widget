{"version":3,"file":"c8y-ngx-components-operations-shared.js","sources":["../../operations/shared/operations.model.ts","../../operations/shared/operations.service.ts","../../operations/shared/operations-shared.module.ts","../../operations/shared/c8y-ngx-components-operations-shared.ts"],"sourcesContent":["import { OperationStatus } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { StatusOption } from './status-option.model';\n\nexport const OPERATION_STATUS_LABELS = {\n  PENDING: gettext('Pending'),\n  EXECUTING: gettext('Executing'),\n  FAILED: gettext('Failed'),\n  SUCCESSFUL: gettext('Successful')\n};\n\nexport type OperationStatusOptionsMap = {\n  [key in keyof typeof OperationStatus]?: StatusOption;\n};\n\nexport const OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap = {\n  PENDING: {\n    label: OPERATION_STATUS_LABELS.PENDING,\n    status: OperationStatus.PENDING,\n    icon: 'clock-o',\n    styleClass: ''\n  } as unknown as StatusOption,\n  EXECUTING: {\n    label: OPERATION_STATUS_LABELS.EXECUTING,\n    status: OperationStatus.EXECUTING,\n    icon: 'refresh',\n    styleClass: 'text-info'\n  } as unknown as StatusOption,\n  SUCCESSFUL: {\n    label: OPERATION_STATUS_LABELS.SUCCESSFUL,\n    status: OperationStatus.SUCCESSFUL,\n    icon: 'check-circle',\n    styleClass: 'text-success'\n  } as unknown as StatusOption,\n  FAILED: {\n    label: OPERATION_STATUS_LABELS.FAILED,\n    status: OperationStatus.FAILED,\n    icon: 'exclamation-circle',\n    styleClass: 'text-danger'\n  } as unknown as StatusOption\n};\n\nexport const CLEAN_KEYS = ['creationTime', 'deviceExternalIDs', 'id', 'self'];\n\nexport const CLEAN_KEYS_UPDATE = ['deviceId', 'deviceName', 'bulkOperationId'];\n\nexport const RESERVED_KEYS = CLEAN_KEYS.concat(['deviceId', 'deviceName', 'bulkOperationId']);\n\nexport const STANDARD_KEYS = {\n  failureReason: gettext('Failure reason'),\n  description: gettext('Description'),\n  status: gettext('Status')\n};\n","import { Injectable } from '@angular/core';\nimport { IOperation, OperationService, OperationStatus } from '@c8y/client';\nimport { AlertService, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { assign, difference, has, includes, keys, pickBy, without } from 'lodash-es';\nimport { RESERVED_KEYS, STANDARD_KEYS } from './operations.model';\n\n@Injectable()\nexport class OperationsService {\n  constructor(\n    private operationService: OperationService,\n    private modal: ModalService,\n    private alertService: AlertService\n  ) {}\n\n  getStandardKeys(operation: IOperation) {\n    return pickBy(STANDARD_KEYS, (_, key) => has(operation, key));\n  }\n\n  getNonStandardKeys(operation: IOperation, excluding: string[] = []) {\n    return without(\n      difference(this.getKeys(operation), keys(this.getStandardKeys(operation))),\n      ...excluding\n    );\n  }\n\n  async cancel(operation: Partial<IOperation>) {\n    try {\n      await this.modal.confirm(\n        gettext('Cancel operation'),\n        gettext('You are about to cancel the operation. Do you want to proceed?'),\n        Status.DANGER\n      );\n\n      const operationAfterUpdate = (\n        await this.operationService.update({\n          id: operation.id,\n          status: OperationStatus.FAILED,\n          failureReason: gettext('Operation cancelled by user.')\n        })\n      ).data;\n      assign(operation, operationAfterUpdate);\n      this.alertService.success(gettext('Operation cancelled.'));\n    } catch (er) {\n      if (er) {\n        this.alertService.addServerFailure(er);\n      }\n    }\n  }\n\n  private getKeys(managedObject) {\n    return Object.keys({ ...managedObject }).filter(key => !includes(RESERVED_KEYS, key));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { OperationsService } from './operations.service';\n\n@NgModule({\n  providers: [OperationsService]\n})\nexport class OperationsSharedModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;MAIa,uBAAuB,GAAG;IACrC,OAAO,EAAE,OAAO,CAAC,SAAS,CAAC;IAC3B,SAAS,EAAE,OAAO,CAAC,WAAW,CAAC;IAC/B,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC;IACzB,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC;EACjC;MAMW,4BAA4B,GAA8B;IACrE,OAAO,EAAE;QACP,KAAK,EAAE,uBAAuB,CAAC,OAAO;QACtC,MAAM,EAAE,eAAe,CAAC,OAAO;QAC/B,IAAI,EAAE,SAAS;QACf,UAAU,EAAE,EAAE;KACY;IAC5B,SAAS,EAAE;QACT,KAAK,EAAE,uBAAuB,CAAC,SAAS;QACxC,MAAM,EAAE,eAAe,CAAC,SAAS;QACjC,IAAI,EAAE,SAAS;QACf,UAAU,EAAE,WAAW;KACG;IAC5B,UAAU,EAAE;QACV,KAAK,EAAE,uBAAuB,CAAC,UAAU;QACzC,MAAM,EAAE,eAAe,CAAC,UAAU;QAClC,IAAI,EAAE,cAAc;QACpB,UAAU,EAAE,cAAc;KACA;IAC5B,MAAM,EAAE;QACN,KAAK,EAAE,uBAAuB,CAAC,MAAM;QACrC,MAAM,EAAE,eAAe,CAAC,MAAM;QAC9B,IAAI,EAAE,oBAAoB;QAC1B,UAAU,EAAE,aAAa;KACC;EAC5B;MAEW,UAAU,GAAG,CAAC,cAAc,EAAE,mBAAmB,EAAE,IAAI,EAAE,MAAM,EAAE;MAEjE,iBAAiB,GAAG,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,EAAE;MAElE,aAAa,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,YAAY,EAAE,iBAAiB,CAAC,EAAE;MAEjF,aAAa,GAAG;IAC3B,aAAa,EAAE,OAAO,CAAC,gBAAgB,CAAC;IACxC,WAAW,EAAE,OAAO,CAAC,aAAa,CAAC;IACnC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC;;;MC5Cd,iBAAiB;IAC5B,YACU,gBAAkC,EAClC,KAAmB,EACnB,YAA0B;QAF1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAc;QACnB,iBAAY,GAAZ,YAAY,CAAc;KAChC;IAEJ,eAAe,CAAC,SAAqB;QACnC,OAAO,MAAM,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,GAAG,KAAK,GAAG,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;KAC/D;IAED,kBAAkB,CAAC,SAAqB,EAAE,YAAsB,EAAE;QAChE,OAAO,OAAO,CACZ,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC,CAAC,EAC1E,GAAG,SAAS,CACb,CAAC;KACH;IAEK,MAAM,CAAC,SAA8B;;YACzC,IAAI;gBACF,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CACtB,OAAO,CAAC,kBAAkB,CAAC,EAC3B,OAAO,CAAC,gEAAgE,CAAC,EACzE,MAAM,CAAC,MAAM,CACd,CAAC;gBAEF,MAAM,oBAAoB,GAAG,CAC3B,MAAM,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;oBACjC,EAAE,EAAE,SAAS,CAAC,EAAE;oBAChB,MAAM,EAAE,eAAe,CAAC,MAAM;oBAC9B,aAAa,EAAE,OAAO,CAAC,8BAA8B,CAAC;iBACvD,CAAC,EACF,IAAI,CAAC;gBACP,MAAM,CAAC,SAAS,EAAE,oBAAoB,CAAC,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAC;aAC5D;YAAC,OAAO,EAAE,EAAE;gBACX,IAAI,EAAE,EAAE;oBACN,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC;iBACxC;aACF;SACF;KAAA;IAEO,OAAO,CAAC,aAAa;QAC3B,OAAO,MAAM,CAAC,IAAI,mBAAM,aAAa,EAAG,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,CAAC;KACvF;;;YA7CF,UAAU;;;YALU,gBAAgB;YACL,YAAY;YAAnC,YAAY;;;MCIR,sBAAsB;;;YAHlC,QAAQ,SAAC;gBACR,SAAS,EAAE,CAAC,iBAAiB,CAAC;aAC/B;;;ACLD;;;;;;"}