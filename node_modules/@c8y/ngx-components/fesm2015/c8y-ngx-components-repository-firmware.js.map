{"version":3,"file":"c8y-ngx-components-repository-firmware.js","sources":["../../repository/firmware/device-tab/firmware-device-tab.component.ts","../../repository/firmware/device-tab/firmware-device-tab.guard.ts","../../repository/firmware/device-tab/firmware-repository-device-tab.module.ts","../../repository/firmware/list/add-firmware-patch-modal.component.ts","../../repository/firmware/list/add-firmware-modal.component.ts","../../repository/firmware/list/firmware-details.component.ts","../../repository/firmware/list/firmware-list.component.ts","../../repository/firmware/list/firmware-repository-navigation-factory.ts","../../repository/firmware/list/firmware-repository-list.module.ts","../../repository/firmware/firmware-repository.module.ts","../../repository/firmware/c8y-ngx-components-repository-firmware.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IOperation, OperationStatus } from '@c8y/client';\nimport { gettext, ModalSelectionMode } from '@c8y/ngx-components';\nimport {\n  DeviceFirmware,\n  FilterCriteria,\n  FirmwareBinary,\n  RepositorySelectModalComponent,\n  RepositoryService,\n  RepositoryType\n} from '@c8y/ngx-components/repository/shared';\nimport { assign, get, isEmpty } from 'lodash-es';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, combineLatest, from, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, shareReplay, switchMap, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-firmware-device-tab',\n  templateUrl: 'firmware-device-tab.component.html'\n})\nexport class FirmwareDeviceTabComponent {\n  isEmpty = isEmpty;\n  reloading: boolean = false;\n  device$: BehaviorSubject<IManagedObject> = new BehaviorSubject(\n    this.route.parent.snapshot.data.contextData\n  );\n  deviceFirmwareFragment$: Observable<DeviceFirmware> = this.device$.pipe(\n    map(device => device.c8y_Firmware)\n  );\n  firmwareBinary$: Observable<IManagedObject> = this.deviceFirmwareFragment$.pipe(\n    filter(deviceFirmwareFragment => !isEmpty(deviceFirmwareFragment)),\n    switchMap(deviceFirmwareFragment =>\n      from(\n        this.repository.getRepositoryBinaryMoByVersion(\n          deviceFirmwareFragment,\n          RepositoryType.FIRMWARE\n        )\n      )\n    ),\n    shareReplay(1)\n  );\n  repositoryEntry$: Observable<IManagedObject> = this.firmwareBinary$.pipe(\n    switchMap(mo => this.repository.getRepositoryEntryMO$(mo)),\n    shareReplay(1)\n  );\n  patches$: Observable<IManagedObject[]> = combineLatest(\n    this.firmwareBinary$,\n    this.repositoryEntry$\n  ).pipe(\n    switchMap(([firmwareBinary, repositoryEntry]) => {\n      if (repositoryEntry && firmwareBinary) {\n        const version: string = this.repository.getBaseVersionFromMO(\n          firmwareBinary as FirmwareBinary\n        );\n\n        return from(this.repository.listPatchVersions(repositoryEntry, version)).pipe(\n          map(({ data }) => data)\n        );\n      } else {\n        return of([]);\n      }\n    }),\n    shareReplay(1)\n  );\n  supportsFirmwareOperations$: Observable<boolean> = this.device$.pipe(\n    map(\n      (device: IManagedObject) =>\n        get(device, 'c8y_SupportedOperations', []).indexOf('c8y_Firmware') > -1\n    )\n  );\n  changesOperation$ = new BehaviorSubject<IOperation>(null);\n  changesInProgress$: Observable<boolean> = this.changesOperation$.pipe(\n    map(operation => this.isInProgress(operation))\n  );\n\n  constructor(\n    private route: ActivatedRoute,\n    private repository: RepositoryService,\n    private inventory: InventoryService,\n    private bsModal: BsModalService\n  ) {}\n\n  async ngOnInit() {\n    // TODO check route snapshot, why is not refreshing device.\n    // Scenario: missing deviceFirmwareFragment => install new version => switch tabs.\n    // Expected: device should be set.\n    await this.loadDevice();\n    await this.loadOperation();\n  }\n\n  installFirmware() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersionsFn$: (modal: any) => Observable<IManagedObject[]>;\n    } = {\n      repositoryEntriesWithVersions$: of([]),\n      repositoryEntriesWithVersionsFn$: modal =>\n        this.getRepositoryEntriesWithVersions$(modal.content.searchTerm),\n      repositoryType: RepositoryType.FIRMWARE,\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n\n          if (initialState.repositoryEntriesWithVersionsFn$) {\n            modal.content.repositoryEntriesWithVersions$ =\n              initialState.repositoryEntriesWithVersionsFn$(modal);\n          }\n\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedFirmware]) => {\n        this.handleOperation(selectedFirmware);\n      });\n  }\n\n  getRepositoryEntriesWithVersions$(searchTerm$: BehaviorSubject<FilterCriteria>) {\n    return searchTerm$.pipe(\n      distinctUntilChanged(),\n      switchMap(searchTerm =>\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          query: this.repository.getDeviceTypeQuery(RepositoryType.FIRMWARE, this.device$.value),\n          partialName: searchTerm?.name,\n          params: { pageSize: 100 }\n        })\n      ),\n      map(({ data }) => data),\n      map(mos => this.getAndAssignRepositoryBinaries(mos)),\n      shareReplay(1)\n    );\n  }\n\n  getAndAssignRepositoryBinaries(mos: IManagedObject[]) {\n    mos.forEach(mo => {\n      mo.versions = this.repository.listBaseVersions(mo);\n    });\n    return mos;\n  }\n\n  addPatch() {\n    const initialState: Partial<RepositorySelectModalComponent> & {\n      repositoryEntriesWithVersions$: Observable<IManagedObject[]>;\n    } = {\n      repositoryType: RepositoryType.FIRMWARE,\n      repositoryEntriesWithVersions$: this.getRepositoryEntryWithPatches$(),\n      title: gettext('Install firmware'),\n      subTitle: gettext('Available firmwares matching the device type'),\n      icon: 'c8y-firmware',\n      mode: ModalSelectionMode.SINGLE,\n      labels: { ok: gettext('Install') },\n      disableSelected: false\n    };\n\n    this.deviceFirmwareFragment$\n      .pipe(\n        take(1),\n        switchMap(deviceFirmwareFragment => {\n          if (deviceFirmwareFragment) {\n            const { name, version } = deviceFirmwareFragment;\n            const selected = [{ name, version }];\n            assign(initialState, { selected });\n          }\n\n          const modal = this.bsModal.show(RepositorySelectModalComponent, {\n            ignoreBackdropClick: true,\n            initialState\n          });\n          modal.content.load.next();\n\n          return modal.content.resultEmitter;\n        })\n      )\n      .subscribe(([selectedOption]) => {\n        this.handleOperation(selectedOption);\n      });\n  }\n\n  getRepositoryEntryWithPatches$() {\n    return combineLatest(this.repositoryEntry$, this.patches$).pipe(\n      map(([repositoryEntry, patches]) => {\n        return [{ ...repositoryEntry, versions: patches }];\n      })\n    );\n  }\n\n  async loadDevice() {\n    this.reloading = true;\n    const deviceId = this.device$.value.id;\n    const device = (await this.inventory.detail(deviceId, { withChildren: false })).data;\n    this.device$.next(device);\n    this.reloading = false;\n  }\n\n  private async handleOperation(selectedFirmware) {\n    const operation = await this.repository.createFirmwareUpdateOperation(\n      this.device$.value,\n      selectedFirmware\n    );\n    this.trackOperation(operation);\n  }\n\n  private async loadOperation() {\n    const deviceId = this.device$.value.id;\n    const operation = await this.repository.getLastFirmwareUpdateOperation(deviceId);\n    this.trackOperation(operation);\n  }\n\n  private trackOperation(operation: IOperation) {\n    this.changesOperation$.next(operation);\n\n    if (this.isInProgress(operation)) {\n      this.repository.observeOperation(operation).subscribe(\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n          if (operationUpdate.status === OperationStatus.SUCCESSFUL) {\n            this.loadDevice();\n          }\n        },\n        operationUpdate => {\n          this.changesOperation$.next(operationUpdate);\n        }\n      );\n    }\n  }\n\n  private isInProgress(operation: IOperation) {\n    return (\n      operation && [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(operation.status)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { get, has, indexOf } from 'lodash-es';\n\nconst FIRMWARE_FRAGMENT = 'c8y_Firmware';\nconst SUPPORTED_OPERATIONS_FRAGMENT = 'c8y_SupportedOperations';\n\n@Injectable()\nexport class FirmwareDeviceTabGuard implements CanActivate {\n  canActivate(route) {\n    const contextData = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    const supportedOperations = get(contextData, SUPPORTED_OPERATIONS_FRAGMENT);\n    return (\n      (!!supportedOperations ? indexOf(supportedOperations, FIRMWARE_FRAGMENT) >= 0 : false) ||\n      has(contextData, 'c8y_Firmware')\n    );\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FirmwareDeviceTabComponent } from './firmware-device-tab.component';\nimport { FirmwareDeviceTabGuard } from './firmware-device-tab.guard';\nimport { CoreModule, gettext, HOOK_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';\nimport { OperationDetailsModule } from '@c8y/ngx-components/operations/operation-details';\n\n@NgModule({\n  imports: [CommonModule, CoreModule, SharedRepositoryModule, OperationDetailsModule],\n  declarations: [FirmwareDeviceTabComponent],\n  entryComponents: [FirmwareDeviceTabComponent]\n})\nexport class FirmwareRepositoryDeviceTabModule {\n  static forRoot(): ModuleWithProviders<FirmwareRepositoryDeviceTabModule> {\n    return {\n      ngModule: FirmwareRepositoryDeviceTabModule,\n      providers: [\n        FirmwareDeviceTabGuard,\n        {\n          provide: HOOK_ROUTE,\n          useValue: [\n            {\n              context: ViewContext.Device,\n              path: 'firmware',\n              component: FirmwareDeviceTabComponent,\n              label: gettext('Firmware'),\n              icon: 'c8y-firmware',\n              priority: 500,\n              canActivate: [FirmwareDeviceTabGuard]\n            }\n          ] as Route[],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { Component, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n  RepositoryType,\n  ModalModel,\n  RepositoryCategory,\n  RepositoryService\n} from '@c8y/ngx-components/repository/shared';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { isUndefined } from 'lodash-es';\nimport { BehaviorSubject, of, from, pipe, merge, Observable } from 'rxjs';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { NgForm } from '@angular/forms';\nimport {\n  debounceTime,\n  tap,\n  switchMap,\n  distinctUntilChanged,\n  shareReplay,\n  map\n} from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-add-firmware-patch-modal.component',\n  templateUrl: 'add-firmware-patch-modal.component.html'\n})\nexport class AddFirmwarePatchModalComponent {\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ViewChild('firmwarePatchForm', { static: false }) form: NgForm;\n  textForFirmwareUrlPopover: string =\n    gettext(`Path for binaries can vary depending on device agent implementation, for example:\n    /firmware/binaries/firmware1.bin\n    https://firmware/binary/123\n    ftp://firmware/binary/123.tar.gz\n  `);\n\n  model: ModalModel = {\n    selected: undefined,\n    dependency: null,\n    patchVersion: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n\n  firmwareInput$ = new BehaviorSubject<string>('');\n  firmwares$: Observable<IResultList<IManagedObject>> = this.firmwareInput$.pipe(\n    debounceTime(300),\n    distinctUntilChanged(),\n    switchMap(searchStr =>\n      from(\n        this.repository.listRepositoryEntries(RepositoryType.FIRMWARE, {\n          partialName: searchStr,\n          skipLegacy: true\n        })\n      )\n    ),\n    shareReplay(1)\n  );\n  firmwareSelected$ = new BehaviorSubject<Partial<RepositoryCategory>>(null);\n  patchDependencyInput$ = new BehaviorSubject<string>('');\n\n  saving = false;\n  firmwarePreselected: boolean = false;\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmwareInput$.pipe(\n      tap(() => {\n        this.model.dependency = null;\n        if (this.form) {\n          this.form.form.get('patchDependency').reset();\n        }\n      }),\n      switchMap(() => of(null))\n    ),\n    this.firmwareSelected$\n  ).pipe(\n    switchMap(selectedFirmware =>\n      selectedFirmware ? this.repository.listBaseVersions(selectedFirmware) : of(null)\n    ),\n    shareReplay(1)\n  );\n  baseVersionsFilterPipe = pipe(\n    switchMap((data: []) =>\n      this.patchDependencyInput$.pipe(\n        map(partialVersion =>\n          data.filter((mo: any) => {\n            const version = mo.c8y_Firmware.version.toLowerCase();\n            return (\n              partialVersion.length === 0 || version.indexOf(partialVersion.toLowerCase()) > -1\n            );\n          })\n        )\n      )\n    )\n  );\n\n  constructor(\n    private modal: BsModalRef,\n    private repository: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setInitialState();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n      this.firmwareSelected$.next(this.model.selected);\n    }\n  }\n\n  async save() {\n    this.saving = true;\n    this.repository\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware patch added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (dropped.droppedFiles) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n  RepositoryType,\n  ModalModel,\n  RepositoryCategory,\n  RepositoryService\n} from '@c8y/ngx-components/repository/shared';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { isUndefined, get, assign } from 'lodash-es';\nimport { BehaviorSubject, Subscription, from } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, tap, switchMap } from 'rxjs/operators';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { IManagedObject } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-add-firmware-software-modal',\n  templateUrl: 'add-firmware-modal.component.html'\n})\nexport class AddFirmwareModalComponent {\n  @ViewChild('firmwareForm', { static: false }) form: NgForm;\n  @Output() saved: EventEmitter<RepositoryCategory> = new EventEmitter<RepositoryCategory>();\n  onInput: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  model: ModalModel = {\n    selected: undefined,\n    version: undefined,\n    description: undefined,\n    deviceType: undefined,\n    binary: {\n      file: undefined,\n      url: undefined\n    }\n  };\n  firmwaresResult;\n  saving = false;\n  firmwarePreselected: boolean = false;\n  textForFirmwareUrlPopover: string =\n    gettext(`Path for binaries can vary depending on device agent implementation, for example:\n    /firmware/binaries/firmware1.bin\n    https://firmware/binary/123\n    ftp://firmware/binary/123.tar.gz\n  `);\n  private inputSubscription$: Subscription;\n\n  constructor(\n    private modal: BsModalRef,\n    private repositoryService: RepositoryService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.setInitialState();\n    this.loadFirmwares();\n  }\n\n  setInitialState() {\n    if (this.model.selected) {\n      this.firmwarePreselected = true;\n    }\n  }\n\n  loadFirmwares() {\n    this.inputSubscription$ = this.onInput\n      .pipe(\n        tap(() => {\n          if (!this.firmwarePreselected) {\n            this.model.description = null;\n            if (this.form) {\n              this.form.form.get('description').reset();\n            }\n          }\n        }),\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => this.getFirmwareResult(searchStr))\n      )\n      .subscribe(result => {\n        this.firmwaresResult = result;\n      });\n  }\n\n  getFirmwareResult(searchStr: string) {\n    return from(\n      this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n        partialName: searchStr,\n        skipLegacy: true\n      })\n    );\n  }\n\n  async save() {\n    this.saving = true;\n    this.repositoryService\n      .create(this.model, RepositoryType.FIRMWARE)\n      .then(savedFirmware => {\n        this.successMsg();\n        this.saving = false;\n        this.saved.next(savedFirmware);\n        this.cancel();\n      })\n      .catch(e => {\n        this.saving = false;\n        this.saved.error(e);\n        this.cancel();\n      });\n  }\n\n  successMsg() {\n    const msg = gettext('Firmware added.');\n    this.alert.success(msg);\n  }\n\n  cancel() {\n    this.modal.hide();\n    this.saved.complete();\n  }\n\n  ngOnDestroy() {\n    this.inputSubscription$.unsubscribe();\n  }\n\n  onFile(dropped: PickedFiles) {\n    if (!isUndefined(dropped.url)) {\n      this.model.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (dropped.droppedFiles) {\n      this.model.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.model.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  onFirmwareSelect(firmware: IManagedObject) {\n    assign(this.model, {\n      selected: firmware,\n      description: firmware.description,\n      deviceType: get(firmware, 'c8y_Filter.type')\n    });\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList } from '@c8y/client';\nimport { AlertService, gettext, memoize, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { property } from 'lodash-es';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, combineLatest, defer, merge, Observable, Subject } from 'rxjs';\nimport {\n  distinctUntilKeyChanged,\n  map,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  tap,\n  withLatestFrom\n} from 'rxjs/operators';\nimport { FirmwareBinary, RepositoryService } from '@c8y/ngx-components/repository/shared';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\n\n@Component({\n  selector: 'c8y-firmware-details',\n  templateUrl: './firmware-details.component.html'\n})\nexport class FirmwareDetailsComponent implements OnInit, OnDestroy {\n  reload$: Subject<void> = new Subject();\n  reloading$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  updateFirmware$: Subject<Partial<IManagedObject>> = new Subject();\n  firmwareUpdated$: Subject<IManagedObject> = new Subject();\n  baseVersionsUpdated$: Subject<void> = new Subject();\n  patchVersionsUpdated$: Subject<void> = new Subject();\n\n  firmware$: Observable<IManagedObject> = merge(\n    this.activatedRoute.params.pipe(\n      map(params => params.id),\n      switchMap(id => defer(() => this.inventoryService.detail(id).then(result => result.data)))\n    ),\n    this.reload$.pipe(\n      tap(() => this.reloading$.next(true)),\n      switchMap(() => this.activatedRoute.params),\n      map(params => params.id),\n      switchMap(id => defer(() => this.inventoryService.detail(id).then(result => result.data))),\n      tap(() => this.reloading$.next(false))\n    ),\n    this.firmwareUpdated$\n  ).pipe(shareReplay(1));\n\n  baseVersions$: Observable<IResultList<IManagedObject>> = merge(\n    this.firmware$.pipe(distinctUntilKeyChanged('id')),\n    this.baseVersionsUpdated$,\n    this.patchVersionsUpdated$,\n    this.reload$\n  ).pipe(\n    switchMap(() => this.firmware$),\n    switchMap(firmware => this.repositoryService.listBaseVersions(firmware)),\n    shareReplay(1)\n  );\n\n  isLegacy$: Observable<boolean> = this.firmware$.pipe(\n    map(firmware => this.repositoryService.isLegacyEntry(firmware)),\n    shareReplay(1)\n  );\n\n  canAddPatchVersions$: Observable<boolean> = combineLatest(\n    this.isLegacy$,\n    this.baseVersions$.pipe(map(({ data }) => data.length > 0))\n  ).pipe(map(([isLegacy, hasBaseVersions]) => !isLegacy && hasBaseVersions));\n\n  expanded: { [id: string]: boolean } = {};\n\n  destroy$: Subject<boolean> = new Subject<boolean>();\n\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private repositoryService: RepositoryService,\n    private alertService: AlertService,\n    private translateService: TranslateService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.updateFirmware$\n      .pipe(\n        withLatestFrom(this.firmware$),\n        switchMap(([firmwarePartial, firmware]) =>\n          this.inventoryService.update({\n            id: firmware.id,\n            ...firmwarePartial\n          })\n        ),\n        map(({ data }) => data),\n        tap(firmware => this.firmwareUpdated$.next(firmware)),\n        tap(() => this.alertService.success(gettext('Saved.'))),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  @memoize(property('id'))\n  getPatchVersionsCount$(baseVersion: FirmwareBinary) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.baseVersionsUpdated$,\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.getPatchVersionsCount$(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  @memoize()\n  getBinaryName$(binaryUrl) {\n    return this.repositoryService.getBinaryName$(binaryUrl);\n  }\n\n  @memoize(property('id'))\n  getPatchVersions$(baseVersion) {\n    return merge(\n      this.firmware$.pipe(distinctUntilKeyChanged('id')),\n      this.patchVersionsUpdated$,\n      this.reload$\n    ).pipe(\n      switchMap(() => this.firmware$),\n      switchMap(firmware => this.repositoryService.listPatchVersions(firmware, baseVersion)),\n      shareReplay(1)\n    );\n  }\n\n  addBaseVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware,\n              description: firmware.description\n            }\n          };\n          const config: ModalOptions<AddFirmwareModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.baseVersionsUpdated$.next());\n  }\n\n  addPatchVersion() {\n    this.firmware$\n      .pipe(\n        take(1),\n        switchMap(firmware => {\n          const initialState = {\n            model: {\n              selected: firmware\n            }\n          };\n          const config: ModalOptions<AddFirmwarePatchModalComponent> = {\n            class: 'modal-sm',\n            ignoreBackdropClick: true,\n            initialState\n          };\n          const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n          return modalRef.content.saved;\n        })\n      )\n      .subscribe(() => this.patchVersionsUpdated$.next());\n  }\n\n  async deleteBaseVersion(baseVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware {{ version }} with all its patches.'),\n          { version: baseVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(baseVersion);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.baseVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  async deletePatchVersion(patchVersion: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware patch');\n      const body = `\n        ${this.translateService.instant(\n          gettext('You are about to delete firmware patch {{ version }}.'),\n          { version: patchVersion.c8y_Firmware.version }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(patchVersion);\n      this.alertService.success(gettext('Firmware patch deleted.'));\n      this.patchVersionsUpdated$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next(true);\n    this.destroy$.unsubscribe();\n  }\n}\n","import { Router, ActivatedRoute } from '@angular/router';\nimport { Component } from '@angular/core';\nimport { BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  distinctUntilChanged,\n  tap,\n  debounceTime,\n  switchMap,\n  shareReplay,\n  map,\n  pluck\n} from 'rxjs/operators';\nimport { Observable, BehaviorSubject, combineLatest, from } from 'rxjs';\nimport { IResultList, IManagedObject } from '@c8y/client';\nimport { ModalService, gettext, Status, AlertService, memoize } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository/shared';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { property, get } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-firmware-list',\n  templateUrl: 'firmware-list.component.html'\n})\nexport class FirmwareListComponent {\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  reloading: boolean = false;\n  firmwares$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$.pipe(\n      debounceTime(400),\n      distinctUntilChanged()\n    ),\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.reloading = true;\n    }),\n    switchMap(([text]) => this.getFirmwares(text)),\n    tap(() => {\n      this.reloading = false;\n    }),\n    shareReplay(1)\n  );\n  canAddFirmwarePatch$: Observable<boolean> = from(\n    this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, { skipLegacy: true })\n  ).pipe(map(({ data }) => data.length > 0));\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  readonly DEVICE_TYPE_NOT_AVAILABLE: string = gettext('No device type available');\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private modalService: ModalService,\n    private bsModalService: BsModalService,\n    private translateService: TranslateService,\n    private alertService: AlertService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  getFirmwares(partialText?: string) {\n    const properties: string[] = ['name', 'description', 'c8y_Filter.type'];\n    const partialTextFilter = { partialText, properties };\n    return this.repositoryService.listRepositoryEntries(RepositoryType.FIRMWARE, {\n      partialTextFilter\n    });\n  }\n\n  addFirmware() {\n    const config: ModalOptions<AddFirmwareModalComponent> = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwareModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  addFirmwarePatch() {\n    const config: ModalOptions<AddFirmwarePatchModalComponent> = { class: 'modal-sm', ignoreBackdropClick: true };\n    const modalRef = this.bsModalService.show(AddFirmwarePatchModalComponent, config);\n    modalRef.content.saved.subscribe(savedFirmware => this.editFirmware(savedFirmware));\n  }\n\n  editFirmware(firmware: Partial<IManagedObject>) {\n    this.router.navigate([firmware.id], { relativeTo: this.activatedRoute });\n  }\n\n  async deleteFirmware(firmware: IManagedObject) {\n    try {\n      const title = gettext('Delete firmware');\n      const body = `\n        ${this.translateService.instant(\n          gettext(\n            'You are about to delete firmware \"{{ name }}\" with all its versions and patches.'\n          ),\n          { name: firmware.name }\n        )}\n        ${this.translateService.instant(gettext('This operation is irreversible.'))}\n        ${this.translateService.instant(gettext('Do you want to proceed?'))}\n      `;\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(firmware);\n      this.alertService.success(gettext('Firmware deleted.'));\n      this.reload$.next();\n    } catch (ex) {\n      // only if not cancel from modal\n      if (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(firmware: IManagedObject): Observable<number | string> {\n    return this.firmwares$.pipe(\n      switchMap(() => this.repositoryService.getBaseVersionsCount$(firmware)),\n      shareReplay(1)\n    );\n  }\n\n  getDeviceTypeTitle(firmware: IManagedObject): string {\n    return get(\n      firmware,\n      'c8y_Filter.type',\n      this.translateService.instant(this.DEVICE_TYPE_NOT_AVAILABLE)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class FirmwareRepositoryNavigationFactory implements NavigatorNodeFactory {\n  node: NavigatorNode;\n\n  constructor() {\n    this.node = new NavigatorNode({\n      label: gettext('Firmware repository'),\n      path: 'firmware',\n      icon: 'c8y-firmware',\n      parent: gettext('Management'),\n      priority: 1000\n    });\n  }\n\n  get(): NavigatorNode {\n    return this.node;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FirmwareListComponent } from './firmware-list.component';\nimport { FirmwareDetailsComponent } from './firmware-details.component';\nimport { AddFirmwareModalComponent } from './add-firmware-modal.component';\nimport { AddFirmwarePatchModalComponent } from './add-firmware-patch-modal.component';\nimport { CoreModule, FormsModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, Route } from '@c8y/ngx-components';\nimport { FirmwareRepositoryNavigationFactory } from './firmware-repository-navigation-factory';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    FormsModule,\n    PopoverModule,\n    SharedRepositoryModule\n  ],\n  declarations: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n  ],\n  entryComponents: [\n    FirmwareListComponent,\n    FirmwareDetailsComponent,\n    AddFirmwareModalComponent,\n    AddFirmwarePatchModalComponent,\n  ]\n})\nexport class FirmwareRepositoryListModule {\n  static forRoot(): ModuleWithProviders<FirmwareRepositoryListModule> {\n    return {\n      ngModule: FirmwareRepositoryListModule,\n      providers: [\n        {\n          provide: HOOK_NAVIGATOR_NODES,\n          useClass: FirmwareRepositoryNavigationFactory,\n          multi: true\n        },\n        {\n          provide: HOOK_ROUTE,\n          useValue: [\n            {\n              path: 'firmware',\n              component: FirmwareListComponent\n            },\n            {\n              path: 'firmware/:id',\n              component: FirmwareDetailsComponent\n            }\n          ] as Route[],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FirmwareRepositoryDeviceTabModule } from './device-tab/firmware-repository-device-tab.module';\nimport { FirmwareRepositoryListModule } from './list/firmware-repository-list.module';\n\n@NgModule({\n  imports: [\n    FirmwareRepositoryListModule.forRoot(),\n    FirmwareRepositoryDeviceTabModule.forRoot()\n  ]\n})\nexport class FirmwareRepositoryModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {FirmwareDeviceTabComponent as ɵh} from './device-tab/firmware-device-tab.component';\nexport {FirmwareDeviceTabGuard as ɵi} from './device-tab/firmware-device-tab.guard';\nexport {FirmwareRepositoryDeviceTabModule as ɵg} from './device-tab/firmware-repository-device-tab.module';\nexport {AddFirmwareModalComponent as ɵd} from './list/add-firmware-modal.component';\nexport {AddFirmwarePatchModalComponent as ɵe} from './list/add-firmware-patch-modal.component';\nexport {FirmwareDetailsComponent as ɵc} from './list/firmware-details.component';\nexport {FirmwareListComponent as ɵb} from './list/firmware-list.component';\nexport {FirmwareRepositoryListModule as ɵa} from './list/firmware-repository-list.module';\nexport {FirmwareRepositoryNavigationFactory as ɵf} from './list/firmware-repository-navigation-factory';"],"names":[],"mappings":"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"}