{"version":3,"file":"c8y-ngx-components-operations-bulk-operation-list-item.js","sources":["../../operations/bulk-operation-list-item/modals/bulk-operations-reschedule-modal.component.ts","../../operations/bulk-operation-list-item/bulk-operation-list-item.model.ts","../../operations/bulk-operation-list-item/bulk-operation-wrapper.component.ts","../../operations/bulk-operation-list-item/bulk-operation-list-item.service.ts","../../operations/bulk-operation-list-item/bulk-operation-list-item.component.ts","../../operations/bulk-operation-list-item/bulk-operation-list-item.module.ts","../../operations/bulk-operation-list-item/c8y-ngx-components-operations-bulk-operation-list-item.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Subject } from 'rxjs';\nimport { OperationSchedule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operations-reschedule-modal',\n  templateUrl: 'bulk-operations-reschedule-modal.component.html'\n})\nexport class BulkOperationsRescheduleModalComponent implements OnInit {\n  closeSubject: Subject<IOperationBulk> = new Subject();\n  dateAndDelay: OperationSchedule;\n  bulkOperation: Partial<IOperationBulk>;\n  isRetryOperation: boolean;\n  modalTitle: string;\n\n  constructor(\n    public bsModalRef: BsModalRef,\n    private bulkOperationsService: BulkOperationsService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    this.modalTitle = this.getTitle();\n  }\n\n  onDateAndDelaySelect($event) {\n    this.dateAndDelay = $event;\n  }\n\n  getTitle() {\n    return this.isRetryOperation ? gettext('Retry operation') : gettext('Edit schedule');\n  }\n\n  onCancel() {\n    this.bsModalRef.hide();\n  }\n\n  async onSave() {\n    let newBulkOperation;\n    this.bulkOperation.startDate = this.dateAndDelay.scheduledDate.toISOString();\n    this.bulkOperation.creationRamp = this.dateAndDelay.delayInSeconds;\n\n    if (this.isRetryOperation) {\n      try {\n        newBulkOperation = await this.bulkOperationsService.createBulkOperation(this.bulkOperation);\n        this.alert.success(gettext('Successfully rescheduled for a retry.'));\n      } catch (er) {\n        this.alert.addServerFailure(er);\n      }\n    } else {\n      try {\n        newBulkOperation = await this.bulkOperationsService.updateBulkOperation(this.bulkOperation);\n        this.alert.success(gettext('Successfully rescheduled.'));\n      } catch (er) {\n        this.alert.addServerFailure(er);\n      }\n    }\n\n    // send back to component from which modal was called\n    this.closeSubject.next(newBulkOperation.data);\n    this.bsModalRef.hide();\n  }\n}\n","import { OperationBulkGeneralStatus } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport { StatusOption } from '@c8y/ngx-components/operations/shared';\n\nexport type OperationStatusOptionsMap = {\n  [key in keyof typeof BULK_OPERATION_STATUS_LABELS]?: StatusOption;\n};\n\nexport const BULK_OPERATION_STATUS_LABELS = {\n  SCHEDULED: gettext('Scheduled'),\n  EXECUTING: gettext('Executing'),\n  CANCELED: gettext('Canceled'),\n  FAILED: gettext('Completed with failures'),\n  SUCCESSFUL: gettext('Completed successfully'),\n  DELETED: gettext('Deleted')\n};\n\nexport const BULK_OPERATION_STATUS_OPTIONS: OperationStatusOptionsMap = {\n  SCHEDULED: {\n    label: BULK_OPERATION_STATUS_LABELS.SCHEDULED,\n    generalStatuses: [OperationBulkGeneralStatus.SCHEDULED],\n    icon: 'calendar',\n    styleClass: 'text-info'\n  },\n  EXECUTING: {\n    label: BULK_OPERATION_STATUS_LABELS.EXECUTING,\n    generalStatuses: [\n      OperationBulkGeneralStatus.EXECUTING,\n      OperationBulkGeneralStatus.EXECUTING_WITH_ERROR\n    ],\n    icon: 'refresh',\n    styleClass: 'text-primary'\n  },\n  DELETED: {\n    label: BULK_OPERATION_STATUS_LABELS.DELETED,\n    generalStatuses: [OperationBulkGeneralStatus.DELETED],\n    icon: 'delete-document',\n    styleClass: 'text-muted'\n  },\n  CANCELED: {\n    label: BULK_OPERATION_STATUS_LABELS.CANCELED,\n    generalStatuses: [OperationBulkGeneralStatus.CANCELED],\n    icon: 'ban',\n    styleClass: 'text-primary'\n  },\n  FAILED: {\n    label: BULK_OPERATION_STATUS_LABELS.FAILED,\n    generalStatuses: [OperationBulkGeneralStatus.FAILED],\n    icon: 'exclamation-triangle',\n    styleClass: 'text-danger'\n  },\n  SUCCESSFUL: {\n    label: BULK_OPERATION_STATUS_LABELS.SUCCESSFUL,\n    generalStatuses: [OperationBulkGeneralStatus.SUCCESSFUL],\n    icon: 'check-circle',\n    styleClass: 'text-success'\n  }\n};\n","import { Component, Input } from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-bulk-operations-wrapper',\n  templateUrl: './bulk-operation-wrapper.component.html'\n})\nexport class BulkOperationWrapperComponent {\n  @Input() bulkOperation: Partial<IOperationBulk>;\n\n  constructor(\n    public bulkOperationsService: BulkOperationsService,\n    public modalRef: BsModalRef,\n    private modalService: BsModalService\n  ) {}\n\n  // openDetails function needs to be defined in the both places (component and the service) to avoid circular dependency.\n  async openDetails(bulkOperationId: string | number) {\n    const bulkOperation: IOperationBulk = (\n      await this.bulkOperationsService.getBulkOperationById(bulkOperationId)\n    ).data;\n    const initialState = { bulkOperation };\n    this.modalService.show(BulkOperationWrapperComponent, {\n      initialState,\n      class: 'modal-lg'\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IOperationBulk } from '@c8y/client';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { BulkOperationModalDetailsService } from '@c8y/ngx-components/operations/bulk-operation-modal-details';\nimport { BulkOperationWrapperComponent } from './bulk-operation-wrapper.component';\n\n@Injectable()\nexport class BulkOperationListItemService implements BulkOperationModalDetailsService {\n  constructor(\n    private bulkOperationsService: BulkOperationsService,\n    private modalService: BsModalService\n  ) {}\n\n  async openDetails(bulkOperationId: string | number) {\n    const bulkOperation: IOperationBulk = (\n      await this.bulkOperationsService.getBulkOperationById(bulkOperationId)\n    ).data;\n    const initialState = { bulkOperation };\n    this.modalService.show(BulkOperationWrapperComponent, {\n      initialState,\n      class: 'modal-lg'\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { IOperationBulk, OperationBulkGeneralStatus } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ListItemComponent,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { assign, cloneDeep, values, find } from 'lodash-es';\nimport { BsModalRef, BsModalService, ModalOptions } from 'ngx-bootstrap/modal';\nimport { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { BulkOperationsRescheduleModalComponent } from './modals/bulk-operations-reschedule-modal.component';\nimport {\n  BULK_OPERATION_STATUS_OPTIONS,\n  OperationStatusOptionsMap\n} from './bulk-operation-list-item.model';\nimport { BulkOperationListItemService } from './bulk-operation-list-item.service';\n\n@Component({\n  selector: 'c8y-bulk-operation-list-item',\n  templateUrl: './bulk-operation-list-item.component.html'\n})\nexport class BulkOperationListItemComponent implements OnInit, OnChanges {\n  @Input()\n  bulkOperation: Partial<IOperationBulk>;\n  @Input()\n  detailsCollapsed: boolean = true;\n  @Input()\n  readOnly: boolean = false;\n  @Output() showFailedOperation = new EventEmitter();\n  @Output() reload: EventEmitter<any> = new EventEmitter();\n  @ViewChild('listItem', { static: true }) listItem: ListItemComponent;\n  iconClass: string;\n  finishDate: number;\n  refreshLoading = false;\n  bulkOperationGeneralStatus = OperationBulkGeneralStatus;\n  BULK_OPERATION_STATUS_OPTIONS: OperationStatusOptionsMap = BULK_OPERATION_STATUS_OPTIONS;\n  bsModalRef: BsModalRef;\n  finishDatePopoverText: string = gettext(\n    'Approximate date, estimated based on the bulk operation settings.'\n  );\n  progressBarClass: string = 'progress';\n  progressBarColor: string;\n  progressBarStatus: number = 0;\n\n  constructor(\n    public bulkOperationListItemService: BulkOperationListItemService,\n    private bulkOperationsService: BulkOperationsService,\n    private modal: ModalService,\n    private alert: AlertService,\n    private bsModalService: BsModalService\n  ) {}\n\n  ngOnInit() {\n    this.finishDate = this.calculateFinishDateMs();\n    this.setProgressBar();\n  }\n\n  getOperationStatusOptions() {\n    const statusOptions = values(BULK_OPERATION_STATUS_OPTIONS);\n    return find(statusOptions, options =>\n      options.generalStatuses.includes(this.bulkOperation.generalStatus)\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.bulkOperation && !changes.bulkOperation.firstChange) {\n      this.setProgressBar();\n    }\n  }\n  calculateFinishDateMs(): number {\n    const startDateMs: number = new Date(this.bulkOperation.startDate).getTime();\n    const creationRampMs: number = this.bulkOperation.creationRamp * 1000;\n\n    return startDateMs + creationRampMs * this.bulkOperation.progress.all;\n  }\n\n  progressBarProgressFn() {\n    return (\n      ((this.bulkOperation.progress.successful + this.bulkOperation.progress.failed) /\n        this.bulkOperation.progress.all) *\n      100\n    );\n  }\n\n  setProgressBar() {\n    const staticContentOfClass = 'progress-bar progress-striped active progress-bar';\n\n    const progressBarState = {\n      EXECUTING: {\n        progressBarClass: 'progress progress-striped active',\n        progressBarColor: `${staticContentOfClass}-primary`,\n        progressBarStatus: this.progressBarProgressFn()\n      },\n      EXECUTING_WITH_ERROR: {\n        progressBarClass: 'progress progress-striped active',\n        progressBarColor: `${staticContentOfClass}-danger`,\n        progressBarStatus: this.progressBarProgressFn()\n      },\n      FAILED: {\n        progressBarClass: 'progress',\n        progressBarColor: `${staticContentOfClass}-danger`,\n        progressBarStatus: 100\n      },\n      SUCCESSFUL: {\n        progressBarClass: 'progress',\n        progressBarColor: `${staticContentOfClass}-success`,\n        progressBarStatus: 100\n      }\n    };\n\n    assign(this, progressBarState[this.bulkOperation.generalStatus]);\n  }\n\n  editSchedule() {\n    const rescheduledOperation = cloneDeep(this.bulkOperation);\n    const initialState = {\n      bulkOperation: rescheduledOperation\n    };\n    const modalOptions = { initialState, class: 'modal-sm', backdrop: 'static' } as ModalOptions;\n    this.bsModalRef = this.bsModalService.show(\n      BulkOperationsRescheduleModalComponent,\n      modalOptions\n    );\n  }\n\n  async cancelBulkOperation() {\n    try {\n      await this.modal.confirm(\n        gettext('Cancel bulk operation'),\n        gettext('You are about to cancel the bulk operation. Do you want to proceed?'),\n        Status.DANGER\n      );\n      await this.bulkOperationsService.deleteBulkOperation(this.bulkOperation.id);\n      this.reload.emit();\n      this.alert.success(gettext('Operation canceled.'));\n    } catch (er) {\n      this.alert.addServerFailure(er);\n    }\n  }\n\n  retryFailedOperation() {\n    const clonedBulk = cloneDeep(this.bulkOperation);\n\n    // change the id to failedparentId similar to the logic in deviceBulkControl.service.js\n    delete clonedBulk.groupId;\n    clonedBulk.failedParentId = this.bulkOperation.id;\n\n    // show reschdedule modal:\n    const initialState = {\n      bulkOperation: clonedBulk,\n      isRetryOperation: true\n    };\n    const modalOptions = { initialState, class: 'modal-sm', backdrop: 'static' } as ModalOptions;\n    this.bsModalRef = this.bsModalService.show(\n      BulkOperationsRescheduleModalComponent,\n      modalOptions\n    );\n    this.bsModalRef.content.closeSubject.subscribe(() => {\n      this.reload.emit();\n    });\n  }\n\n  async setToSuccessful() {\n    try {\n      await this.modal.confirm(\n        gettext('Set manually bulk operation to SUCCESSFUL'),\n        gettext(\n          'You are about to change the bulk operation status to SUCCESSFUL. Do you want to proceed?'\n        ),\n        Status.DANGER\n      );\n\n      await this.bulkOperationsService.updateBulkOperation({\n        id: this.bulkOperation.id,\n        generalStatus: OperationBulkGeneralStatus.SUCCESSFUL\n      });\n      this.reload.emit();\n      this.alert.success(gettext('Operation status changed to SUCCESSFUL.'));\n    } catch (er) {\n      this.alert.addServerFailure(er);\n    }\n  }\n\n  openFailedOperation(failedParentId) {\n    this.showFailedOperation.emit(failedParentId);\n  }\n\n  isStatusScheduled() {\n    return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.SCHEDULED;\n  }\n\n  isStatusExecutingOrExecutingWithError() {\n    return (\n      this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING ||\n      this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.EXECUTING_WITH_ERROR\n    );\n  }\n\n  allOperationsCreated() {\n    return (\n      this.bulkOperation.progress.all ===\n      this.bulkOperation.progress.executing +\n        this.bulkOperation.progress.failed +\n        this.bulkOperation.progress.pending +\n        this.bulkOperation.progress.successful\n    );\n  }\n\n  isStatusCanceled() {\n    return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.CANCELED;\n  }\n\n  isStatusFailed() {\n    return this.bulkOperation.generalStatus === this.bulkOperationGeneralStatus.FAILED;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\nimport { CoreModule } from '@c8y/ngx-components';\nimport { OperationSummaryModule } from '@c8y/ngx-components/operations/operation-summary';\nimport { BulkOperationSchedulerModule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';\nimport { OperationsListItemDetailsModule } from '@c8y/ngx-components/operations/operations-list-item-details';\n\nimport { BulkOperationListItemComponent } from './bulk-operation-list-item.component';\nimport { BulkOperationsRescheduleModalComponent } from './modals/bulk-operations-reschedule-modal.component';\nimport { BulkOperationListItemService } from './bulk-operation-list-item.service';\nimport { BulkOperationWrapperComponent } from './bulk-operation-wrapper.component';\n\n/**\n * This module allows for displaying the list item of a bulk operation with its details.\n */\n@NgModule({\n  imports: [\n    CoreModule,\n    PopoverModule,\n    TooltipModule,\n    OperationSummaryModule,\n    BulkOperationSchedulerModule,\n    OperationsListItemDetailsModule\n  ],\n  providers: [BulkOperationListItemService],\n  declarations: [\n    BulkOperationListItemComponent,\n    BulkOperationsRescheduleModalComponent,\n    BulkOperationWrapperComponent\n  ],\n  entryComponents: [\n    BulkOperationListItemComponent,\n    BulkOperationsRescheduleModalComponent,\n    BulkOperationWrapperComponent\n  ],\n  exports: [\n    BulkOperationListItemComponent,\n    BulkOperationsRescheduleModalComponent,\n    BulkOperationWrapperComponent\n  ]\n})\nexport class BulkOperationListItemModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}