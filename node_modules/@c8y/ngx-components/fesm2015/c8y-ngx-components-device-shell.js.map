{"version":3,"file":"c8y-ngx-components-device-shell.js","sources":["../../device-shell/command-templates/command-templates.component.ts","../../device-shell/command-templates/command-templates.directive.ts","../../device-shell/command-templates/command-templates.module.ts","../../device-shell/device-shell.guard.ts","../../device-shell/shared/device-shell.model.ts","../../device-shell/shared/device-shell.service.ts","../../device-shell/shared/device-shell-shared.module.ts","../../device-shell/shell/shell.component.ts","../../device-shell/shell/shell.module.ts","../../device-shell/device-shell.module.ts","../../device-shell/c8y-ngx-components-device-shell.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Injector } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n/* https://stackoverflow.com/a/65290658 */\nexport function rootScopeFactory($injector: Injector) {\n  return $injector.get('$rootScope').$new();\n}\n\n@Component({\n  selector: 'c8y-command-templates',\n  template: `<c8y-command-templates-directive\n    (close)=\"modalRef.hide(); onTemplateSelected.next($event)\"\n    (dismiss)=\"modalRef.hide()\"\n  ></c8y-command-templates-directive>`,\n  providers: [\n    {\n      deps: ['$injector'],\n      provide: '$scope',\n      useFactory: rootScopeFactory\n    }\n  ]\n})\nexport class CommandTemplatesComponent {\n  onTemplateSelected: EventEmitter<object> = new EventEmitter();\n\n  constructor(public modalRef: BsModalRef) {}\n}\n","import { Directive, ElementRef, EventEmitter, Injector, Output } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-command-templates-directive'\n})\nexport class CommandTemplates extends UpgradeComponent {\n  @Output()\n  close: EventEmitter<void>;\n\n  @Output()\n  dismiss: EventEmitter<void>;\n\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yCommandTemplates', elementRef, injector);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommandTemplatesComponent } from './command-templates.component';\nimport { CommandTemplates } from './command-templates.directive';\n\n@NgModule({\n  declarations: [CommandTemplates, CommandTemplatesComponent],\n  exports: [CommandTemplatesComponent]\n})\nexport class CommandTemplatesModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class DeviceShellGuard implements CanActivate {\n  private readonly operation = 'c8y_Command';\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const device = route.data.contextData || route.parent.data.contextData;\n    const supportedOperations = (device && device.c8y_SupportedOperations) || [];\n    return supportedOperations.indexOf(this.operation) >= 0;\n  }\n}\n","export enum CommandDeliveryType {\n  DEFAULT = 'Default',\n  SMS = 'SMS'\n}\n\nexport interface DeliveryType {\n  name: string;\n  default?: boolean;\n}\n\nexport interface Command {\n  id: string;\n  name: string;\n  text: string;\n  deliveryTypes: string[];\n  command: string;\n  category: string;\n}\n","import { Injectable } from '@angular/core';\nimport { IOperation, IResult, OperationService } from '@c8y/client';\nimport { gettext, OptionsService } from '@c8y/ngx-components';\nimport { Command, CommandDeliveryType, DeliveryType } from './device-shell.model';\n\n@Injectable()\nexport class DeviceShellService {\n  constructor(private optionsService: OptionsService, private operationService: OperationService) {}\n\n  getDeliveryTypes(): DeliveryType[] {\n    return [\n      {\n        name: gettext(CommandDeliveryType.DEFAULT),\n        default: true\n      },\n      {\n        name: gettext(CommandDeliveryType.SMS)\n      }\n    ];\n  }\n\n  canSendCommandsViaSMS(): Promise<boolean> {\n    return this.optionsService.getSystemOption('messaging', 'provider', false);\n  }\n\n  createCommandOperation(\n    deviceId: string,\n    command: Command,\n    deliveryType: CommandDeliveryType\n  ): Promise<IResult<IOperation>> {\n    const operation: IOperation = {\n      deviceId,\n      description: gettext('Execute shell command') + (command.name ? `: ${command.name}` : ''),\n      deliveryType: deliveryType === CommandDeliveryType.SMS ? CommandDeliveryType.SMS : undefined,\n      c8y_Command: {\n        text: command.text\n      }\n    };\n    return this.operationService.create(operation);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DeviceShellService } from './device-shell.service';\n\n@NgModule({\n  providers: [DeviceShellService]\n})\nexport class DeviceShellSharedModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, IOperation, IResultList, OperationService } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ManagedObjectRealtimeService,\n  OperationRealtimeService\n} from '@c8y/ngx-components';\nimport { includes, isEmpty } from 'lodash-es';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, of, pipe, Subject } from 'rxjs';\nimport { filter, map, startWith, takeUntil } from 'rxjs/operators';\nimport { CommandTemplatesComponent } from '../command-templates';\nimport { Command, CommandDeliveryType, DeliveryType, DeviceShellService } from '../shared';\n\n@Component({\n  selector: 'c8y-device-shell',\n  templateUrl: 'shell.component.html',\n  providers: [OperationRealtimeService, ManagedObjectRealtimeService]\n})\nexport class DeviceShellComponent implements OnInit, OnDestroy {\n  device: IManagedObject = this.route.snapshot.parent.data.contextData;\n  device$: Observable<IManagedObject> = of({} as any);\n  deliveryTypes: Array<DeliveryType & { isSupportedByCommand?: boolean }> = (\n    this.service.getDeliveryTypes() || []\n  ).map(deliveryType => ({ ...deliveryType, isSupportedByCommand: true }));\n  command: Command = {} as Command;\n  smsEnabled: boolean = false;\n  sendingCommand$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  operations: IResultList<IOperation>;\n  filterPipe = pipe(\n    map((operations: IOperation[]) =>\n      (operations || []).filter((operation: IOperation) => !!operation.c8y_Command)\n    )\n  );\n\n  executeViaLabel = gettext('Execute via ({{deliveryType}})');\n\n  private destroyed$: Subject<void> = new Subject();\n\n  constructor(\n    public service: DeviceShellService,\n    public operationRealtime: OperationRealtimeService,\n    private moRealtime: ManagedObjectRealtimeService,\n    private operationService: OperationService,\n    private route: ActivatedRoute,\n    private modalService: BsModalService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.smsEnabled = await this.service.canSendCommandsViaSMS();\n\n    this.device$ = this.moRealtime.onUpdate$(this.device.id).pipe(startWith(this.device));\n\n    this.operations = await this.operationService.list({\n      deviceId: this.device.id,\n      fragmentType: 'c8y_Command',\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date().toISOString(),\n      pageSize: 50,\n      withTotalPages: true,\n      revert: true\n    });\n\n    this.operationRealtime\n      .onCreate$(this.device.id)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(() => this.alertService.success(gettext('Command sent.')));\n\n    this.operationRealtime\n      .onUpdate$(this.device.id)\n      .pipe(\n        filter(op => op.failureReason !== 'Operation cancelled by user.'), // avoid duplicate alerts\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.alertService.success(gettext('Command status updated.')));\n  }\n\n  getPredefinedCommand() {\n    const modal: BsModalRef<CommandTemplatesComponent> =\n      this.modalService.show(CommandTemplatesComponent);\n    modal.content.onTemplateSelected.pipe(takeUntil(this.destroyed$)).subscribe(result => {\n      this.command = { ...(result as any).commandTemplate } as Command;\n      this.deliveryTypes = this.deliveryTypes.map(deliveryType => ({\n        ...deliveryType,\n        isSupportedByCommand:\n          isEmpty(this.command.deliveryTypes) ||\n          includes(this.command.deliveryTypes, deliveryType.name)\n      }));\n    });\n  }\n\n  resetSupportedDeliveryTypes(): void {\n    this.deliveryTypes = (this.service.getDeliveryTypes() || []).map(deliveryType => ({\n      ...deliveryType,\n      isSupportedByCommand: true\n    }));\n  }\n\n  async execute(commandDeliveryType): Promise<void> {\n    const useSMS = commandDeliveryType === CommandDeliveryType.SMS;\n    if (useSMS && !this.smsEnabled) {\n      this.alertService.warning(gettext('SMS transport is not configured.'));\n      return;\n    }\n    this.sendingCommand$.next(true);\n\n    await this.service.createCommandOperation(this.device.id, this.command, commandDeliveryType);\n\n    this.command.text = '';\n    this.resetSupportedDeliveryTypes();\n    this.sendingCommand$.next(false);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { OperationsTimelineModule } from '@c8y/ngx-components/operations/operations-timeline';\nimport { CommandTemplatesModule } from '../command-templates';\nimport { DeviceShellSharedModule } from '../shared';\nimport { DeviceShellComponent } from './shell.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    OperationsTimelineModule,\n    CommandTemplatesModule,\n    DeviceShellSharedModule\n  ],\n  declarations: [DeviceShellComponent],\n  exports: [DeviceShellComponent]\n})\nexport class ShellModule {}\n","import { NgModule } from '@angular/core';\nimport { gettext, HOOK_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { DeviceShellGuard } from './device-shell.guard';\nimport { DeviceShellComponent, ShellModule } from './shell';\n\nconst DEVICE_SHELL_ROUTE: Route = {\n  path: 'shell',\n  context: ViewContext.Device,\n  component: DeviceShellComponent,\n  label: gettext('Shell'),\n  icon: 'terminal',\n  canActivate: [DeviceShellGuard]\n};\n\n@NgModule({\n  imports: [ShellModule],\n  providers: [\n    DeviceShellGuard,\n    {\n      provide: HOOK_ROUTE,\n      useValue: DEVICE_SHELL_ROUTE,\n      multi: true\n    }\n  ]\n})\nexport class DeviceShellModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DeviceShellComponent as ɵb,ShellModule as ɵa} from './shell';"]}