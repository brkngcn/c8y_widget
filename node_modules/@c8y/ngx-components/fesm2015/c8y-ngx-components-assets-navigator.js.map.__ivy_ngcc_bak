{"version":3,"file":"c8y-ngx-components-assets-navigator.js","sources":["../../assets-navigator/action.enum.ts","../../assets-navigator/group-fragment.model.ts","../../assets-navigator/load-more-node.ts","../../assets-navigator/asset-node.ts","../../assets-navigator/dynamic-group-node.ts","../../assets-navigator/asset-node-config.model.ts","../../assets-navigator/group.service.ts","../../assets-navigator/asset-node.service.ts","../../assets-navigator/asset-node.factory.ts","../../assets-navigator/asset-selector/group-node.ts","../../assets-navigator/asset-selector/group-node.service.ts","../../assets-navigator/asset-selector/asset-selector.service.ts","../../assets-navigator/asset-selector/asset-selector.model.ts","../../assets-navigator/asset-selector/unassigned-devices-node.ts","../../assets-navigator/asset-selector/asset-selector-base.ts","../../assets-navigator/asset-selector/asset-selector.component.ts","../../assets-navigator/asset-selector/asset-selector-node.component.ts","../../assets-navigator/asset-selector/miller-view.component.ts","../../assets-navigator/asset-selector/asset-selector.module.ts","../../assets-navigator/assets-navigator.module.ts","../../assets-navigator/c8y-ngx-components-assets-navigator.ts"],"sourcesContent":["export enum Action {\n  FETCH,\n  NEXT,\n  REFRESH,\n  LOADING_DONE\n}\n","export enum GroupFragment {\n  groupType = 'c8y_DeviceGroup',\n  subGroupType = 'c8y_DeviceSubgroup',\n  groupFragmentType = 'c8y_IsDeviceGroup',\n  dataBrokerSourceFragment = 'c8y_BrokerSource',\n  dynamicGroupType = 'c8y_DynamicGroup',\n  dynamicGroupFragment = 'c8y_IsDynamicGroup',\n  dynamicGroupColumnConfig = 'c8y_UIDeviceFilterConfig',\n  dynamicGroupQueryString = 'c8y_DeviceQueryString',\n}\n","import { NavigatorNode, gettext } from '@c8y/ngx-components';\n\nexport class LoadMoreNode extends NavigatorNode {\n  static NAME = 'LoadMoreNode';\n  label = gettext('Load more');\n  icon = 'plus';\n  droppable = true;\n\n  constructor() {\n    super();\n    this.priority = -Infinity;\n  }\n\n  toString() {\n    return LoadMoreNode.NAME;\n  }\n\n  isGroup() {\n    return false;\n  }\n}\n","import { IIdentified, Paging } from '@c8y/client';\nimport {\n  ClickOptions,\n  DeviceStatusComponent,\n  gettext,\n  NavigatorNode,\n  NavigatorNodeData\n} from '@c8y/ngx-components';\nimport { debounce, get } from 'lodash-es';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { Action } from './action.enum';\nimport { AssetNodeMo, AssetNodeService } from './asset-node.service';\nimport { GroupFragment } from './group-fragment.model';\nimport { LoadMoreNode } from './load-more-node';\n\nexport class AssetNode extends NavigatorNode {\n  static NAME = 'AssetNode';\n  root: boolean;\n  mo: any;\n  hideDevices: boolean = false;\n  filterQuery$ = new BehaviorSubject<string>('');\n  showChildDevices: boolean = false;\n\n  /**\n   * Asset node children (subentries).\n   */\n  children: AssetNode[] = [];\n\n  get hasChildren() {\n    return this.root || this.service.isGroup(this.mo);\n  }\n\n  get isDevice() {\n    return !!this.mo.c8y_IsDevice;\n  }\n\n  get isDeviceOrProbablyChildDevice() {\n    return this.isDevice || this.isNeitherDeviceOrGroup;\n  }\n\n  get isNeitherDeviceOrGroup() {\n    return (\n      !this.service.isGroup(this.mo) &&\n      !this.service.isDynamicGroup(this.mo) &&\n      !this.isDevice &&\n      !this.root\n    );\n  }\n\n  events: Subject<Action>;\n  protected paging: Paging<AssetNodeMo>;\n  protected loadMoreNode: LoadMoreNode;\n  private onUpdateSubscription: Subscription;\n\n  constructor(protected service: AssetNodeService, protected config: NavigatorNodeData = {}) {\n    super(config);\n\n    this.root = this.root || false;\n    this.hideDevices = config.hideDevices ?? this.hideDevices;\n    this.mo = this.mo || {};\n    this.path = this.getPath();\n    this.draggable = !this.service?.moduleConfig?.disableDragAndDrop && !this.root;\n    this.droppable =\n      !this.service?.moduleConfig?.disableDragAndDrop && !this.isDeviceOrProbablyChildDevice;\n    this.routerLinkExact = this.root;\n    this.updateIcon(false);\n    this.onUpdateSubscription = this.service\n      .onUpdate(this)\n      .subscribe(({ data, method }) => this.refresh(data, method));\n    this.setLabel();\n    this.iconComponent = this.isDeviceOrProbablyChildDevice ? DeviceStatusComponent : undefined;\n  }\n\n  getPath() {\n    if (this.config.path) {\n      return this.config.path;\n    }\n\n    return this.root\n      ? 'group'\n      : this.isDeviceOrProbablyChildDevice\n      ? `device/${this.mo.id}`\n      : `group/${this.mo.id}`;\n  }\n\n  openOnStart(url) {\n    const urlRegex = /^\\/group\\//;\n    if (this.root) {\n      if (this.service.moduleConfig.openOnStart || urlRegex.test(url)) {\n        return true;\n      }\n    }\n    const matches = url.match(/\\/(group)\\/(\\d+)/);\n    let isMatch = false;\n    if (matches) {\n      const id = matches[2];\n      isMatch = []\n        .concat(get(this.mo, 'childAssets.references', []))\n        .some(({ managedObject }) => managedObject.id === id);\n      return isMatch;\n    }\n    return false;\n  }\n\n  refresh(mo: any = {}, method = 'GET') {\n    if (mo.id === this.mo.id) {\n      this.mo = mo;\n      this.setLabel();\n    } else if (method === 'DELETE') {\n      this.parents.forEach((node: AssetNode) => node.refresh());\n      return;\n    }\n    if (this.events) {\n      this.events.next(Action.REFRESH);\n    }\n  }\n\n  setLabel() {\n    this.label = this.config.label || (this.root && gettext('Groups')) || this.mo.name || '--';\n  }\n\n  click(options: ClickOptions = {}) {\n    if (this.isDeviceOrProbablyChildDevice && !this.showChildDevices) {\n      this.service.preferBreadcrumb(this.parents);\n      return;\n    }\n    this.hookEvents();\n    this.updateIcon(options.open);\n    if (options.open) {\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  sort() {\n    this.children.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  addManagedObject(mo) {\n    const { childAdditions } = this.mo;\n    if (!this.isChildAddition(childAdditions, mo)) {\n      this.add(this.service.createChildNode(mo, { hideDevices: this.hideDevices }));\n    }\n  }\n\n  isChildAddition(childAdditions, mo) {\n    return (\n      childAdditions && childAdditions.references.some(({ managedObject: { id } }) => id === mo.id)\n    );\n  }\n\n  destroy() {\n    this.onUpdateSubscription.unsubscribe();\n  }\n\n  get canDrop() {\n    const nodeToMove = this.service.draggedData;\n    if (nodeToMove) {\n      const shouldGetChildOfItsOwn = !!nodeToMove.find(child => child === this);\n      const isAlreadyChild = (this.children as AssetNode[]).some(\n        child => child.mo && child.mo.id === nodeToMove.mo.id\n      );\n      const preventMove = this === nodeToMove || shouldGetChildOfItsOwn || isAlreadyChild;\n      return this.droppable && !preventMove && this.service.canDropNode(this.root);\n    }\n    return this.droppable;\n  }\n\n  dragStart($event) {\n    super.dragStart($event);\n    this.service.draggedData = this;\n    this.service.rootNode.droppable = !this.isDeviceOrProbablyChildDevice;\n  }\n\n  dragEnd($event) {\n    super.dragEnd($event);\n  }\n\n  async drop($event) {\n    const nodeToMove = this.service.draggedData;\n\n    // TODO remove when asset type node can be used on the root level.\n    if (this.root && this.isAsset(nodeToMove)) {\n      this.service.alert.info(gettext('Asset type node cannot become root node.'));\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n      return;\n    }\n\n    super.drop($event);\n    if (this.canDrop) {\n      await this.moveNode(nodeToMove);\n    } else {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  hookEvents() {\n    if (!this.events) {\n      this.events = new Subject();\n      this.events.subscribe(evt => {\n        if (!this.loading) {\n          this.handleEvent(evt);\n        }\n      });\n    }\n  }\n\n  toString() {\n    return AssetNode.NAME;\n  }\n\n  /**\n   * Checks if the current node has child devices.\n   */\n  hasChildDevices() {\n    return this.mo && this.mo.c8y_IsDevice && this.mo.childDevices.references.length > 0;\n  }\n\n  protected fetch() {\n    return this.root\n      ? this.service.getRootNodes()\n      : this.service.getGroupItems(\n          this.mo.id,\n          this.hideDevices\n            ? {\n                query: `$filter=(has(${GroupFragment.groupFragmentType}))$orderby=name`\n              }\n            : {}\n        );\n  }\n\n  protected countChildren() {\n    return this.children.length;\n  }\n\n  protected async handleEvent(evt: Action) {\n    if (!this.countChildren() && evt === Action.FETCH) {\n      this.loading = true;\n      this.addNodes(await this.fetch());\n      this.loading = false;\n    } else if (evt === Action.NEXT) {\n      this.loadMoreNode.loading = true;\n      this.addNodes(await this.paging.next());\n      this.loadMoreNode.loading = false;\n    } else if (evt === Action.REFRESH) {\n      this.loading = false;\n      this.paging = undefined;\n      this.loadMoreNode = undefined;\n      this.empty();\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  protected addNodes(res) {\n    if (res.paging) {\n      const { currentPage, nextPage, pageSize } = (this.paging = res.paging);\n      if (currentPage === 1) {\n        this.empty();\n      }\n      const itemsCount = res.data.length;\n      const moreItemsAvailable = !!nextPage && itemsCount === pageSize;\n      this.toggleLoadMore(moreItemsAvailable);\n    }\n    (res.data || res).map(mo => {\n      return this.addManagedObject(mo);\n    });\n    this.events.next(Action.LOADING_DONE);\n  }\n\n  protected toggleLoadMore(show: boolean) {\n    if (!this.loadMoreNode && show) {\n      this.loadMoreNode = new LoadMoreNode();\n      this.add(this.loadMoreNode);\n      this.loadMoreNode.click = debounce(() => this.events.next(Action.NEXT), 300, {\n        leading: true,\n        trailing: false\n      });\n    }\n\n    if (this.loadMoreNode) {\n      this.loadMoreNode.hidden = !show;\n    }\n  }\n\n  private async moveNode(nodeToMove: AssetNode) {\n    try {\n      const isCopy = await this.showDropConfirm(nodeToMove);\n      await this.verifyNodeAccess(nodeToMove);\n      await this.addMovedNode(nodeToMove);\n      if (!isCopy) {\n        await this.removeMovedNode(nodeToMove);\n      }\n      this.expand();\n    } catch (ex) {\n      if (ex) {\n        this.service.alert.addServerFailure(ex);\n      }\n    } finally {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  private async showDropConfirm(nodeToMove: AssetNode) {\n    this.confirm.title = gettext('Move');\n    this.confirm.message = gettext('Do you want to move the group?');\n    const buttons: any = [\n      {\n        label: gettext('Cancel'),\n        action: () => Promise.reject()\n      },\n      {\n        label: gettext('Move'),\n        status: 'default',\n        action: () => Promise.resolve(false)\n      }\n    ];\n    if (nodeToMove.isDeviceOrProbablyChildDevice) {\n      this.confirm.title = gettext('Move or add');\n      this.confirm.message = gettext('Do you want to move or add the device?');\n      buttons.push({\n        label: gettext('Add'),\n        status: 'primary',\n        action: () => Promise.resolve(true)\n      });\n    }\n    return this.confirm.show(buttons);\n  }\n\n  private async verifyNodeAccess(nodeToMove: AssetNode) {\n    return this.service.inventory.update({ id: nodeToMove.mo.id });\n  }\n\n  private async addMovedNode(nodeToMove: AssetNode) {\n    let mo: IIdentified;\n\n    if (this.root && !this.isAsset(nodeToMove)) {\n      mo = (\n        await this.service.inventory.update({\n          id: nodeToMove.mo.id,\n          type: GroupFragment.groupType\n        })\n      ).data;\n\n      this.addManagedObject(mo);\n      return;\n    }\n\n    mo = (await this.service.inventory.childAssetsAdd(nodeToMove.mo, this.mo)).data;\n    this.addManagedObject(mo);\n  }\n\n  private isAsset(nodeToMove: AssetNode) {\n    // TODO use isAsset check when https://github.softwareag.com/IOTA/cumulocity-ui/pull/690 is merged.\n    // Do not override asset type!\n    return nodeToMove.mo?.c8y_IsAsset;\n  }\n\n  private async removeMovedNode(nodeToMove: AssetNode) {\n    for (const parent of nodeToMove.parents as AssetNode[]) {\n      if (parent.mo && parent.mo.type === GroupFragment.dynamicGroupType) {\n        break; // smart groups don't need to be changed\n      }\n\n      if (parent.root && !this.isAsset(nodeToMove)) {\n        await this.service.inventory.update({\n          id: nodeToMove.mo.id,\n          type: GroupFragment.subGroupType\n        });\n      }\n\n      if (!parent.root) {\n        await this.service.inventory.childAssetsRemove(nodeToMove.mo, parent.mo);\n      }\n      parent.remove(nodeToMove);\n    }\n  }\n\n  private updateIcon(open) {\n    this.icon = this.service.icon(\n      // if it's root we are going to pass a fake mo to get the same icon as groups\n      this.root ? { c8y_IsDeviceGroup: {} } : this.mo,\n      open\n    );\n  }\n}\n","import { AssetNode } from './asset-node';\nimport { AssetNodeService } from './asset-node.service';\n\nexport class DynamicGroupNode extends AssetNode {\n  constructor(protected service: AssetNodeService, config = {}) {\n    super(service, config);\n    this.draggable = false;\n    this.droppable = false;\n  }\n\n  get hasChildren() {\n    return true;\n  }\n\n  get query() {\n    return this.mo.c8y_DeviceQueryString;\n  }\n\n  protected fetch(): any {\n    return this.service.getDynamicGroupItems(this.query);\n  }\n}\n","import { InjectionToken } from '@angular/core';\r\nimport { NavigatorNode } from '@c8y/ngx-components';\r\nimport { AssetNode } from './asset-node';\r\nexport const ASSET_NAVIGATOR_CONFIG = new InjectionToken<AssetNavigatorConfig>('AssetNodeConfig');\r\n\r\n/**\r\n * Configuration object of the AssetsNavigatorModule.\r\n */\r\nexport interface AssetNavigatorConfig {\r\n  /**\r\n   * Allows to enable smart groups in the module.\r\n   * Default value: false.\r\n   */\r\n  smartGroups?: boolean;\r\n  /**\r\n   * Expands the root navigator node when the navigator is initialized.\r\n   * Default value: false\r\n   */\r\n  openOnStart?: boolean;\r\n  /**\r\n   * Allows to change the position of the root group in the navigator.\r\n   * The higher the value, the higher the position in navigation.\r\n   * Default value: 2000.\r\n   */\r\n  rootNodePriority?: number;\r\n  /**\r\n   * Allows to drag and drop items in the asset navigator.\r\n   * Default value: true.\r\n   */\r\n  disableDragAndDrop?: boolean;\r\n  /**\r\n   * Allows to override properies of the root group or hide it.\r\n   * Setup examples:\r\n   * - `rootNavigatorNode: true` - shows the default navigator node (default),\r\n   * - `rootNavigatorNode: false` - hides the navigator node,\r\n   * - `rootNavigatorNode: { label: 'New name', ... }` - overrides default navigator node,\r\n   * - `rootNavigatorNode: new NavigatorNode({ label: 'New name', ... })` - overrides default navigator node,\r\n   */\r\n  rootNavigatorNode?: boolean | Partial<NavigatorNode | AssetNode>;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { GroupFragment } from './group-fragment.model';\nimport { IManagedObject } from '@c8y/client';\nimport { AssetTypesService } from '@c8y/ngx-components';\n\nexport const MO_TYPES = [\n  'asset',\n  'dynamicGroup',\n  'brokerSource',\n  'brokerSourceInactive',\n  'group',\n  'other'\n] as const;\n\nexport type MoTypes = typeof MO_TYPES[number];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceGroupService {\n  readonly icons = {\n    brokerSourceInactive: {\n      icon: 'c8y-group-remote-inactive',\n      iconOpen: 'c8y-group-remote-inactive'\n    },\n    brokerSource: {\n      icon: 'c8y-group-remote',\n      iconOpen: 'c8y-group-remote-open'\n    },\n    group: {\n      icon: 'c8y-group',\n      iconOpen: 'c8y-group-open'\n    },\n    dynamicGroup: {\n      icon: 'c8y-group-smart',\n      iconOpen: 'c8y-group-smart-open'\n    },\n    other: {\n      icon: 'exchange',\n      iconClass: 'statusUnknown'\n    }\n  };\n  dataBrokerSourceFragmentInactive = `_${GroupFragment.dataBrokerSourceFragment}`;\n\n  constructor(protected assetTypesService: AssetTypesService) {}\n\n  /**\n   * Finds an icon based on the contents of a managed object.\n   * It takes into account factors such as type, and specific fragemnts.\n   * @param mo Managed object to be checked.\n   * @param open Determines whether the method should return an alternative icon showing the open state.\n   * @returns Returns an icon.\n   */\n  icon(mo: IManagedObject, open: boolean = false): string {\n    let icon: string;\n\n    const genericMoType = this.determineMoType(mo);\n\n    if (genericMoType === 'asset') {\n      icon = this.getAssetCustomIcon(mo.type, open);\n      return icon;\n    }\n    const typeIcons = this.getDefaultIcon(genericMoType);\n\n    return (open && (typeIcons as any).iconOpen) || typeIcons.icon;\n  }\n\n  /**\n   * Checks whether a given managed object is a group.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a group.\n   */\n  isGroup(mo: IManagedObject): boolean {\n    return !!mo[GroupFragment.groupFragmentType] || mo.type === GroupFragment.groupType;\n  }\n\n  /**\n   * Checks whether a given managed object is a dynamic group.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a dynamic group.\n   */\n  isDynamicGroup(mo: IManagedObject): boolean {\n    return !!mo[GroupFragment.dynamicGroupFragment] || mo.type === GroupFragment.dynamicGroupType;\n  }\n\n  /**\n   * Checks whether a given managed object is a data broker.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a data broker.\n   */\n  isDataBroker(mo: IManagedObject): boolean {\n    return (\n      !!mo[GroupFragment.dataBrokerSourceFragment] || !!mo[this.dataBrokerSourceFragmentInactive]\n    );\n  }\n\n  /**\n   * Checks whether a given managed object is a data broker active.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a data broker active.\n   */\n  isDataBrokerActive(mo: IManagedObject) {\n    return (\n      !!mo[GroupFragment.dataBrokerSourceFragment] && !mo[this.dataBrokerSourceFragmentInactive]\n    );\n  }\n\n  /**\n   * Checks whether a given managed object is an asset.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is an asset.\n   */\n  isAsset(mo: IManagedObject) {\n    return !!mo.c8y_IsAsset;\n  }\n\n  /**\n   * Checks whether the object belongs to any type of group.\n   * Types of groups: group, dynamic group, data broker, data broker active.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object belongs to the group category.\n   */\n  isAnyGroup(mo: IManagedObject) {\n    return (\n      this.isGroup(mo) ||\n      this.isDynamicGroup(mo) ||\n      this.isDataBroker(mo) ||\n      this.isDataBrokerActive(mo)\n    );\n  }\n\n  /**\n   * Checks whether a given managed object is a device.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a device.\n   */\n  isDevice(mo: IManagedObject) {\n    return !!mo.c8y_IsDevice;\n  }\n\n  private getAssetCustomIcon(moType: string, open: boolean = false): string {\n    return this.assetTypesService.getIcon(moType, open);\n  }\n\n  private getDefaultIcon(moType: MoTypes) {\n    return this.icons[moType];\n  }\n\n  private determineMoType(mo: IManagedObject): MoTypes {\n    if (this.isAsset(mo)) {\n      return 'asset';\n    }\n\n    if (this.isDynamicGroup(mo)) {\n      return 'dynamicGroup';\n    }\n\n    if (this.isDataBrokerActive(mo)) {\n      return 'brokerSource';\n    }\n\n    if (this.isDataBroker(mo)) {\n      return 'brokerSourceInactive';\n    }\n\n    if (this.isGroup(mo)) {\n      return 'group';\n    }\n\n    return 'other';\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { InventoryService, QueriesUtil, UserService, IManagedObject, IResult } from '@c8y/client';\nimport {\n  AlertService,\n  BreadcrumbService,\n  ModalService,\n  NavigatorNode,\n  AppStateService,\n  NavigatorNodeData,\n  OptionsService\n} from '@c8y/ngx-components';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { empty } from 'rxjs';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { DynamicGroupNode } from './dynamic-group-node';\nimport { GroupFragment } from './group-fragment.model';\nimport { DeviceGroupService } from './group.service';\n\nexport interface AssetNodeMo {\n  id: string;\n  type: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetNodeService {\n  rootNode: AssetNode;\n  firstUrl = true;\n  draggedData: AssetNode;\n  queriesUtil: QueriesUtil;\n  protected PAGE_SIZE = 20;\n\n  constructor(\n    public inventory: InventoryService,\n    public apiService: ApiService,\n    public modal: ModalService,\n    public alert: AlertService,\n    protected breadcrumbService: BreadcrumbService,\n    protected user: UserService,\n    protected appState: AppStateService,\n    protected optionsService: OptionsService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig,\n    protected deviceGroupService: DeviceGroupService\n  ) {\n    this.moduleConfig = {\n      rootNodePriority: 2000,\n      ...(moduleConfig || {})\n    };\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  icon(mo: IManagedObject, open?: boolean) {\n    return this.deviceGroupService.icon(mo, open);\n  }\n\n  isGroup(mo: IManagedObject) {\n    return this.deviceGroupService.isGroup(mo);\n  }\n\n  isDynamicGroup(mo: IManagedObject) {\n    return this.deviceGroupService.isDynamicGroup(mo);\n  }\n\n  isDataBroker(mo: IManagedObject) {\n    return this.deviceGroupService.isDataBroker(mo);\n  }\n\n  isDataBrokerActive(mo: IManagedObject) {\n    return this.deviceGroupService.isDataBrokerActive(mo);\n  }\n\n  isAsset(mo: IManagedObject) {\n    return this.deviceGroupService.isAsset(mo);\n  }\n\n  isAnyGroup(mo: IManagedObject) {\n    return this.deviceGroupService.isAnyGroup(mo);\n  }\n\n  isDevice(mo: IManagedObject) {\n    return this.deviceGroupService.isDevice(mo);\n  }\n\n  createRootNode(config: NavigatorNodeData = {}) {\n    this.rootNode = this.createAssetNode({\n      root: true,\n      ...config,\n      priority: this.moduleConfig.rootNodePriority,\n      featureId: 'groups'\n    });\n    return this.rootNode;\n  }\n\n  createDynamicGroupNode(config) {\n    return new DynamicGroupNode(this, config);\n  }\n\n  createAssetNode(config: Partial<AssetNode>) {\n    return new AssetNode(this, config);\n  }\n\n  createChildNode(managedObject, config: Partial<AssetNode>) {\n    const { type } = managedObject;\n    config.mo = managedObject;\n    if (type === GroupFragment.dynamicGroupType) {\n      return this.createDynamicGroupNode(config);\n    }\n    return this.createAssetNode(config);\n  }\n\n  getRootNodes(customFilter?: any): Promise<any> {\n    const defaultFilter = {\n      pageSize: this.PAGE_SIZE,\n      withChildren: false,\n      onlyRoots: !this.optionsService.disableOnlyRootsQuery,\n      query: this.queriesUtil.buildQuery(this.navRootQueryFilter())\n    };\n    const groupFilter = { ...defaultFilter, ...customFilter };\n\n    // due to BE performance limitations we do not allow filtering and sorting for a user without inventory roles\n    if (!this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_READ')) {\n      delete groupFilter.query;\n      Object.assign(groupFilter, {\n        fragmentType: GroupFragment.groupFragmentType,\n        onlyRoots: true\n      });\n    }\n    return this.inventory.list(this.createFilter(groupFilter));\n  }\n\n  getAllInventories(customFilter?: any): Promise<any> {\n    const defaultFilter = {\n      pageSize: this.PAGE_SIZE,\n      withChildren: false\n    };\n    const groupFilter = { ...defaultFilter, ...customFilter };\n    return this.inventory.list(this.createFilter(groupFilter));\n  }\n\n  getGroupItems(moId: string, extraFilter: object = {}, withChildren = false, filterQuery = '') {\n    const queryFilter = {\n      withChildren,\n      pageSize: this.PAGE_SIZE,\n      query: this.groupQueryFilter(moId, filterQuery)\n    };\n    return this.inventory.childAssetsList(moId, { ...queryFilter, ...extraFilter });\n  }\n\n  getUnassignedDevices(withChildren = false, filterQuery = '') {\n    const queryFilter: any = {\n      fragmentType: 'c8y_IsDevice',\n      onlyRoots: true,\n      withChildren,\n      pageSize: this.PAGE_SIZE,\n      q: this.getUnassignedDevicesQueryStr(filterQuery)\n    };\n    return this.inventory.list(this.createFilter(queryFilter));\n  }\n\n  getDynamicGroupItems(groupQuery: string, filterObj: any = {}) {\n    const { query, ...queryParams } = filterObj;\n    const orderByQuery = query;\n    const queryFilter = {\n      q: this.buildCombinedQuery(groupQuery, orderByQuery),\n      ...queryParams\n    };\n    return this.inventory.list(this.createFilter(queryFilter));\n  }\n\n  getDeviceChildren(\n    moId: string,\n    extraFilter: object = {},\n    filterQuery = '',\n    withChildren = false\n  ) {\n    const queryFilter = {\n      withChildren,\n      pageSize: this.PAGE_SIZE,\n      query: this.groupQueryFilter(moId, filterQuery)\n    };\n    return this.inventory.childDevicesList(moId, { ...queryFilter, ...extraFilter });\n  }\n\n  getUnassignedDevicesQueryStr(filterQuery): string {\n    const hasGroupId = filterQuery.includes('bygroupid');\n    // Fetch all unassigned devices.\n    const defaultQueryStr = '$orderby=name';\n\n    // filterQuery is a custom query to fetch unassigned devices filtered by name.\n    return hasGroupId || !filterQuery ? defaultQueryStr : filterQuery;\n  }\n\n  groupQueryFilter(moId: string, filterQuery?: string) {\n    if (!filterQuery) {\n      return `$filter=(bygroupid(${moId}))$orderby=name`;\n    }\n    return filterQuery;\n  }\n\n  navRootQueryFilter() {\n    const navRootFilter = this.rootQueryFilter();\n    navRootFilter.__orderby = [{ name: 1 }];\n    return navRootFilter;\n  }\n\n  rootQueryFilter() {\n    const { moduleConfig } = this;\n    const rootFilter = this.optionsService.disableOnlyRootsQuery\n      ? {\n          __filter: {\n            type: GroupFragment.groupType\n          },\n          __orderby: []\n        }\n      : {\n          __filter: {\n            __has: GroupFragment.groupFragmentType\n          },\n          __orderby: []\n        };\n    if (moduleConfig.smartGroups) {\n      const queryFilter = {\n        __filter: {\n          __and: [\n            {\n              type: GroupFragment.dynamicGroupType\n            },\n            {\n              __has: GroupFragment.dynamicGroupFragment\n            },\n            { __not: { __has: `${GroupFragment.dynamicGroupFragment}.invisible` } }\n          ]\n        }\n      };\n      this.queriesUtil.addOrFilter(rootFilter, queryFilter);\n    }\n    return rootFilter;\n  }\n\n  onUpdate({ mo, root }) {\n    if (mo.id) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            ['PUT', 'DELETE', 'POST'].includes(method) &&\n            RegExp(`((inventory/managedObjects)|(service/smartgroup/smartgroups))/${mo.id}`).test(\n              url\n            )\n        )\n        .pipe(\n          filter(() => !this.draggedData),\n          mergeMap(this.apiService.resolveData),\n          filter(response => !response.data.c8y_Dashboard)\n        );\n    } else if (root) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            RegExp('((inventory/managedObjects)|(service/smartgroup/smartgroups))/?$').test(url) &&\n            method === 'POST'\n        )\n        .pipe(\n          mergeMap(this.apiService.resolveData),\n          filter(response => this.isNewManagedObjectRoot(response))\n        );\n    } else {\n      return empty();\n    }\n  }\n\n  isNewManagedObjectRoot(response: Partial<IResult<IManagedObject>> = {}) {\n    const { data } = response;\n    let isRootAsset = false;\n\n    if (typeof data === 'object') {\n      isRootAsset = !!data[GroupFragment.groupFragmentType];\n      if (!isRootAsset && this.moduleConfig.smartGroups) {\n        isRootAsset = !!data[GroupFragment.dynamicGroupFragment];\n      }\n    }\n    return isRootAsset;\n  }\n\n  /**\n   * Check if it is possible to drop a node after dragging.\n   * @param dropOnRoot Is the drop performed on the root node\n   */\n  canDropNode(dropOnRoot: boolean): boolean {\n    return (\n      !dropOnRoot || this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_ADMIN')\n    );\n  }\n\n  /**\n   * There could be multiple breadcrumbs for devices,\n   * so we set a preferred one on click on a device.\n   * @param parents The parent nodes of the device to select the prefered one.\n   */\n  preferBreadcrumb(parents: NavigatorNode[]) {\n    if (parents.length === 1) {\n      this.breadcrumbService.selectPreferredByPath(parents[0].path);\n    }\n  }\n\n  protected createFilter(extraParams: any = {}) {\n    const params = {\n      currentPage: 1,\n      withTotalPages: true,\n      pageSize: 10\n    };\n    return { ...params, ...extraParams };\n  }\n\n  private buildCombinedQuery(query, orderByQuery) {\n    let combinedQuery;\n    if (query && orderByQuery) {\n      const filterQuery = this.queriesUtil.buildQuery({\n        __useFilterQueryString: query\n      });\n      combinedQuery = `${filterQuery} ${orderByQuery}`;\n    } else {\n      combinedQuery = query || orderByQuery || '';\n    }\n    return combinedQuery;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { get as getProp } from 'lodash-es';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { AssetNodeService } from './asset-node.service';\n\n@Injectable()\nexport class AssetNodeFactory {\n  constructor(\n    private service: AssetNodeService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig\n  ) {}\n\n  get(): AssetNode {\n    const rootNavigatorNode = getProp(this.moduleConfig, 'rootNavigatorNode') ?? true;\n    let { rootNode } = this.service;\n\n    if (rootNavigatorNode === false) {\n      return;\n    }\n\n    if (!rootNode) {\n      rootNode = this.service.createRootNode(rootNavigatorNode === true ? {} : rootNavigatorNode);\n    }\n    return rootNode;\n  }\n}\n","import { GroupNodeService } from './group-node.service';\nimport { AssetNode } from '../asset-node';\nimport { GroupFragment } from '../group-fragment.model';\nimport { GroupNodeConfig } from './asset-selector.model';\n\nexport class GroupNode extends AssetNode {\n  static NAME = 'GroupNode';\n\n  /**\n   * Set this true, if only groups should be shown.\n   */\n  groupsOnly = false;\n\n  /**\n   * Set this true, if it groups are also selectable.\n   */\n  groupsSelectable = false;\n  /**\n   * Devices with children can be selected to show their child devices.\n   */\n  showChildDevices = false;\n\n  /**\n   * Group node children (subentries).\n   */\n  children: GroupNode[] = [];\n\n  /**\n   * Creates a new node which shows only groups.\n   *\n   * @param service The service to use.\n   * @param config  The default configuration of the node.\n   * @param groupsOnly Set this true, if only groups should be shown.\n   * @param selectable Set this true, if it is selectable.\n   */\n\n  constructor(protected service: GroupNodeService, config: GroupNodeConfig = {}) {\n    super(service, config);\n    this.groupsOnly = config.groupsOnly || false;\n    this.groupsSelectable = config.groupsSelectable || false;\n    this.showChildDevices = config.showChildDevices || false;\n  }\n\n  /**\n   * Adds the MO as a child node.\n   * @param mo ManagedObject\n   */\n  addManagedObject(mo) {\n    const { childAdditions } = this.mo;\n    if (!this.isChildAddition(childAdditions, mo)) {\n      this.add(\n        this.service.createChildNode({\n          mo,\n          groupsOnly: this.groupsOnly,\n          groupsSelectable: this.groupsSelectable,\n          showChildDevices: this.showChildDevices\n        })\n      );\n    }\n  }\n\n  /**\n   * Counts the number of children for the current node (with the exception of the UnassignedDevicesNode).\n   */\n  countChildren(): number {\n    return this.children.filter(value => value.toString() !== 'UnassignedDevicesNode').length;\n  }\n\n  /**\n   * Removes all child nodes except the UnassignedDevicesNode.\n   */\n  empty() {\n    this.children = this.children.filter(value => value.toString() === 'UnassignedDevicesNode');\n  }\n\n  fetch() {\n    const isRoot = this.root;\n    const isDevice = this.mo.c8y_IsDevice;\n    return isRoot\n      ? this.service.getRootNodes()\n      : isDevice\n      ? this.service.getDeviceChildren(\n          this.mo.id,\n          {},\n          this.filterQuery$.value,\n          this.showChildDevices\n        )\n      : this.service.getGroupItems(\n          this.mo.id,\n          this.groupsOnly\n            ? {\n                query: `$filter=(has(${GroupFragment.groupFragmentType}))`\n              }\n            : {},\n          this.showChildDevices,\n          this.filterQuery$.value\n        );\n  }\n\n  toString() {\n    return GroupNode.NAME;\n  }\n\n  isGroup() {\n    return this.mo && this.service.isGroup(this.mo);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AssetNodeService } from '../asset-node.service';\nimport { GroupNodeConfig } from './asset-selector.model';\nimport { GroupNode } from './group-node';\n\n@Injectable()\nexport class GroupNodeService extends AssetNodeService {\n  protected PAGE_SIZE = 5;\n\n  createGroupNode(config: GroupNodeConfig) {\n    return new GroupNode(this, config);\n  }\n\n  createChildNode(config: GroupNodeConfig): GroupNode {\n    return this.createGroupNode(config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IIdentified, IManagedObject } from '@c8y/client';\nimport { AssetNodeService } from '../asset-node.service';\nimport { isArray, isNumber, isObject, isString } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetSelectorService extends AssetNodeService {\n  /**\n   * Simplifies the object model based on the selected mode.\n   * @param obj The selected asset.\n   * @param mode The mode which will decide what type of model will be returned.\n   */\n  normalizeValue(\n    obj: Partial<IManagedObject>,\n    modelMode: 'simple' | 'full'\n  ): Partial<IManagedObject> | IIdentified {\n    return this.simplifyModel(this.normalizeModelValue(obj), modelMode);\n  }\n\n  simplifyModel(\n    model: Partial<IManagedObject> | IIdentified[],\n    mode: 'simple' | 'full'\n  ): Partial<IManagedObject> | IIdentified {\n    const mapModel = modelObj => {\n      const { id, name, c8y_DeviceQueryString } = modelObj as IIdentified;\n      return { id, name, ...(c8y_DeviceQueryString ? { c8y_DeviceQueryString } : {}) };\n    };\n\n    if (mode === 'full') {\n      return model;\n    }\n    if (!isArray(model)) {\n      return mapModel(model);\n    }\n    return model.map(mapModel);\n  }\n\n  private normalizeModelValue(value: any): IIdentified[] {\n    if (isNumber(value) || isString(value)) {\n      return [{ id: value }];\n    }\n    if (isArray(value)) {\n      return value;\n    }\n    if (isObject(value)) {\n      return [value];\n    }\n    return [];\n  }\n}\n","import { IManagedObject } from '@c8y/client';\nimport { IIdentified } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\n\nexport interface AssetSelectionChangeEvent {\n  items: IIdentified | IIdentified[];\n  change: { item: IManagedObject; isSelected: boolean };\n}\n\nexport interface GroupNodeConfig {\n  root?: boolean;\n  mo?: IManagedObject;\n  groupsOnly?: boolean;\n  groupsSelectable?: boolean;\n  showChildDevices?: boolean;\n}\n\nexport const CONFIG_OPTIONS_DEFAULT: AssetSelectorOptions = {\n  label: gettext('Asset selection'),\n  multi: false,\n  showFilter: false,\n  columnHeaders: false,\n  singleColumn: false,\n  modelMode: 'simple',\n  groupsOnly: false,\n  groupsSelectable: false,\n  search: false,\n  showUnassignedDevices: false,\n  view: 'tree',\n  showChildDevices: false\n};\n\nexport interface AssetSelectorOptions {\n  /**\n   * Already selected devices.\n   */\n  selectedDevices?: IIdentified | IIdentified[];\n  /**\n   * Defines a label to be shown to the user.\n   */\n  label?: string;\n  /**\n   * Can the user select multiple assets.\n   */\n  multi?: boolean;\n  /**\n   * displays a filter input on every column when using the miller view.\n   */\n  showFilter?: boolean;\n  /**\n   * displays a column header on every column when using the miller view.\n   */\n  columnHeaders?: boolean;\n  /**\n   * Displays only the select column.\n   */\n  singleColumn?: boolean;\n  /**\n   * Set to true to mark it as required on a form.\n   */\n  required?: boolean;\n  /**\n   * In simple model-mode the result will only contain the IDs and name of the selected\n   * assets. In full mode, everything is contained.\n   */\n  modelMode?: 'simple' | 'full';\n  /**\n   * Set this to true, if the selector should only show groups.\n   */\n  groupsOnly?;\n  /**\n   * Set this true, if groups should be selectable.\n   */\n  groupsSelectable?;\n  /**\n   * Enable to display global search in the asset-selector (only possible whithout device context).\n   */\n  search?: boolean;\n  /**\n   * Displays all unassigned devices in a custom root group.\n   */\n  showUnassignedDevices?: boolean;\n  /**\n   * Set the view of the asset selector with tree view as default.\n   */\n  view?: 'tree' | 'miller';\n  /**\n   * Used only for miller-view, displays the column level for the current node.\n   * E.g if the index is one, this will be second column.\n   */\n  index?: number;\n  /**\n   * Used only for single column, the array contains all selected columns.\n   */\n  selectedColumns?: IIdentified[] | IIdentified;\n  /**\n   * Devices with children can be selected to show their child devices.\n   */\n  showChildDevices?: boolean;\n}\n","import { ClickOptions, gettext } from '@c8y/ngx-components';\nimport { Action } from '../action.enum';\nimport { GroupNodeConfig } from './asset-selector.model';\nimport { GroupNode } from './group-node';\nimport { GroupNodeService } from './group-node.service';\n\nexport class UnassignedDevicesNode extends GroupNode {\n  static NAME = 'UnassignedDevicesNode';\n  label = gettext('Unassigned devices');\n  icon = 'delete-folder';\n  groupsSelectable = false;\n  groupsOnly = false;\n  showChildDevices = false;\n  mo = {};\n\n  constructor(protected service: GroupNodeService, config: GroupNodeConfig = {}) {\n    super(service, config);\n    this.priority = Infinity;\n    this.showChildDevices = config.showChildDevices || false;\n  }\n\n  click(options: ClickOptions = {}) {\n    this.hookEvents();\n    if (options.open) {\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  addManagedObject(mo) {\n    this.add(this.service.createChildNode({ mo, showChildDevices: this.showChildDevices }));\n  }\n\n  fetch() {\n    return this.service.getUnassignedDevices(this.showChildDevices, this.filterQuery$.value);\n  }\n\n  isGroup() {\n    return true;\n  }\n\n  toString() {\n    return UnassignedDevicesNode.NAME;\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { AssetSelectionChangeEvent, AssetSelectorOptions } from './asset-selector.model';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport class AssetSelectorBase {\n  /**\n   * Config object containing all options for the asset selector.\n   */\n  config: AssetSelectorOptions = {};\n  /**\n   * An array of predefined nodes.\n   */\n  selected: Array<Partial<IManagedObject>> | IIdentified[] | IIdentified;\n  /**\n   * The loading state of the current node.\n   */\n  isLoading: boolean = false;\n  /**\n   * Emit the selected asset or assets.\n   */\n  onSelected = new EventEmitter<AssetSelectionChangeEvent>();\n\n  private onChange: (mo: IIdentified[] | IIdentified) => void;\n  private onTouched: () => void;\n\n  constructor(\n    protected groupNodeService: GroupNodeService,\n    protected inventory: InventoryService,\n    protected assetSelectorService: AssetSelectorService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.config.required && (!control.value || control.value.length === 0)) {\n      return { required: true };\n    }\n    return null;\n  }\n\n  /**\n   * @ignore\n   */\n  writeValue(obj: any): void {\n    this.selected = this.assetSelectorService.normalizeValue(obj, this.config.modelMode);\n  }\n\n  /**\n   * @ignore\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * @ignore\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * @ignore\n   */\n  doBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  /**\n   * Deselects all expect the given one.\n   * @param selectedMo The selected asset (optional, if empty -> just deselect all).\n   */\n  deselectAll(selectedMo?: IManagedObject) {\n    this.selected = [];\n    if (selectedMo) {\n      this.selected = [this.assetSelectorService.simplifyModel(selectedMo, this.config.modelMode)];\n    }\n    this.emitChange(this.selected, selectedMo, !!selectedMo);\n    this.doBlur();\n  }\n\n  /**\n   * Adds an managed object to the selected array and emits the change.\n   * @param selectedMo The selected asset.\n   */\n  select(selectedMo: IManagedObject) {\n    if (!this.config.multi) {\n      this.selected = [];\n    }\n    const index = this.getIndexOfSelected(this.selected, selectedMo);\n    if (index === -1) {\n      this.selected.push(\n        this.assetSelectorService.simplifyModel(selectedMo, this.config.modelMode)\n      );\n    }\n    this.emitChange(this.selected, selectedMo, true);\n    this.doBlur();\n  }\n\n  /**\n   * Removes a managed object from the selected array and emits the change.\n   * @param selectedMo The selected asset.\n   */\n  deselect(selectedMo: IManagedObject) {\n    const index = this.getIndexOfSelected(this.selected, selectedMo);\n    if (index > -1) {\n      this.selected.splice(index, 1);\n    }\n    this.emitChange(this.selected, selectedMo, false);\n    this.doBlur();\n  }\n\n  /**\n   * Returns the index of the currently selected item.\n   * @param selected All selected items\n   * @param selectedMo The new selected item-\n   * @returns An index, or -1 if not found.\n   */\n  getIndexOfSelected(\n    selected: Array<Partial<IIdentified>> | Partial<IIdentified>,\n    selectedMo: IIdentified\n  ) {\n    return selected.findIndex(mo => mo.id === selectedMo.id);\n  }\n\n  emitChange(selected: IIdentified | IIdentified[], item: IManagedObject, isSelected: boolean) {\n    const changes = this.config.multi ? selected : selected[0];\n    if (this.onChange) {\n      this.onChange(changes);\n    }\n    this.onSelected.emit({ items: changes, change: { item, isSelected } });\n  }\n\n  createDefaultRootNode() {\n    return this.groupNodeService.createGroupNode({\n      root: true,\n      groupsSelectable: this.config.groupsSelectable,\n      groupsOnly: this.config.groupsOnly,\n      showChildDevices: this.config.showChildDevices\n    });\n  }\n  async createManagedObjectRootNode(asset: IIdentified) {\n    if ((asset as IIdentified).id) {\n      return this.groupNodeService.createGroupNode({\n        mo: asset as IManagedObject,\n        groupsSelectable: this.config.groupsSelectable,\n        groupsOnly: this.config.groupsOnly,\n        showChildDevices: this.config.showChildDevices\n      });\n    }\n    const { data: mo } = await this.inventory.detail(asset);\n    return this.groupNodeService.createGroupNode({\n      mo,\n      groupsSelectable: this.config.groupsSelectable,\n      groupsOnly: this.config.groupsOnly,\n      showChildDevices: this.config.showChildDevices\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { GroupNode } from './group-node';\nimport {\n  AssetSelectionChangeEvent,\n  AssetSelectorOptions,\n  CONFIG_OPTIONS_DEFAULT\n} from './asset-selector.model';\nimport { UnassignedDevicesNode } from './unassigned-devices-node';\nimport { AssetSelectorBase } from './asset-selector-base';\nimport { Subject } from 'rxjs';\n\n/**\n * Displays a hierarchical tree selector for assets.\n */\n@Component({\n  selector: 'c8y-asset-selector',\n  templateUrl: './asset-selector.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => AssetSelectorComponent)\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AssetSelectorComponent),\n      multi: true\n    }\n  ]\n})\nexport class AssetSelectorComponent extends AssetSelectorBase implements OnInit {\n  /**\n   * Config object containing all options for the asset selector.\n   */\n  @Input() config: AssetSelectorOptions = {};\n  /**\n   * Defines the node, which should be displayed as active.\n   */\n  @Input() active: GroupNode;\n  /**\n   * Used only for miller-view, displays the column level for the current node.\n   * E.g if the index is one, this will be second column.\n   */\n  @Input() index: number = 0;\n  /**\n   * The asset to use as root.\n   */\n  @Input() asset: IIdentified = undefined;\n  /**\n   * The selected device.\n   */\n  @Input() selectedDevice: IManagedObject = undefined;\n  /**\n   * An array of predefined nodes.\n   */\n  @Input() selected: Array<Partial<IManagedObject>> | IIdentified[] | IIdentified = [];\n  /**\n   * The node to use as root. You can either set this, or the asset to start from.\n   */\n  @Input() rootNode: GroupNode;\n  /**\n   * All currently selected assets.\n   */\n  @Input() selectedItems: IIdentified[] | IIdentified = [];\n  @Input() container: '' | 'body' = 'body';\n  /**\n   * Emits if one item was selected (all currently selected nodes).\n   */\n  @Output() onSelected = new EventEmitter<AssetSelectionChangeEvent>();\n\n  /**\n   * Used only for miller view. Emit the selected node and use it as a 'rootNode' for the new column.\n   */\n  @Output() onRowSelected = new EventEmitter<any>();\n  /**\n   * Emits the current loading state of the node.\n   */\n  @Output() onLoad = new EventEmitter<any>();\n  /**\n   * The current filter applied.\n   */\n  filterText = '';\n  /**\n   * Displays the global search at all times if the miller view is used\n   * on root group level.\n   */\n  root: boolean = false;\n  /**\n   * @ignore\n   */\n  unsubscribe$ = new Subject<any>();\n\n  /**\n   * @ignore only DI\n   */\n  constructor(\n    protected groupNodeService: GroupNodeService,\n    protected inventory: InventoryService,\n    protected assetSelectorService: AssetSelectorService,\n    protected cd: ChangeDetectorRef\n  ) {\n    super(groupNodeService, inventory, assetSelectorService);\n  }\n\n  /**\n   * Checks when a node was selected, if a new column needs to be added.\n   * @param node The node that was clicked.\n   * @param index The current index of this node.\n   * @returns True if the click was handled and a new column was added.\n   */\n  handleNextMillerViewColumn(node: GroupNode, index: number) {\n    const nodeCopy = Object.create(node);\n    const isSameAsRoot = this.rootNode === node;\n    const isUnassignedDevicesNode = node.toString() === UnassignedDevicesNode.NAME;\n    const isNewColumnNeeded =\n      !isSameAsRoot && (node.isGroup() || isUnassignedDevicesNode || node.hasChildDevices());\n\n    if (isNewColumnNeeded) {\n      this.onRowSelected.emit({ nodeCopy, index });\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    if (this.index === 0) {\n      this.config = { ...CONFIG_OPTIONS_DEFAULT, ...this.config };\n    }\n    const shouldResetNameFilter =\n      this.rootNode && this.rootNode.mo && this.config.view === 'miller';\n    if (shouldResetNameFilter) {\n      this.applyFilter('');\n    }\n\n    const isOnlyAssetNodeDefined = this.asset;\n    if (isOnlyAssetNodeDefined) {\n      this.rootNode = await this.createManagedObjectRootNode(this.asset);\n    }\n\n    const isAnyNodeDefined =\n      !this.rootNode && (!this.asset || Object.keys(this.asset).length === 0);\n    if (isAnyNodeDefined) {\n      this.rootNode = this.createDefaultRootNode();\n    }\n\n    if (\n      this.config.showUnassignedDevices &&\n      (!this.asset || Object.keys(this.asset).length === 0) &&\n      this.rootNode.root\n    ) {\n      this.rootNode.add(\n        new UnassignedDevicesNode(this.groupNodeService, {\n          showChildDevices: this.config.showChildDevices\n        })\n      );\n    }\n    this.root = this.rootNode.root;\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.asset &&\n      changes.asset.currentValue &&\n      Object.keys(changes.asset.currentValue).length !== 0\n    ) {\n      this.rootNode = await this.createManagedObjectRootNode(changes.asset.currentValue);\n    }\n  }\n\n  /**\n   * Changes the current root to one level back.\n   */\n  back() {\n    const index = this.index - 1;\n    const nodeCopy = Object.create(this.rootNode.parents[0]);\n    this.onRowSelected.emit({ nodeCopy, index });\n  }\n\n  /**\n   * Clears the current filter.\n   */\n  clearFilters() {\n    this.filterText = '';\n    this.applyFilter('');\n  }\n\n  clearSelectedDevices() {\n    this.selectedDevice = undefined;\n    this.applyFilter('');\n  }\n\n  isGroupSelected() {\n    if (this.selectedItems.some(selectedNode => selectedNode.id === this.rootNode.mo?.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  groupNameFilter(nameFilter: string, moId, showUnassignedDevices?: boolean) {\n    if (nameFilter) {\n      const filterByName = showUnassignedDevices\n        ? {\n            __filter: {\n              name: nameFilter\n            },\n            __orderby: [{ name: 1 }]\n          }\n        : {\n            __filter: {\n              name: nameFilter,\n              __bygroupid: moId\n            }\n          };\n      return this.assetSelectorService.queriesUtil.buildQuery(filterByName);\n    }\n    const defaultFilter = {\n      __filter: {\n        __bygroupid: moId\n      },\n      __orderby: [{ name: 1 }]\n    };\n    return this.assetSelectorService.queriesUtil.buildQuery(defaultFilter);\n  }\n\n  /**\n   * Applies a filter.\n   * @param filter The filter to apply.\n   */\n  async applyFilter(filter: string) {\n    this.rootNode.filterQuery$.next(\n      this.groupNameFilter(\n        filter,\n        this.rootNode.mo.id,\n        this.isUnassignedDevicesNode() ? true : false\n      )\n    );\n    this.rootNode.refresh();\n    this.onLoad.emit({\n      loading: true,\n      filterText: this.filterText,\n      index: this.index,\n      selectedDevice: this.selectedDevice\n    });\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Check if the UnassignedDevice node is the rootNode.\n   */\n  isUnassignedDevicesNode() {\n    return this.rootNode.toString() === UnassignedDevicesNode.NAME;\n  }\n\n  /**\n   * Called when the user resets the search result.\n   */\n  onSearchResultReset(term: string) {\n    if (term) {\n      this.deselectAll();\n      this.rootNode = this.createDefaultRootNode();\n      if (this.config.showUnassignedDevices) {\n        this.rootNode.add(\n          new UnassignedDevicesNode(this.groupNodeService, {\n            showChildDevices: this.config.showChildDevices\n          })\n        );\n      }\n      if (this.config.view === 'miller') {\n        this.onRowSelected.emit({ root: true });\n      }\n      this.rootNode.click({ open: true });\n      if (this.config.view === 'tree') {\n        this.rootNode.open = true;\n      }\n    }\n  }\n\n  /**\n   * Called if the user clicks on a search result.\n   */\n  async onSearchResultClick(mo: IManagedObject) {\n    const canSelectNode = this.config.groupsSelectable || !this.groupNodeService.isGroup(mo);\n    this.rootNode = await this.createManagedObjectRootNode(mo);\n    this.rootNode.click({ open: true });\n    if (this.config.view === 'miller') {\n      const nodeCopy = Object.create(this.rootNode);\n      this.onRowSelected.emit({\n        nodeCopy,\n        index: 0,\n        selectedDevices: this.selectedDevice,\n        root: true\n      });\n    }\n    this.deselectAll();\n    if (canSelectNode) {\n      this.select(this.rootNode.mo);\n    }\n  }\n}\n","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GroupNode } from './group-node';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { AssetSelectorComponent } from './asset-selector.component';\nimport { IIdentified, IManagedObject } from '@c8y/client';\nimport { Action } from '../action.enum';\n\n@Component({\n  selector: 'c8y-asset-selector-node',\n  templateUrl: './asset-selector-node.component.html'\n})\nexport class AssetSelectorNodeComponent implements OnInit {\n  /**\n   * The current node.\n   */\n  @Input() node: GroupNode;\n  /**\n   * All preselected items.\n   */\n  @Input() preselected: IIdentified | IIdentified[] = [];\n  /**\n   * Should the path be shown.\n   */\n  @Input() showPath: boolean = false;\n  /**\n   * Can the user select multiple assets.\n   */\n  @Input() multi: boolean = false;\n  /**\n   * The current path to the node.\n   */\n  @Input() view: 'tree' | 'miller' = 'tree';\n  /**\n   * Used only for miller-view, displays the column level for the current node.\n   * E.g if the index is one, this will be second column.\n   */\n  @Input() index;\n  /**\n   * Sets the active node.\n   */\n  @Input() active: GroupNode;\n  /**\n   * All currently selected assets.\n   */\n  @Input() selectedItems: IIdentified[] | IIdentified = [];\n\n  breadcrumb: string;\n  /**\n   * @ignore\n   */\n  level: number = 0;\n  /**\n   * @ignore\n   */\n  unsubscribe$ = new Subject<any>();\n\n  /** sets the `btn-pending` class in the load more button */\n  isLoading: boolean = false;\n  /**\n   * @ignore\n   */\n  get expandTitle() {\n    return !this.node.open ? gettext('Expand') : gettext('Collapse');\n  }\n\n  /**\n   * @ignore only di\n   */\n  constructor(\n    private translateService: TranslateService,\n    private cd: ChangeDetectorRef,\n    public parentAssetSelector: AssetSelectorComponent\n  ) {}\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    this.breadcrumb = this.node.label;\n    this.setupBreadcrumbsAndLevel(this.node);\n\n    if (this.node instanceof GroupNode) {\n      this.node.hookEvents();\n    }\n\n    // open on startup\n    if (this.node.root) {\n      this.click();\n    }\n\n    // used for loading and to trigger change detection when the node is no longer loading.\n    if (this.node.events) {\n      this.node.events\n        .pipe(\n          takeUntil(this.unsubscribe$),\n          filter((a: Action) => a === Action.LOADING_DONE)\n        )\n        .subscribe(() => {\n          this.parentAssetSelector.onLoad.emit({\n            loading: false,\n            filterText: this.parentAssetSelector.filterText\n          });\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  /**\n   * Opens a node.\n   */\n  click() {\n    this.node.open = !this.node.open;\n    this.node.click({ open: this.node.open });\n  }\n\n  setupBreadcrumbsAndLevel(node: GroupNode) {\n    if (node.parents && node.parents.length) {\n      const parent = node.parents[0] as GroupNode;\n      this.breadcrumb =\n        this.translateService.instant(parent.label) +\n        ' > ' +\n        this.translateService.instant(this.breadcrumb);\n      this.level++;\n\n      this.setupBreadcrumbsAndLevel(parent);\n    }\n  }\n\n  /**\n   * Selects the node and emits a change on the parent component.\n   * @param node The node to select.\n   */\n  selected(node: GroupNode) {\n    if (node.mo) {\n      this.updateSelection(node.mo);\n      return;\n    }\n    this.click();\n  }\n\n  /**\n   * Handles clicks on a item in Miller View.\n   * @param node The node that was clicked.\n   */\n  millerViewClick(node: GroupNode) {\n    node.breadcrumb = this.breadcrumb;\n    const shouldHandleDefault = this.parentAssetSelector.handleNextMillerViewColumn(\n      node,\n      this.index\n    );\n    if (shouldHandleDefault) {\n      this.selected(node);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n  isSelected() {\n    if (!this.node.mo) {\n      return false;\n    }\n    return this.parentAssetSelector.getIndexOfSelected(this.preselected, this.node.mo) > -1;\n  }\n\n  isActive() {\n    if (this.active && this.node.mo) {\n      return this.active.mo?.id === this.node.mo.id;\n    }\n    return false;\n  }\n\n  isGroupSelected() {\n    if (this.selectedItems.some(selectedNode => selectedNode.id === this.node.mo?.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateSelection(selectedMo: IManagedObject) {\n    if (!this.multi) {\n      this.parentAssetSelector.deselectAll(selectedMo);\n      return;\n    }\n    if (this.isSelected()) {\n      this.parentAssetSelector.deselect(selectedMo);\n      return;\n    }\n    this.parentAssetSelector.select(selectedMo);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectionChangeEvent, AssetSelectorOptions } from './asset-selector.model';\nimport { AssetSelectorBase } from './asset-selector-base';\nimport { GroupNode } from './group-node';\n\n@Component({\n  selector: 'c8y-asset-selector-miller',\n  templateUrl: './miller-view.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MillerViewComponent),\n      multi: true\n    }\n  ]\n})\nexport class MillerViewComponent extends AssetSelectorBase implements OnInit {\n  /**\n   * Config object containing all options for the asset selector.\n   */\n  @Input() config: AssetSelectorOptions = {};\n  /**\n   * The asset to use as root.\n   */\n  @Input() asset: IIdentified = undefined;\n  /**\n   * The selected devices.\n   */\n  @Input() selectedDevice: IManagedObject = undefined;\n  /**\n   * The node to use as root. You can either set this, or the asset to start from.\n   */\n  @Input() rootNode: GroupNode;\n  /**\n   * Emits if the selection changes\n   */\n  @Output() onSelected = new EventEmitter<AssetSelectionChangeEvent>();\n\n  /**\n   * @ignore\n   */\n  @ViewChild('millerViewWrapper') millerViewWrapper: ElementRef;\n  /**\n   * The column array will contain all currently selected nodes\n   *  which will form the miller view columns (only one per level).\n   */\n  columns = [];\n  /**\n   * The current filter applied. Used for the empty state text in the view.\n   */\n  filterText: string = '';\n  /**\n   * Index of the column used to check where to show the loading state.\n   */\n  columnIndex: number;\n  @Input() container: '' | 'body' = 'body';\n\n  configOptionsDefault: AssetSelectorOptions = {\n    view: 'miller',\n    singleColumn: false\n  };\n\n  constructor(\n    protected groupNodeService: GroupNodeService,\n    protected inventory: InventoryService,\n    protected assetSelectorService: AssetSelectorService,\n    protected cd: ChangeDetectorRef\n  ) {\n    super(groupNodeService, inventory, assetSelectorService);\n  }\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    this.config = { ...this.configOptionsDefault, ...this.config };\n\n    const isAnyNodeDefined =\n      !this.rootNode && (!this.asset || Object.keys(this.asset).length === 0);\n    if (isAnyNodeDefined) {\n      this.rootNode = this.createDefaultRootNode();\n    }\n\n    const isOnlyAssetNodeDefined = this.asset && Object.keys(this.asset).length !== 0;\n    if (isOnlyAssetNodeDefined) {\n      this.rootNode = await this.createManagedObjectRootNode(this.asset);\n      this.rootNode.click();\n    }\n\n    this.columns.push(this.rootNode);\n  }\n\n  /**\n   * @ignore\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.asset && changes.asset.currentValue && !this.asset) {\n      this.columns = [];\n      this.columns.push(await this.createManagedObjectRootNode(changes.asset.currentValue));\n    }\n  }\n\n  /**\n   * Create a new column with the selected node as root.\n   */\n  addNewColumn(node): void {\n    const level = node.index;\n    this.selectedDevice = node.selectedDevices || undefined;\n    if (node.root) {\n      window.requestAnimationFrame(() => (this.millerViewWrapper.nativeElement.scrollLeft = 0));\n      this.columns.length = 1;\n    }\n\n    const isLevelLowerThanColumnNumber = level < this.columns.length - 1;\n    let goBack = false;\n    if (isLevelLowerThanColumnNumber) {\n      this.columns.length = level + 1;\n      goBack = true;\n    }\n\n    if (!node.root && !(this.config.singleColumn && goBack)) {\n      this.columns.push(node.nodeCopy);\n      window.requestAnimationFrame(() => (this.millerViewWrapper.nativeElement.scrollLeft = 99999));\n    }\n  }\n\n  /**\n   * Change the loading state of the asset selector.\n   */\n  onLoad(event) {\n    this.isLoading = event.loading;\n    this.filterText = event.filterText;\n    this.columnIndex = event.index;\n    this.selectedDevice = event.selectedDevice;\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Add the selected node to the selected array.\n   */\n  onSelectionChange(event: AssetSelectionChangeEvent): void {\n    if (!this.config.multi) {\n      this.deselectAll(event.change.item);\n      return;\n    }\n    if (event.change.isSelected) {\n      this.select(event.change.item);\n      return;\n    }\n    this.deselect(event.change.item);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, CommonModule, SearchModule } from '@c8y/ngx-components';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { GroupNodeService } from './group-node.service';\n\nimport { AssetSelectorNodeComponent } from './asset-selector-node.component';\nimport { AssetSelectorComponent } from './asset-selector.component';\nimport { FormsModule } from '@angular/forms';\nimport { MillerViewComponent } from './miller-view.component';\nimport { AssetSelectorService } from './asset-selector.service';\n\n@NgModule({\n  imports: [CoreModule, CommonModule, CollapseModule, BsDropdownModule, SearchModule, FormsModule],\n  exports: [AssetSelectorNodeComponent, AssetSelectorComponent, MillerViewComponent],\n  providers: [GroupNodeService, AssetSelectorService],\n  declarations: [AssetSelectorNodeComponent, AssetSelectorComponent, MillerViewComponent]\n})\nexport class AssetSelectorModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  DeviceStatusComponent,\n  DeviceStatusModule,\n  HOOK_NAVIGATOR_NODES,\n  ModalModule,\n  ModalService\n} from '@c8y/ngx-components';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { AssetNodeFactory } from './asset-node.factory';\nimport { AssetNodeService } from './asset-node.service';\nimport { AssetSelectorModule } from './asset-selector/asset-selector.module';\n\n@NgModule({\n  declarations: [],\n  imports: [ModalModule, AssetSelectorModule, DeviceStatusModule],\n  providers: [\n    ModalService,\n    AssetNodeService,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: AssetNodeFactory,\n      multi: true\n    }\n  ],\n  entryComponents: [DeviceStatusComponent]\n})\nexport class AssetsNavigatorModule {\n  static config(config: AssetNavigatorConfig = {}): ModuleWithProviders<AssetsNavigatorModule> {\n    return {\n      ngModule: AssetsNavigatorModule,\n      providers: [\n        {\n          provide: ASSET_NAVIGATOR_CONFIG,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {AssetSelectorBase as ɵa} from './asset-selector/asset-selector-base';\nexport {AssetSelectorService as ɵb} from './asset-selector/asset-selector.service';"],"names":["getProp"],"mappings":"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"}