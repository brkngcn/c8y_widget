import { Component, Input, NgModule } from '@angular/core';
import { Validators, FormBuilder, ReactiveFormsModule } from '@angular/forms';
import { gettext, CoreModule, FormsModule } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { BulkOperationSchedulerModule } from '@c8y/ngx-components/operations/bulk-operation-scheduler';

class CreateBulkOperationDetailsComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.titlePlaceholder = gettext('e.g. Reset factory settings');
        this.descriptionPlaceholder = gettext('e.g. Reset factory settings of all devices of model XYZ');
        this.placeholders = {
            [BulkOperationType.SOFTWARE]: {
                title: gettext('e.g. Cloud connectivity software'),
                description: gettext('e.g. Cloud connectivity software applied to devices with type c8y_Linux')
            },
            [BulkOperationType.FIRMWARE]: {
                title: gettext('e.g. Firmware for hardware revision b'),
                description: gettext('e.g. Firmware for hardware revision b applied to devices with type c8y_Linux')
            },
            [BulkOperationType.CONFIGURATION]: {
                title: gettext('e.g. Host configuration c8y_Linux'),
                description: gettext('e.g. Host configuration applied to devices with type c8y_Linux')
            },
            [BulkOperationType.DEVICE_PROFILE]: {
                title: gettext('e.g. Device profile for c8y_Linux devices'),
                description: gettext('e.g. Device profile applied to devices with type c8y_Linux')
            }
        };
    }
    set bulkOperationType(bulkOperationType) {
        this.titlePlaceholder = get(this.placeholders[bulkOperationType], 'title');
        this.descriptionPlaceholder = get(this.placeholders[bulkOperationType], 'description');
    }
    ngOnInit() {
        const config = {
            description: ['', Validators.required],
            note: [''],
            schedule: []
        };
        this.fgOperationDescription = this.formBuilder.group(config);
    }
}
CreateBulkOperationDetailsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-create-bulk-operation-details',
                template: "<div [formGroup]=\"fgOperationDescription\">\n  <c8y-form-group>\n    <label translate>Title</label>\n    <input\n      formControlName=\"description\"\n      class=\"form-control\"\n      [placeholder]=\"titlePlaceholder | translate\"\n      required\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label translate>Description</label>\n    <textarea\n      formControlName=\"note\"\n      class=\"form-control\"\n      [placeholder]=\"descriptionPlaceholder | translate\"\n      rows=\"3\"\n    ></textarea>\n  </c8y-form-group>\n  <c8y-operation-scheduler formControlName=\"schedule\"></c8y-operation-scheduler>\n</div>\n"
            },] }
];
CreateBulkOperationDetailsComponent.ctorParameters = () => [
    { type: FormBuilder }
];
CreateBulkOperationDetailsComponent.propDecorators = {
    bulkOperationType: [{ type: Input }]
};

/**
 * This module provides a component for entering operation details.
 */
class CreateBulkOperationDetailsModule {
}
CreateBulkOperationDetailsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CoreModule, FormsModule, ReactiveFormsModule, BulkOperationSchedulerModule],
                declarations: [CreateBulkOperationDetailsComponent],
                exports: [CreateBulkOperationDetailsComponent]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { CreateBulkOperationDetailsComponent, CreateBulkOperationDetailsModule };
//# sourceMappingURL=c8y-ngx-components-operations-create-bulk-operation-details.js.map
