import { Component, Input, Injectable, NgModule } from '@angular/core';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { operationStatusIcons, operationStatusClasses, CoreModule } from '@c8y/ngx-components';
import { BulkOperationListItemService } from '@c8y/ngx-components/operations/bulk-operation-list-item';
import { OperationsListModule } from '@c8y/ngx-components/operations/operations-list';
import { __awaiter } from 'tslib';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { OperationService } from '@c8y/client';

class OperationDetailsModalComponent {
    constructor(modalRef) {
        this.modalRef = modalRef;
        this.collapsed = false;
        this.readOnly = false;
    }
}
OperationDetailsModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operation-details-modal',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3>{{ 'Single operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <c8y-operations-list-item\n      [operation]=\"operation\"\n      [collapsed]=\"collapsed\"\n      [noExpandToggle]=\"true\"\n      [readOnly]=\"readOnly\"\n    >\n    </c8y-operations-list-item>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Close' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n"
            },] }
];
OperationDetailsModalComponent.ctorParameters = () => [
    { type: BsModalRef }
];
OperationDetailsModalComponent.propDecorators = {
    operation: [{ type: Input }],
    collapsed: [{ type: Input }],
    readOnly: [{ type: Input }]
};

class OperationDetailsService {
    constructor(operationService, modalService) {
        this.operationService = operationService;
        this.modalService = modalService;
    }
    /**
     * Opens a modal window with the details of given single operation.
     * @param operationOrOperationId Operation's object or id.
     * @param options Additional options:
     * - `collapsed`: boolean - whether the details pane should be initially collapsed
     * - `readOnly`: boolean - whether the details should be displayed in read-only mode
     */
    openDetails(operationOrOperationId, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const operation = operationOrOperationId.id
                ? operationOrOperationId
                : (yield this.operationService.detail(operationOrOperationId)).data;
            const initialState = Object.assign({ operation }, options);
            this.modalService.show(OperationDetailsModalComponent, {
                initialState,
                class: 'modal-lg'
            });
        });
    }
}
OperationDetailsService.decorators = [
    { type: Injectable }
];
OperationDetailsService.ctorParameters = () => [
    { type: OperationService },
    { type: BsModalService }
];

/**
 * Operation details component displays a single operation's status, description and creationTime.
 *
 * Example:
 *
 * ```html
 * <c8y-operation-details [operation]="operation"></c8y-operation-details>
 * ```
 */
class OperationDetailsComponent {
    constructor(operationDetailsService) {
        this.operationDetailsService = operationDetailsService;
    }
    ngOnInit() {
        this.statusIcons = operationStatusIcons;
        this.statusClasses = operationStatusClasses;
    }
    openDetails() {
        this.operationDetailsService.openDetails(this.operation);
    }
}
OperationDetailsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operation-details',
                template: "<div class=\"c8y-list--group\" *ngIf=\"operation\">\n  <a class=\"c8y-list__item\">\n    <div class=\"c8y-list__item__block\">\n      <div class=\"c8y-list__item__icon\">\n        <i\n          [c8yIcon]=\"statusIcons[operation.status]\"\n          [ngClass]=\"statusClasses[operation.status]\"\n          [tooltip]=\"operation.status?.toString() | translate\"\n          placement=\"right\"\n          container=\"body\"\n        ></i>\n      </div>\n      <div class=\"c8y-list__item__body p-r-16\">\n        <div class=\"content-flex-40\">\n          <div class=\"col-8\">\n            <button\n              class=\"btn-clean text-truncate\"\n              (click)=\"openDetails()\"\n              title=\"{{ operation.description | translate }}\"\n            >\n              {{ operation.description | translate }}\n            </button>\n          </div>\n          <div class=\"col-4 text-muted\">\n            <small class=\"icon-flex\">\n              <i c8yIcon=\"calendar\" class=\"m-r-4\"></i>\n              <span>{{ operation.creationTime | c8yDate }}</span>\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  </a>\n</div>\n"
            },] }
];
OperationDetailsComponent.ctorParameters = () => [
    { type: OperationDetailsService }
];
OperationDetailsComponent.propDecorators = {
    operation: [{ type: Input }]
};

/**
 * This module allows to display details of a single operation in a modal.
 */
class OperationDetailsModule {
}
OperationDetailsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CoreModule, PopoverModule, TooltipModule, CollapseModule, OperationsListModule],
                providers: [OperationDetailsService, BulkOperationListItemService],
                declarations: [OperationDetailsComponent, OperationDetailsModalComponent],
                entryComponents: [OperationDetailsComponent, OperationDetailsModalComponent],
                exports: [OperationDetailsComponent]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { OperationDetailsComponent, OperationDetailsModalComponent, OperationDetailsModule, OperationDetailsService };
//# sourceMappingURL=c8y-ngx-components-operations-operation-details.js.map
