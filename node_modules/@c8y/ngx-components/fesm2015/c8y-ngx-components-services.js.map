{"version":3,"file":"c8y-ngx-components-services.js","sources":["../../services/services-device-tab/columns/last-updated-date.cell-renderer.component.ts","../../services/services-device-tab/columns/last-updated-date.device-grid-column.ts","../../services/services-device-tab/columns/name.cell-renderer.component.ts","../../services/services-device-tab/columns/name.grid-column.ts","../../services/services-device-tab/columns/service-type.grid-column.ts","../../services/status-options/status-options.model.ts","../../services/status-options/status-options.service.ts","../../services/services-device-tab/columns/status.cell-renderer.component.ts","../../services/services-device-tab/columns/status.grid-column.ts","../../services/services-device-tab/services-device-tab.component.ts","../../services/services-device-tab/services-device-tab.guard.ts","../../services/services-device-tab/services.breadcrumb-factory.ts","../../services/services-device-tab/services-device-tab.module.ts","../../services/services.module.ts","../../services/c8y-ngx-components-services.ts"],"names":["SERVICE_FRAGMENT"],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  template: `{{ context.value | c8yDate }}`\n})\nexport class LastUpdatedDateCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { ColumnConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { LastUpdatedDateCellRendererComponent } from './last-updated-date.cell-renderer.component';\nimport { FormGroup } from '@angular/forms';\n\nexport class LastUpdatedDateGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n\n    const self = this;\n\n    this.path = 'lastUpdated';\n    this.name = 'lastUpdatedDate';\n    this.header = gettext('Last updated');\n    this.cellRendererComponent = LastUpdatedDateCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      fields: [{\n        type: 'object',\n        key: 'lastUpdated',\n        fieldGroup: [\n          {\n            type: 'date-time',\n            key: 'after',\n            templateOptions: {\n              label: gettext('Show services updated after')\n            },\n            expressionProperties: {\n              'templateOptions.maxDate': (model: any) => model?.before,\n            },\n          },\n          {\n            type: 'date-time',\n            key: 'before',\n            templateOptions: {\n              label: gettext('And before`date`')\n            },\n            expressionProperties: {\n              'templateOptions.minDate': (model: any) => model?.after,\n            },\n          }]\n      }],\n      formGroup: new FormGroup({}),\n      getFilter(model) {\n        const filter: any = {};\n        const dates = model && model.lastUpdated;\n        if (dates && (dates.after || dates.before)) {\n          filter.__and = [];\n          if (dates.after) {\n            const after = self.formatDate(dates.after);\n            filter.__and.push({\n              __or: {\n                [self.path]: { __gt: after },\n                [`${self.path}.date`]: { __gt: after }\n              }\n            });\n          }\n          if (dates.before) {\n            const before = self.formatDate(dates.before);\n            filter.__and.push({\n              __or: {\n                [self.path]: { __lt: before },\n                [`${self.path}.date`]: { __lt: before }\n              }\n            });\n          }\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: `${this.path}.date` }, { path: this.path }]\n    };\n  }\n\n  protected formatDate(dateToFormat: string): string {\n    return new Date(dateToFormat).toISOString();\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\n\n@Component({\n  template: `\n    <a [routerLink]=\"['/service', context.item.id]\" [title]=\"context.item.name\" class=\"interact\">\n      {{ context.item.name }}\n    </a>\n  `\n})\nexport class NameCellRendererComponent {\n  constructor(public context: CellRendererContext) {}\n}\n","import { ColumnConfig, getBasicInputArrayFormFieldConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { NameCellRendererComponent } from './name.cell-renderer.component';\n\nexport class ServiceNameGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'name';\n    this.path = 'name';\n    this.header = gettext('Name');\n    this.cellRendererComponent = NameCellRendererComponent;\n\n    this.filterable = true;\n    this.filteringConfig = {\n      fields: getBasicInputArrayFormFieldConfig({\n        key: 'names',\n        label: gettext('Filter services by name'),\n        addText: gettext('Add next`name`'),\n        tooltip: gettext('Use * as a wildcard character'),\n        placeholder: gettext('daemon`SERVICE_NAME`')\n      }),\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.names.length) {\n          filter.name = { __in: model.names };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { ColumnConfig, getBasicInputArrayFormFieldConfig, gettext } from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\n\nexport class ServiceTypeGridColumn extends BaseDeviceGridColumn {\n  constructor(initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'serviceType';\n    this.path = 'serviceType';\n    this.header = gettext('Type');\n\n    this.filterable = true;\n\n    this.filteringConfig = {\n      fields: getBasicInputArrayFormFieldConfig({\n        key: 'serviceTypes',\n        label: gettext('Filter services by type'),\n        addText: gettext('Add next`type`'),\n        tooltip: gettext('Use * as a wildcard character'),\n        placeholder: 'systemd'\n      }),\n      getFilter(model: any): any {\n        const filter: any = {};\n        if (model.serviceTypes.length) {\n          filter.serviceType = { __in: model.serviceTypes };\n        }\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\n\n/**\n * Extension hook allowing to register custom service statuses and configure their visual presentation.\n */\nexport const HOOK_SERVICE_STATUS = new InjectionToken<StatusOption | StatusOption[]>(\n  'SERVICE_STATUS'\n);\n\n/**\n * Defines the visual presentation of a service status option.\n */\nexport interface StatusOption {\n  /**\n   * Key used for this status in the c8y_Service object.\n   */\n  key: string;\n  /**\n   * Human readable name of the status used to be translated.\n   */\n  label: string;\n  /**\n   * An icon to use to display the status.\n   */\n  icon: string;\n  /**\n   * CSS class(es) used to e.g. accent the status (contextual color, etc.)\n   */\n  class?: string;\n}\n\n/**\n * Standard status options supported by the platform.\n */\nexport const SERVICE_STATUS_OPTIONS: StatusOption[] = [\n  {\n    key: 'up',\n    label: gettext('Up'),\n    icon: 'check-circle',\n    class: 'text-success'\n  },\n  {\n    key: 'down',\n    label: gettext('Down'),\n    icon: 'exclamation-circle',\n    class: 'text-danger'\n  },\n  {\n    key: 'unknown',\n    label: gettext('Unknown'),\n    icon: 'inactive-state'\n  }\n];\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { flatten } from 'lodash-es';\nimport { HOOK_SERVICE_STATUS, SERVICE_STATUS_OPTIONS, StatusOption } from './status-options.model';\n\n/**\n * The service for system wide registered service status options.\n * It provides the standard service statuses plus all custom status options\n * registered with the <code>HOOK_SERVICE_STATUS</code> extension hook.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatusOptionsService {\n  get options(): StatusOption[] {\n    return this._options;\n  }\n\n  private _options: StatusOption[];\n\n  constructor(\n    @Optional() @Inject(HOOK_SERVICE_STATUS) options: Array<StatusOption | StatusOption[]>\n  ) {\n    this._options = [...SERVICE_STATUS_OPTIONS, ...flatten(options)];\n  }\n}\n","import { Component } from '@angular/core';\nimport { CellRendererContext } from '@c8y/ngx-components';\nimport { StatusOptionsService } from '../../status-options';\n\n@Component({\n  templateUrl: 'status.cell-renderer.component.html'\n})\nexport class StatusCellRendererComponent {\n  constructor(\n    public context: CellRendererContext,\n    public statusOptionsService: StatusOptionsService\n  ) {}\n}\n","import {\n  ColumnConfig,\n  ColumnDataType,\n  getBasicInputArrayFormFieldConfig,\n  gettext\n} from '@c8y/ngx-components';\nimport { BaseDeviceGridColumn } from '@c8y/ngx-components/device-grid';\nimport { entries } from 'lodash-es';\nimport { StatusOptionsService } from '../../status-options';\nimport { StatusCellRendererComponent } from './status.cell-renderer.component';\n\nexport class StatusGridColumn extends BaseDeviceGridColumn {\n  constructor(statusOptionsService: StatusOptionsService, initialColumnConfig?: ColumnConfig) {\n    super(initialColumnConfig);\n    this.name = 'status';\n    this.path = 'status';\n    this.header = gettext('Status');\n    this.dataType = ColumnDataType.Icon;\n    this.cellRendererComponent = StatusCellRendererComponent;\n    this.filterable = true;\n    this.resizable = false;\n\n    this.filteringConfig = {\n      fields: [\n        {\n          key: 'statusOptions',\n          type: 'object',\n          templateOptions: {\n            label: gettext('Show devices with status')\n          },\n          fieldGroup: [\n            ...statusOptionsService.options.map(option => ({\n              key: option.key,\n              type: 'switch',\n              templateOptions: {\n                label: option.label\n              }\n            }))\n          ]\n        },\n        ...getBasicInputArrayFormFieldConfig({\n          key: 'custom',\n          label: gettext('or filter by custom status'),\n          addText: gettext('Add next`custom status`'),\n          tooltip: gettext('Use * as a wildcard character'),\n          placeholder: gettext('restarting`SERVICE_STATUS`'),\n          optional: true\n        })\n      ],\n      getFilter(model) {\n        const filter: any = {};\n        filter.status = {\n          __in: [\n            ...entries(model?.statusOptions || {})\n              .filter(([_, value]) => !!value)\n              .map(([key, _]) => key),\n            ...model.custom.filter(c => !!c)\n          ]\n        };\n        return filter;\n      }\n    };\n\n    this.sortable = true;\n    this.sortingConfig = {\n      pathSortingConfigs: [{ path: this.path }]\n    };\n  }\n}\n","import { Component, EventEmitter } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IResultList, QueriesUtil } from '@c8y/client';\nimport { DataSourceModifier, ServerSideDataResult } from '@c8y/ngx-components';\nimport { DeviceGridColumn, DeviceGridService } from '@c8y/ngx-components/device-grid';\nimport { StatusOptionsService } from '../status-options';\nimport {\n  LastUpdatedDateGridColumn,\n  ServiceNameGridColumn,\n  ServiceTypeGridColumn,\n  StatusGridColumn\n} from './columns';\n\nconst SERVICE_FRAGMENT = 'c8y_Service';\n\n@Component({\n  selector: 'c8y-services-device-tab',\n  templateUrl: 'services-device-tab.component.html'\n})\nexport class ServicesDeviceTabComponent {\n  deviceId: string | number = this.route.snapshot.parent.data.contextData.id;\n\n  sizeRequest: Promise<number>;\n  sizeRequestDone = false;\n\n  refresh$: EventEmitter<void> = new EventEmitter();\n  pagination = {\n    pageSize: 50,\n    currentPage: 1\n  };\n\n  columns: DeviceGridColumn[] = [\n    new StatusGridColumn(this.statusOptionsService),\n    new ServiceNameGridColumn(),\n    new ServiceTypeGridColumn(),\n    new LastUpdatedDateGridColumn()\n  ];\n\n  serverSideDataCallback: any;\n\n  private queriesUtil: QueriesUtil = new QueriesUtil();\n\n  constructor(\n    private route: ActivatedRoute,\n    private inventoryService: InventoryService,\n    private gridService: DeviceGridService,\n    private statusOptionsService: StatusOptionsService\n  ) {\n    this.serverSideDataCallback = this.onDataSourceModifier.bind(this);\n    this.sizeRequest = this.inventoryService\n      .childAdditionsList(this.deviceId, {\n        query: `type eq ${SERVICE_FRAGMENT}`,\n        withTotalPages: true,\n        pageSize: 1\n      })\n      .then(response => {\n        this.sizeRequestDone = true;\n        return response?.paging?.totalPages;\n      });\n  }\n\n  async onDataSourceModifier(\n    dataSourceModifier: DataSourceModifier\n  ): Promise<ServerSideDataResult> {\n    let serverSideDataResult: ServerSideDataResult;\n\n    const query = this.queriesUtil.buildQuery(\n      this.queriesUtil.addAndFilter(this.gridService.getQueryObj(dataSourceModifier.columns), {\n        type: SERVICE_FRAGMENT\n      })\n    );\n\n    const dataRequest: Promise<IResultList<IManagedObject>> =\n      this.inventoryService.childAdditionsList(this.deviceId, {\n        query,\n        withTotalPages: true,\n        pageSize: dataSourceModifier.pagination.pageSize,\n        currentPage: dataSourceModifier.pagination.currentPage\n      });\n\n    const filtererdSizeRequest: Promise<number> = this.inventoryService\n      .childAdditionsList(this.deviceId, {\n        query,\n        withTotalPages: true,\n        pageSize: 1\n      })\n      .then(response => response?.paging?.totalPages);\n\n    const [dataResponse, size, filteredSize] = await Promise.all([\n      dataRequest,\n      this.sizeRequest,\n      filtererdSizeRequest\n    ]);\n\n    const { res, data, paging } = dataResponse;\n\n    serverSideDataResult = {\n      res,\n      data,\n      paging,\n      filteredSize,\n      size\n    };\n\n    return serverSideDataResult;\n  }\n\n  trackByName(_index, column: DeviceGridColumn): string {\n    return column.name;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { InventoryService } from '@c8y/client';\nimport { get } from 'lodash-es';\n\nconst SERVICE_FRAGMENT = 'c8y_Service';\n\n@Injectable()\nexport class ServicesDeviceTabGuard implements CanActivate {\n  constructor(private inventoryService: InventoryService) {}\n\n  canActivate(route) {\n    const contextData = get(route, 'data.contextData') || get(route, 'parent.data.contextData');\n    return this.inventoryService\n      .childAdditionsList(contextData, { query: `type eq ${SERVICE_FRAGMENT}`, pageSize: 1 })\n      .then(result => !!result?.data?.length);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { InventoryService, ISource } from '@c8y/client';\nimport {\n  Breadcrumb,\n  BreadcrumbFactory,\n  BreadcrumbItem,\n  gettext,\n  ViewContext\n} from '@c8y/ngx-components';\n\n@Injectable()\nexport class ServicesBreadcrumbFactory implements BreadcrumbFactory {\n  private contextData;\n\n  constructor(private inventoryService: InventoryService) {}\n\n  async get(route: ActivatedRoute) {\n    const { context, contextData } = route.snapshot.data;\n    const { routeConfig } = route.snapshot;\n\n    this.contextData = contextData || this.contextData;\n\n    if (\n      (context === ViewContext.Service || (routeConfig as any)?.context === ViewContext.Service) &&\n      !!this.contextData\n    ) {\n      const serviceMO = (await this.inventoryService.detail(this.contextData, { withParents: true }))?.data;\n      const breadcrumb: Breadcrumb = { items: [] };\n      const breadcrumbItems: BreadcrumbItem[] = [];\n      const device: ISource = serviceMO?.additionParents?.references[0]?.managedObject;\n\n      if (device) {\n        breadcrumbItems.push({\n          label: device.name,\n          path: `/device/${device.id}`\n        });\n        breadcrumbItems.push({\n          label: gettext('Services'),\n          path: `/device/${device.id}/services`\n        });\n        breadcrumbItems.push({\n          label: serviceMO.name\n        } as BreadcrumbItem);\n      }\n\n      breadcrumb.items = breadcrumbItems;\n      return breadcrumb;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CoreModule,\n  gettext,\n  HOOK_BREADCRUMB,\n  HOOK_ROUTE,\n  Route,\n  ViewContext\n} from '@c8y/ngx-components';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport {\n  LastUpdatedDateCellRendererComponent,\n  NameCellRendererComponent,\n  StatusCellRendererComponent\n} from './columns';\nimport { ServicesDeviceTabComponent } from './services-device-tab.component';\nimport { ServicesDeviceTabGuard } from './services-device-tab.guard';\nimport { ServicesBreadcrumbFactory } from './services.breadcrumb-factory';\n\n@NgModule({\n  imports: [CoreModule, RouterModule, TooltipModule],\n  declarations: [\n    ServicesDeviceTabComponent,\n    LastUpdatedDateCellRendererComponent,\n    NameCellRendererComponent,\n    StatusCellRendererComponent\n  ],\n  providers: [\n    ServicesDeviceTabGuard,\n    ServicesBreadcrumbFactory,\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          context: ViewContext.Device,\n          path: 'services',\n          component: ServicesDeviceTabComponent,\n          label: gettext('Services'),\n          icon: 'statistics',\n          priority: 500,\n          canActivate: [ServicesDeviceTabGuard]\n        }\n      ] as Route[],\n      multi: true\n    },\n    { provide: HOOK_BREADCRUMB, useClass: ServicesBreadcrumbFactory, multi: true }\n  ]\n})\nexport class ServicesDeviceTabModule {}\n","import { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { ServicesDeviceTabModule } from './services-device-tab';\n\n@NgModule({\n  imports: [CoreModule, ServicesDeviceTabModule]\n})\nexport class ServicesModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ServicesDeviceTabModule as ɵa} from './services-device-tab';"]}