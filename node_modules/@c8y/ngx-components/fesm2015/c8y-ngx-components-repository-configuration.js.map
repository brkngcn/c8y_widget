{"version":3,"file":"c8y-ngx-components-repository-configuration.js","sources":["../../repository/configuration/device-tab/device-configuration.service.ts","../../repository/configuration/device-tab/text-based-configuration.component.ts","../../repository/configuration/device-tab/device-configuration.guard.ts","../../repository/configuration/device-tab/configuration-filter.pipe.ts","../../repository/configuration/device-tab/save-to-repository.component.ts","../../repository/configuration/device-tab/configuration-preview.component.ts","../../repository/configuration/device-tab/device-configuration.component.ts","../../repository/configuration/device-tab/source-code-preview.component.ts","../../repository/configuration/device-tab/device-configuration-list.component.ts","../../repository/configuration/device-tab/configuration-repository-device-tab.module.ts","../../repository/configuration/list/configuration-detail.component.ts","../../repository/configuration/list/configuration-list.component.ts","../../repository/configuration/list/configuration-repository-navigation-factory.ts","../../repository/configuration/list/configuration-repository-list.module.ts","../../repository/configuration/configuration-repository.module.ts","../../repository/configuration/c8y-ngx-components-repository-configuration.ts"],"sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { DeviceConfigurationOperation } from '@c8y/ngx-components/repository/shared';\nimport { IManagedObject } from '@c8y/client';\n\n@Injectable()\nexport class DeviceConfigurationService {\n  configurationsUpdated = new EventEmitter<any>();\n\n  updateConfigurations(repositorySnapsOnly?: boolean) {\n    this.configurationsUpdated.emit(repositorySnapsOnly);\n  }\n\n  hasAnySupportedOperation(\n    mo: IManagedObject,\n    operation: DeviceConfigurationOperation | DeviceConfigurationOperation[]\n  ) {\n    const supported = mo.c8y_SupportedOperations as [];\n    if (!supported) {\n      return false;\n    }\n    if (!Array.isArray(operation)) {\n      operation = [operation];\n    }\n    return supported.some(supportedOperation => operation.includes(supportedOperation));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, InventoryService, IOperation, OperationStatus } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { DeviceConfigurationOperation, RepositoryService } from '@c8y/ngx-components/repository/shared';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Component({\n  selector: 'c8y-text-based-configuration',\n  templateUrl: './text-based-configuration.component.html'\n})\nexport class TextBasedConfigurationComponent implements OnInit {\n  device: IManagedObject;\n  latestOperation: IOperation;\n  showTextBasedConfigReload: boolean;\n  showTextBasedConfigSave: boolean;\n  reloadingConfig = false;\n  config: string;\n\n  constructor(\n    private route: ActivatedRoute,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private inventoryService: InventoryService\n  ) {\n  }\n\n  async ngOnInit() {\n    await this.load();\n  }\n\n  async load() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    await this.loadDevice();\n    await this.loadOperation();\n    this.showTextBasedConfigReload = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.SEND_CONFIG]\n    );\n    this.showTextBasedConfigSave = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      [DeviceConfigurationOperation.CONFIG]\n    );\n    if (this.device.c8y_Configuration && this.device.c8y_Configuration.config) {\n      this.config = this.device.c8y_Configuration.config;\n    }\n  }\n\n  async loadOperation() {\n    const operation = await this.repositoryService.getLastConfigUpdateOperation(this.device.id);\n    if (operation !== null) {\n      this.reloadingConfig =\n        !!operation.c8y_SendConfiguration &&\n        (operation.status === OperationStatus.PENDING ||\n          operation.status === OperationStatus.EXECUTING);\n      this.repositoryService.observeOperation(operation).subscribe((operationUpdate) => {\n        this.latestOperation = operationUpdate;\n      });\n    }\n  }\n\n  get savingConfig() {\n    return this.latestOperation\n      ? !!this.latestOperation.c8y_Configuration &&\n          (this.latestOperation.status === OperationStatus.PENDING ||\n            this.latestOperation.status === OperationStatus.EXECUTING)\n      : false;\n  }\n\n  async reloadConfiguration() {\n    this.reloadingConfig = true;\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationReloadOperation(\n      this.device\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationReloadSuccess(operationUpdate),\n          operationUpdate => this.onOperationReloadError(operationUpdate),\n          () => this.onOperationReloadComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  async updateConfiguration(config) {\n    const operationCfg = await this.repositoryService.createTextBasedConfigurationUpdateOperation(\n      this.device,\n      config\n    );\n    try {\n      this.repositoryService\n        .createObservedOperation(operationCfg)\n        .subscribe(\n          operationUpdate => this.onOperationUpdateSuccess(operationUpdate),\n          operationUpdate => this.onOperationUpdateError(operationUpdate),\n          () => this.onOperationUpdateComplete()\n        );\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  private onOperationReloadSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be reloaded.'));\n    }\n  }\n\n  private onOperationReloadError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    this.reloadingConfig = false;\n  }\n\n  private async onOperationReloadComplete() {\n    await this.loadDevice();\n    this.config = this.device.c8y_Configuration.config;\n    this.reloadingConfig = false;\n  }\n\n  private onOperationUpdateSuccess(operationUpdate) {\n    this.latestOperation = operationUpdate;\n    if (operationUpdate.status === OperationStatus.PENDING) {\n      this.alertService.success(gettext('Configuration will be updated.'));\n    }\n  }\n\n  private onOperationUpdateError(operationUpdate) {\n    this.latestOperation = operationUpdate;\n  }\n\n  private onOperationUpdateComplete() {\n    this.device.c8y_Configuration.config = this.config;\n  }\n\n  private async loadDevice() {\n    this.device = (await this.inventoryService.detail(this.device.id, {\n      withChildren: false\n    })).data;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot } from '@angular/router';\nimport { DeviceConfigurationOperation } from '@c8y/ngx-components/repository/shared';\nimport { has } from 'lodash-es';\nimport { DeviceConfigurationService } from './device-configuration.service';\n\n@Injectable()\nexport class DeviceConfigurationGuard implements CanActivate {\n  constructor(private deviceConfigurationService: DeviceConfigurationService) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    const contextData = route.data.contextData || route.parent.data.contextData;\n    if (!contextData) {\n      return false;\n    }\n    return (\n      (contextData.c8y_SupportedConfigurations &&\n        contextData.c8y_SupportedConfigurations.length > 0) ||\n      this.deviceConfigurationService.hasAnySupportedOperation(contextData, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG,\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ]) ||\n      has(contextData, 'c8y_Configuration')\n    );\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { SupportedConfigurationItem } from '@c8y/ngx-components/repository/shared';\n\n@Pipe({\n  name: 'configurationFilterPipe'\n})\nexport class ConfigurationFilterPipe implements PipeTransform {\n  transform(items: any[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter(\n          (item: SupportedConfigurationItem) =>\n            this.filterContainString(item.name, filterTerm) ||\n            this.filterContainString(item.deviceType, filterTerm)\n        );\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ConfigurationSnapshot, RepositoryType, RepositoryService } from '@c8y/ngx-components/repository/shared';\nimport { AlertService, gettext } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-save-config-to-configuration-repository',\n  templateUrl: 'save-to-repository.component.html'\n})\nexport class SaveToRepositoryComponent {\n  configSnapshot: ConfigurationSnapshot;\n  result: Promise<any> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n  private _save;\n  private _cancel;\n\n  constructor(\n    private modal: BsModalRef,\n    private alertService: AlertService,\n    private repositoryService: RepositoryService\n  ) {}\n\n  async save() {\n    {\n      try {\n        const configSnapshotData = {\n          selected: {\n            configurationType: this.configSnapshot.configurationType\n          },\n          version: this.configSnapshot.name,\n          deviceType: this.configSnapshot.deviceType,\n          description: this.configSnapshot.description,\n          binary: {\n            file: new File([this.configSnapshot.binary], this.configSnapshot.name)\n          }\n        };\n        await this.repositoryService.save(configSnapshotData, RepositoryType.CONFIGURATION);\n        this.alertService.success(gettext('Configuration saved.'));\n        this._save();\n      } catch (ex) {\n        this.alertService.addServerFailure(ex);\n      }\n    }\n  }\n\n  close() {\n    this._cancel();\n    this.modal.hide();\n  }\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ConfigurationSnapshot, DeviceConfigurationOperation, RepositoryService } from '@c8y/ngx-components/repository/shared';\nimport {\n  IManagedObject,\n  IOperation,\n  OperationService,\n  OperationStatus,\n  UserService\n} from '@c8y/client';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { saveAs } from 'file-saver';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { cloneDeep } from 'lodash-es';\nimport { AlertService, AppStateService, OperationRealtimeService } from '@c8y/ngx-components';\n\n@Component({\n  selector: 'c8y-device-configuration-preview',\n  templateUrl: './configuration-preview.component.html'\n})\nexport class ConfigurationPreviewComponent implements OnInit, OnDestroy {\n  @Input() device: IManagedObject;\n  @Input() set configurationType(type: string) {\n    this._configurationType = type;\n    this.setOperation(type);\n  }\n  get configurationType(): string {\n    return this._configurationType;\n  }\n  @Input() configSnapshot: ConfigurationSnapshot;\n  @Input() canSaveSnapshot: boolean;\n  @Input() actionButtonText: string;\n  @Input() actionButtonIcon: string;\n  @Input() isLegacy: boolean = false;\n  @Input() operationToTrigger:\n    | DeviceConfigurationOperation.UPLOAD_CONFIG\n    | DeviceConfigurationOperation.DOWNLOAD_CONFIG;\n\n  operation: IOperation;\n  canCallAction = true;\n  deviceConfigurationOperation = DeviceConfigurationOperation;\n  private _configurationType: string;\n  private operationsSubscription: Subscription;\n\n  constructor(\n    private deviceConfigurationService: DeviceConfigurationService,\n    private operationRealtime: OperationRealtimeService,\n    private bsModal: BsModalService,\n    private user: UserService,\n    private appState: AppStateService,\n    private repositoryService: RepositoryService,\n    private operationService: OperationService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.setCanCallAction();\n    this.setOperation(this._configurationType);\n    this.operationsSubscription = this.operationRealtime\n      .onAll$(this.device.id)\n      .pipe(map(({ data }) => data as IOperation))\n      .subscribe(operation => {\n        this.updatePreview(operation);\n      });\n  }\n\n  async setOperation(configType): Promise<void> {\n    const operationList = await this.repositoryService.getConfigFileOperationList(\n      this.device.id,\n      this.operationToTrigger\n    );\n\n    const operation = this.isLegacy\n      ? operationList.find(op => op[this.operationToTrigger] && !op[this.operationToTrigger].type)\n      : operationList.find(op => op[this.operationToTrigger].type === configType);\n\n    this.operation =\n      operation && operation.status !== OperationStatus.SUCCESSFUL ? operation : undefined;\n  }\n\n  setCanCallAction(): void {\n    this.canCallAction = this.deviceConfigurationService.hasAnySupportedOperation(\n      this.device,\n      this.operationToTrigger\n    );\n  }\n\n  async createDeviceOperation() {\n    let operationCfg;\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getDownloadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.configSnapshot,\n        this.isLegacy\n      );\n    }\n    if (this.operationToTrigger === DeviceConfigurationOperation.UPLOAD_CONFIG) {\n      operationCfg = this.repositoryService.getUploadConfigurationFileOperation(\n        this.device,\n        this._configurationType,\n        this.isLegacy\n      );\n    }\n    try {\n      this.operation = (await this.operationService.create(operationCfg)).data;\n    } catch (ex) {\n      this.alertService.addServerFailure(ex);\n    }\n  }\n\n  showOperation(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return !!this.operation;\n    }\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING, OperationStatus.FAILED].includes(\n        this.operation.status\n      )\n    );\n  }\n\n  showBinary(): boolean {\n    if (this.operationToTrigger === DeviceConfigurationOperation.DOWNLOAD_CONFIG) {\n      return true;\n    }\n    return !this.showOperation();\n  }\n\n  isCreateOperationDisabled(): boolean {\n    return (\n      this.operation &&\n      [OperationStatus.PENDING, OperationStatus.EXECUTING].includes(this.operation.status)\n    );\n  }\n\n  updatePreview(operation: IOperation) {\n    if (\n      operation &&\n      operation[this.operationToTrigger] &&\n      (this.isLegacy ||\n        (operation[this.operationToTrigger].type &&\n          operation[this.operationToTrigger].type === this.configurationType))\n    ) {\n      this.operation = operation;\n      this.updateSnapshotsOnConfigUpload(operation);\n    }\n  }\n\n  download() {\n    const blob = new Blob([this.configSnapshot.binary], { type: this.configSnapshot.binaryType });\n    let fileName = this.configSnapshot.name;\n    switch (this.configSnapshot.binaryType) {\n      case 'text/csv':\n      case 'application/csv':\n        fileName = fileName.concat('.csv');\n        break;\n      case 'text/yaml':\n      case 'application/x-yaml':\n        fileName = fileName.concat('.yaml');\n        break;\n      case 'application/json':\n        fileName = fileName.concat('.json');\n        break;\n    }\n    saveAs(blob, fileName);\n  }\n\n  async saveToRepository() {\n    const initialState = {\n      configSnapshot: cloneDeep(this.configSnapshot)\n    };\n    const modal = this.bsModal.show(SaveToRepositoryComponent, {\n      class: 'modal-sm',\n      initialState,\n      ignoreBackdropClick: true\n    }).content as SaveToRepositoryComponent;\n    try {\n      await modal.result;\n      this.deviceConfigurationService.updateConfigurations(true);\n      modal.close();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  hasPermission(): boolean {\n    return this.user.hasAnyRole(this.appState.currentUser.value, [\n      'ROLE_INVENTORY_ADMIN',\n      'ROLE_INVENTORY_CREATE'\n    ]);\n  }\n\n  ngOnDestroy() {\n    if (this.operationsSubscription) {\n      this.operationsSubscription.unsubscribe();\n    }\n  }\n\n  private async updateSnapshotsOnConfigUpload(operation) {\n    if (\n      operation[DeviceConfigurationOperation.UPLOAD_CONFIG] &&\n      operation.status === OperationStatus.SUCCESSFUL\n    ) {\n      this.deviceConfigurationService.updateConfigurations();\n    }\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, Realtime } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\nimport {\n  ConfigurationSnapshot,\n  DeviceConfigurationListEmptyState,\n  DeviceConfigurationOperation,\n  RepositoryService,\n  SupportedConfigurationItem\n} from '@c8y/ngx-components/repository/shared';\nimport { has } from 'lodash-es';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { TextBasedConfigurationComponent } from './text-based-configuration.component';\n\n@Component({\n  selector: 'c8y-device-configuration',\n  templateUrl: './device-configuration.component.html'\n})\nexport class DeviceConfigurationComponent implements OnInit {\n  supportedConfigurations: SupportedConfigurationItem[] = [];\n  showBinaryBasedConfig = false;\n  configurationType: string;\n  configSnapshot: Partial<ConfigurationSnapshot> = {};\n  repositorySnapshots: IManagedObject[];\n  repositorySnapshot: ConfigurationSnapshot;\n  repositorySnapshotsEmptyState: DeviceConfigurationListEmptyState;\n  device: IManagedObject;\n  isLegacy: boolean;\n  showTextBasedConfig: boolean;\n  reloading: boolean = false;\n\n  @ViewChild(TextBasedConfigurationComponent)\n  textBasedConfigurationComponent: TextBasedConfigurationComponent;\n\n  constructor(\n    private route: ActivatedRoute,\n    private deviceConfigurationService: DeviceConfigurationService,\n    private realtime: Realtime,\n    private repositoryService: RepositoryService\n  ) {\n    this.deviceConfigurationService.configurationsUpdated.subscribe(repositorySnapsOnly => {\n      this.updateSnapshots(repositorySnapsOnly);\n    });\n  }\n\n  ngOnInit() {\n    this.device = this.route.snapshot.parent.data.contextData;\n    if (this.device.c8y_SupportedConfigurations) {\n      this.supportedConfigurations = this.device.c8y_SupportedConfigurations.map(item => ({\n        name: item\n      }));\n    }\n\n    if (\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.DOWNLOAD_CONFIG,\n        DeviceConfigurationOperation.UPLOAD_CONFIG\n      ])\n    ) {\n      this.supportedConfigurations.push({\n        name: gettext('Legacy configuration snapshot'),\n        isLegacy: true\n      });\n    }\n    if (this.supportedConfigurations.length > 0) {\n      this.showBinaryBasedConfig = true;\n    }\n\n    this.repositorySnapshotsEmptyState = {\n      icon: 'gears',\n      title: gettext('No configurations available.'),\n      text: gettext('Add configuration to configuration repository')\n    };\n\n    this.showTextBasedConfig =\n      this.deviceConfigurationService.hasAnySupportedOperation(this.device, [\n        DeviceConfigurationOperation.CONFIG,\n        DeviceConfigurationOperation.SEND_CONFIG\n      ]) || has(this.device, 'c8y_Configuration');\n  }\n\n  async onConfigTypeSelected(config) {\n    this.configurationType = config.name;\n    this.isLegacy = config.isLegacy;\n    this.updateSnapshots();\n  }\n\n  async onRepositoryConfigSelected(config) {\n    this.repositorySnapshot = {\n      id: config.id,\n      time: config.creationTime,\n      name: config.name,\n      binaryUrl: config.url,\n      deviceType: config.deviceType,\n      configurationType: config.configurationType\n    };\n    if (config.url) {\n      try {\n        const binary = await this.repositoryService.getBinaryFile(config.url, {\n          allowExternal: false\n        });\n        if (binary) {\n          this.repositorySnapshot.binary = await (binary as any).text();\n        }\n      } catch (ex) {\n        // do nothing\n      }\n    }\n  }\n\n  async updateSnapshots(repositorySnapsOnly?: boolean) {\n    this.reloading = true;\n    this.repositorySnapshot = undefined;\n    this.repositorySnapshots = await this.repositoryService.getSnapshotsFromRepository(\n      this.device,\n      this.configurationType\n    );\n    if (!repositorySnapsOnly) {\n      this.configSnapshot = this.isLegacy\n        ? await this.repositoryService.getLegacyConfigSnapshot(this.device)\n        : await this.repositoryService.getConfigSnapshot(this.device, this.configurationType);\n    }\n    if (this.showTextBasedConfig) {\n      await this.textBasedConfigurationComponent.load();\n    }\n    this.reloading = false;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-source-code-preview',\n  templateUrl: './source-code-preview.component.html'\n})\nexport class SourceCodePreviewComponent {\n  @Input() isDisabled: boolean;\n  @Input() text: string;\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DeviceConfigurationListEmptyState, SupportedConfigurationItem } from '@c8y/ngx-components/repository/shared';\n\n@Component({\n  selector: 'c8y-device-configuration-list',\n  templateUrl: './device-configuration-list.component.html'\n})\nexport class DeviceConfigurationListComponent {\n  @Input() items: SupportedConfigurationItem[];\n  @Input() itemIcon: string;\n  @Input() emptyState: DeviceConfigurationListEmptyState;\n  @Input() isFilterEnabled: boolean;\n  @Output() configSelected = new EventEmitter<string>();\n  selectedConfig;\n  filterTerm: string = '';\n\n  showConfigurationTypePreview(config): void {\n    this.selectedConfig = config;\n    this.configSelected.emit(config);\n  }\n\n  updatePipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreModule, ViewContext, HOOK_ROUTE, gettext, Route } from '@c8y/ngx-components';\nimport { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';\nimport { DeviceConfigurationGuard } from './device-configuration.guard';\nimport { DeviceConfigurationComponent } from './device-configuration.component';\nimport { ConfigurationPreviewComponent } from './configuration-preview.component';\nimport { ConfigurationFilterPipe } from './configuration-filter.pipe';\nimport { DeviceConfigurationService } from './device-configuration.service';\nimport { DeviceConfigurationListComponent } from './device-configuration-list.component';\nimport { TextBasedConfigurationComponent } from './text-based-configuration.component';\nimport { SaveToRepositoryComponent } from './save-to-repository.component';\nimport { SourceCodePreviewComponent } from './source-code-preview.component';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\n\nimport { OperationDetailsModule } from '@c8y/ngx-components/operations/operation-details';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedRepositoryModule,\n    OperationDetailsModule,\n    TabsModule.forRoot()\n  ],\n  declarations: [\n    DeviceConfigurationComponent,\n    DeviceConfigurationListComponent,\n    ConfigurationPreviewComponent,\n    ConfigurationFilterPipe,\n    SaveToRepositoryComponent,\n    SourceCodePreviewComponent,\n    TextBasedConfigurationComponent\n  ],\n  entryComponents: [\n    DeviceConfigurationComponent,\n    SaveToRepositoryComponent,\n    TextBasedConfigurationComponent\n  ],\n  providers: [DeviceConfigurationService]\n})\nexport class ConfigurationRepositoryDeviceTabModule {\n  static forRoot(): ModuleWithProviders<ConfigurationRepositoryDeviceTabModule> {\n    return {\n      ngModule: ConfigurationRepositoryDeviceTabModule,\n      providers: [\n        DeviceConfigurationGuard,\n        {\n          provide: HOOK_ROUTE,\n          useValue: [\n            {\n              context: ViewContext.Device,\n              path: 'device-configuration',\n              component: DeviceConfigurationComponent,\n              label: gettext('Configuration'),\n              icon: 'gears',\n              priority: 600,\n              canActivate: [DeviceConfigurationGuard]\n            }\n          ] as Route[],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { IManagedObject } from '@c8y/client';\nimport { AlertService, gettext } from '@c8y/ngx-components';\nimport { uniqBy, isUndefined } from 'lodash-es';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport {\n  ModalModel,\n  RepositoryType,\n  RepositoryService\n} from '@c8y/ngx-components/repository/shared';\nimport { PickedFiles } from '@c8y/ngx-components';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-configuration-detail',\n  templateUrl: './configuration-detail.component.html'\n})\nexport class ConfigurationDetailComponent implements ModalModel {\n  @ViewChild('configurationForm', { static: true }) configurationForm: NgForm;\n  selected: { id?: string; name?: string; [key: string]: any };\n  version: string;\n  description: string;\n  binary: { file?: File; url?: string } = {\n    file: undefined,\n    url: undefined\n  };\n  deviceType: string;\n\n  pattern: string = '';\n  filterPipe;\n  configs;\n  mo: Partial<IManagedObject> = {};\n  saving = false;\n  uploadChoice: 'uploadBinary' | 'uploadUrl' = 'uploadBinary';\n  existingBinary: File;\n  submitButtonTitle: string;\n  textForConfigurationUrlPopover: string =\n    gettext(`Path for binaries can vary depending on device agent implementation, for example:\n    /configuration/binaries/configuration1.bin\n    https://configuration/binary/123\n    ftp://configuration/binary/123.tar.gz\n    Configurations with external URLs only work with the configuration typed devices, not with legacy ones.\n  `);\n\n  result: Promise<void> = new Promise((resolve, reject) => {\n    this._save = resolve;\n    this._cancel = reject;\n  });\n\n  private _save;\n  private _cancel;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private bsModalRef: BsModalRef,\n    private alert: AlertService\n  ) {}\n\n  async ngOnInit() {\n    this.configs = await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION);\n    if (this.selected) {\n      this.uploadChoice = this.binary.file ? 'uploadBinary' : 'uploadUrl';\n      this.existingBinary = this.binary.file;\n    }\n    this.setPipe('');\n    this.submitButtonTitle = this.mo.id\n      ? gettext('Update configuration')\n      : gettext('Add configuration');\n  }\n\n  cancel() {\n    this.bsModalRef.hide();\n    this._cancel();\n  }\n\n  setPipe(filterStr: string) {\n    this.pattern = filterStr;\n    this.filterPipe = pipe(\n      map((data: []) => uniqBy(data, 'configurationType')),\n      map((data: []) => {\n        return data.filter(\n          (mo: any) =>\n            mo.configurationType &&\n            mo.configurationType.toLowerCase().indexOf(filterStr.toLowerCase()) > -1\n        );\n      })\n    );\n  }\n\n  onFile(dropped: PickedFiles) {\n    this.configurationForm.form.markAsDirty();\n    if (!isUndefined(dropped.url)) {\n      this.binary = {\n        url: dropped.url\n      };\n      return;\n    } else if (dropped.droppedFiles) {\n      this.binary = {\n        file: dropped.droppedFiles[0].file\n      };\n      return;\n    } else {\n      this.binary = {\n        file: undefined,\n        url: undefined\n      };\n    }\n  }\n\n  async save() {\n    try {\n      this.saving = true;\n      const { selected, version, description, binary, deviceType } = this;\n      if (this.existingBinary === this.binary.file) {\n        binary.file = undefined;\n      }\n      await this.repositoryService.save(\n        { selected, version, description, binary, deviceType },\n        RepositoryType.CONFIGURATION,\n        this.mo\n      );\n      this.alert.success(\n        this.mo.id ? gettext('Configuration updated.') : gettext('Configuration created.')\n      );\n      this.bsModalRef.hide();\n      this._save();\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n      this._cancel();\n    } finally {\n      this.saving = false;\n    }\n  }\n}\n","import { Component, OnInit, Pipe, ViewChild } from '@angular/core';\nimport {IManagedObject, InventoryBinaryService, InventoryService, IResultList} from '@c8y/client';\nimport {\n  AlertService,\n  FilterInputComponent,\n  gettext, memoize,\n  ModalService,\n  Status\n} from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { Observable, of, pipe } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository/shared';\nimport { ConfigurationDetailComponent } from './configuration-detail.component';\nimport { property } from 'lodash-es';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'c8y-configuration-list',\n  templateUrl: './configuration-list.component.html'\n})\nexport class ConfigurationListComponent implements OnInit {\n  @ViewChild(FilterInputComponent, { static: false }) filter: FilterInputComponent;\n  configurations$: Observable<IResultList<IManagedObject>>;\n  filterPipe: Pipe;\n  filterTerm = '';\n  reloading: boolean = false;\n  data;\n  private readonly DELETED_SUCCESS_MSG = gettext('Configuration deleted.');\n\n  constructor(\n    private alert: AlertService,\n    private repositoryService: RepositoryService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private translateService: TranslateService,\n    private inventoryBinaryService: InventoryBinaryService,\n    private inventoryService: InventoryService\n  ) {}\n\n  ngOnInit() {\n    this.loadConfigurations();\n  }\n\n  async loadConfigurations() {\n    this.reloading = true;\n    this.configurations$ = of(\n      await this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION)\n    );\n    this.reloading = false;\n    this.reset();\n  }\n\n  async add() {\n    try {\n      await (this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true\n      }).content as ConfigurationDetailComponent).result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async edit(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    try {\n      const modal = this.bsModalService.show(ConfigurationDetailComponent, {\n        class: 'modal-sm',\n        ignoreBackdropClick: true,\n        initialState: {\n          selected: configuration,\n          version: configuration.name,\n          deviceType: configuration.deviceType,\n          description: configuration.description,\n          binary: { file: fileBinary, url: configuration.url }\n        }\n      }).content as ConfigurationDetailComponent;\n      modal.mo = configuration;\n      await modal.result;\n      await this.loadConfigurations();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  isBinaryFile(configuration: IManagedObject) {\n    return configuration.url ? !!this.inventoryBinaryService.getIdFromUrl(configuration.url) : false;\n  }\n\n  @memoize(property('id'))\n  getBinaryName(configuration: IManagedObject) {\n    return this.repositoryService.getBinaryName$(configuration.url);\n  }\n\n  async download(configuration: IManagedObject) {\n    const fileBinary: File = await this.repositoryService.getBinaryFile(configuration.url, {\n      allowExternal: false\n    });\n    saveAs(fileBinary);\n  }\n\n  async delete(configuration: IManagedObject) {\n    try {\n      const title = gettext('Delete configuration snapshot');\n      const confirmationText = gettext(\n        'You are about to delete the configuration snapshot {{ name }}.'\n      );\n      const hint = gettext('This operation is irreversible.');\n      const proceed = gettext('Do you want to proceed?');\n      const body = [\n        this.translateService.instant(confirmationText, {\n          name: configuration.name\n        }),\n        this.translateService.instant(hint),\n        this.translateService.instant(proceed)\n      ].join(' ');\n      const labels = {\n        ok: gettext('Delete')\n      };\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.repositoryService.delete(configuration);\n      this.alert.success(this.DELETED_SUCCESS_MSG);\n      await this.loadConfigurations();\n    } catch (ex) {\n      if (ex) {\n        this.alert.addServerFailure(ex);\n      }\n    }\n  }\n\n  setPipe(filterTerm: string) {\n    this.filterTerm = filterTerm;\n    this.filterPipe = pipe(\n      map((data: []) => {\n        this.data =\n          filterTerm.trim().length === 0\n            ? data\n            : data.filter(\n            (mo: IManagedObject) =>\n              this.filterContainString(mo.name, filterTerm) ||\n              this.filterContainString(mo.configurationType, filterTerm) ||\n              this.filterContainString(mo.deviceType, filterTerm) ||\n              this.filterContainString(mo.description, filterTerm)\n            );\n\n        return this.data;\n      })\n    );\n  }\n\n  shouldShowEmptyState() {\n    return !(this.data && this.data.length > 0);\n  }\n\n  reset() {\n    this.filter.filterTerm = '';\n    this.setPipe('');\n  }\n\n  private filterContainString(name: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return name && name.toLowerCase().indexOf(term) > -1;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { gettext, NavigatorNode, NavigatorNodeFactory } from '@c8y/ngx-components';\n\n@Injectable()\nexport class ConfigurationRepositoryNavigationFactory implements NavigatorNodeFactory {\n  node: NavigatorNode;\n\n  constructor() {\n    this.node = new NavigatorNode({\n      label: gettext('Configuration repository'),\n      path: 'configuration',\n      icon: 'gears',\n      parent: gettext('Management'),\n      priority: 800\n    });\n  }\n\n  get(): NavigatorNode {\n    return this.node;\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigurationListComponent } from './configuration-list.component';\nimport { ConfigurationDetailComponent } from './configuration-detail.component';\nimport { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, Route } from '@c8y/ngx-components';\nimport { ConfigurationRepositoryNavigationFactory } from './configuration-repository-navigation-factory';\nimport { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    SharedRepositoryModule,\n    TooltipModule\n  ],\n  declarations: [\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n  ],\n  entryComponents: [\n    ConfigurationListComponent,\n    ConfigurationDetailComponent,\n  ]\n})\nexport class ConfigurationRepositoryListModule {\n  static forRoot(): ModuleWithProviders<ConfigurationRepositoryListModule> {\n    return {\n      ngModule: ConfigurationRepositoryListModule,\n      providers: [\n        {\n          provide: HOOK_NAVIGATOR_NODES,\n          useClass: ConfigurationRepositoryNavigationFactory,\n          multi: true\n        },\n        {\n          provide: HOOK_ROUTE,\n          useValue: [\n            {\n              path: 'configuration',\n              component: ConfigurationListComponent\n            },\n          ] as Route[],\n          multi: true\n        }\n      ]\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {\n  CoreModule,\n  FormsModule,\n} from '@c8y/ngx-components';\nimport { ConfigurationRepositoryDeviceTabModule } from './device-tab/configuration-repository-device-tab.module';\nimport { ConfigurationRepositoryListModule } from './list/configuration-repository-list.module';\n\n@NgModule({\n  imports: [\n    CoreModule,\n    FormsModule,\n    ConfigurationRepositoryListModule.forRoot(),\n    ConfigurationRepositoryDeviceTabModule.forRoot()\n  ],\n})\nexport class ConfigurationRepositoryModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ConfigurationFilterPipe as ɵk} from './device-tab/configuration-filter.pipe';\nexport {ConfigurationPreviewComponent as ɵj} from './device-tab/configuration-preview.component';\nexport {ConfigurationRepositoryDeviceTabModule as ɵe} from './device-tab/configuration-repository-device-tab.module';\nexport {DeviceConfigurationListComponent as ɵi} from './device-tab/device-configuration-list.component';\nexport {DeviceConfigurationComponent as ɵf} from './device-tab/device-configuration.component';\nexport {DeviceConfigurationGuard as ɵn} from './device-tab/device-configuration.guard';\nexport {DeviceConfigurationService as ɵh} from './device-tab/device-configuration.service';\nexport {SaveToRepositoryComponent as ɵl} from './device-tab/save-to-repository.component';\nexport {SourceCodePreviewComponent as ɵm} from './device-tab/source-code-preview.component';\nexport {TextBasedConfigurationComponent as ɵg} from './device-tab/text-based-configuration.component';\nexport {ConfigurationDetailComponent as ɵc} from './list/configuration-detail.component';\nexport {ConfigurationListComponent as ɵb} from './list/configuration-list.component';\nexport {ConfigurationRepositoryListModule as ɵa} from './list/configuration-repository-list.module';\nexport {ConfigurationRepositoryNavigationFactory as ɵd} from './list/configuration-repository-navigation-factory';"],"names":[],"mappings":"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"}