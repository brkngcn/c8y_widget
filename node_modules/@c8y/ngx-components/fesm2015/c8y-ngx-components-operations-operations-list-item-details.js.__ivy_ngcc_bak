import { EventEmitter, Component, Input, Output, ViewChild, NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { gettext, CoreModule } from '@c8y/ngx-components';
import { BulkSingleOperationsListModule } from '@c8y/ngx-components/operations/bulk-single-operations-list';
import { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';

class OperationDetailsTabsComponent {
    constructor() {
        this.readOnly = false;
        this.onRetryFailedOperations = new EventEmitter();
        this.showFailedOperation = new EventEmitter();
        this.tabs = [];
    }
    ngOnInit() {
        this.template = this.detailsTemplate;
        this.tabs = [
            {
                label: gettext('Details'),
                path: null,
                icon: 'asterisk',
                template: this.detailsTemplate
            },
            {
                label: gettext('History of changes'),
                path: null,
                icon: 'archive',
                template: this.auditTemplate
            }
        ];
    }
}
OperationDetailsTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operation-details-tabs',
                template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-operation-details\n    [operation]=\"operation\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n    [bulkOperationModalDetailsService]=\"bulkOperationModalDetailsService\"\n  >\n  </c8y-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  *ngIf=\"operation.operationPrototype\"\n  [bulkOperation]=\"operation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n"
            },] }
];
OperationDetailsTabsComponent.propDecorators = {
    operation: [{ type: Input }],
    readOnly: [{ type: Input }],
    bulkOperationModalDetailsService: [{ type: Input }],
    onRetryFailedOperations: [{ type: Output }],
    showFailedOperation: [{ type: Output }],
    detailsTemplate: [{ type: ViewChild, args: ['details', { static: true },] }],
    auditTemplate: [{ type: ViewChild, args: ['audit', { static: true },] }]
};

class OperationDetailsComponent {
    constructor() {
        this.showFailedOperation = new EventEmitter();
    }
    scrollToRetriedFromOperation(failedOperationId) {
        this.showFailedOperation.emit(failedOperationId);
    }
    openBulkOperationDetails(bulkOperationId) {
        this.bulkOperationModalDetailsService.openDetails(bulkOperationId);
    }
}
OperationDetailsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operation-details',
                template: "<div class=\"row d-flex-md fit-h\">\n  <div class=\"col-md-4 flex-item-top\">\n    <div class=\"legend form-block\" translate>Details</div>\n    <ul class=\"list-unstyled small\">\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"operation.startDate\">\n        <label class=\"small m-0\" translate>Start date</label>\n        <span class=\"flex-item-right\">{{ operation.startDate | c8yDate }}</span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"operation.bulkOperationId\">\n        <label class=\"small flex-item-top\" translate>Bulk operation</label>\n        <div class=\"flex-item-right text-right text-truncate\">\n          <a (click)=\"openBulkOperationDetails(operation.bulkOperationId)\" class=\"interact\">\n            {{ 'See details' | translate }}\n          </a>\n        </div>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"operation.creationRamp\">\n        <label class=\"small m-0\">\n          {{ 'Delay' | translate }}\n          <a\n            class=\"text-primary\"\n            tooltip=\"{{ 'Delay before sending the operation to the next device.' | translate }}\"\n            container=\"body\"\n          >\n            <i [c8yIcon]=\"'info-circle'\"></i>\n          </a>\n        </label>\n        <span [ngPlural]=\"operation.creationRamp\" class=\"flex-item-right\">\n          <ng-template ngPluralCase=\"=1\">\n            {{ operation.creationRamp }} <span translate>second</span>\n          </ng-template>\n          <ng-template ngPluralCase=\"other\">\n            {{ operation.creationRamp }} <span translate>seconds</span>\n          </ng-template>\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n        <label class=\"small m-0\" translate>Status</label>\n        <span class=\"flex-item-right text-uppercase\">\n          {{\n            operation.operationPrototype\n              ? (operation.generalStatus.toString() | translate)\n              : (operation.status.toString() | translate)\n          }}\n        </span>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"operation.failureReason\">\n        <label class=\"small m-0\" translate>Failure reason</label>\n        <span\n          class=\"inner-scroll p-l-16 m-b-0 flex-item-right text-truncate-wrap\"\n          title=\"{{ operation.failureReason | translate }}\"\n          >{{ operation.failureReason | translate }}</span\n        >\n      </li>\n      <li\n        class=\"p-t-4 p-b-4 flex-row separator-bottom\"\n        *ngIf=\"operation.result || operation.progress\"\n      >\n        <label class=\"small flex-item-top\" translate>Result</label>\n        <div\n          class=\"flex-row flex-grow flex-item-right flex-end\"\n          *ngIf=\"operation.progress; else singleOpResult\"\n        >\n          <div *ngIf=\"operation.progress.successful > 0\" class=\"icon-flex flex-item-left m-r-8\">\n            <i c8yIcon=\"check-circle\" class=\"text-success m-r-4\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{\n                bulkOperationsCountSuccessful: operation.progress.successful\n              }\"\n            >\n              {{ bulkOperationsCountSuccessful }} successful\n            </span>\n          </div>\n          <div class=\"icon-flex flex-item-left m-r-8\" *ngIf=\"operation.progress.failed > 0\">\n            <i c8yIcon=\"warning\" class=\"text-danger m-r-4\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountFailed: operation.progress.failed }\"\n            >\n              {{ bulkOperationsCountFailed }} failed\n            </span>\n          </div>\n          <div class=\"icon-flex flex-item-left m-r-8\" *ngIf=\"operation.progress.executing > 0\">\n            <i c8yIcon=\"refresh\" class=\"m-r-4 text-info\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountExecuting: operation.progress.executing }\"\n            >\n              {{ bulkOperationsCountExecuting }} executing\n            </span>\n          </div>\n          <div class=\"icon-flex flex-item-left m-r-8\" *ngIf=\"operation.progress.pending > 0\">\n            <i c8yIcon=\"clock-o\" class=\"m-r-4 text-info\"></i>\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ bulkOperationsCountPending: operation.progress.pending }\"\n            >\n              {{ bulkOperationsCountPending }} pending\n            </span>\n          </div>\n        </div>\n        <ng-template #singleOpResult>\n          <span\n            class=\"inner-scroll p-l-16 m-b-0 flex-item-right text-truncate-wrap\"\n            title=\"{{ operation.result }}\"\n            >{{ operation.result }}</span\n          >\n        </ng-template>\n      </li>\n      <li class=\"p-t-4 p-b-4 flex-row separator-bottom\" *ngIf=\"operation.failedParentId\">\n        <label class=\"small m-0\" translate>Retried from</label>\n        <span class=\"flex-item-right\">\n          <button\n            class=\"btn btn-default btn-xs\"\n            (click)=\"scrollToRetriedFromOperation(operation.failedParentId)\"\n            title=\"{{ 'Scroll to parent operation.' | translate }}\"\n          >\n            {{ operation.failedParentId }}\n          </button>\n        </span>\n      </li>\n      <li\n        class=\"p-t-4 p-b-4 flex-row separator-bottom\"\n        *ngIf=\"operation.note || operation.description\"\n      >\n        <label class=\"small flex-item-top\" translate>Description</label>\n        <span\n          title=\"{{ operation.note ? operation.note : (operation.description | translate) }}\"\n          class=\"inner-scroll p-l-16 m-b-0 flex-item-right text-truncate-wrap\"\n        >\n          {{ operation.note ? operation.note : (operation.description | translate) }}\n        </span>\n      </li>\n    </ul>\n  </div>\n  <div class=\"col-md-8 fit-h d-flex d-col\">\n    <div class=\"legend form-block\" translate>Operation</div>\n    <pre class=\"inner-scroll p-16 m-b-0 text-pre-wrap\">{{\n      operation.operationPrototype || operation | json\n    }}</pre>\n  </div>\n</div>\n"
            },] }
];
OperationDetailsComponent.propDecorators = {
    operation: [{ type: Input }],
    bulkOperationModalDetailsService: [{ type: Input }],
    showFailedOperation: [{ type: Output }]
};

/**
 * This module allows for displaying the list of single operations and their details.
 */
class OperationsListItemDetailsModule {
}
OperationsListItemDetailsModule.decorators = [
    { type: NgModule, args: [{
                imports: [CoreModule, TooltipModule, StatusFilterModule, BulkSingleOperationsListModule],
                declarations: [OperationDetailsComponent, OperationDetailsTabsComponent],
                exports: [OperationDetailsComponent, OperationDetailsTabsComponent]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { OperationDetailsComponent, OperationDetailsTabsComponent, OperationsListItemDetailsModule };
//# sourceMappingURL=c8y-ngx-components-operations-operations-list-item-details.js.map
