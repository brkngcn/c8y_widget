{"version":3,"file":"c8y-ngx-components-device-shell.js","sources":["../../device-shell/command-templates/command-templates.component.ts","../../device-shell/command-templates/command-templates.directive.ts","../../device-shell/command-templates/command-templates.module.ts","../../device-shell/device-shell.guard.ts","../../device-shell/shared/device-shell.model.ts","../../device-shell/shared/device-shell.service.ts","../../device-shell/shared/device-shell-shared.module.ts","../../device-shell/shell/shell.component.ts","../../device-shell/shell/shell.module.ts","../../device-shell/device-shell.module.ts","../../device-shell/c8y-ngx-components-device-shell.ts"],"sourcesContent":["import { Component, EventEmitter, Injector } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\n\n/* https://stackoverflow.com/a/65290658 */\nexport function rootScopeFactory($injector: Injector) {\n  return $injector.get('$rootScope').$new();\n}\n\n@Component({\n  selector: 'c8y-command-templates',\n  template: `<c8y-command-templates-directive\n    (close)=\"modalRef.hide(); onTemplateSelected.next($event)\"\n    (dismiss)=\"modalRef.hide()\"\n  ></c8y-command-templates-directive>`,\n  providers: [\n    {\n      deps: ['$injector'],\n      provide: '$scope',\n      useFactory: rootScopeFactory\n    }\n  ]\n})\nexport class CommandTemplatesComponent {\n  onTemplateSelected: EventEmitter<object> = new EventEmitter();\n\n  constructor(public modalRef: BsModalRef) {}\n}\n","import { Directive, ElementRef, EventEmitter, Injector, Output } from '@angular/core';\nimport { UpgradeComponent } from '@angular/upgrade/static';\n\n@Directive({\n  selector: 'c8y-command-templates-directive'\n})\nexport class CommandTemplates extends UpgradeComponent {\n  @Output()\n  close: EventEmitter<void>;\n\n  @Output()\n  dismiss: EventEmitter<void>;\n\n  constructor(elementRef: ElementRef, injector: Injector) {\n    super('c8yCommandTemplates', elementRef, injector);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommandTemplatesComponent } from './command-templates.component';\nimport { CommandTemplates } from './command-templates.directive';\n\n@NgModule({\n  declarations: [CommandTemplates, CommandTemplatesComponent],\n  exports: [CommandTemplatesComponent]\n})\nexport class CommandTemplatesModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\n\n@Injectable()\nexport class DeviceShellGuard implements CanActivate {\n  private readonly operation = 'c8y_Command';\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const device = route.data.contextData || route.parent.data.contextData;\n    const supportedOperations = (device && device.c8y_SupportedOperations) || [];\n    return supportedOperations.indexOf(this.operation) >= 0;\n  }\n}\n","export enum CommandDeliveryType {\n  DEFAULT = 'Default',\n  SMS = 'SMS'\n}\n\nexport interface DeliveryType {\n  name: string;\n  default?: boolean;\n}\n\nexport interface Command {\n  id: string;\n  name: string;\n  text: string;\n  deliveryTypes: string[];\n  command: string;\n  category: string;\n}\n","import { Injectable } from '@angular/core';\nimport { IOperation, IResult, OperationService } from '@c8y/client';\nimport { gettext, OptionsService } from '@c8y/ngx-components';\nimport { Command, CommandDeliveryType, DeliveryType } from './device-shell.model';\n\n@Injectable()\nexport class DeviceShellService {\n  constructor(private optionsService: OptionsService, private operationService: OperationService) {}\n\n  getDeliveryTypes(): DeliveryType[] {\n    return [\n      {\n        name: gettext(CommandDeliveryType.DEFAULT),\n        default: true\n      },\n      {\n        name: gettext(CommandDeliveryType.SMS)\n      }\n    ];\n  }\n\n  canSendCommandsViaSMS(): Promise<boolean> {\n    return this.optionsService.getSystemOption('messaging', 'provider', false);\n  }\n\n  createCommandOperation(\n    deviceId: string,\n    command: Command,\n    deliveryType: CommandDeliveryType\n  ): Promise<IResult<IOperation>> {\n    const operation: IOperation = {\n      deviceId,\n      description: gettext('Execute shell command') + (command.name ? `: ${command.name}` : ''),\n      deliveryType: deliveryType === CommandDeliveryType.SMS ? CommandDeliveryType.SMS : undefined,\n      c8y_Command: {\n        text: command.text\n      }\n    };\n    return this.operationService.create(operation);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DeviceShellService } from './device-shell.service';\n\n@NgModule({\n  providers: [DeviceShellService]\n})\nexport class DeviceShellSharedModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IManagedObject, IOperation, IResultList, OperationService } from '@c8y/client';\nimport {\n  AlertService,\n  gettext,\n  ManagedObjectRealtimeService,\n  OperationRealtimeService\n} from '@c8y/ngx-components';\nimport { includes, isEmpty } from 'lodash-es';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { BehaviorSubject, Observable, of, pipe, Subject } from 'rxjs';\nimport { filter, map, startWith, takeUntil } from 'rxjs/operators';\nimport { CommandTemplatesComponent } from '../command-templates';\nimport { Command, CommandDeliveryType, DeliveryType, DeviceShellService } from '../shared';\n\n@Component({\n  selector: 'c8y-device-shell',\n  templateUrl: 'shell.component.html',\n  providers: [OperationRealtimeService, ManagedObjectRealtimeService]\n})\nexport class DeviceShellComponent implements OnInit, OnDestroy {\n  device: IManagedObject = this.route.snapshot.parent.data.contextData;\n  device$: Observable<IManagedObject> = of({} as any);\n  deliveryTypes: Array<DeliveryType & { isSupportedByCommand?: boolean }> = (\n    this.service.getDeliveryTypes() || []\n  ).map(deliveryType => ({ ...deliveryType, isSupportedByCommand: true }));\n  command: Command = {} as Command;\n  smsEnabled: boolean = false;\n  sendingCommand$: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  operations: IResultList<IOperation>;\n  filterPipe = pipe(\n    map((operations: IOperation[]) =>\n      (operations || []).filter((operation: IOperation) => !!operation.c8y_Command)\n    )\n  );\n\n  executeViaLabel = gettext('Execute via ({{deliveryType}})');\n\n  private destroyed$: Subject<void> = new Subject();\n\n  constructor(\n    public service: DeviceShellService,\n    public operationRealtime: OperationRealtimeService,\n    private moRealtime: ManagedObjectRealtimeService,\n    private operationService: OperationService,\n    private route: ActivatedRoute,\n    private modalService: BsModalService,\n    private alertService: AlertService\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.smsEnabled = await this.service.canSendCommandsViaSMS();\n\n    this.device$ = this.moRealtime.onUpdate$(this.device.id).pipe(startWith(this.device));\n\n    this.operations = await this.operationService.list({\n      deviceId: this.device.id,\n      fragmentType: 'c8y_Command',\n      dateFrom: new Date(0).toISOString(),\n      dateTo: new Date().toISOString(),\n      pageSize: 50,\n      withTotalPages: true,\n      revert: true\n    });\n\n    this.operationRealtime\n      .onCreate$(this.device.id)\n      .pipe(takeUntil(this.destroyed$))\n      .subscribe(() => this.alertService.success(gettext('Command sent.')));\n\n    this.operationRealtime\n      .onUpdate$(this.device.id)\n      .pipe(\n        filter(op => op.failureReason !== 'Operation cancelled by user.'), // avoid duplicate alerts\n        takeUntil(this.destroyed$)\n      )\n      .subscribe(() => this.alertService.success(gettext('Command status updated.')));\n  }\n\n  getPredefinedCommand() {\n    const modal: BsModalRef<CommandTemplatesComponent> =\n      this.modalService.show(CommandTemplatesComponent);\n    modal.content.onTemplateSelected.pipe(takeUntil(this.destroyed$)).subscribe(result => {\n      this.command = { ...(result as any).commandTemplate } as Command;\n      this.deliveryTypes = this.deliveryTypes.map(deliveryType => ({\n        ...deliveryType,\n        isSupportedByCommand:\n          isEmpty(this.command.deliveryTypes) ||\n          includes(this.command.deliveryTypes, deliveryType.name)\n      }));\n    });\n  }\n\n  resetSupportedDeliveryTypes(): void {\n    this.deliveryTypes = (this.service.getDeliveryTypes() || []).map(deliveryType => ({\n      ...deliveryType,\n      isSupportedByCommand: true\n    }));\n  }\n\n  async execute(commandDeliveryType): Promise<void> {\n    const useSMS = commandDeliveryType === CommandDeliveryType.SMS;\n    if (useSMS && !this.smsEnabled) {\n      this.alertService.warning(gettext('SMS transport is not configured.'));\n      return;\n    }\n    this.sendingCommand$.next(true);\n\n    await this.service.createCommandOperation(this.device.id, this.command, commandDeliveryType);\n\n    this.command.text = '';\n    this.resetSupportedDeliveryTypes();\n    this.sendingCommand$.next(false);\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed$.next();\n    this.destroyed$.complete();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CoreModule } from '@c8y/ngx-components';\nimport { OperationsTimelineModule } from '@c8y/ngx-components/operations/operations-timeline';\nimport { CommandTemplatesModule } from '../command-templates';\nimport { DeviceShellSharedModule } from '../shared';\nimport { DeviceShellComponent } from './shell.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CoreModule,\n    OperationsTimelineModule,\n    CommandTemplatesModule,\n    DeviceShellSharedModule\n  ],\n  declarations: [DeviceShellComponent],\n  exports: [DeviceShellComponent]\n})\nexport class ShellModule {}\n","import { NgModule } from '@angular/core';\nimport { gettext, HOOK_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { DeviceShellGuard } from './device-shell.guard';\nimport { DeviceShellComponent, ShellModule } from './shell';\n\nconst DEVICE_SHELL_ROUTE: Route = {\n  path: 'shell',\n  context: ViewContext.Device,\n  component: DeviceShellComponent,\n  label: gettext('Shell'),\n  icon: 'terminal',\n  canActivate: [DeviceShellGuard]\n};\n\n@NgModule({\n  imports: [ShellModule],\n  providers: [\n    DeviceShellGuard,\n    {\n      provide: HOOK_ROUTE,\n      useValue: DEVICE_SHELL_ROUTE,\n      multi: true\n    }\n  ]\n})\nexport class DeviceShellModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DeviceShellComponent as ɵb,ShellModule as ɵa} from './shell';"],"names":[],"mappings":"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"}