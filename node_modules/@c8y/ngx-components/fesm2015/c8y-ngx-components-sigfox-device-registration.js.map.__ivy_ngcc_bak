{"version":3,"file":"c8y-ngx-components-sigfox-device-registration.js","sources":["../../sigfox-device-registration/sigfox-provider.service.ts","../../sigfox-device-registration/sigfox-device-registration.component.ts","../../sigfox-device-registration/sigfox-device-registration-button.component.ts","../../sigfox-device-registration/sigfox-device-registration.factory.ts","../../sigfox-device-registration/sigfox-device-registration.module.ts","../../sigfox-device-registration/c8y-ngx-components-sigfox-device-registration.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ApplicationService,\n  FetchClient,\n  IFetchOptions,\n  IManagedObject,\n  InventoryService,\n  IResult,\n  IResultList,\n  ITenantOption,\n  TenantOptionsService\n} from '@c8y/client';\nimport { SigfoxDevice } from './sigfox-device-registration.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { gettext } from '@c8y/ngx-components';\n\nexport enum ErrorName {\n  NoDeviceProtocolsError = 'NoDeviceProtocolsError',\n  NoConnectivitySettingsError = 'NoConnectivitySettingsError',\n  ContractError = 'ContractError',\n  NoContractsError = 'NoContractsError',\n  RegistrationError = 'RegistrationError',\n  DeviceProtocolsFetchError = 'DeviceProtocolsFetchError'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SigfoxProviderService {\n  private readonly baseUrl: string = '/service/sigfox-agent/';\n  private readonly registrationUrl: string = `${this.baseUrl}newDeviceRequest`;\n  private readonly contractsUrl: string = `${this.baseUrl}contract`;\n  private readonly header: any = { 'Content-Type': 'application/json' };\n\n  constructor(\n    private client: FetchClient,\n    private inventoryService: InventoryService,\n    private tenantOptions: TenantOptionsService,\n    private translateService: TranslateService,\n    private applicationService: ApplicationService\n  ) {}\n  async getConnections() {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header\n    };\n    const res = await this.client.fetch(`${this.baseUrl}lns-connection`, options);\n    const data = await res.json();\n\n    if (res.status === 200) {\n      if (data.length === 0) {\n      await this.throwNoConnectivitySettingsError();\n      }\n    } else {\n      await this.throwNoConnectivitySettingsError();\n    }\n    return { res, data };\n  }\n\n  /**\n   * Gets contracts from Sigfox platform.\n   * @param connectionName The name of connection for which contracts will be retrieved\n   * @returns The result list with contract, or throws an error with exception.\n   */\n  async getContracts(connectionName: string): Promise<IResultList<any>> {\n    const options: IFetchOptions = {\n      method: 'GET',\n      headers: this.header,\n      params: {\n        sigfoxConnectionName: connectionName\n      }\n    };\n    const res = await this.client.fetch(this.contractsUrl, options);\n\n    const data = await res.json();\n\n    if (res.status === 200) {\n      if (data.length === 0) {\n        this.throwNoContractsError();\n      }\n    } else {\n      this.throwContractError(data);\n    }\n    return { res, data };\n  }\n\n  async createDevice(device: SigfoxDevice): Promise<IResult<SigfoxDevice>> {\n    const options: IFetchOptions = {\n      method: 'POST',\n      headers: this.header,\n      body: JSON.stringify(device)\n    };\n    const res = await this.client.fetch(this.registrationUrl, options);\n    const data = await res.json();\n\n    if (res.status !== 201) {\n      this.throwRegistrationError(data);\n    }\n    return { res, data };\n  }\n\n  async getAvailableProtocols(\n    filter: object = { withTotalPages: true }\n  ): Promise<IResultList<IManagedObject>> {\n    const query = {\n      __filter: {\n        __and: [\n          { __has: 'c8y_IsDeviceType' },\n          {\n            type: { __in: ['c8y_SigfoxDeviceType', 'c8y_LpwanDeviceType'] }\n          }\n        ]\n      },\n      __orderby: [{ name: 1 }]\n    };\n    const { res, data } = await this.inventoryService.listQuery(query, filter);\n\n    if (res.status === 200) {\n      if (data.length === 0) {\n        this.throwNoDeviceProtocolsError();\n      }\n    } else {\n      this.throwDeviceProtocolsFetchError();\n    }\n\n    return { res, data };\n  }\n\n  async hasConnectivitySettings(): Promise<boolean> {\n    const option: ITenantOption = {\n      category: 'sigfox-agent',\n      key: 'provider.token'\n    };\n    try {\n      await this.tenantOptions.detail(option);\n      return true;\n    } catch (e) {\n      await this.throwNoConnectivitySettingsError();\n    }\n  }\n\n  private async throwNoConnectivitySettingsError() {\n    const error = new Error();\n    error.name = ErrorName.NoConnectivitySettingsError;\n    const hasAdminRight = (await this.applicationService.isAvailable('administration')).data;\n    if (hasAdminRight) {\n      error.message = this.translateService.instant(\n        gettext(\n          `Connectivity settings are not configured. Configure them in the Administration app under <a href=\"{{ link }}\">Settings</a>.`\n        ),\n        {\n          link: '/apps/administration/index.html#/connectivitySettings/sigfox_provider_settings'\n        }\n      );\n    } else {\n      error.message = gettext(\n        'Connectivity settings are not configured. Contact the administrator.'\n      );\n    }\n\n    throw error;\n  }\n\n  private throwRegistrationError(data: { message: string }) {\n    const error = new Error();\n    error.name = ErrorName.RegistrationError;\n    error.message = data.message;\n    throw error;\n  }\n\n  private throwDeviceProtocolsFetchError() {\n    const error = new Error();\n    error.name = ErrorName.DeviceProtocolsFetchError;\n    error.message = gettext('Could not load device protocols.');\n    throw error;\n  }\n\n  private throwNoDeviceProtocolsError() {\n    const error = new Error();\n    error.name = ErrorName.NoDeviceProtocolsError;\n    error.message = this.translateService.instant(\n      gettext(\n        `No device protocols configured. Create a Sigfox device protocol in <a href=\"{{ link }}\">Device protocols</a>.`\n      ),\n      {\n        link: '/apps/devicemanagement/#/deviceprotocols'\n      }\n    );\n    throw error;\n  }\n\n  private throwContractError(data: { message: string }) {\n    const error = new Error();\n    error.name = ErrorName.ContractError;\n    error.message = data.message;\n    throw error;\n  }\n\n  private throwNoContractsError() {\n    const error = new Error();\n    error.name = ErrorName.NoContractsError;\n    error.message = gettext(\n      'No contracts found. New contracts must be created via the Sigfox platform.'\n    );\n    throw error;\n  }\n}\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { gettext, C8yStepper } from '@c8y/ngx-components';\nimport { AbstractControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, defer, forkJoin, from, of, Subject, throwError } from 'rxjs';\nimport { CdkStep } from '@angular/cdk/stepper';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { SigfoxProviderService, ErrorName } from './sigfox-provider.service';\nimport {\n  catchError,\n  map,\n  switchMap,\n  shareReplay,\n  takeUntil,\n  mergeMap\n} from 'rxjs/operators';\nimport { cloneDeep, uniq } from 'lodash-es';\nimport { SigfoxDevice, SigfoxDeviceFormly } from './sigfox-device-registration.model';\nimport { TranslateService } from '@ngx-translate/core';\n\ntype State =\n  | 'loadPending'\n  | 'loadSuccess'\n  | 'loadError'\n  | 'registrationPending'\n  | 'registrationSuccess'\n  | 'registrationError';\n\n@Component({\n  selector: 'c8y-sigfox-device-registration',\n  templateUrl: 'sigfox-device-registration.component.html'\n})\nexport class SigfoxDeviceRegistrationComponent {\n  stepper: C8yStepper;\n  readonly PAGING: object = {\n    withTotalPages: true,\n    pageSize: 10\n  };\n\n  form = new FormGroup({});\n  model: SigfoxDeviceFormly = {} as any;\n  protocols$ = this.getProtocols$();\n  connections$ = this.getConnections$();\n  unsubscribe$: Subject<void> = new Subject();\n\n  load$ = this.connections$.pipe(\n    catchError((error: Error) => of(error)),\n    switchMap(connections => {\n      if (connections instanceof Error && connections.name === ErrorName.NoConnectivitySettingsError) {\n        return of([connections]);\n      }\n      return forkJoin([\n        of(connections),\n        this.protocols$.pipe(catchError((error: Error) => of(error)))\n      ]);\n    }),\n    map(results => {\n      return results.filter(result => {\n        return result instanceof Error;\n      });\n    }),\n    switchMap(errors => {\n      return errors.length === 0 ? of([]) : throwError(errors);\n    })\n  );\n\n  fields: FormlyFieldConfig[] = [\n    {\n      key: 'id',\n      type: 'string',\n      templateOptions: {\n        placeholder: 'FED987',\n        label: gettext('ID'),\n        required: true,\n        pattern: '(0x){0,1}[0-9A-F]+(h){0,1}'\n      },\n      validation: {\n        messages: {\n          pattern: gettext('Must be a valid hexadecimal number.')\n        }\n      }\n    },\n    {\n      key: 'pac',\n      type: 'string',\n      templateOptions: {\n        placeholder: 'FEDCBA9876543210',\n        label: gettext('PAC'),\n        required: true,\n        pattern: '^([a-fA-F0-9]{16})$'\n      },\n      validation: {\n        messages: {\n          pattern: gettext('Must be a valid 16 digit hexadecimal number.')\n        }\n      }\n    },\n    {\n      key: 'connection',\n      type: 'typeahead',\n      templateOptions: {\n        label: gettext('Connection'),\n        required: true,\n        c8yForOptions: this.connections$,\n        displayProperty: 'name',\n        valueProperties: ['name']\n      }\n    },\n    {\n      key: 'contract',\n      type: 'typeahead',\n      templateOptions: {\n        label: gettext('Contract'),\n        required: true,\n        placeholder: 'Free contract_25',\n        displayProperty: 'name',\n        valueProperties: ['id'],\n        description: gettext('Only active contracts with free slots are displayed.')\n      },\n      hooks: {\n        onInit: field => {\n          const connectionControl = field.form.get('connection');\n          connectionControl.valueChanges\n          .pipe(\n            takeUntil(this.unsubscribe$),\n            mergeMap(() => this.getContracts$(this.form.get('connection').value.name))\n          )\n          .subscribe(\n            profiles => {\n              field.templateOptions.c8yForOptions = of(profiles);\n              field.formControl.setValue(null);\n            },\n            error => {\n              field.form.controls.contract.setErrors({ contract: true });\n              field.validators.contract.message = error.message;\n            }\n          );\n        }\n      },\n      validators: {\n        contract: {\n          expression: (control: AbstractControl) => {\n            return control.status === 'VALID';\n          },\n          message: () => '',\n        },\n      }\n    },\n    {\n      key: 'deviceType',\n      type: 'typeahead',\n      templateOptions: {\n        label: gettext('Device protocol'),\n        required: true,\n        c8yForOptions: this.protocols$,\n        displayProperty: 'name',\n        valueProperties: ['id', 'name']\n      }\n    },\n    {\n      key: 'productCertificate',\n      type: 'string',\n      templateOptions: {\n        placeholder: 'P_001F_EDCB_01',\n        label: gettext('Product certificate key'),\n        pattern: 'P_[0-9A-F]{4}_[0-9A-F]{4}_[0-9A-F]{2}',\n        description: gettext(\n          'If no product certificate key is specified, the device is considered a prototype.'\n        )\n      },\n      validation: {\n        messages: {\n          pattern: (error, field: FormlyFieldConfig) =>\n            this.translateService.instant(\n              gettext('Must be a valid product certificate key, for example, {{ example }}'),\n              { example: 'P_001F_EDCB_01' }\n            )\n        }\n      }\n    }\n  ];\n\n  registrationStepLabels = {\n    next: gettext('Register')\n  };\n  finalStepLabels = {\n    back: gettext('Close')\n  };\n\n  state: State = 'loadPending';\n  errors$ = new BehaviorSubject<Error[]>([]);\n  errorMessages$ = this.errors$.pipe(\n    map(errors => errors.map(error => error.message)),\n    map(messages => uniq(messages))\n  );\n  constructor(\n    public bsModalRef: BsModalRef,\n    private sigfoxService: SigfoxProviderService,\n    private translateService: TranslateService\n  ) {\n    this.load$.subscribe(\n      () => {\n        this.state = 'loadSuccess';\n      },\n      errors => {\n        this.state = 'loadError';\n        this.errors$.next(errors);\n      }\n    );\n  }\n\n  async create(event: { stepper: C8yStepper; step: CdkStep }) {\n    this.state = 'registrationPending';\n    const sigfoxDevice = this.getSigfoxDeviceToSend();\n    try {\n      await this.sigfoxService.createDevice(sigfoxDevice);\n      this.state = 'registrationSuccess';\n    } catch (error) {\n      this.state = 'registrationError';\n      this.errors$.next([error]);\n    }\n\n    event.stepper.next();\n  }\n\n  getSigfoxDeviceToSend() {\n    const sigfoxDevice: SigfoxDevice = cloneDeep(this.model);\n    sigfoxDevice.lnsConnectionName = this.model.connection.name;\n    sigfoxDevice.contractId = this.model.contract.id;\n    sigfoxDevice.prototype = !sigfoxDevice.productCertificate;\n    delete (sigfoxDevice as any).contract;\n    delete (sigfoxDevice as any).connection;\n    return sigfoxDevice;\n  }\n\n  getContracts$(name) {\n    return defer(() => from(this.sigfoxService.getContracts(name))).pipe(shareReplay(1));\n  }\n\n  getProtocols$() {\n    return defer(() => from(this.sigfoxService.getAvailableProtocols())).pipe(shareReplay(1));\n  }\n\n  getConnections$() {\n    return defer(() => from(this.sigfoxService.getConnections())).pipe(shareReplay(1));\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n}\n","import { Component } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { SigfoxDeviceRegistrationComponent } from './sigfox-device-registration.component';\n@Component({\n  selector: 'c8y-sigfox-registration',\n  templateUrl: 'sigfox-device-registration-button.component.html'\n})\nexport class SigfoxDeviceRegistrationButtonComponent {\n  constructor(private modalService: BsModalService) {}\n\n  open() {\n    this.modalService.show(SigfoxDeviceRegistrationComponent, {\n      class: 'modal-sm',\n      ignoreBackdropClick: true\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TenantUiService } from '@c8y/ngx-components';\nimport { SigfoxDeviceRegistrationButtonComponent } from './sigfox-device-registration-button.component';\nimport { RegisterDeviceFactory, RegisterDeviceItem } from '@c8y/ngx-components/register-device';\n@Injectable()\nexport class SigfoxDeviceRegistrationFactory implements RegisterDeviceFactory {\n  constructor(private tenantService: TenantUiService) {}\n\n  get() {\n    const items: RegisterDeviceItem[] = [];\n    if (this.tenantService.isMicroserviceSubscribedInCurrentTenant('sigfox-agent')) {\n      items.push({\n        template: SigfoxDeviceRegistrationButtonComponent,\n        priority: 98,\n        category: 'single'\n      } as RegisterDeviceItem);\n    }\n    return items;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule, CoreModule } from '@c8y/ngx-components';\nimport { HOOK_DEVICE_REGISTRATION } from '@c8y/ngx-components/register-device';\nimport { SigfoxDeviceRegistrationButtonComponent } from './sigfox-device-registration-button.component';\nimport { SigfoxDeviceRegistrationComponent } from './sigfox-device-registration.component';\nimport { SigfoxDeviceRegistrationFactory } from './sigfox-device-registration.factory';\nimport { SigfoxProviderService } from './sigfox-provider.service';\n\n@NgModule({\n  imports: [CoreModule, CommonModule],\n  declarations: [SigfoxDeviceRegistrationButtonComponent, SigfoxDeviceRegistrationComponent],\n  providers: [\n    {\n      provide: HOOK_DEVICE_REGISTRATION,\n      useClass: SigfoxDeviceRegistrationFactory,\n      multi: true\n    },\n    SigfoxProviderService\n  ]\n})\nexport class SigfoxDeviceRegistrationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {SigfoxProviderService as ɵa} from './sigfox-provider.service';"],"names":[],"mappings":"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"}