{"version":3,"file":"c8y-ngx-components-operations-operations-list.js","sources":["../../operations/operations-list/operations-list.service.ts","../../operations/operations-list/operations-list.component.ts","../../operations/operations-list/operations-list-item.component.ts","../../operations/operations-list/operations-list.module.ts","../../operations/operations-list/c8y-ngx-components-operations-operations-list.ts"],"sourcesContent":["import { Injectable, Optional } from '@angular/core';\nimport { IOperation, OperationService, SmartRulesService } from '@c8y/client';\nimport { Ng1SmartRulesService } from '@c8y/ngx-components/upgrade';\n\n@Injectable()\nexport class OperationsListService {\n  constructor(\n    private operationService: OperationService,\n    private smartRulesService: SmartRulesService,\n    @Optional() private ng1SmartRulesService: Ng1SmartRulesService\n  ) {}\n\n  getOperations(customFilter = {}) {\n    const filter = {\n      withTotalPages: true,\n      withDeleted: true,\n      pageSize: 50,\n      dateFrom: new Date(0).toISOString(),\n      revert: true,\n      ...customFilter\n    };\n\n    return this.operationService.list(filter);\n  }\n\n  isSmartRulesMicroserviceAvailable() {\n    return this.smartRulesService.isMicroserviceAvailable();\n  }\n\n  getSmartRulesCreatePermissions() {\n    if (this.ng1SmartRulesService && this.ng1SmartRulesService.permissionsCfgs) {\n      return this.ng1SmartRulesService.permissionsCfgs.create;\n    }\n  }\n\n  async createSmartRule(operation: Partial<IOperation>) {\n    if (this.ng1SmartRulesService) {\n      return await this.ng1SmartRulesService.addNewForOutputOperationWithUI(operation);\n    }\n  }\n}\n","import { Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { flatten } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { IOperation, IResultList } from '@c8y/client';\nimport { gettext, OperationRealtimeService } from '@c8y/ngx-components';\nimport { StatusFilterComponent } from '@c8y/ngx-components/operations/status-filter';\nimport {\n  StatusOption,\n  OperationStatusOptionsMap,\n  OPERATION_STATUS_OPTIONS_MAP\n} from '@c8y/ngx-components/operations/shared';\nimport { OperationsListService } from './operations-list.service';\n\n@Component({\n  selector: 'c8y-operations-list',\n  templateUrl: 'operations-list.component.html',\n  providers: [OperationRealtimeService]\n})\nexport class OperationsListComponent {\n  deviceId: string | number = this.route.snapshot.parent.data.contextData?.id;\n  OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap = OPERATION_STATUS_OPTIONS_MAP;\n\n  title: string;\n  refreshLoading: boolean = false;\n  statusFilter$: BehaviorSubject<StatusOption[]> = new BehaviorSubject(null);\n  reload$: BehaviorSubject<void> = new BehaviorSubject(null);\n  @ViewChild('statusFilter', { static: true }) statusFilter: StatusFilterComponent;\n\n  operations$: Observable<IResultList<IOperation>> = combineLatest(\n    this.statusFilter$,\n    this.reload$\n  ).pipe(\n    tap(() => {\n      this.refreshLoading = true;\n    }),\n    switchMap(([statusFilters]) => this.filter(statusFilters)),\n    tap(() => {\n      this.refreshLoading = false;\n    }),\n    shareReplay(1)\n  );\n\n  constructor(\n    public realtime: OperationRealtimeService,\n    private operationsListService: OperationsListService,\n    private route: ActivatedRoute\n  ) {\n    this.title = this.route.snapshot.parent.data.contextData\n      ? this.route.snapshot.parent.data.contextData.name\n      : gettext('Device control');\n  }\n\n  filter(statusFilters: StatusOption[]) {\n    const status =\n      statusFilters && statusFilters.length > 0\n        ? {\n            status: flatten(statusFilters.map(statusFilter => statusFilter.status))\n          }\n        : {};\n\n    return this.getOperations(status);\n  }\n\n  getOperations(filter?) {\n    const queryFilter = this.deviceId ? { ...filter, deviceId: this.deviceId } : filter;\n    return this.operationsListService.getOperations(queryFilter);\n  }\n\n  compareOperations(operationA: IOperation, operationB: IOperation): number {\n    return (\n      new Date(operationA.creationTime).getTime() - new Date(operationB.creationTime).getTime()\n    );\n  }\n}\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { IOperation, OperationStatus } from '@c8y/client';\nimport { gettext, ListItemComponent } from '@c8y/ngx-components';\nimport { BulkOperationListItemService } from '@c8y/ngx-components/operations/bulk-operation-list-item';\nimport {\n  OperationsService,\n  OperationStatusOptionsMap,\n  OPERATION_STATUS_OPTIONS_MAP\n} from '@c8y/ngx-components/operations/shared';\nimport { OperationsListService } from './operations-list.service';\n\n@Component({\n  selector: 'c8y-operations-list-item',\n  templateUrl: './operations-list-item.component.html'\n})\nexport class OperationsListItemComponent implements OnInit {\n  @Input()\n  operation: Partial<IOperation>;\n  @Input()\n  collapsed: boolean = true;\n  @Input()\n  readOnly: boolean = false;\n  @Input()\n  noExpandToggle: boolean = false;\n  @ViewChild('listItem', { static: true }) listItem: ListItemComponent;\n  refreshLoading = false;\n  OPERATION_STATUS = OperationStatus;\n  OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap = OPERATION_STATUS_OPTIONS_MAP;\n  deviceId: string | number =\n    this.route.snapshot.parent?.data.contextData?.id ||\n    this.route.snapshot.firstChild?.data.contextData?.id;\n  isSmartRulesMicroserviceAvailable: boolean = false;\n  inventoryPermissions: string[];\n  smartRuleAdminPermissions: string[];\n  operationTitle: string;\n\n  constructor(\n    public bulkOperationListItemService: BulkOperationListItemService,\n    public sharedService: OperationsService,\n    public operationsListService: OperationsListService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {}\n\n  async ngOnInit() {\n    this.isSmartRulesMicroserviceAvailable =\n      await this.operationsListService.isSmartRulesMicroserviceAvailable();\n\n    this.operationTitle =\n      this.operation.c8y_Command?.text ||\n      this.operation.description ||\n      gettext('No command text or description available');\n\n    const smartRulesCreatePermissions = this.operationsListService.getSmartRulesCreatePermissions();\n    if (smartRulesCreatePermissions) {\n      this.inventoryPermissions = smartRulesCreatePermissions[0].anyRole;\n      this.smartRuleAdminPermissions = smartRulesCreatePermissions[1].anyRole;\n    }\n  }\n\n  createCustomizedBulkOperation($event?: Event) {\n    if ($event) {\n      $event.stopPropagation();\n    }\n\n    this.router.navigateByUrl(`/devicecontrol/single/create-bulk/${this.operation.id}`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CoreModule, gettext, HOOK_ROUTE, Route, ViewContext } from '@c8y/ngx-components';\nimport { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';\nimport { OperationsListItemDetailsModule } from '@c8y/ngx-components/operations/operations-list-item-details';\nimport { BulkOperationListItemService } from '@c8y/ngx-components/operations/bulk-operation-list-item';\nimport { OperationsSharedModule } from '@c8y/ngx-components/operations/shared';\n\nimport { OperationsListComponent } from './operations-list.component';\nimport { OperationsListItemComponent } from './operations-list-item.component';\nimport { OperationsListService } from './operations-list.service';\n\nexport const singleOperationListRoutes: Route[] = [\n  {\n    path: 'devicecontrol/single',\n    component: OperationsListComponent\n  }\n];\n\n/**\n * This module allows for displaying the list item details of single and bulk operations.\n */\n@NgModule({\n  imports: [\n    CoreModule,\n    StatusFilterModule,\n    OperationsListItemDetailsModule,\n    OperationsSharedModule,\n    TooltipModule,\n    RouterModule.forChild(singleOperationListRoutes)\n  ],\n  declarations: [OperationsListComponent, OperationsListItemComponent],\n  exports: [OperationsListComponent, OperationsListItemComponent],\n  providers: [\n    OperationsListService,\n    BulkOperationListItemService,\n    {\n      provide: HOOK_ROUTE,\n      useValue: [\n        {\n          context: ViewContext.Device,\n          path: 'control',\n          component: OperationsListComponent,\n          label: gettext('Control'),\n          icon: 'c8y-icon c8y-icon-device-control',\n          priority: 600\n        }\n      ] as Route[],\n      multi: true\n    }\n  ]\n})\nexport class OperationsListModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}