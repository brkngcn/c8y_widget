import { Component, Input, NgModule } from '@angular/core';
import { OperationRealtimeService, CoreModule } from '@c8y/ngx-components';
import { OPERATION_STATUS_OPTIONS_MAP, OperationsService, OperationsSharedModule } from '@c8y/ngx-components/operations/shared';
import { pipe } from 'rxjs';
import { tap } from 'rxjs/operators';
import { CommonModule } from '@angular/common';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { TooltipModule } from 'ngx-bootstrap/tooltip';

class OperationsTimelineComponent {
    constructor(realtime, operationsService) {
        this.realtime = realtime;
        this.operationsService = operationsService;
        this.filterPipe = pipe(tap());
        this.footerTemplates = [];
        this.propertiesToHide = [];
        this.OPERATION_STATUS_OPTIONS_MAP = OPERATION_STATUS_OPTIONS_MAP;
    }
}
OperationsTimelineComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operations-timeline',
                template: "<div class=\"card\" *ngIf=\"!operations?.data || !operations?.data?.length\">\n  <div class=\"c8y-empty-state text-left\">\n    <h1 class=\"c8y-icon c8y-icon-energy c8y-icon-duocolor m-l-8\"></h1>\n    <p>{{ 'No recent operations found.' | translate }}</p>\n  </div>\n</div>\n\n<c8y-list-group>\n  <c8y-li-timeline\n    *c8yFor=\"\n      let op of operations;\n      pipe: filterPipe;\n      realtime: realtime;\n      realtimeOptions: { entityOrId: sourceId }\n    \"\n  >\n    {{ op.creationTime | date: 'medium' }}\n    <c8y-li #li (click)=\"li.toggleCollapsed()\">\n      <c8y-li-icon>\n        <i\n          [c8yIcon]=\"OPERATION_STATUS_OPTIONS_MAP[op.status].icon\"\n          [ngClass]=\"OPERATION_STATUS_OPTIONS_MAP[op.status].styleClass\"\n          [tooltip]=\"op.status | translate\"\n        ></i>\n      </c8y-li-icon>\n      <c8y-li-body>\n        <div class=\"flex-row\">\n          <div>\n            {{ op.status | translate }} <br class=\"visible-xs visible-sm\" />\n            <ng-container\n              *ngIf=\"bodyTemplate; else defaultBody\"\n              [ngTemplateOutlet]=\"bodyTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: op }\"\n            ></ng-container>\n            <ng-template #defaultBody>\n              <small>{{ op.description }}</small>\n            </ng-template>\n          </div>\n          <div class=\"flex-item-right showOnHover\" *ngIf=\"op.status === 'PENDING'\">\n            <button\n              class=\"btn btn-clean\"\n              title=\"{{ 'Cancel operation' | translate }}\"\n              (click)=\"$event.stopPropagation(); operationsService.cancel(op)\"\n            >\n              <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n            </button>\n          </div>\n        </div>\n      </c8y-li-body>\n\n      <c8y-li-collapse>\n        <div class=\"legend form-block\" translate>Details</div>\n        <ul class=\"list-unstyled small\">\n          <li\n            class=\"p-t-4 p-b-4 flex-row separator-bottom\"\n            *ngFor=\"let prop of operationsService.getStandardKeys(op) | keyvalue\"\n          >\n            <label class=\"small m-b-0 m-r-8 flex-item-v-start\">\n              {{ prop.value | translate }}\n            </label>\n            <span class=\"flex-item-right\">\n              {{ op[prop.key] | translate }}\n            </span>\n          </li>\n          <li\n            class=\"p-t-4 p-b-4 flex-row separator-bottom\"\n            *ngFor=\"let key of operationsService.getNonStandardKeys(op, propertiesToHide)\"\n          >\n            <label class=\"small m-b-0 m-r-8 flex-item-v-start\">\n              {{ key | humanize | translate }}\n            </label>\n            <span class=\"flex-item-right text-code\">\n              {{ op[key] | json }}\n            </span>\n          </li>\n        </ul>\n        <ng-container\n          *ngFor=\"let footer of footerTemplates\"\n          [ngTemplateOutlet]=\"footer\"\n          [ngTemplateOutletContext]=\"{ $implicit: op }\"\n        ></ng-container>\n      </c8y-li-collapse>\n    </c8y-li>\n  </c8y-li-timeline>\n</c8y-list-group>\n"
            },] }
];
OperationsTimelineComponent.ctorParameters = () => [
    { type: OperationRealtimeService },
    { type: OperationsService }
];
OperationsTimelineComponent.propDecorators = {
    operations: [{ type: Input }],
    sourceId: [{ type: Input }],
    filterPipe: [{ type: Input }],
    bodyTemplate: [{ type: Input }],
    footerTemplates: [{ type: Input }],
    propertiesToHide: [{ type: Input }]
};

class OperationsTimelineModule {
}
OperationsTimelineModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, CoreModule, CollapseModule, TooltipModule, OperationsSharedModule],
                declarations: [OperationsTimelineComponent],
                exports: [OperationsTimelineComponent]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { OperationsTimelineComponent, OperationsTimelineModule };
//# sourceMappingURL=c8y-ngx-components-operations-operations-timeline.js.map
