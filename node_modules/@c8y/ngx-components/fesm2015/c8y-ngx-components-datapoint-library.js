import { InjectionToken, Component, Optional, Inject, NgModule } from '@angular/core';
import { gettext, HumanizePipe, C8yValidators, AlertService, ColorService, ModalService, HOOK_ROUTE, ViewContext, HOOK_NAVIGATOR_NODES, NavigatorNode, CoreModule } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { __awaiter } from 'tslib';
import { Validators, FormBuilder } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { InventoryService } from '@c8y/client';
import { TranslateService } from '@ngx-translate/core';
import { get } from 'lodash-es';
import { DatapointParserService } from '@c8y/ngx-components/datapoint-library/services';
import { BehaviorSubject, pipe } from 'rxjs';
import { tap, switchMap, shareReplay, map } from 'rxjs/operators';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from '@c8y/client';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@c8y/ngx-components';
import * as ɵngcc5 from '@ngx-translate/core';
import * as ɵngcc6 from '@c8y/ngx-components/datapoint-library/services';
import * as ɵngcc7 from '@angular/common';
import * as ɵngcc8 from 'ngx-bootstrap/popover';
import * as ɵngcc9 from 'ngx-bootstrap/dropdown';

function DatapointLibraryDetailsComponent_c8y_title_0_small_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2("", ctx_r3.formGroup.value == null ? null : ctx_r3.formGroup.value.fragment, " / ", ctx_r3.formGroup.value == null ? null : ctx_r3.formGroup.value.series, "");
} }
function DatapointLibraryDetailsComponent_c8y_title_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-title");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵtemplate(2, DatapointLibraryDetailsComponent_c8y_title_0_small_2_Template, 2, 2, "small", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r0.formGroup.value == null ? null : ctx_r0.formGroup.value.label, " ");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r0.formGroup.value == null ? null : ctx_r0.formGroup.value.fragment) && (ctx_r0.formGroup.value == null ? null : ctx_r0.formGroup.value.series));
} }
function DatapointLibraryDetailsComponent_div_8_div_37_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 21);
    ɵngcc0.ɵɵelementStart(1, "div", 22);
    ɵngcc0.ɵɵelementStart(2, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(3, "label", 38);
    ɵngcc0.ɵɵelement(4, "input", 39);
    ɵngcc0.ɵɵelement(5, "span");
    ɵngcc0.ɵɵelementStart(6, "span", 13);
    ɵngcc0.ɵɵtext(7, "Globally available");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "button", 40);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "i", 41);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("popover", ɵngcc0.ɵɵpipeBind1(9, 3, "Will make this entry available to all users on the tenant if checked."))("outsideClick", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
} }
const _c0 = function () { return { example: "c8y_Temperature" }; };
const _c1 = function () { return { example: "T" }; };
const _c2 = function (a0) { return { "has-error": a0 }; };
const _c3 = function () { return { example: 0 }; };
const _c4 = function () { return { example: 100 }; };
const _c5 = function () { return { example: "\u00BAC" }; };
const _c6 = function () { return { example: 25 }; };
const _c7 = function () { return { example: 50 }; };
const _c8 = function () { return { example: 75 }; };
function DatapointLibraryDetailsComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵelementStart(1, "div", 10);
    ɵngcc0.ɵɵelementStart(2, "div", 11);
    ɵngcc0.ɵɵelementStart(3, "div", 12);
    ɵngcc0.ɵɵelementStart(4, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(5, "label", 13);
    ɵngcc0.ɵɵtext(6, "Color");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 14);
    ɵngcc0.ɵɵelementStart(8, "div", 15);
    ɵngcc0.ɵɵelement(9, "input", 16);
    ɵngcc0.ɵɵelement(10, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "c8y-form-group", 17);
    ɵngcc0.ɵɵelementStart(12, "label", 13);
    ɵngcc0.ɵɵtext(13, "Label");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(14, "input", 18);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelement(16, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(18, "label", 13);
    ɵngcc0.ɵɵtext(19, "Description");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(20, "textarea", 20);
    ɵngcc0.ɵɵpipe(21, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(22, "div", 21);
    ɵngcc0.ɵɵelementStart(23, "div", 22);
    ɵngcc0.ɵɵelementStart(24, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(25, "label", 13);
    ɵngcc0.ɵɵtext(26, "Fragment");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(27, "input", 23);
    ɵngcc0.ɵɵpipe(28, "translate");
    ɵngcc0.ɵɵelement(29, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(30, "div", 22);
    ɵngcc0.ɵɵelementStart(31, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(32, "label", 13);
    ɵngcc0.ɵɵtext(33, "Series");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(34, "input", 24);
    ɵngcc0.ɵɵpipe(35, "translate");
    ɵngcc0.ɵɵelement(36, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(37, DatapointLibraryDetailsComponent_div_8_div_37_Template, 11, 5, "div", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(38, "div", 26);
    ɵngcc0.ɵɵelementStart(39, "div", 11);
    ɵngcc0.ɵɵelementStart(40, "fieldset", 27);
    ɵngcc0.ɵɵelementStart(41, "legend", 13);
    ɵngcc0.ɵɵtext(42, "Preview");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(43, "c8y-range-display", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(44, "fieldset", 27);
    ɵngcc0.ɵɵelementStart(45, "legend", 13);
    ɵngcc0.ɵɵtext(46, "Range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(47, "div", 29);
    ɵngcc0.ɵɵelementStart(48, "div", 30);
    ɵngcc0.ɵɵelementStart(49, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(50, "label", 13);
    ɵngcc0.ɵɵtext(51, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(52, "input", 32);
    ɵngcc0.ɵɵpipe(53, "translate");
    ɵngcc0.ɵɵelement(54, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(55, "div", 30);
    ɵngcc0.ɵɵelementStart(56, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(57, "label", 13);
    ɵngcc0.ɵɵtext(58, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(59, "input", 33);
    ɵngcc0.ɵɵpipe(60, "translate");
    ɵngcc0.ɵɵelement(61, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(62, "div", 21);
    ɵngcc0.ɵɵelementStart(63, "div", 30);
    ɵngcc0.ɵɵelementStart(64, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(65, "label", 13);
    ɵngcc0.ɵɵtext(66, "Unit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(67, "input", 34);
    ɵngcc0.ɵɵpipe(68, "translate");
    ɵngcc0.ɵɵelement(69, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(70, "div", 30);
    ɵngcc0.ɵɵelementStart(71, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(72, "label", 13);
    ɵngcc0.ɵɵtext(73, "Target");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(74, "input", 35);
    ɵngcc0.ɵɵpipe(75, "translate");
    ɵngcc0.ɵɵelement(76, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(77, "fieldset", 36);
    ɵngcc0.ɵɵelementStart(78, "legend", 13);
    ɵngcc0.ɵɵtext(79, "Yellow range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(80, "div", 21);
    ɵngcc0.ɵɵelementStart(81, "div", 30);
    ɵngcc0.ɵɵelementStart(82, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(83, "label", 13);
    ɵngcc0.ɵɵtext(84, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(85, "input", 32);
    ɵngcc0.ɵɵpipe(86, "translate");
    ɵngcc0.ɵɵelement(87, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(88, "div", 30);
    ɵngcc0.ɵɵelementStart(89, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(90, "label", 13);
    ɵngcc0.ɵɵtext(91, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(92, "input", 33);
    ɵngcc0.ɵɵpipe(93, "translate");
    ɵngcc0.ɵɵelement(94, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(95, "fieldset", 37);
    ɵngcc0.ɵɵelementStart(96, "legend", 13);
    ɵngcc0.ɵɵtext(97, "Red range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(98, "div", 21);
    ɵngcc0.ɵɵelementStart(99, "div", 30);
    ɵngcc0.ɵɵelementStart(100, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(101, "label", 13);
    ɵngcc0.ɵɵtext(102, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(103, "input", 32);
    ɵngcc0.ɵɵpipe(104, "translate");
    ɵngcc0.ɵɵelement(105, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(106, "div", 30);
    ɵngcc0.ɵɵelementStart(107, "c8y-form-group", 31);
    ɵngcc0.ɵɵelementStart(108, "label", 13);
    ɵngcc0.ɵɵtext(109, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(110, "input", 33);
    ɵngcc0.ɵɵpipe(111, "translate");
    ɵngcc0.ɵɵelement(112, "c8y-messages", 19);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(10);
    ɵngcc0.ɵɵstyleProp("background-color", ctx_r1.formGroup.value == null ? null : ctx_r1.formGroup.value.color);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(15, 34, "e.g. Temperature"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.label == null ? null : ctx_r1.formGroup.controls.label.touched) && (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.label == null ? null : ctx_r1.formGroup.controls.label.errors));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(21, 36, "e.g. Ambient Temperature in Celsius"));
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(28, 38, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(68, _c0)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.fragment == null ? null : ctx_r1.formGroup.controls.fragment.touched) && (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.fragment == null ? null : ctx_r1.formGroup.controls.fragment.errors));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(35, 41, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(69, _c1)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.series == null ? null : ctx_r1.formGroup.controls.series.touched) && (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.series == null ? null : ctx_r1.formGroup.controls.series.errors));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.config == null ? null : ctx_r1.config.showCheckboxForGlobalFragment);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("config", ctx_r1.rangeConfig);
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(70, _c2, (ctx_r1.range == null ? null : ctx_r1.range.touched) && (ctx_r1.range == null ? null : ctx_r1.range.controls == null ? null : ctx_r1.range.controls.min == null ? null : ctx_r1.range.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(53, 44, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(72, _c3)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r1.range == null ? null : ctx_r1.range.touched) && (ctx_r1.range.controls == null ? null : ctx_r1.range.controls.min == null ? null : ctx_r1.range.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(73, _c2, (ctx_r1.range == null ? null : ctx_r1.range.touched) && (ctx_r1.range == null ? null : ctx_r1.range.controls == null ? null : ctx_r1.range.controls.max == null ? null : ctx_r1.range.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(60, 47, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(75, _c4)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r1.range == null ? null : ctx_r1.range.touched) && (ctx_r1.range.controls == null ? null : ctx_r1.range.controls.max == null ? null : ctx_r1.range.controls.max.errors));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(68, 50, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(76, _c5)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.unit == null ? null : ctx_r1.formGroup.controls.unit.touched) && (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.unit == null ? null : ctx_r1.formGroup.controls.unit.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(77, _c2, ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.target == null ? null : ctx_r1.formGroup.controls.target.touched)) && (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.target == null ? null : ctx_r1.formGroup.controls.target.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(75, 53, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(79, _c6)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.target == null ? null : ctx_r1.formGroup.controls.target.touched)) && (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.target == null ? null : ctx_r1.formGroup.controls.target.errors));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(80, _c2, ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.yellowRange == null ? null : ctx_r1.yellowRange.touched)) && (ctx_r1.yellowRange == null ? null : ctx_r1.yellowRange.controls == null ? null : ctx_r1.yellowRange.controls.min == null ? null : ctx_r1.yellowRange.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(86, 56, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(82, _c7)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.yellowRange == null ? null : ctx_r1.yellowRange.touched)) && (ctx_r1.yellowRange.controls == null ? null : ctx_r1.yellowRange.controls.min == null ? null : ctx_r1.yellowRange.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(83, _c2, ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.yellowRange == null ? null : ctx_r1.yellowRange.touched)) && (ctx_r1.yellowRange == null ? null : ctx_r1.yellowRange.controls == null ? null : ctx_r1.yellowRange.controls.max == null ? null : ctx_r1.yellowRange.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(93, 59, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(85, _c8)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.yellowRange == null ? null : ctx_r1.yellowRange.touched)) && (ctx_r1.yellowRange.controls == null ? null : ctx_r1.yellowRange.controls.max == null ? null : ctx_r1.yellowRange.controls.max.errors));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(86, _c2, ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.redRange == null ? null : ctx_r1.redRange.touched)) && (ctx_r1.redRange == null ? null : ctx_r1.redRange.controls == null ? null : ctx_r1.redRange.controls.min == null ? null : ctx_r1.redRange.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(104, 62, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(88, _c8)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.redRange == null ? null : ctx_r1.redRange.touched)) && (ctx_r1.redRange.controls == null ? null : ctx_r1.redRange.controls.min == null ? null : ctx_r1.redRange.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(89, _c2, ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.redRange == null ? null : ctx_r1.redRange.touched)) && (ctx_r1.redRange == null ? null : ctx_r1.redRange.controls == null ? null : ctx_r1.redRange.controls.max == null ? null : ctx_r1.redRange.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(111, 65, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(91, _c4)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r1.range == null ? null : ctx_r1.range.touched) || (ctx_r1.redRange == null ? null : ctx_r1.redRange.touched)) && (ctx_r1.redRange.controls == null ? null : ctx_r1.redRange.controls.max == null ? null : ctx_r1.redRange.controls.max.errors));
} }
function DatapointLibraryDetailsComponent_button_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "button", 42);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("disabled", ctx_r2.formGroup.invalid || ctx_r2.formGroup.pristine)("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Save"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 5, "Save"), " ");
} }
const _c9 = function () { return ["ROLE_INVENTORY_ADMIN", "ROLE_INVENTORY_UPDATE"]; };
function DatapointLibraryListComponent_c8y_action_bar_item_2_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 10);
    ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_c8y_action_bar_item_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.addDatapointEntry(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 11);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("placement", "right")("priority", 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 4, "Add data point"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 6, "Add data point"), " ");
} }
function DatapointLibraryListComponent_div_13_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 12);
    ɵngcc0.ɵɵelement(1, "h1", 13);
    ɵngcc0.ɵɵelementStart(2, "h3", 14);
    ɵngcc0.ɵɵtext(3, "No data points to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 14);
    ɵngcc0.ɵɵtext(5, "Add a data point using the button below.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "p");
    ɵngcc0.ɵɵelementStart(7, "button", 15);
    ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_div_13_Template_button_click_7_listener() { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.addDatapointEntry(); });
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelement(9, "i", 11);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵpipe(11, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(8, 2, "Add data point"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(11, 4, "Add data point"), " ");
} }
function DatapointLibraryListComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointLibraryListComponent_div_16_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 20);
    ɵngcc0.ɵɵelementStart(1, "div", 21);
    ɵngcc0.ɵɵelementStart(2, "div", 22);
    ɵngcc0.ɵɵelement(3, "div", 23);
    ɵngcc0.ɵɵelementStart(4, "p", 14);
    ɵngcc0.ɵɵtext(5, "Label");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(6, "div", 24);
    ɵngcc0.ɵɵelementStart(7, "div", 25);
    ɵngcc0.ɵɵelementStart(8, "div", 26);
    ɵngcc0.ɵɵelementStart(9, "p", 14);
    ɵngcc0.ɵɵtext(10, "Fragment");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 27);
    ɵngcc0.ɵɵelementStart(12, "p", 14);
    ɵngcc0.ɵɵtext(13, "Series");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 28);
    ɵngcc0.ɵɵelementStart(15, "span", 14);
    ɵngcc0.ɵɵtext(16, "Unit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(17, "div", 27);
    ɵngcc0.ɵɵelementStart(18, "span", 14);
    ɵngcc0.ɵɵtext(19, "Target");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(20, "div", 29);
    ɵngcc0.ɵɵelementStart(21, "span", 14);
    ɵngcc0.ɵɵtext(22, "Range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointLibraryListComponent_div_16_div_2_ul_7_Template(rf, ctx) { if (rf & 1) {
    const _r17 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 51);
    ɵngcc0.ɵɵelementStart(1, "li");
    ɵngcc0.ɵɵelementStart(2, "button", 52);
    ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_div_16_div_2_ul_7_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r17); const datapoint_r11 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r15 = ɵngcc0.ɵɵnextContext(2); return ctx_r15.editDatapointEntry(datapoint_r11); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelement(4, "i", 53);
    ɵngcc0.ɵɵelementStart(5, "span", 14);
    ɵngcc0.ɵɵtext(6, "Edit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "li");
    ɵngcc0.ɵɵelementStart(8, "button", 52);
    ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_div_16_div_2_ul_7_Template_button_click_8_listener() { ɵngcc0.ɵɵrestoreView(_r17); const datapoint_r11 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.removeDatapointEntry(datapoint_r11); });
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "i", 54);
    ɵngcc0.ɵɵelementStart(11, "span", 14);
    ɵngcc0.ɵɵtext(12, "Remove");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(3, 2, "Edit"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(9, 4, "Remove"));
} }
function DatapointLibraryListComponent_div_16_div_2_span_29_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "label", 45);
    ɵngcc0.ɵɵtext(2, "Unit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 46);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const datapoint_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("title", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.unit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.unit);
} }
function DatapointLibraryListComponent_div_16_div_2_span_31_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "label", 45);
    ɵngcc0.ɵɵtext(2, "Target");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 46);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const datapoint_r11 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("title", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.target);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.target);
} }
function DatapointLibraryListComponent_div_16_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r23 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 30);
    ɵngcc0.ɵɵelementStart(1, "div", 31);
    ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_div_16_div_2_Template_div_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r23); const datapoint_r11 = restoredCtx.$implicit; const ctx_r22 = ɵngcc0.ɵɵnextContext(2); return ctx_r22.editDatapointEntry(datapoint_r11); });
    ɵngcc0.ɵɵelementStart(2, "div", 32);
    ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_div_16_div_2_Template_div_click_2_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(3, "div", 33);
    ɵngcc0.ɵɵelementStart(4, "button", 34);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelement(6, "i", 35);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, DatapointLibraryListComponent_div_16_div_2_ul_7_Template, 13, 6, "ul", 36);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 37);
    ɵngcc0.ɵɵelementStart(9, "div", 23);
    ɵngcc0.ɵɵelement(10, "i", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 39);
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 40);
    ɵngcc0.ɵɵelementStart(14, "div", 41);
    ɵngcc0.ɵɵelement(15, "c8y-range-display", 42);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(16, "div", 43);
    ɵngcc0.ɵɵelementStart(17, "div", 44);
    ɵngcc0.ɵɵelementStart(18, "span");
    ɵngcc0.ɵɵelementStart(19, "label", 45);
    ɵngcc0.ɵɵtext(20, "Fragment");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(21, "span", 46);
    ɵngcc0.ɵɵtext(22);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(23, "div", 47);
    ɵngcc0.ɵɵelementStart(24, "label", 45);
    ɵngcc0.ɵɵtext(25, "Series");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(26, "span", 46);
    ɵngcc0.ɵɵtext(27);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(28, "div", 48);
    ɵngcc0.ɵɵtemplate(29, DatapointLibraryListComponent_div_16_div_2_span_29_Template, 5, 2, "span", 49);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(30, "div", 47);
    ɵngcc0.ɵɵtemplate(31, DatapointLibraryListComponent_div_16_div_2_span_31_Template, 5, 2, "span", 49);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(32, "div", 50);
    ɵngcc0.ɵɵelement(33, "c8y-range-display", 42);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const datapoint_r11 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(5, 15, "Actions"));
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵstyleProp("color", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.color);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.label, " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("config", datapoint_r11.c8y_Kpi)("display", "compact");
    ɵngcc0.ɵɵadvance(6);
    ɵngcc0.ɵɵproperty("title", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.fragment);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.fragment, " ");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("title", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.series);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.series);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.unit);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", datapoint_r11.c8y_Kpi == null ? null : datapoint_r11.c8y_Kpi.target);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("config", datapoint_r11.c8y_Kpi)("display", "inline");
} }
function DatapointLibraryListComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵtemplate(1, DatapointLibraryListComponent_div_16_div_1_Template, 23, 0, "div", 18);
    ɵngcc0.ɵɵtemplate(2, DatapointLibraryListComponent_div_16_div_2_Template, 34, 17, "div", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const datapoints_r8 = ctx.ngIf;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r3.listClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", datapoints_r8.data.length);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yForOf", datapoints_r8)("c8yForLoadMore", "hidden")("c8yForPipe", ctx_r3.parsePipe);
} }
const _c10 = function () { return ["ROLE_INVENTORY_ADMIN"]; };
const _c11 = function (a0) { return { "icon-spin": a0 }; };
const pathToDatapointLibrary = 'datapointlibrary';
const DATAPOINT_LIBRARY_CONFIG = new InjectionToken('DatapointLibraryOptions');

class DatapointLibraryDetailsComponent {
    constructor(activatedRoute, inventory, formBuilder, alertService, router, translate, colorService, parser, config) {
        this.activatedRoute = activatedRoute;
        this.inventory = inventory;
        this.formBuilder = formBuilder;
        this.alertService = alertService;
        this.router = router;
        this.translate = translate;
        this.colorService = colorService;
        this.parser = parser;
        this.config = config;
        this.path = pathToDatapointLibrary;
        this.isLoading = true;
        this.rangeConfig = {};
        this.initForm();
    }
    ngOnInit() {
        this.routeSub = this.activatedRoute.parent.data.subscribe(data => {
            this.load(data);
        });
    }
    ngOnDestroy() {
        if (this.routeSub) {
            this.routeSub.unsubscribe();
        }
    }
    save(value) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const kpiValues = this.extractKpiValuesFromFormValue(value);
            const kpi = Object.assign({}, ((_a = this.datapoint) === null || _a === void 0 ? void 0 : _a.c8y_Kpi) || {}, kpiValues);
            const cleanedUpKpi = this.removeNullValues(kpi);
            const mo = {
                c8y_Kpi: cleanedUpKpi,
                c8y_Global: value.c8y_Global ? {} : null
            };
            try {
                if ((_b = this.datapoint) === null || _b === void 0 ? void 0 : _b.id) {
                    mo.id = this.datapoint.id;
                    const res = yield this.inventory.update(mo);
                    this.datapointUpdate(res.data);
                    this.alertService.saveSuccess(gettext('Data point library entry'))();
                }
                else {
                    const res = yield this.inventory.create(mo);
                    this.datapointUpdate(res.data);
                    this.alertService.createSuccess(gettext('Data point library entry'))();
                }
                this.navigateBackToList();
            }
            catch (e) {
                this.alertService.addServerFailure(e);
            }
        });
    }
    cancel() {
        this.navigateBackToList();
    }
    formChange() {
        if (this.formGroup.invalid) {
            return;
        }
        const kpiValues = this.extractKpiValuesFromFormValue(this.formGroup.value);
        this.rangeConfig = Object.assign({ orientation: 'horizontal' }, kpiValues);
    }
    navigateBackToList() {
        return this.router.navigate([pathToDatapointLibrary]);
    }
    datapointUpdate(tmpDatapoint) {
        const datapoint = this.parser.parseDatapoint(tmpDatapoint);
        this.datapoint = datapoint;
        const { fragment, series, description, unit, target, label, color, yellowRangeMin, yellowRangeMax, redRangeMin, redRangeMax, min, max } = datapoint.c8y_Kpi;
        this.formGroup.patchValue({
            fragment,
            series,
            description,
            unit,
            target,
            label,
            color,
            range: { min, max },
            yellowRange: { min: yellowRangeMin, max: yellowRangeMax },
            redRange: { min: redRangeMin, max: redRangeMax },
            c8y_Global: !!datapoint.c8y_Global
        });
        this.formChange();
    }
    extractKpiValuesFromFormValue(formValue) {
        const { fragment, series, description, unit, target, label, color } = formValue;
        return {
            fragment,
            series,
            description,
            unit,
            target,
            label,
            color,
            yellowRangeMin: get(formValue, 'yellowRange.min'),
            yellowRangeMax: get(formValue, 'yellowRange.max'),
            redRangeMin: get(formValue, 'redRange.min'),
            redRangeMax: get(formValue, 'redRange.max'),
            min: get(formValue, 'range.min'),
            max: get(formValue, 'range.max')
        };
    }
    load(data) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            this.isLoading = true;
            this.formGroup.reset();
            const { fragment, series } = this.activatedRoute.snapshot.queryParams;
            const humanize = new HumanizePipe();
            const label = fragment && series
                ? humanize.transform(`${fragment} => ${series}`)
                : this.translate.instant(gettext('New data point template'));
            const currentDate = new Date().toISOString();
            const color = yield this.colorService.generateColor(currentDate);
            const contextData = (data && data.contextData) || {
                c8y_Kpi: {
                    label,
                    fragment,
                    series,
                    color
                },
                c8y_Global: !((_a = this.config) === null || _a === void 0 ? void 0 : _a.doNotAddGlobalFragmentByDefault) ? {} : null
            };
            const { id } = contextData;
            if (id) {
                this.datapointUpdate((yield this.inventory.detail(id)).data);
            }
            else {
                this.datapointUpdate(contextData);
            }
            this.isLoading = false;
        });
    }
    initForm() {
        var _a;
        this.range = this.formBuilder.group({
            min: [undefined, []],
            max: [undefined, []]
        }, { validators: [C8yValidators.minMaxValidator(), C8yValidators.requireBothMinAndMax()] });
        this.redRange = this.formBuilder.group({
            min: [undefined, []],
            max: [undefined, []]
        }, { validators: [C8yValidators.minMaxValidator(), C8yValidators.requireBothMinAndMax()] });
        this.yellowRange = this.formBuilder.group({
            min: [undefined, []],
            max: [undefined, []]
        }, { validators: [C8yValidators.minMaxValidator(), C8yValidators.requireBothMinAndMax()] });
        this.formGroup = this.formBuilder.group({
            color: ['', [Validators.required, Validators.minLength(4)]],
            label: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(120)]],
            description: ['', []],
            fragment: [
                '',
                [
                    Validators.required,
                    Validators.minLength(1),
                    Validators.maxLength(120),
                    Validators.pattern(/^[^.]*$/)
                ]
            ],
            series: [
                '',
                [
                    Validators.required,
                    Validators.minLength(1),
                    Validators.maxLength(120),
                    Validators.pattern(/^[^.]*$/)
                ]
            ],
            range: this.range,
            unit: [undefined, []],
            target: [undefined, []],
            redRange: this.redRange,
            yellowRange: this.yellowRange,
            c8y_Global: [!((_a = this.config) === null || _a === void 0 ? void 0 : _a.doNotAddGlobalFragmentByDefault), []]
        }, {
            validators: [
                C8yValidators.withinScale('redRange.min'),
                C8yValidators.withinScale('redRange.max'),
                C8yValidators.withinScale('yellowRange.min'),
                C8yValidators.withinScale('yellowRange.max'),
                C8yValidators.withinScale('target')
            ]
        });
    }
    removeNullValues(value) {
        // remove null values before sending data to backend
        const cleanedupValues = Object.assign({}, value);
        Object.keys(cleanedupValues).forEach(key => {
            if (cleanedupValues[key] === null) {
                delete cleanedupValues[key];
            }
        });
        return cleanedupValues;
    }
}
DatapointLibraryDetailsComponent.ɵfac = function DatapointLibraryDetailsComponent_Factory(t) { return new (t || DatapointLibraryDetailsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ActivatedRoute), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.InventoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ColorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.DatapointParserService), ɵngcc0.ɵɵdirectiveInject(DATAPOINT_LIBRARY_CONFIG, 8)); };
DatapointLibraryDetailsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointLibraryDetailsComponent, selectors: [["c8y-datapoint-library-details"]], decls: 15, vars: 18, consts: [[4, "ngIf"], [3, "icon", "label", "path"], ["novalidate", "", 1, "card", "content-fullpage", "card--grid", "grid__col--6-6--md", "grid__row--fit-auto", 3, "formGroup", "ngSubmit", "change"], [1, "card-header", "large-padding", "separator", "grid__col--fullspan"], [1, "card-title"], ["class", "d-contents", 4, "ngIf"], [1, "card-footer", "separator", "grid__col--fullspan"], ["type", "button", 1, "btn", "btn-default", 3, "title", "click"], ["class", "btn btn-primary btn-form", "type", "submit", 3, "disabled", "title", 4, "c8yIfAllowed", "c8yIfAllowedAllowAny"], [1, "d-contents"], [1, "inner-scroll", "bg-white", "flex-grow"], [1, "card-block", "large-padding"], [1, "d-flex"], ["translate", ""], [1, "data-point-color", "form-control"], [1, "c8y-colorpicker"], ["type", "color", "name", "color", "formControlName", "color"], [1, "flex-grow", "p-l-8"], ["formControlName", "label", "name", "label", "type", "text", 1, "form-control", 3, "placeholder"], [3, "show"], ["formControlName", "description", "name", "description", "rows", "3", 1, "form-control", 3, "placeholder"], [1, "row"], [1, "col-sm-6"], ["name", "fragment", "formControlName", "fragment", "type", "text", 1, "form-control", 3, "placeholder"], ["formControlName", "series", "name", "series", "type", "text", 1, "form-control", 3, "placeholder"], ["class", "row", 4, "ngIf"], [1, "inner-scroll", "bg-gray-white"], [1, "c8y-fieldset"], [1, "m-b-16", "d-block", 3, "config"], ["formGroupName", "range", 1, "row"], [1, "col-md-6"], [3, "ngClass"], ["type", "number", "name", "min", "formControlName", "min", 1, "form-control", 3, "placeholder"], ["type", "number", "name", "max", "formControlName", "max", 1, "form-control", 3, "placeholder"], ["name", "unit", "formControlName", "unit", 1, "form-control", 3, "placeholder"], ["type", "number", "name", "target", "formControlName", "target", 1, "form-control", 3, "placeholder"], ["formGroupName", "yellowRange", 1, "c8y-fieldset"], ["formGroupName", "redRange", 1, "c8y-fieldset"], [1, "c8y-checkbox"], ["name", "c8y_Global", "formControlName", "c8y_Global", "type", "checkbox"], ["container", "body", "type", "button", 1, "btn", "btn-clean", 3, "popover", "outsideClick"], [1, "text-info", 3, "c8yIcon"], ["type", "submit", 1, "btn", "btn-primary", "btn-form", 3, "disabled", "title"]], template: function DatapointLibraryDetailsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DatapointLibraryDetailsComponent_c8y_title_0_Template, 3, 2, "c8y-title", 0);
        ɵngcc0.ɵɵelementStart(1, "c8y-breadcrumb");
        ɵngcc0.ɵɵelement(2, "c8y-breadcrumb-item", 1);
        ɵngcc0.ɵɵpipe(3, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "form", 2);
        ɵngcc0.ɵɵlistener("ngSubmit", function DatapointLibraryDetailsComponent_Template_form_ngSubmit_4_listener() { return ctx.formGroup.valid && ctx.save(ctx.formGroup.value); })("change", function DatapointLibraryDetailsComponent_Template_form_change_4_listener() { return ctx.formChange(); });
        ɵngcc0.ɵɵelementStart(5, "div", 3);
        ɵngcc0.ɵɵelementStart(6, "h4", 4);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, DatapointLibraryDetailsComponent_div_8_Template, 113, 92, "div", 5);
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵlistener("click", function DatapointLibraryDetailsComponent_Template_button_click_10_listener() { return ctx.cancel(); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(14, DatapointLibraryDetailsComponent_button_14_Template, 4, 7, "button", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("icon", "c8y-data-points")("label", ɵngcc0.ɵɵpipeBind1(3, 11, "Data point library"))("path", ctx.path);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("formGroup", ctx.formGroup);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ctx.formGroup.value == null ? null : ctx.formGroup.value.label, " ");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 13, "Cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(13, 15, "Cancel"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpureFunction0(17, _c9))("c8yIfAllowedAllowAny", true);
    } }, directives: [ɵngcc7.NgIf, ɵngcc4.BreadcrumbComponent, ɵngcc4.BreadcrumbItemComponent, ɵngcc3.ɵNgNoValidate, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.IfAllowedDirective, ɵngcc4.TitleComponent, ɵngcc4.FormGroupComponent, ɵngcc4.C8yTranslateDirective, ɵngcc3.DefaultValueAccessor, ɵngcc4.RequiredInputPlaceholderDirective, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.MessagesComponent, ɵngcc4.RangeDisplayComponent, ɵngcc3.FormGroupName, ɵngcc7.NgClass, ɵngcc3.NumberValueAccessor, ɵngcc3.CheckboxControlValueAccessor, ɵngcc8.PopoverDirective, ɵngcc4.IconDirective], pipes: [ɵngcc4.C8yTranslatePipe], encapsulation: 2 });
DatapointLibraryDetailsComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: InventoryService },
    { type: FormBuilder },
    { type: AlertService },
    { type: Router },
    { type: TranslateService },
    { type: ColorService },
    { type: DatapointParserService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DATAPOINT_LIBRARY_CONFIG,] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointLibraryDetailsComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-datapoint-library-details',
                template: "<c8y-title *ngIf=\"!isLoading\">\n  {{ formGroup.value?.label }}\n  <small *ngIf=\"formGroup.value?.fragment && formGroup.value?.series\"\n    >{{ formGroup.value?.fragment }} / {{ formGroup.value?.series }}</small\n  >\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-data-points'\"\n    [label]=\"'Data point library' | translate\"\n    [path]=\"path\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<form\n  (ngSubmit)=\"formGroup.valid && save(formGroup.value)\"\n  (change)=\"formChange()\"\n  [formGroup]=\"formGroup\"\n  class=\"card content-fullpage card--grid grid__col--6-6--md grid__row--fit-auto\"\n  novalidate\n>\n  <div class=\"card-header large-padding separator grid__col--fullspan\">\n    <h4 class=\"card-title\">\n      {{ formGroup.value?.label }}\n    </h4>\n  </div>\n  <div *ngIf=\"!isLoading\" class=\"d-contents\">\n    <div class=\"inner-scroll bg-white flex-grow\">\n      <div class=\"card-block large-padding\">\n        <div class=\"d-flex\">\n          <c8y-form-group>\n            <label translate>Color</label>\n            <div class=\"data-point-color form-control\">\n              <div class=\"c8y-colorpicker\">\n                <input type=\"color\" name=\"color\" formControlName=\"color\" />\n                <span [style.background-color]=\"formGroup.value?.color\"></span>\n              </div>\n            </div>\n          </c8y-form-group>\n          <c8y-form-group class=\"flex-grow p-l-8\">\n            <label translate>Label</label>\n            <input\n              class=\"form-control\"\n              formControlName=\"label\"\n              name=\"label\"\n              [placeholder]=\"'e.g. Temperature' | translate\"\n              type=\"text\"\n            />\n            <c8y-messages [show]=\"formGroup.controls?.label?.touched && formGroup.controls?.label?.errors\">\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n        <!-- TODO: add description to data point library templates -->\n        <c8y-form-group>\n          <label translate>Description</label>\n          <textarea\n            class=\"form-control\"\n            formControlName=\"description\"\n            name=\"description\"\n            [placeholder]=\"'e.g. Ambient Temperature in Celsius' | translate\"\n            rows=\"3\"\n          ></textarea>\n        </c8y-form-group>\n\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <c8y-form-group>\n              <label translate>Fragment</label>\n              <input\n                class=\"form-control\"\n                name=\"fragment\"\n                formControlName=\"fragment\"\n                [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'c8y_Temperature' }\"\n                type=\"text\"\n              />\n              <c8y-messages [show]=\"formGroup.controls?.fragment?.touched && formGroup.controls?.fragment?.errors\">\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n\n          <div class=\"col-sm-6\">\n            <c8y-form-group>\n              <label translate>Series</label>\n              <input\n                class=\"form-control\"\n                formControlName=\"series\"\n                name=\"series\"\n                [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'T' }\"\n                type=\"text\"\n              />\n              <c8y-messages [show]=\"formGroup.controls?.series?.touched && formGroup.controls?.series?.errors\">\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"config?.showCheckboxForGlobalFragment\">\n          <div class=\"col-sm-6\">\n            <c8y-form-group>\n              <label class=\"c8y-checkbox\">\n                <input\n                  name=\"c8y_Global\"\n                  formControlName=\"c8y_Global\"\n                  type=\"checkbox\"\n                />\n                <span></span>\n                <span translate>Globally available</span>\n                <button\n                  class=\"btn btn-clean\"\n                  [popover]=\"'Will make this entry available to all users on the tenant if checked.' | translate\"\n                  container=\"body\"\n                  type=\"button\"\n                  [outsideClick]=\"true\"\n                >\n                  <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n                </button>\n              </label>\n            </c8y-form-group>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"inner-scroll bg-gray-white\">\n      <div class=\"card-block large-padding\">\n        <fieldset class=\"c8y-fieldset\">\n          <legend translate>Preview</legend>\n          <c8y-range-display [config]=\"rangeConfig\" class=\"m-b-16 d-block\"></c8y-range-display>\n        </fieldset>\n        <fieldset class=\"c8y-fieldset\">\n          <legend translate>Range</legend>\n          <div class=\"row\" formGroupName=\"range\">\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.min?.errors }\"\n              >\n                <label translate>Min</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"min\"\n                  formControlName=\"min\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 0 }\"\n                />\n                <c8y-messages [show]=\"range?.touched && range.controls?.min?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.max?.errors }\"\n              >\n                <label translate>Max</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"max\"\n                  formControlName=\"max\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n                />\n                <c8y-messages [show]=\"range?.touched && range.controls?.max?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <c8y-form-group>\n                <label translate>Unit</label>\n                <input\n                  class=\"form-control\"\n                  name=\"unit\"\n                  formControlName=\"unit\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: '\u00BAC' }\"\n                />\n                <c8y-messages [show]=\"formGroup.controls?.unit?.touched && formGroup.controls?.unit?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || formGroup.controls?.target?.touched) &&\n                    formGroup.controls?.target?.errors\n                }\"\n              >\n                <label translate>Target</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"target\"\n                  formControlName=\"target\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 25 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || formGroup.controls?.target?.touched) && formGroup.controls?.target?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class=\"c8y-fieldset\" formGroupName=\"yellowRange\">\n          <legend translate>Yellow range</legend>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || yellowRange?.touched) && yellowRange?.controls?.min?.errors\n                }\"\n              >\n                <label translate>Min</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"min\"\n                  formControlName=\"min\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 50 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.min?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || yellowRange?.touched) && yellowRange?.controls?.max?.errors\n                }\"\n              >\n                <label translate>Max</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"max\"\n                  formControlName=\"max\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.max?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class=\"c8y-fieldset\" formGroupName=\"redRange\">\n          <legend translate>Red range</legend>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || redRange?.touched) && redRange?.controls?.min?.errors\n                }\"\n              >\n                <label translate>Min</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"min\"\n                  formControlName=\"min\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.min?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || redRange?.touched) && redRange?.controls?.max?.errors\n                }\"\n              >\n                <label translate>Max</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"max\"\n                  formControlName=\"max\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.max?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-footer separator grid__col--fullspan\">\n    <button (click)=\"cancel()\" class=\"btn btn-default\" [title]=\"'Cancel' | translate\" type=\"button\">\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_UPDATE']; allowAny: true\"\n      [disabled]=\"formGroup.invalid || formGroup.pristine\"\n      class=\"btn btn-primary btn-form\"\n      [title]=\"'Save' | translate\"\n      type=\"submit\"\n    >\n      {{ 'Save' | translate }}\n    </button>\n  </div>\n</form>\n"
            }]
    }], function () { return [{ type: ɵngcc1.ActivatedRoute }, { type: ɵngcc2.InventoryService }, { type: ɵngcc3.FormBuilder }, { type: ɵngcc4.AlertService }, { type: ɵngcc1.Router }, { type: ɵngcc5.TranslateService }, { type: ɵngcc4.ColorService }, { type: ɵngcc6.DatapointParserService }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [DATAPOINT_LIBRARY_CONFIG]
            }] }]; }, null); })();

class DatapointLibraryListComponent {
    constructor(inventory, router, modalService, translateService, alertService, parser) {
        this.inventory = inventory;
        this.router = router;
        this.modalService = modalService;
        this.translateService = translateService;
        this.alertService = alertService;
        this.parser = parser;
        this.listClass = '';
        this.isLoading = true;
        this.reload$ = new BehaviorSubject(null);
        this.datapoints$ = this.reload$.pipe(tap(() => {
            this.isLoading = true;
        }), switchMap(() => this.getDatapoints()), tap(() => {
            this.isLoading = false;
        }), shareReplay());
        this.parsePipe = pipe(map((data) => this.parser.parseDatapoints(data)));
    }
    getDatapoints() {
        return this.inventory.list({ pageSize: 20, fragmentType: 'c8y_Kpi', withTotalPages: true });
    }
    addDatapointEntry() {
        this.router.navigate([pathToDatapointLibrary, 'new']);
    }
    editDatapointEntry(entry) {
        this.router.navigate([pathToDatapointLibrary, entry.id]);
    }
    removeDatapointEntry(entry) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modalService.confirm(gettext('Delete data point'), this.translateService.instant(gettext('You are about to delete data point "{{ dpLabel }}". Do you want to proceed?'), { dpLabel: entry.c8y_Kpi.label }), 'danger');
            }
            catch (e) {
                return;
            }
            try {
                yield this.inventory.delete(entry.id);
                this.reload$.next();
            }
            catch (e) {
                this.alertService.addServerFailure(e);
            }
        });
    }
    reload() {
        this.reload$.next();
    }
}
DatapointLibraryListComponent.ɵfac = function DatapointLibraryListComponent_Factory(t) { return new (t || DatapointLibraryListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc2.InventoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.DatapointParserService)); };
DatapointLibraryListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointLibraryListComponent, selectors: [["c8y-datapoint-library-list"]], decls: 18, vars: 25, consts: [[3, "placement", "priority", 4, "c8yIfAllowed"], [3, "placement", "priority"], [1, "btn", "btn-link", 3, "disabled", "title", "click"], ["c8yIcon", "refresh", 3, "ngClass"], ["itemClass", "navbar-form hidden-xs", 3, "placement"], [3, "listLength", "onListClassChange"], ["src", "/users-guide/cockpit/#data-point-library"], ["class", "c8y-empty-state text-center", 4, "ngIf"], ["class", "d-flex j-c-center", 4, "ngIf"], ["class", "card-group", 3, "ngClass", 4, "ngIf"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "plus-circle"], [1, "c8y-empty-state", "text-center"], [1, "c8y-icon", "c8y-icon-modules", "c8y-icon-duocolor"], ["translate", ""], [1, "btn", "btn-primary", 3, "title", "click"], [1, "d-flex", "j-c-center"], [1, "card-group", 3, "ngClass"], ["class", "page-sticky-header hidden-xs", 4, "ngIf"], ["class", "col-sm-6 col-md-4 col-lg-3 col-xs-12", 4, "c8yFor", "c8yForOf", "c8yForLoadMore", "c8yForPipe"], [1, "page-sticky-header", "hidden-xs"], [1, "flex-row"], [1, "card-header"], [1, "card-icon"], [1, "card-actions"], [1, "card-block", "p-l-0"], [1, "col-sm-3", "p-l-16"], [1, "col-sm-2"], [1, "col-sm-1"], [1, "col-sm-4"], [1, "col-sm-6", "col-md-4", "col-lg-3", "col-xs-12"], [1, "card", "pointer", 3, "click"], [1, "card-actions", 3, "click"], ["dropdown", "", 1, "dropdown", "settings", "pull-right"], ["type", "button", "dropdownToggle", "", 1, "dropdown-toggle", "c8y-dropdown", 3, "title"], ["c8yIcon", "ellipsis-v"], ["class", "dropdown-menu", 4, "dropdownMenu"], [1, "card-header", "separator"], ["c8yIcon", "circle"], [1, "card-title", "text-truncate", 3, "title"], [1, "card-block", "bg-gray-white", "p-b-24", "card-hidden-list"], [1, "col-sm-3", "col-md-2"], [3, "config", "display"], [1, "card-block"], [1, "col-sm-3", "text-truncate"], ["translate", "", 1, "text-label-small", "m-r-4"], [3, "title"], [1, "col-sm-2", "text-truncate"], [1, "col-sm-1", "text-truncate", "card-hidden-grid"], [4, "ngIf"], [1, "col-sm-4", "card-hidden-grid"], [1, "dropdown-menu"], ["type", "button", 3, "title", "click"], ["c8yIcon", "pencil"], ["c8yIcon", "trash"]], template: function DatapointLibraryListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1, "Data point library");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(2, DatapointLibraryListComponent_c8y_action_bar_item_2_Template, 6, 8, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(3, "c8y-action-bar-item", 1);
        ɵngcc0.ɵɵelementStart(4, "button", 2);
        ɵngcc0.ɵɵlistener("click", function DatapointLibraryListComponent_Template_button_click_4_listener() { return ctx.reload(); });
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelement(6, "i", 3);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "c8y-action-bar-item", 4);
        ɵngcc0.ɵɵelementStart(10, "c8y-list-display-switch", 5);
        ɵngcc0.ɵɵlistener("onListClassChange", function DatapointLibraryListComponent_Template_c8y_list_display_switch_onListClassChange_10_listener($event) { return ctx.listClass = $event; });
        ɵngcc0.ɵɵpipe(11, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(12, "c8y-help", 6);
        ɵngcc0.ɵɵtemplate(13, DatapointLibraryListComponent_div_13_Template, 12, 6, "div", 7);
        ɵngcc0.ɵɵpipe(14, "async");
        ɵngcc0.ɵɵtemplate(15, DatapointLibraryListComponent_div_15_Template, 2, 0, "div", 8);
        ɵngcc0.ɵɵtemplate(16, DatapointLibraryListComponent_div_16_Template, 3, 5, "div", 9);
        ɵngcc0.ɵɵpipe(17, "async");
    } if (rf & 2) {
        let tmp_8_0;
        let tmp_9_0;
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpureFunction0(22, _c10));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("placement", "right")("priority", 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("disabled", ctx.isLoading)("title", ɵngcc0.ɵɵpipeBind1(5, 12, "Reload"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(23, _c11, ctx.isLoading));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 14, "Reload"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placement", "left");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("listLength", (tmp_8_0 = ɵngcc0.ɵɵpipeBind1(11, 16, ctx.datapoints$)) == null ? null : tmp_8_0.data == null ? null : tmp_8_0.data.length);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ((tmp_9_0 = ɵngcc0.ɵɵpipeBind1(14, 18, ctx.datapoints$)) == null ? null : tmp_9_0.data == null ? null : tmp_9_0.data.length) === 0);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isLoading);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.isLoading && ɵngcc0.ɵɵpipeBind1(17, 20, ctx.datapoints$));
    } }, directives: [ɵngcc4.TitleComponent, ɵngcc4.IfAllowedDirective, ɵngcc4.ActionBarItemComponent, ɵngcc4.IconDirective, ɵngcc7.NgClass, ɵngcc4.ɵbh, ɵngcc4.HelpComponent, ɵngcc7.NgIf, ɵngcc4.C8yTranslateDirective, ɵngcc4.LoadingComponent, ɵngcc4.ForOfDirective, ɵngcc9.BsDropdownDirective, ɵngcc9.BsDropdownToggleDirective, ɵngcc9.BsDropdownMenuDirective, ɵngcc4.RangeDisplayComponent], pipes: [ɵngcc4.C8yTranslatePipe, ɵngcc7.AsyncPipe], encapsulation: 2 });
DatapointLibraryListComponent.ctorParameters = () => [
    { type: InventoryService },
    { type: Router },
    { type: ModalService },
    { type: TranslateService },
    { type: AlertService },
    { type: DatapointParserService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointLibraryListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-datapoint-library-list',
                template: "<c8y-title>Data point library</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\" *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN']\" [priority]=\"1\">\n  <button (click)=\"addDatapointEntry()\" class=\"btn btn-link\" [title]=\"'Add data point' | translate\">\n    <i c8yIcon=\"plus-circle\"></i>\n    {{ 'Add data point' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\" [priority]=\"0\">\n  <button\n    (click)=\"reload()\"\n    class=\"btn btn-link\"\n    [disabled]=\"isLoading\"\n    [title]=\"'Reload' | translate\"\n  >\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'icon-spin': isLoading }\"></i>\n    {{ 'Reload' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n  <c8y-list-display-switch\n    (onListClassChange)=\"listClass = $event\"\n    [listLength]=\"(datapoints$ | async)?.data?.length\"\n  ></c8y-list-display-switch>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/cockpit/#data-point-library\"></c8y-help>\n\n<!-- empty state -->\n<div *ngIf=\"(datapoints$ | async)?.data?.length === 0\" class=\"c8y-empty-state text-center\">\n  <h1 class=\"c8y-icon c8y-icon-modules c8y-icon-duocolor\"></h1>\n  <h3 translate>No data points to display.</h3>\n  <p translate>Add a data point using the button below.</p>\n  <p>\n    <button\n      (click)=\"addDatapointEntry()\"\n      class=\"btn btn-primary\"\n      [title]=\"'Add data point' | translate\"\n    >\n      <i c8yIcon=\"plus-circle\"></i>\n      {{ 'Add data point' | translate }}\n    </button>\n  </p>\n</div>\n\n<!-- loading indicator -->\n<div *ngIf=\"isLoading\" class=\"d-flex j-c-center\">\n  <c8y-loading></c8y-loading>\n</div>\n\n<div\n  class=\"card-group\"\n  [ngClass]=\"listClass\"\n  *ngIf=\"!isLoading && (datapoints$ | async) as datapoints\"\n>\n  <div class=\"page-sticky-header hidden-xs\" *ngIf=\"datapoints.data.length\">\n    <div class=\"flex-row\">\n      <div class=\"card-header\">\n        <div class=\"card-icon\"></div>\n        <p translate>Label</p>\n      </div>\n      <div class=\"card-actions\"></div>\n      <div class=\"card-block p-l-0\">\n        <div class=\"col-sm-3 p-l-16\">\n          <p translate>Fragment</p>\n        </div>\n        <div class=\"col-sm-2\">\n          <p translate>Series</p>\n        </div>\n        <div class=\"col-sm-1\">\n          <span translate>Unit</span>\n        </div>\n        <div class=\"col-sm-2\">\n          <span translate>Target</span>\n        </div>\n        <div class=\"col-sm-4\">\n          <span translate>Range</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div *c8yFor=\"let datapoint of datapoints; loadMore: 'hidden'; pipe: parsePipe\" class=\"col-sm-6 col-md-4 col-lg-3 col-xs-12\">\n    <div class=\"card pointer\" (click)=\"editDatapointEntry(datapoint)\">\n      <div class=\"card-actions\" (click)=\"$event.stopPropagation()\">\n        <div class=\"dropdown settings pull-right\" dropdown>\n          <button\n            [title]=\"'Actions' | translate\"\n            type=\"button\"\n            class=\"dropdown-toggle c8y-dropdown\"\n            dropdownToggle\n          >\n            <i c8yIcon=\"ellipsis-v\"></i>\n          </button>\n          <ul class=\"dropdown-menu\" *dropdownMenu>\n            <li>\n              <button\n                type=\"button\"\n                [title]=\"'Edit' | translate\"\n                (click)=\"editDatapointEntry(datapoint)\"\n              >\n                <i c8yIcon=\"pencil\"></i>\n                <span translate>Edit</span>\n              </button>\n            </li>\n            <li>\n              <button\n                type=\"button\"\n                [title]=\"'Remove' | translate\"\n                (click)=\"removeDatapointEntry(datapoint)\"\n              >\n                <i c8yIcon=\"trash\"></i>\n                <span translate>Remove</span>\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div class=\"card-header separator\">\n        <div class=\"card-icon\">\n          <i c8yIcon=\"circle\" [style.color]=\"datapoint.c8y_Kpi?.color\"></i>\n        </div>\n        <div class=\"card-title text-truncate\" [title]=\"datapoint.c8y_Kpi?.label\">\n          {{ datapoint.c8y_Kpi?.label }}\n        </div>\n      </div>\n      <div class=\"card-block bg-gray-white p-b-24 card-hidden-list\">\n        <div class=\"col-sm-3 col-md-2 \">\n          <c8y-range-display [config]=\"datapoint.c8y_Kpi\" [display]=\"'compact'\"></c8y-range-display>\n        </div>\n        </div>\n        <div class=\"card-block\">\n        <div class=\"col-sm-3 text-truncate\">\n          <span>\n            <label class=\"text-label-small m-r-4\" translate>Fragment</label>\n            <span [title]=\"datapoint.c8y_Kpi?.fragment\">\n              {{ datapoint.c8y_Kpi?.fragment }}\n            </span>\n          </span>\n        </div>\n        <div class=\"col-sm-2 text-truncate\">\n          <label class=\"text-label-small m-r-4\" translate>Series</label>\n          <span [title]=\"datapoint.c8y_Kpi?.series\">{{ datapoint.c8y_Kpi?.series }}</span>\n        </div>\n        <div class=\"col-sm-1 text-truncate card-hidden-grid\">\n          <span *ngIf=\"datapoint.c8y_Kpi?.unit\">\n            <label class=\"text-label-small m-r-4\" translate>Unit</label>\n            <span [title]=\"datapoint.c8y_Kpi?.unit\">{{ datapoint.c8y_Kpi?.unit }}</span>\n          </span>\n        </div>\n        <div class=\"col-sm-2 text-truncate\">\n          <span *ngIf=\"datapoint.c8y_Kpi?.target\">\n            <label class=\"text-label-small m-r-4\" translate>Target</label>\n            <span [title]=\"datapoint.c8y_Kpi?.target\">{{ datapoint.c8y_Kpi?.target }}</span>\n          </span>\n        </div>\n        <div class=\"col-sm-4 card-hidden-grid\">\n          <c8y-range-display [config]=\"datapoint.c8y_Kpi\" [display]=\"'inline'\"></c8y-range-display>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc2.InventoryService }, { type: ɵngcc1.Router }, { type: ɵngcc4.ModalService }, { type: ɵngcc5.TranslateService }, { type: ɵngcc4.AlertService }, { type: ɵngcc6.DatapointParserService }]; }, null); })();

class DatapointLibraryModule {
    static forRoot(config = {}) {
        return {
            ngModule: DatapointLibraryModule,
            providers: [
                {
                    provide: HOOK_ROUTE,
                    useValue: [
                        {
                            path: pathToDatapointLibrary,
                            component: DatapointLibraryListComponent
                        },
                        {
                            context: ViewContext.DatapointLibrary,
                            path: 'details',
                            component: DatapointLibraryDetailsComponent,
                            label: gettext('Details'),
                            icon: 'palette',
                            priority: 500
                        }
                    ],
                    multi: true
                },
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useValue: [
                        new NavigatorNode({
                            parent: gettext('Configuration'),
                            label: gettext('Data point library'),
                            featureId: 'dataPointLibrary',
                            path: pathToDatapointLibrary,
                            icon: 'c8y-data-points',
                            routerLinkExact: false
                        })
                    ],
                    multi: true
                },
                {
                    provide: DATAPOINT_LIBRARY_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
DatapointLibraryModule.ɵfac = function DatapointLibraryModule_Factory(t) { return new (t || DatapointLibraryModule)(); };
DatapointLibraryModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DatapointLibraryModule });
DatapointLibraryModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule, BsDropdownModule, PopoverModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointLibraryModule, [{
        type: NgModule,
        args: [{
                imports: [CoreModule, BsDropdownModule, PopoverModule],
                declarations: [DatapointLibraryListComponent, DatapointLibraryDetailsComponent],
                exports: [DatapointLibraryListComponent, DatapointLibraryDetailsComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatapointLibraryModule, { declarations: function () { return [DatapointLibraryListComponent, DatapointLibraryDetailsComponent]; }, imports: function () { return [CoreModule, BsDropdownModule, PopoverModule]; }, exports: function () { return [DatapointLibraryListComponent, DatapointLibraryDetailsComponent]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { DATAPOINT_LIBRARY_CONFIG, DatapointLibraryDetailsComponent, DatapointLibraryListComponent, DatapointLibraryModule, pathToDatapointLibrary };

//# sourceMappingURL=c8y-ngx-components-datapoint-library.js.map