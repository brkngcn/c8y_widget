import * as i0 from '@angular/core';
import { Injectable, Optional, Inject, Component, EventEmitter, Input, Output, NgModule } from '@angular/core';
import * as i1 from '@c8y/ngx-components';
import { NavigatorNode, gettext, Permissions, AppStateService, NavigatorService, TabsService, SearchService, OptionsService, AlertService, C8yStepper, SetupComponent, Steppers, CoreModule, HOOK_ROUTE, HOOK_NAVIGATOR_NODES, HOOK_STEPPER } from '@c8y/ngx-components';
import * as i2 from '@c8y/ngx-components/ecosystem';
import { EcosystemService, EcosystemModule } from '@c8y/ngx-components/ecosystem';
import * as i2$1 from '@c8y/ngx-components/assets-navigator';
import { AssetNodeService, ASSET_NAVIGATOR_CONFIG, AssetSelectorModule } from '@c8y/ngx-components/assets-navigator';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { __awaiter } from 'tslib';
import { InventoryService } from '@c8y/client';
import { isUndefined, startCase } from 'lodash-es';
import { map } from 'rxjs/operators';
import * as i3 from '@c8y/client';
import { CdkStep } from '@angular/cdk/stepper';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@c8y/ngx-components/ecosystem';
import * as ɵngcc3 from '@c8y/ngx-components/assets-navigator';
import * as ɵngcc4 from '@c8y/client';
import * as ɵngcc5 from '@angular/forms';
import * as ɵngcc6 from 'ngx-bootstrap/popover';
import * as ɵngcc7 from '@angular/common';
import * as ɵngcc8 from '@angular/cdk/stepper';

const _c0 = function (a0) { return { config: a0 }; };
function RootNodeConfigComponent_c8y_li_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵelement(2, "h1", 8);
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵelementStart(4, "strong");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 1, "No top level nodes set"));
} }
function RootNodeConfigComponent_c8y_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelement(1, "c8y-li-icon", 9);
    ɵngcc0.ɵɵelementStart(2, "div", 10);
    ɵngcc0.ɵɵelementStart(3, "div", 11);
    ɵngcc0.ɵɵelementStart(4, "div", 12);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 13);
    ɵngcc0.ɵɵelementStart(7, "label", 14);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementStart(9, "input", 15);
    ɵngcc0.ɵɵlistener("ngModelChange", function RootNodeConfigComponent_c8y_li_6_Template_input_ngModelChange_9_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const node_r2 = restoredCtx.$implicit; return node_r2.hideDevices = $event; })("change", function RootNodeConfigComponent_c8y_li_6_Template_input_change_9_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onUpdate.emit(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(10, "span");
    ɵngcc0.ɵɵelementStart(11, "small");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 16);
    ɵngcc0.ɵɵelementStart(15, "button", 17);
    ɵngcc0.ɵɵlistener("click", function RootNodeConfigComponent_c8y_li_6_Template_button_click_15_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const node_r2 = restoredCtx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.removeNavigatorNode(node_r2); });
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelement(17, "i", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const node_r2 = ctx.$implicit;
    const index_r3 = ctx.index;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", node_r2.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", node_r2.name, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 7, "Hide devices"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("name", "node.", index_r3, ".hideDevices");
    ɵngcc0.ɵɵproperty("ngModel", node_r2.hideDevices);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 9, "Hide devices"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 11, "Remove"));
} }
const _c1 = function () { return { groupsOnly: true, multi: true, groupsSelectable: true }; };
function CockpitSetupStepperButtonsComponent_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r2 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 3);
    ɵngcc0.ɵɵlistener("click", function CockpitSetupStepperButtonsComponent_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.onBack.emit(); });
    ɵngcc0.ɵɵtext(1, " Previous ");
    ɵngcc0.ɵɵelementEnd();
} }
const DEFAULT_HOME_DASHBOARD_NAME = 'home-cockpit1';
const USER_HOME_DASHBOARD_NAME = 'home-cockpit-user';
const DEFAULT_CONFIG = {
    rootNodes: [],
    features: {
        alarms: true,
        dataExplorer: true,
        groups: true,
        reports: true,
        exports: true,
        dataPointLibrary: true,
        globalSmartRules: true,
        smartRules: true,
        subassets: true,
        search: true
    },
    hideNavigator: false,
    homeDashboardName: DEFAULT_HOME_DASHBOARD_NAME,
    userSpecificHomeDashboard: false
};
var HomeDashboardType;
(function (HomeDashboardType) {
    /**
     * Shared by all Cockpit apps
     */
    HomeDashboardType[HomeDashboardType["DEFAULT"] = 0] = "DEFAULT";
    /**
     * Only for the current Cockpit.
     */
    HomeDashboardType[HomeDashboardType["APP"] = 1] = "APP";
    /**
     * Only for the current user.
     */
    HomeDashboardType[HomeDashboardType["USER"] = 2] = "USER";
})(HomeDashboardType || (HomeDashboardType = {}));
const COCKPIT_CONFIG_PATH = 'cockpit-application-configuration';

class CockpitConfigGuard {
    constructor(permissions, appState, ecosystemService) {
        this.permissions = permissions;
        this.appState = appState;
        this.ecosystemService = ecosystemService;
        this.configNode = new NavigatorNode({
            path: `/${COCKPIT_CONFIG_PATH}`,
            parent: gettext('Configuration'),
            label: gettext('App configuration'),
            icon: 'imac-settings',
            preventDuplicates: true
        });
    }
    get() {
        if (this.canActivate()) {
            return this.configNode;
        }
        return;
    }
    canActivate() {
        return (this.permissions.hasRole('ROLE_APPLICATION_MANAGEMENT_ADMIN') &&
            this.ecosystemService.isOwner(this.appState.currentApplication.value));
    }
}
CockpitConfigGuard.ɵfac = function CockpitConfigGuard_Factory(t) { return new (t || CockpitConfigGuard)(ɵngcc0.ɵɵinject(ɵngcc1.Permissions), ɵngcc0.ɵɵinject(ɵngcc1.AppStateService), ɵngcc0.ɵɵinject(ɵngcc2.EcosystemService)); };
CockpitConfigGuard.ɵprov = i0.ɵɵdefineInjectable({ factory: function CockpitConfigGuard_Factory() { return new CockpitConfigGuard(i0.ɵɵinject(i1.Permissions), i0.ɵɵinject(i1.AppStateService), i0.ɵɵinject(i2.EcosystemService)); }, token: CockpitConfigGuard, providedIn: "root" });
CockpitConfigGuard.ctorParameters = () => [
    { type: Permissions },
    { type: AppStateService },
    { type: EcosystemService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitConfigGuard, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.Permissions }, { type: ɵngcc1.AppStateService }, { type: ɵngcc2.EcosystemService }]; }, null); })();

class CockpitConfigService {
    constructor(navigatorService, tabsService, searchService, assetNodeService, inventoryService, appState, optionsService, permissions, moduleConfig) {
        this.navigatorService = navigatorService;
        this.tabsService = tabsService;
        this.searchService = searchService;
        this.assetNodeService = assetNodeService;
        this.inventoryService = inventoryService;
        this.appState = appState;
        this.optionsService = optionsService;
        this.permissions = permissions;
        this.moduleConfig = moduleConfig;
        this.currentConfig = DEFAULT_CONFIG;
        this.nodes = [];
        this.DEFAULT_NODE_PRIORITY = 2000;
        this.registerFilterForFeatures();
        this.init();
    }
    get excludedFeatureKeys() {
        return Object.keys(this.currentConfig.features).filter(key => !this.currentConfig.features[key]);
    }
    init() {
        this.appState.currentApplicationConfig.subscribe(config => {
            if (config) {
                this.currentConfig = Object.assign(Object.assign({}, DEFAULT_CONFIG), config);
                this.setRootNodes();
            }
        });
    }
    saveConfig(config) {
        return __awaiter(this, void 0, void 0, function* () {
            this.currentConfig = config;
            yield this.storeApplicationConfig(this.currentConfig);
        });
    }
    refresh() {
        this.optionsService.hideNavigator = this.currentConfig.hideNavigator;
        this.navigatorService.refresh();
        this.searchService.refresh();
    }
    setRootNodes() {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            this.addNodesToFactories();
            for (const node of this.currentConfig.rootNodes) {
                const { data } = yield this.inventoryService.detail(node.id);
                if (data) {
                    this.nodes.push(this.assetNodeService.createAssetNode({
                        mo: data,
                        hideDevices: node.hideDevices,
                        priority: isUndefined((_a = this.moduleConfig) === null || _a === void 0 ? void 0 : _a.rootNodePriority)
                            ? this.DEFAULT_NODE_PRIORITY
                            : this.moduleConfig.rootNodePriority
                    }));
                }
            }
            this.refresh();
        });
    }
    getAppDashboardName() {
        return `${DEFAULT_HOME_DASHBOARD_NAME.substring(0, DEFAULT_HOME_DASHBOARD_NAME.length - 1)}_${this.appState.state.app.id}`;
    }
    storeApplicationConfig(config) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.appState.updateApplicationConfig(config);
        });
    }
    addNodesToFactories() {
        const nodeInFactories = this.navigatorService.factories.find(nodes => nodes === this.nodes);
        const isNodeAlreadyInFactories = !!nodeInFactories;
        if (isNodeAlreadyInFactories) {
            this.nodes = nodeInFactories;
            this.nodes.length = 0;
        }
        else {
            this.navigatorService.factories.push(this.nodes);
        }
    }
    registerFilterForFeatures() {
        this.navigatorService.items$ = this.navigatorService.items$.pipe(map(nodes => this.setHiddenAttrLock(nodes)), map(nodes => this.filterNavigatorNode(nodes)));
        this.tabsService.items$ = this.tabsService.items$.pipe(map(tabs => this.filterTabs(tabs)));
        this.searchService.items$ = this.searchService.items$.pipe(map(search => (this.currentConfig.features.search ? search : [])));
    }
    setHiddenAttrLock(nodes) {
        nodes.forEach(node => {
            Object.keys(this.currentConfig.features).forEach(key => {
                const childNode = node.find(startCase(key).toLowerCase());
                if (childNode) {
                    if (!this.permissions.hasRole('ROLE_APPLICATION_MANAGEMENT_ADMIN') &&
                        childNode.lockHiddenAttr === undefined &&
                        childNode.hidden === true) {
                        childNode.lockHiddenAttr = childNode.hidden;
                    }
                }
            });
        });
        return nodes;
    }
    filterTabs(tabs) {
        return tabs.filter(tab => !this.excludedFeatureKeys.some(key => tab.featureId === key));
    }
    filterNavigatorNode(nodes) {
        if (!this.currentConfig) {
            return nodes;
        }
        const disabledFeatures = this.excludedFeatureKeys;
        const filteredNodes = nodes.filter(node => !disabledFeatures.some(key => node.featureId === key));
        this.showAllChildrenNodes(nodes);
        this.hideChildrenNodesThatAreDisabled(nodes, disabledFeatures);
        return filteredNodes;
    }
    hideChildrenNodesThatAreDisabled(nodes, disabledFeatures) {
        nodes.forEach(node => disabledFeatures.forEach(key => {
            const childNode = node.find(key, 'featureId');
            if (childNode) {
                childNode.hidden = true;
            }
        }));
    }
    showAllChildrenNodes(nodes) {
        nodes.forEach(node => {
            Object.keys(this.currentConfig.features).forEach(key => {
                const childNode = node.find(startCase(key).toLowerCase());
                if (childNode) {
                    if (childNode.lockHiddenAttr === true) {
                        return;
                    }
                    childNode.hidden = false;
                }
            });
        });
    }
}
CockpitConfigService.ɵfac = function CockpitConfigService_Factory(t) { return new (t || CockpitConfigService)(ɵngcc0.ɵɵinject(ɵngcc1.NavigatorService), ɵngcc0.ɵɵinject(ɵngcc1.TabsService), ɵngcc0.ɵɵinject(ɵngcc1.SearchService), ɵngcc0.ɵɵinject(ɵngcc3.AssetNodeService), ɵngcc0.ɵɵinject(ɵngcc4.InventoryService), ɵngcc0.ɵɵinject(ɵngcc1.AppStateService), ɵngcc0.ɵɵinject(ɵngcc1.OptionsService), ɵngcc0.ɵɵinject(ɵngcc1.Permissions), ɵngcc0.ɵɵinject(ASSET_NAVIGATOR_CONFIG, 8)); };
CockpitConfigService.ɵprov = i0.ɵɵdefineInjectable({ factory: function CockpitConfigService_Factory() { return new CockpitConfigService(i0.ɵɵinject(i1.NavigatorService), i0.ɵɵinject(i1.TabsService), i0.ɵɵinject(i1.SearchService), i0.ɵɵinject(i2$1.AssetNodeService), i0.ɵɵinject(i3.InventoryService), i0.ɵɵinject(i1.AppStateService), i0.ɵɵinject(i1.OptionsService), i0.ɵɵinject(i1.Permissions), i0.ɵɵinject(i2$1.ASSET_NAVIGATOR_CONFIG, 8)); }, token: CockpitConfigService, providedIn: "root" });
CockpitConfigService.ctorParameters = () => [
    { type: NavigatorService },
    { type: TabsService },
    { type: SearchService },
    { type: AssetNodeService },
    { type: InventoryService },
    { type: AppStateService },
    { type: OptionsService },
    { type: Permissions },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [ASSET_NAVIGATOR_CONFIG,] }] }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitConfigService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: ɵngcc1.NavigatorService }, { type: ɵngcc1.TabsService }, { type: ɵngcc1.SearchService }, { type: ɵngcc3.AssetNodeService }, { type: ɵngcc4.InventoryService }, { type: ɵngcc1.AppStateService }, { type: ɵngcc1.OptionsService }, { type: ɵngcc1.Permissions }, { type: undefined, decorators: [{
                type: Optional
            }, {
                type: Inject,
                args: [ASSET_NAVIGATOR_CONFIG]
            }] }]; }, null); })();

class CockpitConfigurationComponent {
    constructor(cockpitConfigService, alertService) {
        this.cockpitConfigService = cockpitConfigService;
        this.alertService = alertService;
        /**
         * The currently used configuration.
         */
        this.config = DEFAULT_CONFIG;
    }
    /**
     * @ignore
     */
    ngOnInit() {
        this.config = this.cockpitConfigService.currentConfig;
    }
    /**
     * Stores the configuration and shows a success message.
     */
    save() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.cockpitConfigService.saveConfig(this.config);
                this.alertService.success(gettext('Cockpit configuration saved.'));
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
    /**
     * Updates the features to directly reflect the results of the change.
     */
    updateFeatures() {
        this.cockpitConfigService.currentConfig = this.config;
        this.cockpitConfigService.refresh();
    }
    /**
     * Updates the root nodes to directly reflect the results of the change.
     */
    updateRootNodes() {
        this.cockpitConfigService.currentConfig = this.config;
        this.cockpitConfigService.setRootNodes();
    }
}
CockpitConfigurationComponent.ɵfac = function CockpitConfigurationComponent_Factory(t) { return new (t || CockpitConfigurationComponent)(ɵngcc0.ɵɵdirectiveInject(CockpitConfigService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService)); };
CockpitConfigurationComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitConfigurationComponent, selectors: [["c8y-cockpit-configuration"]], decls: 53, vars: 27, consts: [[1, "row"], [1, "col-lg-12", "col-lg-max"], ["configForm", "ngForm"], [1, "card", "card--fullpage"], [1, "card-header", "separator"], ["translate", "", 1, "card-title"], [1, "inner-scroll"], [1, "card-block", "p-t-0", "p-b-0"], [1, "row", "separator-bottom", "p-t-24", "p-b-24"], [1, "col-xs-12", "col-sm-3", "col-md-2", "text-left-xs", "text-right-sm"], [1, "d-inline-flex", "m-b-16"], ["translate", "", 1, "text-medium", "m-r-4"], ["container", "body", "placement", "right", 1, "btn", "btn-clean", 3, "popover", "outsideClick"], [1, "text-info", 3, "c8yIcon"], [1, "col-xs-12", "col-sm-9", "col-md-8"], [3, "config", "onUpdate"], ["translate", "", 1, "text-medium", "m-r-8"], [1, "col-xs-12", "col-sm-10", "col-md-10"], ["placement", "right", "container", "body", 1, "btn", "btn-clean", 3, "popover", "outsideClick"], [3, "config"], ["translate", "", 1, "text-medium", "d-inline-block", "m-r-4"], [1, "card-footer", "separator"], ["type", "submit", "translate", "", "c8yProductExperience", "", 1, "btn", "btn-primary", 3, "disabled", "actionName", "actionData", "click"]], template: function CockpitConfigurationComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "div", 0);
        ɵngcc0.ɵɵelementStart(4, "div", 1);
        ɵngcc0.ɵɵelementStart(5, "form", null, 2);
        ɵngcc0.ɵɵelementStart(7, "div", 3);
        ɵngcc0.ɵɵelementStart(8, "div", 4);
        ɵngcc0.ɵɵelementStart(9, "div", 5);
        ɵngcc0.ɵɵtext(10, "Cockpit configuration");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "div", 6);
        ɵngcc0.ɵɵelementStart(12, "div", 7);
        ɵngcc0.ɵɵelementStart(13, "fieldset", 8);
        ɵngcc0.ɵɵelementStart(14, "div", 9);
        ɵngcc0.ɵɵelementStart(15, "div", 10);
        ɵngcc0.ɵɵelementStart(16, "h4", 11);
        ɵngcc0.ɵɵtext(17, "Features");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "button", 12);
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵelement(20, "i", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(21, "div", 14);
        ɵngcc0.ɵɵelementStart(22, "c8y-feature-config", 15);
        ɵngcc0.ɵɵlistener("onUpdate", function CockpitConfigurationComponent_Template_c8y_feature_config_onUpdate_22_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(23, "fieldset", 8);
        ɵngcc0.ɵɵelementStart(24, "div", 9);
        ɵngcc0.ɵɵelementStart(25, "div", 10);
        ɵngcc0.ɵɵelementStart(26, "h4", 16);
        ɵngcc0.ɵɵtext(27, "Top level nodes");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(28, "button", 12);
        ɵngcc0.ɵɵpipe(29, "translate");
        ɵngcc0.ɵɵelement(30, "i", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(31, "div", 17);
        ɵngcc0.ɵɵelementStart(32, "div", 0);
        ɵngcc0.ɵɵelementStart(33, "c8y-root-node-config", 15);
        ɵngcc0.ɵɵlistener("onUpdate", function CockpitConfigurationComponent_Template_c8y_root_node_config_onUpdate_33_listener() { return ctx.updateRootNodes(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(34, "fieldset", 8);
        ɵngcc0.ɵɵelementStart(35, "div", 9);
        ɵngcc0.ɵɵelementStart(36, "div", 10);
        ɵngcc0.ɵɵelementStart(37, "h4", 16);
        ɵngcc0.ɵɵtext(38, "Home dashboard");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(39, "button", 18);
        ɵngcc0.ɵɵpipe(40, "translate");
        ɵngcc0.ɵɵelement(41, "i", 13);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(42, "div", 14);
        ɵngcc0.ɵɵelement(43, "c8y-home-dashboard-config", 19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(44, "fieldset", 8);
        ɵngcc0.ɵɵelementStart(45, "div", 9);
        ɵngcc0.ɵɵelementStart(46, "h4", 20);
        ɵngcc0.ɵɵtext(47, "Misc");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(48, "div", 14);
        ɵngcc0.ɵɵelement(49, "c8y-misc-config", 19);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(50, "div", 21);
        ɵngcc0.ɵɵelementStart(51, "button", 22);
        ɵngcc0.ɵɵlistener("click", function CockpitConfigurationComponent_Template_button_click_51_listener() { return ctx.save(); });
        ɵngcc0.ɵɵtext(52, " Save ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(6);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 17, "App configuration"));
        ɵngcc0.ɵɵadvance(17);
        ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(19, 19, "Define which are the enabled features in the current application."));
        ɵngcc0.ɵɵproperty("outsideClick", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(29, 21, "Select which nodes to display in the top level of the navigator menu. By default, only Groups is shown."));
        ɵngcc0.ɵɵproperty("outsideClick", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(40, 23, "The landing page for this application. By default it is a customizable dashboard displaying data for the overall tenant."));
        ɵngcc0.ɵɵproperty("outsideClick", true);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("disabled", !_r0.form.valid)("actionName", "cockpitConfigurationSaved")("actionData", ɵngcc0.ɵɵpureFunction1(25, _c0, ctx.config));
    } }, directives: function () { return [ɵngcc1.TitleComponent, ɵngcc5.ɵNgNoValidate, ɵngcc5.NgControlStatusGroup, ɵngcc5.NgForm, ɵngcc1.C8yTranslateDirective, ɵngcc6.PopoverDirective, ɵngcc1.IconDirective, FeatureConfigComponent, RootNodeConfigComponent, HomeDashboardConfigComponent, MiscConfigComponent, ɵngcc1.ProductExperienceDirective]; }, pipes: function () { return [ɵngcc1.C8yTranslatePipe]; }, encapsulation: 2 });
CockpitConfigurationComponent.ctorParameters = () => [
    { type: CockpitConfigService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitConfigurationComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-configuration',
                template: "<c8y-title>{{ 'App configuration' | translate }}</c8y-title>\n\n<div class=\"row\">\n  <div class=\"col-lg-12 col-lg-max\">\n    <form #configForm=\"ngForm\">\n      <div class=\"card card--fullpage\">\n        <div class=\"card-header separator\">\n          <div class=\"card-title\" translate>Cockpit configuration</div>\n        </div>\n\n        <div class=\"inner-scroll\">\n          <div class=\"card-block p-t-0 p-b-0\">\n            <fieldset class=\"row separator-bottom p-t-24 p-b-24\">\n              <div class=\"col-xs-12 col-sm-3 col-md-2 text-left-xs text-right-sm\">\n                <div class=\"d-inline-flex m-b-16\">\n                  <h4 class=\"text-medium m-r-4\" translate>Features</h4>\n                  <button\n                    class=\"btn btn-clean\"\n                    popover=\"{{\n                      'Define which are the enabled features in the current application.'\n                        | translate\n                    }}\"\n                    container=\"body\"\n                    placement=\"right\"\n                    [outsideClick]=\"true\"\n                  >\n                    <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-sm-9 col-md-8\">\n                <c8y-feature-config\n                  [config]=\"config\"\n                  (onUpdate)=\"updateFeatures()\"\n                ></c8y-feature-config>\n              </div>\n            </fieldset>\n            <fieldset class=\"row separator-bottom p-t-24 p-b-24\">\n              <div class=\"col-xs-12 col-sm-3 col-md-2 text-left-xs text-right-sm\">\n                <div class=\"d-inline-flex m-b-16\">\n                  <h4 class=\"text-medium m-r-8\" translate>Top level nodes</h4>\n                  <button\n                    class=\"btn btn-clean\"\n                    popover=\"{{\n                      'Select which nodes to display in the top level of the navigator menu. By default, only Groups is shown.'\n                        | translate\n                    }}\"\n                    container=\"body\"\n                    placement=\"right\"\n                    [outsideClick]=\"true\"\n                  >\n                    <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-sm-10 col-md-10\">\n                <div class=\"row\">\n                  <c8y-root-node-config\n                    [config]=\"config\"\n                    (onUpdate)=\"updateRootNodes()\"\n                  ></c8y-root-node-config>\n                </div>\n              </div>\n            </fieldset>\n\n            <fieldset class=\"row separator-bottom p-t-24 p-b-24\">\n              <div class=\"col-xs-12 col-sm-3 col-md-2 text-left-xs text-right-sm\">\n                <div class=\"d-inline-flex m-b-16\">\n                  <h4 class=\"text-medium m-r-8\" translate>Home dashboard</h4>\n                  <button\n                    class=\"btn btn-clean\"\n                    popover=\"{{\n                      'The landing page for this application. By default it is a customizable dashboard displaying data for the overall tenant.'\n                        | translate\n                    }}\"\n                    placement=\"right\"\n                    container=\"body\"\n                    [outsideClick]=\"true\"\n                  >\n                    <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n                  </button>\n                </div>\n              </div>\n              <div class=\"col-xs-12 col-sm-9 col-md-8\">\n                <c8y-home-dashboard-config [config]=\"config\"></c8y-home-dashboard-config>\n              </div>\n            </fieldset>\n\n            <fieldset class=\"row separator-bottom p-t-24 p-b-24\">\n              <div class=\"col-xs-12 col-sm-3 col-md-2 text-left-xs text-right-sm\">\n                <h4 class=\"text-medium d-inline-block m-r-4\" translate>Misc</h4>\n              </div>\n              <div class=\"col-xs-12 col-sm-9 col-md-8\">\n                <c8y-misc-config [config]=\"config\"></c8y-misc-config>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n        <div class=\"card-footer separator\">\n          <button\n            type=\"submit\"\n            class=\"btn btn-primary\"\n            translate\n            [disabled]=\"!configForm.form.valid\"\n            (click)=\"save()\"\n            c8yProductExperience\n            [actionName]=\"'cockpitConfigurationSaved'\"\n            [actionData]=\"{ config: config }\"\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: CockpitConfigService }, { type: ɵngcc1.AlertService }]; }, null); })();

class FeatureConfigComponent {
    constructor() {
        this.onUpdate = new EventEmitter();
    }
    updateFeatures() {
        this.onUpdate.emit();
    }
}
FeatureConfigComponent.ɵfac = function FeatureConfigComponent_Factory(t) { return new (t || FeatureConfigComponent)(); };
FeatureConfigComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FeatureConfigComponent, selectors: [["c8y-feature-config"]], inputs: { config: "config" }, outputs: { onUpdate: "onUpdate" }, decls: 141, vars: 70, consts: [["icon", "search"], [1, "d-flex", "a-i-center"], ["translate", ""], [1, "c8y-switch", "c8y-switch--inline", "m-l-auto", 3, "title"], ["type", "checkbox", "name", "search", 3, "ngModel", "ngModelChange", "change"], ["icon", "c8y-group"], ["type", "checkbox", "name", "groups", 3, "ngModel", "ngModelChange", "change"], ["icon", "bell"], ["type", "checkbox", "name", "alarms", 3, "ngModel", "ngModelChange", "change"], ["icon", "c8y-data-explorer"], ["type", "checkbox", "name", "dataExplorer", 3, "ngModel", "ngModelChange", "change"], ["icon", "c8y-reports"], ["type", "checkbox", "name", "reports", 3, "ngModel", "ngModelChange", "change"], ["icon", "graph-report"], ["type", "checkbox", "name", "exports", 3, "ngModel", "ngModelChange", "change"], ["icon", "c8y-data-points"], ["type", "checkbox", "name", "dataPointLibrary", 3, "ngModel", "ngModelChange", "change"], ["icon", "c8y-smart-rules"], ["type", "checkbox", "name", "globalSmartRules", 3, "ngModel", "ngModelChange", "change"], ["icon", "c8y-group-open"], ["type", "checkbox", "name", "subassets", 3, "ngModel", "ngModelChange", "change"], ["type", "checkbox", "name", "smartRules", 3, "ngModel", "ngModelChange", "change"]], template: function FeatureConfigComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-list-group");
        ɵngcc0.ɵɵelementStart(1, "c8y-li");
        ɵngcc0.ɵɵelement(2, "c8y-li-icon", 0);
        ɵngcc0.ɵɵelementStart(3, "div", 1);
        ɵngcc0.ɵɵelementStart(4, "div");
        ɵngcc0.ɵɵelementStart(5, "p");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "p");
        ɵngcc0.ɵɵelementStart(9, "small", 2);
        ɵngcc0.ɵɵtext(10, "Display the global search in the main header.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "label", 3);
        ɵngcc0.ɵɵpipe(12, "translate");
        ɵngcc0.ɵɵelementStart(13, "input", 4);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_13_listener($event) { return ctx.config.features.search = $event; })("change", function FeatureConfigComponent_Template_input_change_13_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(14, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(15, "c8y-li");
        ɵngcc0.ɵɵelement(16, "c8y-li-icon", 5);
        ɵngcc0.ɵɵelementStart(17, "div", 1);
        ɵngcc0.ɵɵelementStart(18, "div");
        ɵngcc0.ɵɵelementStart(19, "p");
        ɵngcc0.ɵɵtext(20);
        ɵngcc0.ɵɵpipe(21, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "p");
        ɵngcc0.ɵɵelementStart(23, "small", 2);
        ɵngcc0.ɵɵtext(24, "Display top level groups under the Groups navigator menu.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(25, "label", 3);
        ɵngcc0.ɵɵpipe(26, "translate");
        ɵngcc0.ɵɵelementStart(27, "input", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_27_listener($event) { return ctx.config.features.groups = $event; })("change", function FeatureConfigComponent_Template_input_change_27_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(28, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(29, "c8y-li");
        ɵngcc0.ɵɵelement(30, "c8y-li-icon", 7);
        ɵngcc0.ɵɵelementStart(31, "div", 1);
        ɵngcc0.ɵɵelementStart(32, "div");
        ɵngcc0.ɵɵelementStart(33, "p");
        ɵngcc0.ɵɵtext(34);
        ɵngcc0.ɵɵpipe(35, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(36, "p");
        ɵngcc0.ɵɵelementStart(37, "small", 2);
        ɵngcc0.ɵɵtext(38, "Display a link to the global alarms list in the navigator menu.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(39, "label", 3);
        ɵngcc0.ɵɵpipe(40, "translate");
        ɵngcc0.ɵɵelementStart(41, "input", 8);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_41_listener($event) { return ctx.config.features.alarms = $event; })("change", function FeatureConfigComponent_Template_input_change_41_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(42, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(43, "c8y-li");
        ɵngcc0.ɵɵelement(44, "c8y-li-icon", 9);
        ɵngcc0.ɵɵelementStart(45, "div", 1);
        ɵngcc0.ɵɵelementStart(46, "div");
        ɵngcc0.ɵɵelementStart(47, "p");
        ɵngcc0.ɵɵtext(48);
        ɵngcc0.ɵɵpipe(49, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(50, "p");
        ɵngcc0.ɵɵelementStart(51, "small", 2);
        ɵngcc0.ɵɵtext(52, " Display the data explorer in the navigator menu and on the group tabs. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(53, "label", 3);
        ɵngcc0.ɵɵpipe(54, "translate");
        ɵngcc0.ɵɵelementStart(55, "input", 10);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_55_listener($event) { return ctx.config.features.dataExplorer = $event; })("change", function FeatureConfigComponent_Template_input_change_55_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(56, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(57, "c8y-li");
        ɵngcc0.ɵɵelement(58, "c8y-li-icon", 11);
        ɵngcc0.ɵɵelementStart(59, "div", 1);
        ɵngcc0.ɵɵelementStart(60, "div");
        ɵngcc0.ɵɵelementStart(61, "p");
        ɵngcc0.ɵɵtext(62);
        ɵngcc0.ɵɵpipe(63, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(64, "p");
        ɵngcc0.ɵɵelementStart(65, "small", 2);
        ɵngcc0.ɵɵtext(66, "Display a link to the Reports list in the navigator menu.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(67, "label", 3);
        ɵngcc0.ɵɵpipe(68, "translate");
        ɵngcc0.ɵɵelementStart(69, "input", 12);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_69_listener($event) { return ctx.config.features.reports = $event; })("change", function FeatureConfigComponent_Template_input_change_69_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(70, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(71, "c8y-li");
        ɵngcc0.ɵɵelement(72, "c8y-li-icon", 13);
        ɵngcc0.ɵɵelementStart(73, "div", 1);
        ɵngcc0.ɵɵelementStart(74, "div");
        ɵngcc0.ɵɵelementStart(75, "p");
        ɵngcc0.ɵɵtext(76);
        ɵngcc0.ɵɵpipe(77, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(78, "p");
        ɵngcc0.ɵɵelementStart(79, "small", 2);
        ɵngcc0.ɵɵtext(80, " Display a link to the Exports list under the Configuration navigator menu. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(81, "label", 3);
        ɵngcc0.ɵɵpipe(82, "translate");
        ɵngcc0.ɵɵelementStart(83, "input", 14);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_83_listener($event) { return ctx.config.features.exports = $event; })("change", function FeatureConfigComponent_Template_input_change_83_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(84, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(85, "c8y-li");
        ɵngcc0.ɵɵelement(86, "c8y-li-icon", 15);
        ɵngcc0.ɵɵelementStart(87, "div", 1);
        ɵngcc0.ɵɵelementStart(88, "div");
        ɵngcc0.ɵɵelementStart(89, "p");
        ɵngcc0.ɵɵtext(90);
        ɵngcc0.ɵɵpipe(91, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(92, "p");
        ɵngcc0.ɵɵelementStart(93, "small", 2);
        ɵngcc0.ɵɵtext(94, " Display a link to the Data point library under the Configuration navigator menu. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(95, "label", 3);
        ɵngcc0.ɵɵpipe(96, "translate");
        ɵngcc0.ɵɵelementStart(97, "input", 16);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_97_listener($event) { return ctx.config.features.dataPointLibrary = $event; })("change", function FeatureConfigComponent_Template_input_change_97_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(98, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(99, "c8y-li");
        ɵngcc0.ɵɵelement(100, "c8y-li-icon", 17);
        ɵngcc0.ɵɵelementStart(101, "div", 1);
        ɵngcc0.ɵɵelementStart(102, "div");
        ɵngcc0.ɵɵelementStart(103, "p");
        ɵngcc0.ɵɵtext(104);
        ɵngcc0.ɵɵpipe(105, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(106, "p");
        ɵngcc0.ɵɵelementStart(107, "small", 2);
        ɵngcc0.ɵɵtext(108, " Display a link to the Global smart rules under the Configuration navigator menu. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(109, "label", 3);
        ɵngcc0.ɵɵpipe(110, "translate");
        ɵngcc0.ɵɵelementStart(111, "input", 18);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_111_listener($event) { return ctx.config.features.globalSmartRules = $event; })("change", function FeatureConfigComponent_Template_input_change_111_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(112, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(113, "c8y-li");
        ɵngcc0.ɵɵelement(114, "c8y-li-icon", 19);
        ɵngcc0.ɵɵelementStart(115, "div", 1);
        ɵngcc0.ɵɵelementStart(116, "div");
        ɵngcc0.ɵɵelementStart(117, "p");
        ɵngcc0.ɵɵtext(118);
        ɵngcc0.ɵɵpipe(119, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(120, "p");
        ɵngcc0.ɵɵelementStart(121, "small", 2);
        ɵngcc0.ɵɵtext(122, "Display the sub assets tab on groups.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(123, "label", 3);
        ɵngcc0.ɵɵpipe(124, "translate");
        ɵngcc0.ɵɵelementStart(125, "input", 20);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_125_listener($event) { return ctx.config.features.subassets = $event; })("change", function FeatureConfigComponent_Template_input_change_125_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(126, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(127, "c8y-li");
        ɵngcc0.ɵɵelement(128, "c8y-li-icon", 17);
        ɵngcc0.ɵɵelementStart(129, "div", 1);
        ɵngcc0.ɵɵelementStart(130, "div");
        ɵngcc0.ɵɵelementStart(131, "p");
        ɵngcc0.ɵɵtext(132);
        ɵngcc0.ɵɵpipe(133, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(134, "p");
        ɵngcc0.ɵɵelementStart(135, "small", 2);
        ɵngcc0.ɵɵtext(136, "Display the smart rules tab on groups and devices.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(137, "label", 3);
        ɵngcc0.ɵɵpipe(138, "translate");
        ɵngcc0.ɵɵelementStart(139, "input", 21);
        ɵngcc0.ɵɵlistener("ngModelChange", function FeatureConfigComponent_Template_input_ngModelChange_139_listener($event) { return ctx.config.features.smartRules = $event; })("change", function FeatureConfigComponent_Template_input_change_139_listener() { return ctx.updateFeatures(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(140, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 30, "Global search"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(12, 32, "Global search"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.search);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(21, 34, "Groups"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(26, 36, "Groups"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.groups);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(35, 38, "Alarms"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(40, 40, "Global Alarms view"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.alarms);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(49, 42, "Data explorer"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(54, 44, "Data explorer"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.dataExplorer);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(63, 46, "Reports"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(68, 48, "Reports"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.reports);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(77, 50, "Exports"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(82, 52, "Exports"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.exports);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(91, 54, "Data point library"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(96, 56, "Data point library"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.dataPointLibrary);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(105, 58, "Global smart rules"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(110, 60, "Global smart rules"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.globalSmartRules);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(119, 62, "Sub assets view"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(124, 64, "Sub assets view"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.subassets);
        ɵngcc0.ɵɵadvance(7);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(133, 66, "Smart rules for devices and groups"));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(138, 68, "Smart rules for devices and groups"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.features.smartRules);
    } }, directives: [ɵngcc1.ListGroupComponent, ɵngcc1.ListItemComponent, ɵngcc1.ListItemIconComponent, ɵngcc1.C8yTranslateDirective, ɵngcc5.CheckboxControlValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
FeatureConfigComponent.propDecorators = {
    config: [{ type: Input }],
    onUpdate: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FeatureConfigComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-feature-config',
                template: "<c8y-list-group>\n  <c8y-li>\n    <c8y-li-icon icon=\"search\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Global search' | translate }}</p>\n        <p>\n          <small translate>Display the global search in the main header.</small>\n        </p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Global search' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.search\"\n          name=\"search\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-group\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Groups' | translate }}</p>\n        <p>\n          <small translate>Display top level groups under the Groups navigator menu.</small>\n        </p>\n      </div>\n      <label class=\"c8y-switch c8y-switch--inline m-l-auto\" title=\"{{ 'Groups' | translate }}\">\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.groups\"\n          name=\"groups\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"bell\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Alarms' | translate }}</p>\n        <p>\n          <small translate>Display a link to the global alarms list in the navigator menu.</small>\n        </p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Global Alarms view' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.alarms\"\n          name=\"alarms\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-data-explorer\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Data explorer' | translate }}</p>\n        <p>\n          <small translate>\n            Display the data explorer in the navigator menu and on the group tabs.\n          </small>\n        </p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Data explorer' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.dataExplorer\"\n          name=\"dataExplorer\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-reports\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Reports' | translate }}</p>\n        <p>\n          <small translate>Display a link to the Reports list in the navigator menu.</small>\n        </p>\n      </div>\n      <label class=\"c8y-switch c8y-switch--inline m-l-auto\" title=\"{{ 'Reports' | translate }}\">\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.reports\"\n          name=\"reports\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"graph-report\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Exports' | translate }}</p>\n        <p>\n          <small translate>\n            Display a link to the Exports list under the Configuration navigator menu.\n          </small>\n        </p>\n      </div>\n      <label class=\"c8y-switch c8y-switch--inline m-l-auto\" title=\"{{ 'Exports' | translate }}\">\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.exports\"\n          name=\"exports\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-data-points\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Data point library' | translate }}</p>\n        <p>\n          <small translate>\n            Display a link to the Data point library under the Configuration navigator menu.\n          </small>\n        </p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Data point library' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.dataPointLibrary\"\n          name=\"dataPointLibrary\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-smart-rules\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Global smart rules' | translate }}</p>\n        <p>\n          <small translate>\n            Display a link to the Global smart rules under the Configuration navigator menu.\n          </small>\n        </p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Global smart rules' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.globalSmartRules\"\n          name=\"globalSmartRules\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-group-open\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Sub assets view' | translate }}</p>\n        <p><small translate>Display the sub assets tab on groups.</small></p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Sub assets view' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.subassets\"\n          name=\"subassets\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-icon icon=\"c8y-smart-rules\"></c8y-li-icon>\n    <div class=\"d-flex a-i-center\">\n      <div>\n        <p>{{ 'Smart rules for devices and groups' | translate }}</p>\n        <p>\n          <small translate>Display the smart rules tab on groups and devices.</small>\n        </p>\n      </div>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Smart rules for devices and groups' | translate }}\"\n      >\n        <input\n          type=\"checkbox\"\n          [(ngModel)]=\"config.features.smartRules\"\n          name=\"smartRules\"\n          (change)=\"updateFeatures()\"\n        />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n</c8y-list-group>\n"
            }]
    }], function () { return []; }, { onUpdate: [{
            type: Output
        }], config: [{
            type: Input
        }] }); })();

class HomeDashboardConfigComponent {
    /**
     * @ignore
     */
    constructor(cockpitConfigService) {
        this.cockpitConfigService = cockpitConfigService;
        /**
         * The types of dashboard that can be configured.
         */
        this.homeDashboardTypes = HomeDashboardType;
    }
    /**
     * @ignore
     */
    dashboardChange(selected, type) {
        if (!selected) {
            return;
        }
        switch (type) {
            case this.homeDashboardTypes.DEFAULT: {
                this.config.homeDashboardName = DEFAULT_HOME_DASHBOARD_NAME;
                this.config.userSpecificHomeDashboard = false;
                break;
            }
            case this.homeDashboardTypes.APP: {
                this.config.homeDashboardName = this.cockpitConfigService.getAppDashboardName();
                this.config.userSpecificHomeDashboard = false;
                break;
            }
            case this.homeDashboardTypes.USER: {
                this.config.homeDashboardName = USER_HOME_DASHBOARD_NAME;
                this.config.userSpecificHomeDashboard = true;
                break;
            }
        }
    }
    /**
     * @ignore
     */
    verifySelected(type) {
        if (type === this.homeDashboardTypes.USER) {
            return this.config.userSpecificHomeDashboard;
        }
        if (type === this.homeDashboardTypes.DEFAULT) {
            return this.config.homeDashboardName === DEFAULT_HOME_DASHBOARD_NAME;
        }
        return this.config.homeDashboardName === this.cockpitConfigService.getAppDashboardName();
    }
}
HomeDashboardConfigComponent.ɵfac = function HomeDashboardConfigComponent_Factory(t) { return new (t || HomeDashboardConfigComponent)(ɵngcc0.ɵɵdirectiveInject(CockpitConfigService)); };
HomeDashboardConfigComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: HomeDashboardConfigComponent, selectors: [["c8y-home-dashboard-config"]], inputs: { config: "config" }, decls: 19, vars: 3, consts: [[1, "separator-top"], [3, "selected", "onSelect"], ["translate", ""]], template: function HomeDashboardConfigComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-list-group", 0);
        ɵngcc0.ɵɵelementStart(1, "c8y-li");
        ɵngcc0.ɵɵelementStart(2, "c8y-li-radio", 1);
        ɵngcc0.ɵɵlistener("onSelect", function HomeDashboardConfigComponent_Template_c8y_li_radio_onSelect_2_listener($event) { return ctx.dashboardChange($event, ctx.homeDashboardTypes.DEFAULT); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "p", 2);
        ɵngcc0.ɵɵtext(4, "Default home dashboard");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "small", 2);
        ɵngcc0.ɵɵtext(6, "Changes done in the home dashboard are reflected across the platform.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "c8y-li");
        ɵngcc0.ɵɵelementStart(8, "c8y-li-radio", 1);
        ɵngcc0.ɵɵlistener("onSelect", function HomeDashboardConfigComponent_Template_c8y_li_radio_onSelect_8_listener($event) { return ctx.dashboardChange($event, ctx.homeDashboardTypes.APP); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "p", 2);
        ɵngcc0.ɵɵtext(10, "Custom home dashboard");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "small", 2);
        ɵngcc0.ɵɵtext(12, "Changes done to the home dashboard are reflected only in the current application.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "c8y-li");
        ɵngcc0.ɵɵelementStart(14, "c8y-li-radio", 1);
        ɵngcc0.ɵɵlistener("onSelect", function HomeDashboardConfigComponent_Template_c8y_li_radio_onSelect_14_listener($event) { return ctx.dashboardChange($event, ctx.homeDashboardTypes.USER); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(15, "p", 2);
        ɵngcc0.ɵɵtext(16, "User home dashboard");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(17, "small", 2);
        ɵngcc0.ɵɵtext(18, "Changes done to the home dashboard are reflected only for the current user. NOTE: This user needs to have inventory write permission.");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("selected", ctx.verifySelected(ctx.homeDashboardTypes.DEFAULT));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("selected", ctx.verifySelected(ctx.homeDashboardTypes.APP));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("selected", ctx.verifySelected(ctx.homeDashboardTypes.USER));
    } }, directives: [ɵngcc1.ListGroupComponent, ɵngcc1.ListItemComponent, ɵngcc1.ListItemRadioComponent, ɵngcc1.C8yTranslateDirective], encapsulation: 2 });
HomeDashboardConfigComponent.ctorParameters = () => [
    { type: CockpitConfigService }
];
HomeDashboardConfigComponent.propDecorators = {
    config: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(HomeDashboardConfigComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-home-dashboard-config',
                template: "<c8y-list-group class=\"separator-top\">\n  <c8y-li>\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.DEFAULT)\"\n      [selected]=\"verifySelected(homeDashboardTypes.DEFAULT)\"\n    >\n    </c8y-li-radio>\n    <p translate>Default home dashboard</p>\n    <small translate>Changes done in the home dashboard are reflected across the platform.</small>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.APP)\"\n      [selected]=\"verifySelected(homeDashboardTypes.APP)\"\n    >\n    </c8y-li-radio>\n    <p translate>Custom home dashboard</p>\n    <small translate\n      >Changes done to the home dashboard are reflected only in the current application.</small\n    >\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.USER)\"\n      [selected]=\"verifySelected(homeDashboardTypes.USER)\"\n    >\n    </c8y-li-radio>\n    <p translate>User home dashboard</p>\n    <small translate\n      >Changes done to the home dashboard are reflected only for the current user. NOTE: This user\n      needs to have inventory write permission.</small\n    >\n  </c8y-li>\n</c8y-list-group>\n"
            }]
    }], function () { return [{ type: CockpitConfigService }]; }, { config: [{
            type: Input
        }] }); })();

class MiscConfigComponent {
}
MiscConfigComponent.ɵfac = function MiscConfigComponent_Factory(t) { return new (t || MiscConfigComponent)(); };
MiscConfigComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MiscConfigComponent, selectors: [["c8y-misc-config"]], inputs: { config: "config" }, decls: 10, vars: 7, consts: [[1, "d-flex", "a-i-center"], [1, "c8y-switch", "c8y-switch--inline", "m-l-auto", 3, "title"], ["type", "checkbox", "name", "hideNavigator", 3, "ngModel", "ngModelChange"]], template: function MiscConfigComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-list-group");
        ɵngcc0.ɵɵelementStart(1, "c8y-li");
        ɵngcc0.ɵɵelementStart(2, "div", 0);
        ɵngcc0.ɵɵelementStart(3, "p");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "label", 1);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementStart(8, "input", 2);
        ɵngcc0.ɵɵlistener("ngModelChange", function MiscConfigComponent_Template_input_ngModelChange_8_listener($event) { return ctx.config.hideNavigator = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(9, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "Always collapse navigator on start up"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(7, 5, "Collapse navigator on start up"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.config.hideNavigator);
    } }, directives: [ɵngcc1.ListGroupComponent, ɵngcc1.ListItemComponent, ɵngcc5.CheckboxControlValueAccessor, ɵngcc5.NgControlStatus, ɵngcc5.NgModel], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
MiscConfigComponent.propDecorators = {
    config: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MiscConfigComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-misc-config',
                template: "<c8y-list-group>\n  <c8y-li>\n    <div class=\"d-flex a-i-center\">\n      <p>{{ 'Always collapse navigator on start up' | translate }}</p>\n      <label\n        class=\"c8y-switch c8y-switch--inline m-l-auto\"\n        title=\"{{ 'Collapse navigator on start up' | translate }}\"\n      >\n        <input type=\"checkbox\" [(ngModel)]=\"config.hideNavigator\" name=\"hideNavigator\" />\n        <span></span>\n      </label>\n    </div>\n  </c8y-li>\n</c8y-list-group>\n"
            }]
    }], null, { config: [{
            type: Input
        }] }); })();

class RootNodeConfigComponent {
    constructor() {
        this.onUpdate = new EventEmitter();
    }
    /**
     * Removes one of the root nodes.
     * @param node The node to remove.
     */
    removeNavigatorNode(node) {
        const index = this.config.rootNodes.indexOf(node);
        if (index > -1) {
            this.config.rootNodes.splice(index, 1);
            this.onUpdate.emit();
        }
    }
}
RootNodeConfigComponent.ɵfac = function RootNodeConfigComponent_Factory(t) { return new (t || RootNodeConfigComponent)(); };
RootNodeConfigComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RootNodeConfigComponent, selectors: [["c8y-root-node-config"]], inputs: { config: "config" }, outputs: { onUpdate: "onUpdate" }, decls: 12, vars: 11, consts: [[1, "col-sm-6"], ["translate", "", 3, "title"], [1, "separator-top"], [4, "ngIf"], [4, "ngFor", "ngForOf"], [1, "col-sm-6", "col-md-5", "col-md-offset-1"], ["name", "rootNodes", 3, "config", "ngModel", "ngModelChange", "onSelected"], [1, "c8y-empty-state", "text-left"], ["c8yIcon", "folder-open"], ["icon", "c8y-group"], [1, "content-flex-30"], [1, "col-6"], [1, "text-truncate", 3, "title"], [1, "col-4"], [1, "c8y-switch", "c8y-switch--inline", 3, "title"], ["type", "checkbox", 3, "ngModel", "name", "ngModelChange", "change"], [1, "col-2", "text-right"], [1, "btn-clean", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"]], template: function RootNodeConfigComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtext(3, " Current top level nodes ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "c8y-list-group", 2);
        ɵngcc0.ɵɵtemplate(5, RootNodeConfigComponent_c8y_li_5_Template, 7, 3, "c8y-li", 3);
        ɵngcc0.ɵɵtemplate(6, RootNodeConfigComponent_c8y_li_6_Template, 18, 13, "c8y-li", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵelementStart(8, "label", 1);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵtext(10, "Select top level nodes");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "c8y-asset-selector", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function RootNodeConfigComponent_Template_c8y_asset_selector_ngModelChange_11_listener($event) { return ctx.config.rootNodes = $event; })("onSelected", function RootNodeConfigComponent_Template_c8y_asset_selector_onSelected_11_listener() { return ctx.onUpdate.emit(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 6, "Current top level nodes"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.rootNodes.length === 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.config.rootNodes);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 8, "Select top level nodes"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("config", ɵngcc0.ɵɵpureFunction0(10, _c1))("ngModel", ctx.config.rootNodes);
    } }, directives: [ɵngcc1.C8yTranslateDirective, ɵngcc1.ListGroupComponent, ɵngcc7.NgIf, ɵngcc7.NgForOf, ɵngcc3.AssetSelectorComponent, ɵngcc5.NgControlStatus, ɵngcc5.NgModel, ɵngcc1.ListItemComponent, ɵngcc1.IconDirective, ɵngcc1.ListItemIconComponent, ɵngcc5.CheckboxControlValueAccessor], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
RootNodeConfigComponent.propDecorators = {
    config: [{ type: Input }],
    onUpdate: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RootNodeConfigComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-root-node-config',
                template: "<div class=\"col-sm-6\">\n  <label title=\"{{ 'Current top level nodes' | translate }}\" translate>\n    Current top level nodes\n  </label>\n  <c8y-list-group class=\"separator-top\">\n    <c8y-li *ngIf=\"config.rootNodes.length === 0\">\n      <div class=\"c8y-empty-state text-left\">\n        <h1 c8yIcon=\"folder-open\"></h1>\n        <p>\n          <strong>{{ 'No top level nodes set' | translate }}</strong>\n        </p>\n      </div>\n    </c8y-li>\n    <c8y-li *ngFor=\"let node of config.rootNodes; let index = index\">\n      <c8y-li-icon icon=\"c8y-group\"></c8y-li-icon>\n      <div class=\"content-flex-30\">\n        <div class=\"col-6\">\n          <div class=\"text-truncate\" title=\"{{ node.name }}\">\n            {{ node.name }}\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <label class=\"c8y-switch c8y-switch--inline\" title=\"{{ 'Hide devices' | translate }}\">\n            <input\n              type=\"checkbox\"\n              [(ngModel)]=\"node.hideDevices\"\n              name=\"node.{{ index }}.hideDevices\"\n              (change)=\"onUpdate.emit()\"\n            />\n            <span></span>\n            <small>{{ 'Hide devices' | translate }}</small>\n          </label>\n        </div>\n        <div class=\"col-2 text-right\">\n          <button\n            class=\"btn-clean\"\n            title=\"{{ 'Remove' | translate }}\"\n            (click)=\"removeNavigatorNode(node)\"\n          >\n            <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n          </button>\n        </div>\n      </div>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n\n<div class=\"col-sm-6 col-md-5 col-md-offset-1\">\n  <label title=\"{{ 'Select top level nodes' | translate }}\" translate>Select top level nodes</label>\n  <c8y-asset-selector\n    [config]=\"{ groupsOnly: true, multi: true, groupsSelectable: true }\"\n    [(ngModel)]=\"config.rootNodes\"\n    (onSelected)=\"onUpdate.emit()\"\n    name=\"rootNodes\"\n  ></c8y-asset-selector>\n</div>\n"
            }]
    }], function () { return []; }, { onUpdate: [{
            type: Output
        }], config: [{
            type: Input
        }] }); })();

class CockpitSetupStep {
    constructor(stepper, step, setup, appState, alert) {
        this.stepper = stepper;
        this.step = step;
        this.setup = setup;
        this.appState = appState;
        this.alert = alert;
        this.config = DEFAULT_CONFIG;
        this.pending = false;
    }
    next() {
        return __awaiter(this, void 0, void 0, function* () {
            this.pending = true;
            try {
                const newConfig = Object.assign(Object.assign({}, this.setup.data$.value), this.config);
                yield this.appState.updateApplicationConfig(newConfig);
                this.setup.stepCompleted(this.stepper.selectedIndex);
                this.setup.data$.next(newConfig);
                this.stepper.next();
            }
            catch (ex) {
                this.alert.addServerFailure(ex);
            }
            finally {
                this.pending = false;
            }
        });
    }
    back() {
        this.stepper.previous();
    }
}

class CockpitSetupStep1Component extends CockpitSetupStep {
    constructor(stepper, step, setup, appState, alert) {
        super(stepper, step, setup, appState, alert);
        this.stepper = stepper;
        this.step = step;
        this.setup = setup;
        this.appState = appState;
        this.alert = alert;
    }
}
CockpitSetupStep1Component.ɵfac = function CockpitSetupStep1Component_Factory(t) { return new (t || CockpitSetupStep1Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.C8yStepper), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.CdkStep), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SetupComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService)); };
CockpitSetupStep1Component.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitSetupStep1Component, selectors: [["c8y-cockpit-setup-step1"]], hostAttrs: [1, "d-contents"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 15, vars: 2, consts: [["name", "form", 1, "d-contents"], ["stepForm", "ngForm"], [1, "container-fluid", "flex-no-shrink", "fit-w"], [1, "row", "separator-bottom"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3", "p-t-24", "p-l-16", "p-r-16"], ["translate", "", 1, "text-medium", "l-h-base"], ["translate", "", 1, "lead", "text-normal"], [1, "inner-scroll", "flex-grow"], [1, "container-fluid", "fit-w"], [1, "row"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3"], [3, "config"], [3, "index", "onNext", "onBack"]], template: function CockpitSetupStep1Component_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "h3", 5);
        ɵngcc0.ɵɵtext(6, "Features");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "p", 6);
        ɵngcc0.ɵɵtext(8, " Define which are the enabled features in the current application. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 7);
        ɵngcc0.ɵɵelementStart(10, "div", 8);
        ɵngcc0.ɵɵelementStart(11, "div", 9);
        ɵngcc0.ɵɵelementStart(12, "div", 10);
        ɵngcc0.ɵɵelement(13, "c8y-feature-config", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-cockpit-setup-stepper-buttons", 12);
        ɵngcc0.ɵɵlistener("onNext", function CockpitSetupStep1Component_Template_c8y_cockpit_setup_stepper_buttons_onNext_14_listener() { return ctx.next(); })("onBack", function CockpitSetupStep1Component_Template_c8y_cockpit_setup_stepper_buttons_onBack_14_listener() { return ctx.back(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(13);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("index", ctx.stepper.selectedIndex);
    } }, directives: function () { return [ɵngcc5.ɵNgNoValidate, ɵngcc5.NgControlStatusGroup, ɵngcc5.NgForm, ɵngcc1.C8yTranslateDirective, FeatureConfigComponent, CockpitSetupStepperButtonsComponent]; }, encapsulation: 2 });
CockpitSetupStep1Component.ctorParameters = () => [
    { type: C8yStepper },
    { type: CdkStep },
    { type: SetupComponent },
    { type: AppStateService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitSetupStep1Component, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-setup-step1',
                template: "<form #stepForm=\"ngForm\" name=\"form\" class=\"d-contents\">\n  <div class=\"container-fluid flex-no-shrink fit-w\">\n    <div class=\"row separator-bottom\">\n      <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3  p-t-24 p-l-16 p-r-16\">\n        <h3 translate class=\"text-medium l-h-base\">Features</h3>\n        <p class=\"lead text-normal\" translate>\n          Define which are the enabled features in the current application.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"inner-scroll flex-grow\">\n    <div class=\"container-fluid fit-w\">\n      <div class=\"row\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <c8y-feature-config [config]=\"config\"></c8y-feature-config>\n        </div>\n      </div>\n    </div>\n  </div>\n  <c8y-cockpit-setup-stepper-buttons\n    [index]=\"stepper.selectedIndex\"\n    (onNext)=\"next()\"\n    (onBack)=\"back()\"\n  >\n  </c8y-cockpit-setup-stepper-buttons>\n</form>\n",
                host: { class: 'd-contents' }
            }]
    }], function () { return [{ type: ɵngcc1.C8yStepper }, { type: ɵngcc8.CdkStep }, { type: ɵngcc1.SetupComponent }, { type: ɵngcc1.AppStateService }, { type: ɵngcc1.AlertService }]; }, null); })();

class CockpitSetupStep2Component extends CockpitSetupStep {
    constructor(stepper, step, setup, appState, alert) {
        super(stepper, step, setup, appState, alert);
        this.stepper = stepper;
        this.step = step;
        this.setup = setup;
        this.appState = appState;
        this.alert = alert;
    }
}
CockpitSetupStep2Component.ɵfac = function CockpitSetupStep2Component_Factory(t) { return new (t || CockpitSetupStep2Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.C8yStepper), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.CdkStep), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SetupComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService)); };
CockpitSetupStep2Component.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitSetupStep2Component, selectors: [["c8y-cockpit-setup-step2"]], hostAttrs: [1, "d-contents"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 15, vars: 2, consts: [["name", "form", 1, "d-contents"], ["stepForm", "ngForm"], [1, "container-fluid", "flex-no-shrink", "fit-w"], [1, "row", "separator-bottom"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3", "p-t-24", "p-l-16", "p-r-16"], ["translate", "", 1, "text-medium", "l-h-base"], ["translate", "", 1, "lead", "text-normal"], [1, "inner-scroll", "flex-grow"], [1, "container-fluid", "fit-w", "p-t-16"], [1, "row"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3"], [3, "config"], [3, "index", "onNext", "onBack"]], template: function CockpitSetupStep2Component_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "h3", 5);
        ɵngcc0.ɵɵtext(6, "Top level nodes");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "p", 6);
        ɵngcc0.ɵɵtext(8, " Select which nodes to display in the top level of the navigator menu. By default, only Groups is shown. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 7);
        ɵngcc0.ɵɵelementStart(10, "div", 8);
        ɵngcc0.ɵɵelementStart(11, "div", 9);
        ɵngcc0.ɵɵelementStart(12, "div", 10);
        ɵngcc0.ɵɵelement(13, "c8y-root-node-config", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-cockpit-setup-stepper-buttons", 12);
        ɵngcc0.ɵɵlistener("onNext", function CockpitSetupStep2Component_Template_c8y_cockpit_setup_stepper_buttons_onNext_14_listener() { return ctx.next(); })("onBack", function CockpitSetupStep2Component_Template_c8y_cockpit_setup_stepper_buttons_onBack_14_listener() { return ctx.back(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(13);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("index", ctx.stepper.selectedIndex);
    } }, directives: function () { return [ɵngcc5.ɵNgNoValidate, ɵngcc5.NgControlStatusGroup, ɵngcc5.NgForm, ɵngcc1.C8yTranslateDirective, RootNodeConfigComponent, CockpitSetupStepperButtonsComponent]; }, encapsulation: 2 });
CockpitSetupStep2Component.ctorParameters = () => [
    { type: C8yStepper },
    { type: CdkStep },
    { type: SetupComponent },
    { type: AppStateService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitSetupStep2Component, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-setup-step2',
                template: "<form #stepForm=\"ngForm\" name=\"form\" class=\"d-contents\">\n  <div class=\"container-fluid flex-no-shrink fit-w\">\n    <div class=\"row separator-bottom\">\n      <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3 p-t-24 p-l-16 p-r-16\">\n        <h3 translate class=\"text-medium l-h-base\">Top level nodes</h3>\n        <p class=\"lead text-normal\" translate>\n          Select which nodes to display in the top level of the navigator menu. By default, only\n          Groups is shown.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"inner-scroll flex-grow\">\n    <div class=\"container-fluid fit-w p-t-16\">\n      <div class=\"row\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <c8y-root-node-config [config]=\"config\"></c8y-root-node-config>\n        </div>\n      </div>\n    </div>\n  </div>\n  <c8y-cockpit-setup-stepper-buttons\n    [index]=\"stepper.selectedIndex\"\n    (onNext)=\"next()\"\n    (onBack)=\"back()\"\n  >\n  </c8y-cockpit-setup-stepper-buttons>\n</form>\n",
                host: { class: 'd-contents' }
            }]
    }], function () { return [{ type: ɵngcc1.C8yStepper }, { type: ɵngcc8.CdkStep }, { type: ɵngcc1.SetupComponent }, { type: ɵngcc1.AppStateService }, { type: ɵngcc1.AlertService }]; }, null); })();

class CockpitSetupStep3Component extends CockpitSetupStep {
    constructor(stepper, step, setup, appState, alert) {
        super(stepper, step, setup, appState, alert);
        this.stepper = stepper;
        this.step = step;
        this.setup = setup;
        this.appState = appState;
        this.alert = alert;
    }
}
CockpitSetupStep3Component.ɵfac = function CockpitSetupStep3Component_Factory(t) { return new (t || CockpitSetupStep3Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.C8yStepper), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.CdkStep), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SetupComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService)); };
CockpitSetupStep3Component.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitSetupStep3Component, selectors: [["c8y-cockpit-setup-step3"]], hostAttrs: [1, "d-contents"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 15, vars: 2, consts: [["name", "form", 1, "d-contents"], ["stepForm", "ngForm"], [1, "container-fluid", "flex-no-shrink", "fit-w"], [1, "row", "separator-bottom"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3", "p-t-24", "p-l-16", "p-r-16"], ["translate", "", 1, "text-medium", "l-h-base"], ["translate", "", 1, "lead", "text-normal"], [1, "inner-scroll", "flex-grow"], [1, "container-fluid", "fit-w"], [1, "row"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3"], [3, "config"], [3, "index", "onNext", "onBack"]], template: function CockpitSetupStep3Component_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "h3", 5);
        ɵngcc0.ɵɵtext(6, "Home dashboard");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "p", 6);
        ɵngcc0.ɵɵtext(8, " The landing page for this application. By default it is a customizable dashboard displaying data for the overall tenant. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 7);
        ɵngcc0.ɵɵelementStart(10, "div", 8);
        ɵngcc0.ɵɵelementStart(11, "div", 9);
        ɵngcc0.ɵɵelementStart(12, "div", 10);
        ɵngcc0.ɵɵelement(13, "c8y-home-dashboard-config", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-cockpit-setup-stepper-buttons", 12);
        ɵngcc0.ɵɵlistener("onNext", function CockpitSetupStep3Component_Template_c8y_cockpit_setup_stepper_buttons_onNext_14_listener() { return ctx.next(); })("onBack", function CockpitSetupStep3Component_Template_c8y_cockpit_setup_stepper_buttons_onBack_14_listener() { return ctx.back(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(13);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("index", ctx.stepper.selectedIndex);
    } }, directives: function () { return [ɵngcc5.ɵNgNoValidate, ɵngcc5.NgControlStatusGroup, ɵngcc5.NgForm, ɵngcc1.C8yTranslateDirective, HomeDashboardConfigComponent, CockpitSetupStepperButtonsComponent]; }, encapsulation: 2 });
CockpitSetupStep3Component.ctorParameters = () => [
    { type: C8yStepper },
    { type: CdkStep },
    { type: SetupComponent },
    { type: AppStateService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitSetupStep3Component, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-setup-step3',
                template: "<form #stepForm=\"ngForm\" name=\"form\" class=\"d-contents\">\n  <div class=\"container-fluid flex-no-shrink fit-w\">\n    <div class=\"row separator-bottom\">\n      <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3  p-t-24 p-l-16 p-r-16\">\n        <h3 translate class=\"text-medium l-h-base\">Home dashboard</h3>\n        <p class=\"lead text-normal\" translate>\n          The landing page for this application. By default it is a customizable dashboard\n          displaying data for the overall tenant.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"inner-scroll flex-grow\">\n    <div class=\"container-fluid fit-w\">\n      <div class=\"row\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <c8y-home-dashboard-config [config]=\"config\"></c8y-home-dashboard-config>\n        </div>\n      </div>\n    </div>\n  </div>\n  <c8y-cockpit-setup-stepper-buttons\n    [index]=\"stepper.selectedIndex\"\n    (onNext)=\"next()\"\n    (onBack)=\"back()\"\n  >\n  </c8y-cockpit-setup-stepper-buttons>\n</form>\n",
                host: { class: 'd-contents' }
            }]
    }], function () { return [{ type: ɵngcc1.C8yStepper }, { type: ɵngcc8.CdkStep }, { type: ɵngcc1.SetupComponent }, { type: ɵngcc1.AppStateService }, { type: ɵngcc1.AlertService }]; }, null); })();

class CockpitSetupStep4Component extends CockpitSetupStep {
    constructor(stepper, step, setup, appState, alert) {
        super(stepper, step, setup, appState, alert);
        this.stepper = stepper;
        this.step = step;
        this.setup = setup;
        this.appState = appState;
        this.alert = alert;
    }
}
CockpitSetupStep4Component.ɵfac = function CockpitSetupStep4Component_Factory(t) { return new (t || CockpitSetupStep4Component)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.C8yStepper), ɵngcc0.ɵɵdirectiveInject(ɵngcc8.CdkStep), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.SetupComponent), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService)); };
CockpitSetupStep4Component.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitSetupStep4Component, selectors: [["c8y-cockpit-setup-step4"]], hostAttrs: [1, "d-contents"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 15, vars: 2, consts: [["name", "form", 1, "d-contents"], ["stepForm", "ngForm"], [1, "container-fluid", "flex-no-shrink", "fit-w"], [1, "row", "separator-bottom"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3", "p-t-24", "p-l-16", "p-r-16"], ["translate", "", 1, "text-medium", "l-h-base"], ["translate", "", 1, "lead", "text-normal"], [1, "inner-scroll", "flex-grow"], [1, "container-fluid", "fit-w"], [1, "row"], [1, "col-md-8", "col-md-offset-2", "col-lg-6", "col-lg-offset-3"], [3, "config"], [3, "index", "onNext", "onBack"]], template: function CockpitSetupStep4Component_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "form", 0, 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "h3", 5);
        ɵngcc0.ɵɵtext(6, "Misc");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "p", 6);
        ɵngcc0.ɵɵtext(8, " Miscellaneous settings for the current application. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 7);
        ɵngcc0.ɵɵelementStart(10, "div", 8);
        ɵngcc0.ɵɵelementStart(11, "div", 9);
        ɵngcc0.ɵɵelementStart(12, "div", 10);
        ɵngcc0.ɵɵelement(13, "c8y-misc-config", 11);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "c8y-cockpit-setup-stepper-buttons", 12);
        ɵngcc0.ɵɵlistener("onNext", function CockpitSetupStep4Component_Template_c8y_cockpit_setup_stepper_buttons_onNext_14_listener() { return ctx.next(); })("onBack", function CockpitSetupStep4Component_Template_c8y_cockpit_setup_stepper_buttons_onBack_14_listener() { return ctx.back(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(13);
        ɵngcc0.ɵɵproperty("config", ctx.config);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("index", ctx.stepper.selectedIndex);
    } }, directives: function () { return [ɵngcc5.ɵNgNoValidate, ɵngcc5.NgControlStatusGroup, ɵngcc5.NgForm, ɵngcc1.C8yTranslateDirective, MiscConfigComponent, CockpitSetupStepperButtonsComponent]; }, encapsulation: 2 });
CockpitSetupStep4Component.ctorParameters = () => [
    { type: C8yStepper },
    { type: CdkStep },
    { type: SetupComponent },
    { type: AppStateService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitSetupStep4Component, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-setup-step4',
                template: "<form #stepForm=\"ngForm\" name=\"form\" class=\"d-contents\">\n  <div class=\"container-fluid flex-no-shrink fit-w\">\n    <div class=\"row separator-bottom\">\n      <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3 p-t-24 p-l-16 p-r-16\">\n        <h3 translate class=\"text-medium l-h-base\">Misc</h3>\n        <p class=\"lead text-normal\" translate>\n          Miscellaneous settings for the current application.\n        </p>\n      </div>\n    </div>\n  </div>\n  <div class=\"inner-scroll flex-grow\">\n    <div class=\"container-fluid fit-w\">\n      <div class=\"row\">\n        <div class=\"col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3\">\n          <c8y-misc-config [config]=\"config\"></c8y-misc-config>\n        </div>\n      </div>\n    </div>\n  </div>\n  <c8y-cockpit-setup-stepper-buttons\n    [index]=\"stepper.selectedIndex\"\n    (onNext)=\"next()\"\n    (onBack)=\"back()\"\n  >\n  </c8y-cockpit-setup-stepper-buttons>\n</form>\n",
                host: { class: 'd-contents' }
            }]
    }], function () { return [{ type: ɵngcc1.C8yStepper }, { type: ɵngcc8.CdkStep }, { type: ɵngcc1.SetupComponent }, { type: ɵngcc1.AppStateService }, { type: ɵngcc1.AlertService }]; }, null); })();

class CockpitSetupStepperButtonsComponent {
    constructor() {
        this.onNext = new EventEmitter();
        this.onBack = new EventEmitter();
    }
}
CockpitSetupStepperButtonsComponent.ɵfac = function CockpitSetupStepperButtonsComponent_Factory(t) { return new (t || CockpitSetupStepperButtonsComponent)(); };
CockpitSetupStepperButtonsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CockpitSetupStepperButtonsComponent, selectors: [["c8y-cockpit-setup-stepper-buttons"]], inputs: { index: "index" }, outputs: { onNext: "onNext", onBack: "onBack" }, decls: 4, vars: 1, consts: [[1, "card-footer", "separator", "d-flex", "j-c-center"], ["class", "btn btn-default", "type", "button", "translate", "", 3, "click", 4, "ngIf"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", 3, "click"], ["type", "button", "translate", "", 1, "btn", "btn-default", 3, "click"]], template: function CockpitSetupStepperButtonsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, CockpitSetupStepperButtonsComponent_button_1_Template, 2, 0, "button", 1);
        ɵngcc0.ɵɵelementStart(2, "button", 2);
        ɵngcc0.ɵɵlistener("click", function CockpitSetupStepperButtonsComponent_Template_button_click_2_listener() { return ctx.onNext.emit(); });
        ɵngcc0.ɵɵtext(3, " Save and continue ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.index !== 0);
    } }, directives: [ɵngcc7.NgIf, ɵngcc1.C8yTranslateDirective], encapsulation: 2 });
CockpitSetupStepperButtonsComponent.propDecorators = {
    index: [{ type: Input }],
    onNext: [{ type: Output }],
    onBack: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitSetupStepperButtonsComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-cockpit-setup-stepper-buttons',
                template: "<div class=\"card-footer separator d-flex j-c-center\">\n  <button\n    class=\"btn btn-default\"\n    type=\"button\"\n    (click)=\"onBack.emit()\"\n    *ngIf=\"index !== 0\"\n    translate\n  >\n    Previous\n  </button>\n  <button class=\"btn btn-primary\" type=\"submit\" (click)=\"onNext.emit()\" translate>\n    Save and continue\n  </button>\n</div>\n"
            }]
    }], function () { return []; }, { onNext: [{
            type: Output
        }], onBack: [{
            type: Output
        }], index: [{
            type: Input
        }] }); })();

const ɵ0 = [
    {
        path: COCKPIT_CONFIG_PATH,
        component: CockpitConfigurationComponent,
        canActivate: [CockpitConfigGuard]
    }
], ɵ1 = [
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep1Component,
        label: gettext('Features'),
        setupId: 'cockpitFeatures',
        priority: 0
    },
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep2Component,
        label: gettext('Top level nodes'),
        setupId: 'cockpitTopLevelNodes',
        priority: 10
    },
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep3Component,
        label: gettext('Home Dashboard'),
        setupId: 'cockpitHomeDashboard',
        priority: 20
    },
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep4Component,
        label: gettext('Misc'),
        setupId: 'cockpitMisc',
        priority: 30
    }
];
class CockpitConfigModule {
    constructor(service) {
        // only for DI, not used but needed.
    }
}
CockpitConfigModule.ɵfac = function CockpitConfigModule_Factory(t) { return new (t || CockpitConfigModule)(ɵngcc0.ɵɵinject(CockpitConfigService)); };
CockpitConfigModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CockpitConfigModule });
CockpitConfigModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        CockpitConfigGuard,
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        },
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: CockpitConfigGuard,
            multi: true
        },
        {
            provide: HOOK_STEPPER,
            useValue: ɵ1,
            multi: true
        }
    ], imports: [[CoreModule, AssetSelectorModule, PopoverModule, EcosystemModule]] });
CockpitConfigModule.ctorParameters = () => [
    { type: CockpitConfigService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitConfigModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    CockpitConfigurationComponent,
                    CockpitSetupStep1Component,
                    CockpitSetupStep2Component,
                    CockpitSetupStep3Component,
                    CockpitSetupStep4Component,
                    FeatureConfigComponent,
                    RootNodeConfigComponent,
                    HomeDashboardConfigComponent,
                    MiscConfigComponent,
                    CockpitSetupStepperButtonsComponent
                ],
                imports: [CoreModule, AssetSelectorModule, PopoverModule, EcosystemModule],
                providers: [
                    CockpitConfigGuard,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: CockpitConfigGuard,
                        multi: true
                    },
                    {
                        provide: HOOK_STEPPER,
                        useValue: ɵ1,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: CockpitConfigService }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CockpitConfigModule, { declarations: function () { return [CockpitConfigurationComponent, CockpitSetupStep1Component, CockpitSetupStep2Component, CockpitSetupStep3Component, CockpitSetupStep4Component, FeatureConfigComponent, RootNodeConfigComponent, HomeDashboardConfigComponent, MiscConfigComponent, CockpitSetupStepperButtonsComponent]; }, imports: function () { return [CoreModule, AssetSelectorModule, PopoverModule, EcosystemModule]; } }); })();

/**
 * Generated bundle index. Do not edit.
 */

export { COCKPIT_CONFIG_PATH, CockpitConfigGuard, CockpitConfigModule, CockpitConfigService, CockpitConfigurationComponent, CockpitSetupStep1Component, CockpitSetupStep2Component, CockpitSetupStep3Component, CockpitSetupStep4Component, DEFAULT_CONFIG, DEFAULT_HOME_DASHBOARD_NAME, FeatureConfigComponent, HomeDashboardConfigComponent, HomeDashboardType, MiscConfigComponent, RootNodeConfigComponent, USER_HOME_DASHBOARD_NAME, ɵ0, ɵ1, CockpitSetupStep as ɵa, CockpitSetupStepperButtonsComponent as ɵb };

//# sourceMappingURL=c8y-ngx-components-cockpit-config.js.map