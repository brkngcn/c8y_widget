{"version":3,"file":"c8y-ngx-components-assets-navigator.js","sources":["../../assets-navigator/action.enum.ts","../../assets-navigator/group-fragment.model.ts","../../assets-navigator/load-more-node.ts","../../assets-navigator/asset-node.ts","../../assets-navigator/dynamic-group-node.ts","../../assets-navigator/asset-node-config.model.ts","../../assets-navigator/group.service.ts","../../assets-navigator/asset-node.service.ts","../../assets-navigator/asset-node.factory.ts","../../assets-navigator/asset-selector/group-node.ts","../../assets-navigator/asset-selector/group-node.service.ts","../../assets-navigator/asset-selector/asset-selector.service.ts","../../assets-navigator/asset-selector/asset-selector.model.ts","../../assets-navigator/asset-selector/unassigned-devices-node.ts","../../assets-navigator/asset-selector/asset-selector-base.ts","../../assets-navigator/asset-selector/asset-selector.component.ts","../../assets-navigator/asset-selector/asset-selector-node.component.ts","../../assets-navigator/asset-selector/miller-view.component.ts","../../assets-navigator/asset-selector/asset-selector.module.ts","../../assets-navigator/assets-navigator.module.ts","../../assets-navigator/c8y-ngx-components-assets-navigator.ts"],"names":["getProp"],"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","sourcesContent":["export enum Action {\n  FETCH,\n  NEXT,\n  REFRESH,\n  LOADING_DONE\n}\n","export enum GroupFragment {\n  groupType = 'c8y_DeviceGroup',\n  subGroupType = 'c8y_DeviceSubgroup',\n  groupFragmentType = 'c8y_IsDeviceGroup',\n  dataBrokerSourceFragment = 'c8y_BrokerSource',\n  dynamicGroupType = 'c8y_DynamicGroup',\n  dynamicGroupFragment = 'c8y_IsDynamicGroup',\n  dynamicGroupColumnConfig = 'c8y_UIDeviceFilterConfig',\n  dynamicGroupQueryString = 'c8y_DeviceQueryString',\n}\n","import { NavigatorNode, gettext } from '@c8y/ngx-components';\n\nexport class LoadMoreNode extends NavigatorNode {\n  static NAME = 'LoadMoreNode';\n  label = gettext('Load more');\n  icon = 'plus';\n  droppable = true;\n\n  constructor() {\n    super();\n    this.priority = -Infinity;\n  }\n\n  toString() {\n    return LoadMoreNode.NAME;\n  }\n\n  isGroup() {\n    return false;\n  }\n}\n","import { IIdentified, Paging } from '@c8y/client';\nimport {\n  ClickOptions,\n  DeviceStatusComponent,\n  gettext,\n  NavigatorNode,\n  NavigatorNodeData\n} from '@c8y/ngx-components';\nimport { debounce, get } from 'lodash-es';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { Action } from './action.enum';\nimport { AssetNodeMo, AssetNodeService } from './asset-node.service';\nimport { GroupFragment } from './group-fragment.model';\nimport { LoadMoreNode } from './load-more-node';\n\nexport class AssetNode extends NavigatorNode {\n  static NAME = 'AssetNode';\n  root: boolean;\n  mo: any;\n  hideDevices: boolean = false;\n  filterQuery$ = new BehaviorSubject<string>('');\n  showChildDevices: boolean = false;\n\n  /**\n   * Asset node children (subentries).\n   */\n  children: AssetNode[] = [];\n\n  get hasChildren() {\n    return this.root || this.service.isGroup(this.mo);\n  }\n\n  get isDevice() {\n    return !!this.mo.c8y_IsDevice;\n  }\n\n  get isDeviceOrProbablyChildDevice() {\n    return this.isDevice || this.isNeitherDeviceOrGroup;\n  }\n\n  get isNeitherDeviceOrGroup() {\n    return (\n      !this.service.isGroup(this.mo) &&\n      !this.service.isDynamicGroup(this.mo) &&\n      !this.isDevice &&\n      !this.root\n    );\n  }\n\n  events: Subject<Action>;\n  protected paging: Paging<AssetNodeMo>;\n  protected loadMoreNode: LoadMoreNode;\n  private onUpdateSubscription: Subscription;\n\n  constructor(protected service: AssetNodeService, protected config: NavigatorNodeData = {}) {\n    super(config);\n\n    this.root = this.root || false;\n    this.hideDevices = config.hideDevices ?? this.hideDevices;\n    this.mo = this.mo || {};\n    this.path = this.getPath();\n    this.draggable = !this.service?.moduleConfig?.disableDragAndDrop && !this.root;\n    this.droppable =\n      !this.service?.moduleConfig?.disableDragAndDrop && !this.isDeviceOrProbablyChildDevice;\n    this.routerLinkExact = this.root;\n    this.updateIcon(false);\n    this.onUpdateSubscription = this.service\n      .onUpdate(this)\n      .subscribe(({ data, method }) => this.refresh(data, method));\n    this.setLabel();\n    this.iconComponent = this.isDeviceOrProbablyChildDevice ? DeviceStatusComponent : undefined;\n  }\n\n  getPath() {\n    if (this.config.path) {\n      return this.config.path;\n    }\n\n    return this.root\n      ? 'group'\n      : this.isDeviceOrProbablyChildDevice\n      ? `device/${this.mo.id}`\n      : `group/${this.mo.id}`;\n  }\n\n  openOnStart(url) {\n    const urlRegex = /^\\/group\\//;\n    if (this.root) {\n      if (this.service.moduleConfig.openOnStart || urlRegex.test(url)) {\n        return true;\n      }\n    }\n    const matches = url.match(/\\/(group)\\/(\\d+)/);\n    let isMatch = false;\n    if (matches) {\n      const id = matches[2];\n      isMatch = []\n        .concat(get(this.mo, 'childAssets.references', []))\n        .some(({ managedObject }) => managedObject.id === id);\n      return isMatch;\n    }\n    return false;\n  }\n\n  refresh(mo: any = {}, method = 'GET') {\n    if (mo.id === this.mo.id) {\n      this.mo = mo;\n      this.setLabel();\n    } else if (method === 'DELETE') {\n      this.parents.forEach((node: AssetNode) => node.refresh());\n      return;\n    }\n    if (this.events) {\n      this.events.next(Action.REFRESH);\n    }\n  }\n\n  setLabel() {\n    this.label = this.config.label || (this.root && gettext('Groups')) || this.mo.name || '--';\n  }\n\n  click(options: ClickOptions = {}) {\n    if (this.isDeviceOrProbablyChildDevice && !this.showChildDevices) {\n      this.service.preferBreadcrumb(this.parents);\n      return;\n    }\n    this.hookEvents();\n    this.updateIcon(options.open);\n    if (options.open) {\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  sort() {\n    this.children.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  addManagedObject(mo) {\n    const { childAdditions } = this.mo;\n    if (!this.isChildAddition(childAdditions, mo)) {\n      this.add(this.service.createChildNode(mo, { hideDevices: this.hideDevices }));\n    }\n  }\n\n  isChildAddition(childAdditions, mo) {\n    return (\n      childAdditions && childAdditions.references.some(({ managedObject: { id } }) => id === mo.id)\n    );\n  }\n\n  destroy() {\n    this.onUpdateSubscription.unsubscribe();\n  }\n\n  get canDrop() {\n    const nodeToMove = this.service.draggedData;\n    if (nodeToMove) {\n      const shouldGetChildOfItsOwn = !!nodeToMove.find(child => child === this);\n      const isAlreadyChild = (this.children as AssetNode[]).some(\n        child => child.mo && child.mo.id === nodeToMove.mo.id\n      );\n      const preventMove = this === nodeToMove || shouldGetChildOfItsOwn || isAlreadyChild;\n      return this.droppable && !preventMove && this.service.canDropNode(this.root);\n    }\n    return this.droppable;\n  }\n\n  dragStart($event) {\n    super.dragStart($event);\n    this.service.draggedData = this;\n    this.service.rootNode.droppable = !this.isDeviceOrProbablyChildDevice;\n  }\n\n  dragEnd($event) {\n    super.dragEnd($event);\n  }\n\n  async drop($event) {\n    const nodeToMove = this.service.draggedData;\n\n    // TODO remove when asset type node can be used on the root level.\n    if (this.root && this.isAsset(nodeToMove)) {\n      this.service.alert.info(gettext('Asset type node cannot become root node.'));\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n      return;\n    }\n\n    super.drop($event);\n    if (this.canDrop) {\n      await this.moveNode(nodeToMove);\n    } else {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  hookEvents() {\n    if (!this.events) {\n      this.events = new Subject();\n      this.events.subscribe(evt => {\n        if (!this.loading) {\n          this.handleEvent(evt);\n        }\n      });\n    }\n  }\n\n  toString() {\n    return AssetNode.NAME;\n  }\n\n  /**\n   * Checks if the current node has child devices.\n   */\n  hasChildDevices() {\n    return this.mo && this.mo.c8y_IsDevice && this.mo.childDevices.references.length > 0;\n  }\n\n  protected fetch() {\n    return this.root\n      ? this.service.getRootNodes()\n      : this.service.getGroupItems(\n          this.mo.id,\n          this.hideDevices\n            ? {\n                query: `$filter=(has(${GroupFragment.groupFragmentType}))$orderby=name`\n              }\n            : {}\n        );\n  }\n\n  protected countChildren() {\n    return this.children.length;\n  }\n\n  protected async handleEvent(evt: Action) {\n    if (!this.countChildren() && evt === Action.FETCH) {\n      this.loading = true;\n      this.addNodes(await this.fetch());\n      this.loading = false;\n    } else if (evt === Action.NEXT) {\n      this.loadMoreNode.loading = true;\n      this.addNodes(await this.paging.next());\n      this.loadMoreNode.loading = false;\n    } else if (evt === Action.REFRESH) {\n      this.loading = false;\n      this.paging = undefined;\n      this.loadMoreNode = undefined;\n      this.empty();\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  protected addNodes(res) {\n    if (res.paging) {\n      const { currentPage, nextPage, pageSize } = (this.paging = res.paging);\n      if (currentPage === 1) {\n        this.empty();\n      }\n      const itemsCount = res.data.length;\n      const moreItemsAvailable = !!nextPage && itemsCount === pageSize;\n      this.toggleLoadMore(moreItemsAvailable);\n    }\n    (res.data || res).map(mo => {\n      return this.addManagedObject(mo);\n    });\n    this.events.next(Action.LOADING_DONE);\n  }\n\n  protected toggleLoadMore(show: boolean) {\n    if (!this.loadMoreNode && show) {\n      this.loadMoreNode = new LoadMoreNode();\n      this.add(this.loadMoreNode);\n      this.loadMoreNode.click = debounce(() => this.events.next(Action.NEXT), 300, {\n        leading: true,\n        trailing: false\n      });\n    }\n\n    if (this.loadMoreNode) {\n      this.loadMoreNode.hidden = !show;\n    }\n  }\n\n  private async moveNode(nodeToMove: AssetNode) {\n    try {\n      const isCopy = await this.showDropConfirm(nodeToMove);\n      await this.verifyNodeAccess(nodeToMove);\n      await this.addMovedNode(nodeToMove);\n      if (!isCopy) {\n        await this.removeMovedNode(nodeToMove);\n      }\n      this.expand();\n    } catch (ex) {\n      if (ex) {\n        this.service.alert.addServerFailure(ex);\n      }\n    } finally {\n      this.draggedHover = false;\n      this.service.draggedData = undefined;\n    }\n  }\n\n  private async showDropConfirm(nodeToMove: AssetNode) {\n    this.confirm.title = gettext('Move');\n    this.confirm.message = gettext('Do you want to move the group?');\n    const buttons: any = [\n      {\n        label: gettext('Cancel'),\n        action: () => Promise.reject()\n      },\n      {\n        label: gettext('Move'),\n        status: 'default',\n        action: () => Promise.resolve(false)\n      }\n    ];\n    if (nodeToMove.isDeviceOrProbablyChildDevice) {\n      this.confirm.title = gettext('Move or add');\n      this.confirm.message = gettext('Do you want to move or add the device?');\n      buttons.push({\n        label: gettext('Add'),\n        status: 'primary',\n        action: () => Promise.resolve(true)\n      });\n    }\n    return this.confirm.show(buttons);\n  }\n\n  private async verifyNodeAccess(nodeToMove: AssetNode) {\n    return this.service.inventory.update({ id: nodeToMove.mo.id });\n  }\n\n  private async addMovedNode(nodeToMove: AssetNode) {\n    let mo: IIdentified;\n\n    if (this.root && !this.isAsset(nodeToMove)) {\n      mo = (\n        await this.service.inventory.update({\n          id: nodeToMove.mo.id,\n          type: GroupFragment.groupType\n        })\n      ).data;\n\n      this.addManagedObject(mo);\n      return;\n    }\n\n    mo = (await this.service.inventory.childAssetsAdd(nodeToMove.mo, this.mo)).data;\n    this.addManagedObject(mo);\n  }\n\n  private isAsset(nodeToMove: AssetNode) {\n    // TODO use isAsset check when https://github.softwareag.com/IOTA/cumulocity-ui/pull/690 is merged.\n    // Do not override asset type!\n    return nodeToMove.mo?.c8y_IsAsset;\n  }\n\n  private async removeMovedNode(nodeToMove: AssetNode) {\n    for (const parent of nodeToMove.parents as AssetNode[]) {\n      if (parent.mo && parent.mo.type === GroupFragment.dynamicGroupType) {\n        break; // smart groups don't need to be changed\n      }\n\n      if (parent.root && !this.isAsset(nodeToMove)) {\n        await this.service.inventory.update({\n          id: nodeToMove.mo.id,\n          type: GroupFragment.subGroupType\n        });\n      }\n\n      if (!parent.root) {\n        await this.service.inventory.childAssetsRemove(nodeToMove.mo, parent.mo);\n      }\n      parent.remove(nodeToMove);\n    }\n  }\n\n  private updateIcon(open) {\n    this.icon = this.service.icon(\n      // if it's root we are going to pass a fake mo to get the same icon as groups\n      this.root ? { c8y_IsDeviceGroup: {} } : this.mo,\n      open\n    );\n  }\n}\n","import { AssetNode } from './asset-node';\nimport { AssetNodeService } from './asset-node.service';\n\nexport class DynamicGroupNode extends AssetNode {\n  constructor(protected service: AssetNodeService, config = {}) {\n    super(service, config);\n    this.draggable = false;\n    this.droppable = false;\n  }\n\n  get hasChildren() {\n    return true;\n  }\n\n  get query() {\n    return this.mo.c8y_DeviceQueryString;\n  }\n\n  protected fetch(): any {\n    return this.service.getDynamicGroupItems(this.query);\n  }\n}\n","import { InjectionToken } from '@angular/core';\r\nimport { NavigatorNode } from '@c8y/ngx-components';\r\nimport { AssetNode } from './asset-node';\r\nexport const ASSET_NAVIGATOR_CONFIG = new InjectionToken<AssetNavigatorConfig>('AssetNodeConfig');\r\n\r\n/**\r\n * Configuration object of the AssetsNavigatorModule.\r\n */\r\nexport interface AssetNavigatorConfig {\r\n  /**\r\n   * Allows to enable smart groups in the module.\r\n   * Default value: false.\r\n   */\r\n  smartGroups?: boolean;\r\n  /**\r\n   * Expands the root navigator node when the navigator is initialized.\r\n   * Default value: false\r\n   */\r\n  openOnStart?: boolean;\r\n  /**\r\n   * Allows to change the position of the root group in the navigator.\r\n   * The higher the value, the higher the position in navigation.\r\n   * Default value: 2000.\r\n   */\r\n  rootNodePriority?: number;\r\n  /**\r\n   * Allows to drag and drop items in the asset navigator.\r\n   * Default value: true.\r\n   */\r\n  disableDragAndDrop?: boolean;\r\n  /**\r\n   * Allows to override properies of the root group or hide it.\r\n   * Setup examples:\r\n   * - `rootNavigatorNode: true` - shows the default navigator node (default),\r\n   * - `rootNavigatorNode: false` - hides the navigator node,\r\n   * - `rootNavigatorNode: { label: 'New name', ... }` - overrides default navigator node,\r\n   * - `rootNavigatorNode: new NavigatorNode({ label: 'New name', ... })` - overrides default navigator node,\r\n   */\r\n  rootNavigatorNode?: boolean | Partial<NavigatorNode | AssetNode>;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { GroupFragment } from './group-fragment.model';\nimport { IManagedObject } from '@c8y/client';\nimport { AssetTypesService } from '@c8y/ngx-components';\n\nexport const MO_TYPES = [\n  'asset',\n  'dynamicGroup',\n  'brokerSource',\n  'brokerSourceInactive',\n  'group',\n  'other'\n] as const;\n\nexport type MoTypes = typeof MO_TYPES[number];\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceGroupService {\n  readonly icons = {\n    brokerSourceInactive: {\n      icon: 'c8y-group-remote-inactive',\n      iconOpen: 'c8y-group-remote-inactive'\n    },\n    brokerSource: {\n      icon: 'c8y-group-remote',\n      iconOpen: 'c8y-group-remote-open'\n    },\n    group: {\n      icon: 'c8y-group',\n      iconOpen: 'c8y-group-open'\n    },\n    dynamicGroup: {\n      icon: 'c8y-group-smart',\n      iconOpen: 'c8y-group-smart-open'\n    },\n    other: {\n      icon: 'exchange',\n      iconClass: 'statusUnknown'\n    }\n  };\n  dataBrokerSourceFragmentInactive = `_${GroupFragment.dataBrokerSourceFragment}`;\n\n  constructor(protected assetTypesService: AssetTypesService) {}\n\n  /**\n   * Finds an icon based on the contents of a managed object.\n   * It takes into account factors such as type, and specific fragemnts.\n   * @param mo Managed object to be checked.\n   * @param open Determines whether the method should return an alternative icon showing the open state.\n   * @returns Returns an icon.\n   */\n  icon(mo: IManagedObject, open: boolean = false): string {\n    let icon: string;\n\n    const genericMoType = this.determineMoType(mo);\n\n    if (genericMoType === 'asset') {\n      icon = this.getAssetCustomIcon(mo.type, open);\n      return icon;\n    }\n    const typeIcons = this.getDefaultIcon(genericMoType);\n\n    return (open && (typeIcons as any).iconOpen) || typeIcons.icon;\n  }\n\n  /**\n   * Checks whether a given managed object is a group.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a group.\n   */\n  isGroup(mo: IManagedObject): boolean {\n    return !!mo[GroupFragment.groupFragmentType] || mo.type === GroupFragment.groupType;\n  }\n\n  /**\n   * Checks whether a given managed object is a dynamic group.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a dynamic group.\n   */\n  isDynamicGroup(mo: IManagedObject): boolean {\n    return !!mo[GroupFragment.dynamicGroupFragment] || mo.type === GroupFragment.dynamicGroupType;\n  }\n\n  /**\n   * Checks whether a given managed object is a data broker.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a data broker.\n   */\n  isDataBroker(mo: IManagedObject): boolean {\n    return (\n      !!mo[GroupFragment.dataBrokerSourceFragment] || !!mo[this.dataBrokerSourceFragmentInactive]\n    );\n  }\n\n  /**\n   * Checks whether a given managed object is a data broker active.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a data broker active.\n   */\n  isDataBrokerActive(mo: IManagedObject) {\n    return (\n      !!mo[GroupFragment.dataBrokerSourceFragment] && !mo[this.dataBrokerSourceFragmentInactive]\n    );\n  }\n\n  /**\n   * Checks whether a given managed object is an asset.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is an asset.\n   */\n  isAsset(mo: IManagedObject) {\n    return !!mo.c8y_IsAsset;\n  }\n\n  /**\n   * Checks whether the object belongs to any type of group.\n   * Types of groups: group, dynamic group, data broker, data broker active.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object belongs to the group category.\n   */\n  isAnyGroup(mo: IManagedObject) {\n    return (\n      this.isGroup(mo) ||\n      this.isDynamicGroup(mo) ||\n      this.isDataBroker(mo) ||\n      this.isDataBrokerActive(mo)\n    );\n  }\n\n  /**\n   * Checks whether a given managed object is a device.\n   * @param mo Managed object to be checked.\n   * @returns Returns true if the managed object is a device.\n   */\n  isDevice(mo: IManagedObject) {\n    return !!mo.c8y_IsDevice;\n  }\n\n  private getAssetCustomIcon(moType: string, open: boolean = false): string {\n    return this.assetTypesService.getIcon(moType, open);\n  }\n\n  private getDefaultIcon(moType: MoTypes) {\n    return this.icons[moType];\n  }\n\n  private determineMoType(mo: IManagedObject): MoTypes {\n    if (this.isAsset(mo)) {\n      return 'asset';\n    }\n\n    if (this.isDynamicGroup(mo)) {\n      return 'dynamicGroup';\n    }\n\n    if (this.isDataBrokerActive(mo)) {\n      return 'brokerSource';\n    }\n\n    if (this.isDataBroker(mo)) {\n      return 'brokerSourceInactive';\n    }\n\n    if (this.isGroup(mo)) {\n      return 'group';\n    }\n\n    return 'other';\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { InventoryService, QueriesUtil, UserService, IManagedObject, IResult } from '@c8y/client';\nimport {\n  AlertService,\n  BreadcrumbService,\n  ModalService,\n  NavigatorNode,\n  AppStateService,\n  NavigatorNodeData,\n  OptionsService\n} from '@c8y/ngx-components';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { empty } from 'rxjs';\nimport { filter, mergeMap } from 'rxjs/operators';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { DynamicGroupNode } from './dynamic-group-node';\nimport { GroupFragment } from './group-fragment.model';\nimport { DeviceGroupService } from './group.service';\n\nexport interface AssetNodeMo {\n  id: string;\n  type: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetNodeService {\n  rootNode: AssetNode;\n  firstUrl = true;\n  draggedData: AssetNode;\n  queriesUtil: QueriesUtil;\n  protected PAGE_SIZE = 20;\n\n  constructor(\n    public inventory: InventoryService,\n    public apiService: ApiService,\n    public modal: ModalService,\n    public alert: AlertService,\n    protected breadcrumbService: BreadcrumbService,\n    protected user: UserService,\n    protected appState: AppStateService,\n    protected optionsService: OptionsService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig,\n    protected deviceGroupService: DeviceGroupService\n  ) {\n    this.moduleConfig = {\n      rootNodePriority: 2000,\n      ...(moduleConfig || {})\n    };\n    this.queriesUtil = new QueriesUtil();\n  }\n\n  icon(mo: IManagedObject, open?: boolean) {\n    return this.deviceGroupService.icon(mo, open);\n  }\n\n  isGroup(mo: IManagedObject) {\n    return this.deviceGroupService.isGroup(mo);\n  }\n\n  isDynamicGroup(mo: IManagedObject) {\n    return this.deviceGroupService.isDynamicGroup(mo);\n  }\n\n  isDataBroker(mo: IManagedObject) {\n    return this.deviceGroupService.isDataBroker(mo);\n  }\n\n  isDataBrokerActive(mo: IManagedObject) {\n    return this.deviceGroupService.isDataBrokerActive(mo);\n  }\n\n  isAsset(mo: IManagedObject) {\n    return this.deviceGroupService.isAsset(mo);\n  }\n\n  isAnyGroup(mo: IManagedObject) {\n    return this.deviceGroupService.isAnyGroup(mo);\n  }\n\n  isDevice(mo: IManagedObject) {\n    return this.deviceGroupService.isDevice(mo);\n  }\n\n  createRootNode(config: NavigatorNodeData = {}) {\n    this.rootNode = this.createAssetNode({\n      root: true,\n      ...config,\n      priority: this.moduleConfig.rootNodePriority,\n      featureId: 'groups'\n    });\n    return this.rootNode;\n  }\n\n  createDynamicGroupNode(config) {\n    return new DynamicGroupNode(this, config);\n  }\n\n  createAssetNode(config: Partial<AssetNode>) {\n    return new AssetNode(this, config);\n  }\n\n  createChildNode(managedObject, config: Partial<AssetNode>) {\n    const { type } = managedObject;\n    config.mo = managedObject;\n    if (type === GroupFragment.dynamicGroupType) {\n      return this.createDynamicGroupNode(config);\n    }\n    return this.createAssetNode(config);\n  }\n\n  getRootNodes(customFilter?: any): Promise<any> {\n    const defaultFilter = {\n      pageSize: this.PAGE_SIZE,\n      withChildren: false,\n      onlyRoots: !this.optionsService.disableOnlyRootsQuery,\n      query: this.queriesUtil.buildQuery(this.navRootQueryFilter())\n    };\n    const groupFilter = { ...defaultFilter, ...customFilter };\n\n    // due to BE performance limitations we do not allow filtering and sorting for a user without inventory roles\n    if (!this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_READ')) {\n      delete groupFilter.query;\n      Object.assign(groupFilter, {\n        fragmentType: GroupFragment.groupFragmentType,\n        onlyRoots: true\n      });\n    }\n    return this.inventory.list(this.createFilter(groupFilter));\n  }\n\n  getAllInventories(customFilter?: any): Promise<any> {\n    const defaultFilter = {\n      pageSize: this.PAGE_SIZE,\n      withChildren: false\n    };\n    const groupFilter = { ...defaultFilter, ...customFilter };\n    return this.inventory.list(this.createFilter(groupFilter));\n  }\n\n  getGroupItems(moId: string, extraFilter: object = {}, withChildren = false, filterQuery = '') {\n    const queryFilter = {\n      withChildren,\n      pageSize: this.PAGE_SIZE,\n      query: this.groupQueryFilter(moId, filterQuery)\n    };\n    return this.inventory.childAssetsList(moId, { ...queryFilter, ...extraFilter });\n  }\n\n  getUnassignedDevices(withChildren = false, filterQuery = '') {\n    const queryFilter: any = {\n      fragmentType: 'c8y_IsDevice',\n      onlyRoots: true,\n      withChildren,\n      pageSize: this.PAGE_SIZE,\n      q: this.getUnassignedDevicesQueryStr(filterQuery)\n    };\n    return this.inventory.list(this.createFilter(queryFilter));\n  }\n\n  getDynamicGroupItems(groupQuery: string, filterObj: any = {}) {\n    const { query, ...queryParams } = filterObj;\n    const orderByQuery = query;\n    const queryFilter = {\n      q: this.buildCombinedQuery(groupQuery, orderByQuery),\n      ...queryParams\n    };\n    return this.inventory.list(this.createFilter(queryFilter));\n  }\n\n  getDeviceChildren(\n    moId: string,\n    extraFilter: object = {},\n    filterQuery = '',\n    withChildren = false\n  ) {\n    const queryFilter = {\n      withChildren,\n      pageSize: this.PAGE_SIZE,\n      query: this.groupQueryFilter(moId, filterQuery)\n    };\n    return this.inventory.childDevicesList(moId, { ...queryFilter, ...extraFilter });\n  }\n\n  getUnassignedDevicesQueryStr(filterQuery): string {\n    const hasGroupId = filterQuery.includes('bygroupid');\n    // Fetch all unassigned devices.\n    const defaultQueryStr = '$orderby=name';\n\n    // filterQuery is a custom query to fetch unassigned devices filtered by name.\n    return hasGroupId || !filterQuery ? defaultQueryStr : filterQuery;\n  }\n\n  groupQueryFilter(moId: string, filterQuery?: string) {\n    if (!filterQuery) {\n      return `$filter=(bygroupid(${moId}))$orderby=name`;\n    }\n    return filterQuery;\n  }\n\n  navRootQueryFilter() {\n    const navRootFilter = this.rootQueryFilter();\n    navRootFilter.__orderby = [{ name: 1 }];\n    return navRootFilter;\n  }\n\n  rootQueryFilter() {\n    const { moduleConfig } = this;\n    const rootFilter = this.optionsService.disableOnlyRootsQuery\n      ? {\n          __filter: {\n            type: GroupFragment.groupType\n          },\n          __orderby: []\n        }\n      : {\n          __filter: {\n            __has: GroupFragment.groupFragmentType\n          },\n          __orderby: []\n        };\n    if (moduleConfig.smartGroups) {\n      const queryFilter = {\n        __filter: {\n          __and: [\n            {\n              type: GroupFragment.dynamicGroupType\n            },\n            {\n              __has: GroupFragment.dynamicGroupFragment\n            },\n            { __not: { __has: `${GroupFragment.dynamicGroupFragment}.invisible` } }\n          ]\n        }\n      };\n      this.queriesUtil.addOrFilter(rootFilter, queryFilter);\n    }\n    return rootFilter;\n  }\n\n  onUpdate({ mo, root }) {\n    if (mo.id) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            ['PUT', 'DELETE', 'POST'].includes(method) &&\n            RegExp(`((inventory/managedObjects)|(service/smartgroup/smartgroups))/${mo.id}`).test(\n              url\n            )\n        )\n        .pipe(\n          filter(() => !this.draggedData),\n          mergeMap(this.apiService.resolveData),\n          filter(response => !response.data.c8y_Dashboard)\n        );\n    } else if (root) {\n      return this.apiService\n        .hookResponse(\n          ({ url, method }) =>\n            RegExp('((inventory/managedObjects)|(service/smartgroup/smartgroups))/?$').test(url) &&\n            method === 'POST'\n        )\n        .pipe(\n          mergeMap(this.apiService.resolveData),\n          filter(response => this.isNewManagedObjectRoot(response))\n        );\n    } else {\n      return empty();\n    }\n  }\n\n  isNewManagedObjectRoot(response: Partial<IResult<IManagedObject>> = {}) {\n    const { data } = response;\n    let isRootAsset = false;\n\n    if (typeof data === 'object') {\n      isRootAsset = !!data[GroupFragment.groupFragmentType];\n      if (!isRootAsset && this.moduleConfig.smartGroups) {\n        isRootAsset = !!data[GroupFragment.dynamicGroupFragment];\n      }\n    }\n    return isRootAsset;\n  }\n\n  /**\n   * Check if it is possible to drop a node after dragging.\n   * @param dropOnRoot Is the drop performed on the root node\n   */\n  canDropNode(dropOnRoot: boolean): boolean {\n    return (\n      !dropOnRoot || this.user.hasRole(this.appState.currentUser.value, 'ROLE_INVENTORY_ADMIN')\n    );\n  }\n\n  /**\n   * There could be multiple breadcrumbs for devices,\n   * so we set a preferred one on click on a device.\n   * @param parents The parent nodes of the device to select the prefered one.\n   */\n  preferBreadcrumb(parents: NavigatorNode[]) {\n    if (parents.length === 1) {\n      this.breadcrumbService.selectPreferredByPath(parents[0].path);\n    }\n  }\n\n  protected createFilter(extraParams: any = {}) {\n    const params = {\n      currentPage: 1,\n      withTotalPages: true,\n      pageSize: 10\n    };\n    return { ...params, ...extraParams };\n  }\n\n  private buildCombinedQuery(query, orderByQuery) {\n    let combinedQuery;\n    if (query && orderByQuery) {\n      const filterQuery = this.queriesUtil.buildQuery({\n        __useFilterQueryString: query\n      });\n      combinedQuery = `${filterQuery} ${orderByQuery}`;\n    } else {\n      combinedQuery = query || orderByQuery || '';\n    }\n    return combinedQuery;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { get as getProp } from 'lodash-es';\nimport { AssetNode } from './asset-node';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { AssetNodeService } from './asset-node.service';\n\n@Injectable()\nexport class AssetNodeFactory {\n  constructor(\n    private service: AssetNodeService,\n    @Optional() @Inject(ASSET_NAVIGATOR_CONFIG) public moduleConfig: AssetNavigatorConfig\n  ) {}\n\n  get(): AssetNode {\n    const rootNavigatorNode = getProp(this.moduleConfig, 'rootNavigatorNode') ?? true;\n    let { rootNode } = this.service;\n\n    if (rootNavigatorNode === false) {\n      return;\n    }\n\n    if (!rootNode) {\n      rootNode = this.service.createRootNode(rootNavigatorNode === true ? {} : rootNavigatorNode);\n    }\n    return rootNode;\n  }\n}\n","import { GroupNodeService } from './group-node.service';\nimport { AssetNode } from '../asset-node';\nimport { GroupFragment } from '../group-fragment.model';\nimport { GroupNodeConfig } from './asset-selector.model';\n\nexport class GroupNode extends AssetNode {\n  static NAME = 'GroupNode';\n\n  /**\n   * Set this true, if only groups should be shown.\n   */\n  groupsOnly = false;\n\n  /**\n   * Set this true, if it groups are also selectable.\n   */\n  groupsSelectable = false;\n  /**\n   * Devices with children can be selected to show their child devices.\n   */\n  showChildDevices = false;\n\n  /**\n   * Group node children (subentries).\n   */\n  children: GroupNode[] = [];\n\n  /**\n   * Creates a new node which shows only groups.\n   *\n   * @param service The service to use.\n   * @param config  The default configuration of the node.\n   * @param groupsOnly Set this true, if only groups should be shown.\n   * @param selectable Set this true, if it is selectable.\n   */\n\n  constructor(protected service: GroupNodeService, config: GroupNodeConfig = {}) {\n    super(service, config);\n    this.groupsOnly = config.groupsOnly || false;\n    this.groupsSelectable = config.groupsSelectable || false;\n    this.showChildDevices = config.showChildDevices || false;\n  }\n\n  /**\n   * Adds the MO as a child node.\n   * @param mo ManagedObject\n   */\n  addManagedObject(mo) {\n    const { childAdditions } = this.mo;\n    if (!this.isChildAddition(childAdditions, mo)) {\n      this.add(\n        this.service.createChildNode({\n          mo,\n          groupsOnly: this.groupsOnly,\n          groupsSelectable: this.groupsSelectable,\n          showChildDevices: this.showChildDevices\n        })\n      );\n    }\n  }\n\n  /**\n   * Counts the number of children for the current node (with the exception of the UnassignedDevicesNode).\n   */\n  countChildren(): number {\n    return this.children.filter(value => value.toString() !== 'UnassignedDevicesNode').length;\n  }\n\n  /**\n   * Removes all child nodes except the UnassignedDevicesNode.\n   */\n  empty() {\n    this.children = this.children.filter(value => value.toString() === 'UnassignedDevicesNode');\n  }\n\n  fetch() {\n    const isRoot = this.root;\n    const isDevice = this.mo.c8y_IsDevice;\n    return isRoot\n      ? this.service.getRootNodes()\n      : isDevice\n      ? this.service.getDeviceChildren(\n          this.mo.id,\n          {},\n          this.filterQuery$.value,\n          this.showChildDevices\n        )\n      : this.service.getGroupItems(\n          this.mo.id,\n          this.groupsOnly\n            ? {\n                query: `$filter=(has(${GroupFragment.groupFragmentType}))`\n              }\n            : {},\n          this.showChildDevices,\n          this.filterQuery$.value\n        );\n  }\n\n  toString() {\n    return GroupNode.NAME;\n  }\n\n  isGroup() {\n    return this.mo && this.service.isGroup(this.mo);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AssetNodeService } from '../asset-node.service';\nimport { GroupNodeConfig } from './asset-selector.model';\nimport { GroupNode } from './group-node';\n\n@Injectable()\nexport class GroupNodeService extends AssetNodeService {\n  protected PAGE_SIZE = 5;\n\n  createGroupNode(config: GroupNodeConfig) {\n    return new GroupNode(this, config);\n  }\n\n  createChildNode(config: GroupNodeConfig): GroupNode {\n    return this.createGroupNode(config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IIdentified, IManagedObject } from '@c8y/client';\nimport { AssetNodeService } from '../asset-node.service';\nimport { isArray, isNumber, isObject, isString } from 'lodash';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetSelectorService extends AssetNodeService {\n  /**\n   * Simplifies the object model based on the selected mode.\n   * @param obj The selected asset.\n   * @param mode The mode which will decide what type of model will be returned.\n   */\n  normalizeValue(\n    obj: Partial<IManagedObject>,\n    modelMode: 'simple' | 'full'\n  ): Partial<IManagedObject> | IIdentified {\n    return this.simplifyModel(this.normalizeModelValue(obj), modelMode);\n  }\n\n  simplifyModel(\n    model: Partial<IManagedObject> | IIdentified[],\n    mode: 'simple' | 'full'\n  ): Partial<IManagedObject> | IIdentified {\n    const mapModel = modelObj => {\n      const { id, name, c8y_DeviceQueryString } = modelObj as IIdentified;\n      return { id, name, ...(c8y_DeviceQueryString ? { c8y_DeviceQueryString } : {}) };\n    };\n\n    if (mode === 'full') {\n      return model;\n    }\n    if (!isArray(model)) {\n      return mapModel(model);\n    }\n    return model.map(mapModel);\n  }\n\n  private normalizeModelValue(value: any): IIdentified[] {\n    if (isNumber(value) || isString(value)) {\n      return [{ id: value }];\n    }\n    if (isArray(value)) {\n      return value;\n    }\n    if (isObject(value)) {\n      return [value];\n    }\n    return [];\n  }\n}\n","import { IManagedObject } from '@c8y/client';\nimport { IIdentified } from '@c8y/client';\nimport { gettext } from '@c8y/ngx-components';\n\nexport interface AssetSelectionChangeEvent {\n  items: IIdentified | IIdentified[];\n  change: { item: IManagedObject; isSelected: boolean };\n}\n\nexport interface GroupNodeConfig {\n  root?: boolean;\n  mo?: IManagedObject;\n  groupsOnly?: boolean;\n  groupsSelectable?: boolean;\n  showChildDevices?: boolean;\n}\n\nexport const CONFIG_OPTIONS_DEFAULT: AssetSelectorOptions = {\n  label: gettext('Asset selection'),\n  multi: false,\n  showFilter: false,\n  columnHeaders: false,\n  singleColumn: false,\n  modelMode: 'simple',\n  groupsOnly: false,\n  groupsSelectable: false,\n  search: false,\n  showUnassignedDevices: false,\n  view: 'tree',\n  showChildDevices: false\n};\n\nexport interface AssetSelectorOptions {\n  /**\n   * Already selected devices.\n   */\n  selectedDevices?: IIdentified | IIdentified[];\n  /**\n   * Defines a label to be shown to the user.\n   */\n  label?: string;\n  /**\n   * Can the user select multiple assets.\n   */\n  multi?: boolean;\n  /**\n   * displays a filter input on every column when using the miller view.\n   */\n  showFilter?: boolean;\n  /**\n   * displays a column header on every column when using the miller view.\n   */\n  columnHeaders?: boolean;\n  /**\n   * Displays only the select column.\n   */\n  singleColumn?: boolean;\n  /**\n   * Set to true to mark it as required on a form.\n   */\n  required?: boolean;\n  /**\n   * In simple model-mode the result will only contain the IDs and name of the selected\n   * assets. In full mode, everything is contained.\n   */\n  modelMode?: 'simple' | 'full';\n  /**\n   * Set this to true, if the selector should only show groups.\n   */\n  groupsOnly?;\n  /**\n   * Set this true, if groups should be selectable.\n   */\n  groupsSelectable?;\n  /**\n   * Enable to display global search in the asset-selector (only possible whithout device context).\n   */\n  search?: boolean;\n  /**\n   * Displays all unassigned devices in a custom root group.\n   */\n  showUnassignedDevices?: boolean;\n  /**\n   * Set the view of the asset selector with tree view as default.\n   */\n  view?: 'tree' | 'miller';\n  /**\n   * Used only for miller-view, displays the column level for the current node.\n   * E.g if the index is one, this will be second column.\n   */\n  index?: number;\n  /**\n   * Used only for single column, the array contains all selected columns.\n   */\n  selectedColumns?: IIdentified[] | IIdentified;\n  /**\n   * Devices with children can be selected to show their child devices.\n   */\n  showChildDevices?: boolean;\n}\n","import { ClickOptions, gettext } from '@c8y/ngx-components';\nimport { Action } from '../action.enum';\nimport { GroupNodeConfig } from './asset-selector.model';\nimport { GroupNode } from './group-node';\nimport { GroupNodeService } from './group-node.service';\n\nexport class UnassignedDevicesNode extends GroupNode {\n  static NAME = 'UnassignedDevicesNode';\n  label = gettext('Unassigned devices');\n  icon = 'delete-folder';\n  groupsSelectable = false;\n  groupsOnly = false;\n  showChildDevices = false;\n  mo = {};\n\n  constructor(protected service: GroupNodeService, config: GroupNodeConfig = {}) {\n    super(service, config);\n    this.priority = Infinity;\n    this.showChildDevices = config.showChildDevices || false;\n  }\n\n  click(options: ClickOptions = {}) {\n    this.hookEvents();\n    if (options.open) {\n      this.events.next(Action.FETCH);\n    }\n  }\n\n  addManagedObject(mo) {\n    this.add(this.service.createChildNode({ mo, showChildDevices: this.showChildDevices }));\n  }\n\n  fetch() {\n    return this.service.getUnassignedDevices(this.showChildDevices, this.filterQuery$.value);\n  }\n\n  isGroup() {\n    return true;\n  }\n\n  toString() {\n    return UnassignedDevicesNode.NAME;\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { AssetSelectionChangeEvent, AssetSelectorOptions } from './asset-selector.model';\nimport { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport class AssetSelectorBase {\n  /**\n   * Config object containing all options for the asset selector.\n   */\n  config: AssetSelectorOptions = {};\n  /**\n   * An array of predefined nodes.\n   */\n  selected: Array<Partial<IManagedObject>> | IIdentified[] | IIdentified;\n  /**\n   * The loading state of the current node.\n   */\n  isLoading: boolean = false;\n  /**\n   * Emit the selected asset or assets.\n   */\n  onSelected = new EventEmitter<AssetSelectionChangeEvent>();\n\n  private onChange: (mo: IIdentified[] | IIdentified) => void;\n  private onTouched: () => void;\n\n  constructor(\n    protected groupNodeService: GroupNodeService,\n    protected inventory: InventoryService,\n    protected assetSelectorService: AssetSelectorService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  validate(control: AbstractControl): ValidationErrors {\n    if (this.config.required && (!control.value || control.value.length === 0)) {\n      return { required: true };\n    }\n    return null;\n  }\n\n  /**\n   * @ignore\n   */\n  writeValue(obj: any): void {\n    this.selected = this.assetSelectorService.normalizeValue(obj, this.config.modelMode);\n  }\n\n  /**\n   * @ignore\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * @ignore\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * @ignore\n   */\n  doBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  /**\n   * Deselects all expect the given one.\n   * @param selectedMo The selected asset (optional, if empty -> just deselect all).\n   */\n  deselectAll(selectedMo?: IManagedObject) {\n    this.selected = [];\n    if (selectedMo) {\n      this.selected = [this.assetSelectorService.simplifyModel(selectedMo, this.config.modelMode)];\n    }\n    this.emitChange(this.selected, selectedMo, !!selectedMo);\n    this.doBlur();\n  }\n\n  /**\n   * Adds an managed object to the selected array and emits the change.\n   * @param selectedMo The selected asset.\n   */\n  select(selectedMo: IManagedObject) {\n    if (!this.config.multi) {\n      this.selected = [];\n    }\n    const index = this.getIndexOfSelected(this.selected, selectedMo);\n    if (index === -1) {\n      this.selected.push(\n        this.assetSelectorService.simplifyModel(selectedMo, this.config.modelMode)\n      );\n    }\n    this.emitChange(this.selected, selectedMo, true);\n    this.doBlur();\n  }\n\n  /**\n   * Removes a managed object from the selected array and emits the change.\n   * @param selectedMo The selected asset.\n   */\n  deselect(selectedMo: IManagedObject) {\n    const index = this.getIndexOfSelected(this.selected, selectedMo);\n    if (index > -1) {\n      this.selected.splice(index, 1);\n    }\n    this.emitChange(this.selected, selectedMo, false);\n    this.doBlur();\n  }\n\n  /**\n   * Returns the index of the currently selected item.\n   * @param selected All selected items\n   * @param selectedMo The new selected item-\n   * @returns An index, or -1 if not found.\n   */\n  getIndexOfSelected(\n    selected: Array<Partial<IIdentified>> | Partial<IIdentified>,\n    selectedMo: IIdentified\n  ) {\n    return selected.findIndex(mo => mo.id === selectedMo.id);\n  }\n\n  emitChange(selected: IIdentified | IIdentified[], item: IManagedObject, isSelected: boolean) {\n    const changes = this.config.multi ? selected : selected[0];\n    if (this.onChange) {\n      this.onChange(changes);\n    }\n    this.onSelected.emit({ items: changes, change: { item, isSelected } });\n  }\n\n  createDefaultRootNode() {\n    return this.groupNodeService.createGroupNode({\n      root: true,\n      groupsSelectable: this.config.groupsSelectable,\n      groupsOnly: this.config.groupsOnly,\n      showChildDevices: this.config.showChildDevices\n    });\n  }\n  async createManagedObjectRootNode(asset: IIdentified) {\n    if ((asset as IIdentified).id) {\n      return this.groupNodeService.createGroupNode({\n        mo: asset as IManagedObject,\n        groupsSelectable: this.config.groupsSelectable,\n        groupsOnly: this.config.groupsOnly,\n        showChildDevices: this.config.showChildDevices\n      });\n    }\n    const { data: mo } = await this.inventory.detail(asset);\n    return this.groupNodeService.createGroupNode({\n      mo,\n      groupsSelectable: this.config.groupsSelectable,\n      groupsOnly: this.config.groupsOnly,\n      showChildDevices: this.config.showChildDevices\n    });\n  }\n}\n","import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  forwardRef,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { GroupNode } from './group-node';\nimport {\n  AssetSelectionChangeEvent,\n  AssetSelectorOptions,\n  CONFIG_OPTIONS_DEFAULT\n} from './asset-selector.model';\nimport { UnassignedDevicesNode } from './unassigned-devices-node';\nimport { AssetSelectorBase } from './asset-selector-base';\nimport { Subject } from 'rxjs';\n\n/**\n * Displays a hierarchical tree selector for assets.\n */\n@Component({\n  selector: 'c8y-asset-selector',\n  templateUrl: './asset-selector.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => AssetSelectorComponent)\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => AssetSelectorComponent),\n      multi: true\n    }\n  ]\n})\nexport class AssetSelectorComponent extends AssetSelectorBase implements OnInit {\n  /**\n   * Config object containing all options for the asset selector.\n   */\n  @Input() config: AssetSelectorOptions = {};\n  /**\n   * Defines the node, which should be displayed as active.\n   */\n  @Input() active: GroupNode;\n  /**\n   * Used only for miller-view, displays the column level for the current node.\n   * E.g if the index is one, this will be second column.\n   */\n  @Input() index: number = 0;\n  /**\n   * The asset to use as root.\n   */\n  @Input() asset: IIdentified = undefined;\n  /**\n   * The selected device.\n   */\n  @Input() selectedDevice: IManagedObject = undefined;\n  /**\n   * An array of predefined nodes.\n   */\n  @Input() selected: Array<Partial<IManagedObject>> | IIdentified[] | IIdentified = [];\n  /**\n   * The node to use as root. You can either set this, or the asset to start from.\n   */\n  @Input() rootNode: GroupNode;\n  /**\n   * All currently selected assets.\n   */\n  @Input() selectedItems: IIdentified[] | IIdentified = [];\n  @Input() container: '' | 'body' = 'body';\n  /**\n   * Emits if one item was selected (all currently selected nodes).\n   */\n  @Output() onSelected = new EventEmitter<AssetSelectionChangeEvent>();\n\n  /**\n   * Used only for miller view. Emit the selected node and use it as a 'rootNode' for the new column.\n   */\n  @Output() onRowSelected = new EventEmitter<any>();\n  /**\n   * Emits the current loading state of the node.\n   */\n  @Output() onLoad = new EventEmitter<any>();\n  /**\n   * The current filter applied.\n   */\n  filterText = '';\n  /**\n   * Displays the global search at all times if the miller view is used\n   * on root group level.\n   */\n  root: boolean = false;\n  /**\n   * @ignore\n   */\n  unsubscribe$ = new Subject<any>();\n\n  /**\n   * @ignore only DI\n   */\n  constructor(\n    protected groupNodeService: GroupNodeService,\n    protected inventory: InventoryService,\n    protected assetSelectorService: AssetSelectorService,\n    protected cd: ChangeDetectorRef\n  ) {\n    super(groupNodeService, inventory, assetSelectorService);\n  }\n\n  /**\n   * Checks when a node was selected, if a new column needs to be added.\n   * @param node The node that was clicked.\n   * @param index The current index of this node.\n   * @returns True if the click was handled and a new column was added.\n   */\n  handleNextMillerViewColumn(node: GroupNode, index: number) {\n    const nodeCopy = Object.create(node);\n    const isSameAsRoot = this.rootNode === node;\n    const isUnassignedDevicesNode = node.toString() === UnassignedDevicesNode.NAME;\n    const isNewColumnNeeded =\n      !isSameAsRoot && (node.isGroup() || isUnassignedDevicesNode || node.hasChildDevices());\n\n    if (isNewColumnNeeded) {\n      this.onRowSelected.emit({ nodeCopy, index });\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    if (this.index === 0) {\n      this.config = { ...CONFIG_OPTIONS_DEFAULT, ...this.config };\n    }\n    const shouldResetNameFilter =\n      this.rootNode && this.rootNode.mo && this.config.view === 'miller';\n    if (shouldResetNameFilter) {\n      this.applyFilter('');\n    }\n\n    const isOnlyAssetNodeDefined = this.asset;\n    if (isOnlyAssetNodeDefined) {\n      this.rootNode = await this.createManagedObjectRootNode(this.asset);\n    }\n\n    const isAnyNodeDefined =\n      !this.rootNode && (!this.asset || Object.keys(this.asset).length === 0);\n    if (isAnyNodeDefined) {\n      this.rootNode = this.createDefaultRootNode();\n    }\n\n    if (\n      this.config.showUnassignedDevices &&\n      (!this.asset || Object.keys(this.asset).length === 0) &&\n      this.rootNode.root\n    ) {\n      this.rootNode.add(\n        new UnassignedDevicesNode(this.groupNodeService, {\n          showChildDevices: this.config.showChildDevices\n        })\n      );\n    }\n    this.root = this.rootNode.root;\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (\n      changes.asset &&\n      changes.asset.currentValue &&\n      Object.keys(changes.asset.currentValue).length !== 0\n    ) {\n      this.rootNode = await this.createManagedObjectRootNode(changes.asset.currentValue);\n    }\n  }\n\n  /**\n   * Changes the current root to one level back.\n   */\n  back() {\n    const index = this.index - 1;\n    const nodeCopy = Object.create(this.rootNode.parents[0]);\n    this.onRowSelected.emit({ nodeCopy, index });\n  }\n\n  /**\n   * Clears the current filter.\n   */\n  clearFilters() {\n    this.filterText = '';\n    this.applyFilter('');\n  }\n\n  clearSelectedDevices() {\n    this.selectedDevice = undefined;\n    this.applyFilter('');\n  }\n\n  isGroupSelected() {\n    if (this.selectedItems.some(selectedNode => selectedNode.id === this.rootNode.mo?.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  groupNameFilter(nameFilter: string, moId, showUnassignedDevices?: boolean) {\n    if (nameFilter) {\n      const filterByName = showUnassignedDevices\n        ? {\n            __filter: {\n              name: nameFilter\n            },\n            __orderby: [{ name: 1 }]\n          }\n        : {\n            __filter: {\n              name: nameFilter,\n              __bygroupid: moId\n            }\n          };\n      return this.assetSelectorService.queriesUtil.buildQuery(filterByName);\n    }\n    const defaultFilter = {\n      __filter: {\n        __bygroupid: moId\n      },\n      __orderby: [{ name: 1 }]\n    };\n    return this.assetSelectorService.queriesUtil.buildQuery(defaultFilter);\n  }\n\n  /**\n   * Applies a filter.\n   * @param filter The filter to apply.\n   */\n  async applyFilter(filter: string) {\n    this.rootNode.filterQuery$.next(\n      this.groupNameFilter(\n        filter,\n        this.rootNode.mo.id,\n        this.isUnassignedDevicesNode() ? true : false\n      )\n    );\n    this.rootNode.refresh();\n    this.onLoad.emit({\n      loading: true,\n      filterText: this.filterText,\n      index: this.index,\n      selectedDevice: this.selectedDevice\n    });\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Check if the UnassignedDevice node is the rootNode.\n   */\n  isUnassignedDevicesNode() {\n    return this.rootNode.toString() === UnassignedDevicesNode.NAME;\n  }\n\n  /**\n   * Called when the user resets the search result.\n   */\n  onSearchResultReset(term: string) {\n    if (term) {\n      this.deselectAll();\n      this.rootNode = this.createDefaultRootNode();\n      if (this.config.showUnassignedDevices) {\n        this.rootNode.add(\n          new UnassignedDevicesNode(this.groupNodeService, {\n            showChildDevices: this.config.showChildDevices\n          })\n        );\n      }\n      if (this.config.view === 'miller') {\n        this.onRowSelected.emit({ root: true });\n      }\n      this.rootNode.click({ open: true });\n      if (this.config.view === 'tree') {\n        this.rootNode.open = true;\n      }\n    }\n  }\n\n  /**\n   * Called if the user clicks on a search result.\n   */\n  async onSearchResultClick(mo: IManagedObject) {\n    const canSelectNode = this.config.groupsSelectable || !this.groupNodeService.isGroup(mo);\n    this.rootNode = await this.createManagedObjectRootNode(mo);\n    this.rootNode.click({ open: true });\n    if (this.config.view === 'miller') {\n      const nodeCopy = Object.create(this.rootNode);\n      this.onRowSelected.emit({\n        nodeCopy,\n        index: 0,\n        selectedDevices: this.selectedDevice,\n        root: true\n      });\n    }\n    this.deselectAll();\n    if (canSelectNode) {\n      this.select(this.rootNode.mo);\n    }\n  }\n}\n","import { Component, Input, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { GroupNode } from './group-node';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter } from 'rxjs/operators';\nimport { AssetSelectorComponent } from './asset-selector.component';\nimport { IIdentified, IManagedObject } from '@c8y/client';\nimport { Action } from '../action.enum';\n\n@Component({\n  selector: 'c8y-asset-selector-node',\n  templateUrl: './asset-selector-node.component.html'\n})\nexport class AssetSelectorNodeComponent implements OnInit {\n  /**\n   * The current node.\n   */\n  @Input() node: GroupNode;\n  /**\n   * All preselected items.\n   */\n  @Input() preselected: IIdentified | IIdentified[] = [];\n  /**\n   * Should the path be shown.\n   */\n  @Input() showPath: boolean = false;\n  /**\n   * Can the user select multiple assets.\n   */\n  @Input() multi: boolean = false;\n  /**\n   * The current path to the node.\n   */\n  @Input() view: 'tree' | 'miller' = 'tree';\n  /**\n   * Used only for miller-view, displays the column level for the current node.\n   * E.g if the index is one, this will be second column.\n   */\n  @Input() index;\n  /**\n   * Sets the active node.\n   */\n  @Input() active: GroupNode;\n  /**\n   * All currently selected assets.\n   */\n  @Input() selectedItems: IIdentified[] | IIdentified = [];\n\n  breadcrumb: string;\n  /**\n   * @ignore\n   */\n  level: number = 0;\n  /**\n   * @ignore\n   */\n  unsubscribe$ = new Subject<any>();\n\n  /** sets the `btn-pending` class in the load more button */\n  isLoading: boolean = false;\n  /**\n   * @ignore\n   */\n  get expandTitle() {\n    return !this.node.open ? gettext('Expand') : gettext('Collapse');\n  }\n\n  /**\n   * @ignore only di\n   */\n  constructor(\n    private translateService: TranslateService,\n    private cd: ChangeDetectorRef,\n    public parentAssetSelector: AssetSelectorComponent\n  ) {}\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    this.breadcrumb = this.node.label;\n    this.setupBreadcrumbsAndLevel(this.node);\n\n    if (this.node instanceof GroupNode) {\n      this.node.hookEvents();\n    }\n\n    // open on startup\n    if (this.node.root) {\n      this.click();\n    }\n\n    // used for loading and to trigger change detection when the node is no longer loading.\n    if (this.node.events) {\n      this.node.events\n        .pipe(\n          takeUntil(this.unsubscribe$),\n          filter((a: Action) => a === Action.LOADING_DONE)\n        )\n        .subscribe(() => {\n          this.parentAssetSelector.onLoad.emit({\n            loading: false,\n            filterText: this.parentAssetSelector.filterText\n          });\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  /**\n   * Opens a node.\n   */\n  click() {\n    this.node.open = !this.node.open;\n    this.node.click({ open: this.node.open });\n  }\n\n  setupBreadcrumbsAndLevel(node: GroupNode) {\n    if (node.parents && node.parents.length) {\n      const parent = node.parents[0] as GroupNode;\n      this.breadcrumb =\n        this.translateService.instant(parent.label) +\n        ' > ' +\n        this.translateService.instant(this.breadcrumb);\n      this.level++;\n\n      this.setupBreadcrumbsAndLevel(parent);\n    }\n  }\n\n  /**\n   * Selects the node and emits a change on the parent component.\n   * @param node The node to select.\n   */\n  selected(node: GroupNode) {\n    if (node.mo) {\n      this.updateSelection(node.mo);\n      return;\n    }\n    this.click();\n  }\n\n  /**\n   * Handles clicks on a item in Miller View.\n   * @param node The node that was clicked.\n   */\n  millerViewClick(node: GroupNode) {\n    node.breadcrumb = this.breadcrumb;\n    const shouldHandleDefault = this.parentAssetSelector.handleNextMillerViewColumn(\n      node,\n      this.index\n    );\n    if (shouldHandleDefault) {\n      this.selected(node);\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy(): void {\n    this.unsubscribe$.next(true);\n    this.unsubscribe$.complete();\n  }\n\n  isSelected() {\n    if (!this.node.mo) {\n      return false;\n    }\n    return this.parentAssetSelector.getIndexOfSelected(this.preselected, this.node.mo) > -1;\n  }\n\n  isActive() {\n    if (this.active && this.node.mo) {\n      return this.active.mo?.id === this.node.mo.id;\n    }\n    return false;\n  }\n\n  isGroupSelected() {\n    if (this.selectedItems.some(selectedNode => selectedNode.id === this.node.mo?.id)) {\n      return true;\n    }\n    return false;\n  }\n\n  private updateSelection(selectedMo: IManagedObject) {\n    if (!this.multi) {\n      this.parentAssetSelector.deselectAll(selectedMo);\n      return;\n    }\n    if (this.isSelected()) {\n      this.parentAssetSelector.deselect(selectedMo);\n      return;\n    }\n    this.parentAssetSelector.select(selectedMo);\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IIdentified, IManagedObject, InventoryService } from '@c8y/client';\nimport { AssetSelectorService } from './asset-selector.service';\nimport { GroupNodeService } from './group-node.service';\nimport { AssetSelectionChangeEvent, AssetSelectorOptions } from './asset-selector.model';\nimport { AssetSelectorBase } from './asset-selector-base';\nimport { GroupNode } from './group-node';\n\n@Component({\n  selector: 'c8y-asset-selector-miller',\n  templateUrl: './miller-view.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MillerViewComponent),\n      multi: true\n    }\n  ]\n})\nexport class MillerViewComponent extends AssetSelectorBase implements OnInit {\n  /**\n   * Config object containing all options for the asset selector.\n   */\n  @Input() config: AssetSelectorOptions = {};\n  /**\n   * The asset to use as root.\n   */\n  @Input() asset: IIdentified = undefined;\n  /**\n   * The selected devices.\n   */\n  @Input() selectedDevice: IManagedObject = undefined;\n  /**\n   * The node to use as root. You can either set this, or the asset to start from.\n   */\n  @Input() rootNode: GroupNode;\n  /**\n   * Emits if the selection changes\n   */\n  @Output() onSelected = new EventEmitter<AssetSelectionChangeEvent>();\n\n  /**\n   * @ignore\n   */\n  @ViewChild('millerViewWrapper') millerViewWrapper: ElementRef;\n  /**\n   * The column array will contain all currently selected nodes\n   *  which will form the miller view columns (only one per level).\n   */\n  columns = [];\n  /**\n   * The current filter applied. Used for the empty state text in the view.\n   */\n  filterText: string = '';\n  /**\n   * Index of the column used to check where to show the loading state.\n   */\n  columnIndex: number;\n  @Input() container: '' | 'body' = 'body';\n\n  configOptionsDefault: AssetSelectorOptions = {\n    view: 'miller',\n    singleColumn: false\n  };\n\n  constructor(\n    protected groupNodeService: GroupNodeService,\n    protected inventory: InventoryService,\n    protected assetSelectorService: AssetSelectorService,\n    protected cd: ChangeDetectorRef\n  ) {\n    super(groupNodeService, inventory, assetSelectorService);\n  }\n\n  /**\n   * @ignore\n   */\n  async ngOnInit() {\n    this.config = { ...this.configOptionsDefault, ...this.config };\n\n    const isAnyNodeDefined =\n      !this.rootNode && (!this.asset || Object.keys(this.asset).length === 0);\n    if (isAnyNodeDefined) {\n      this.rootNode = this.createDefaultRootNode();\n    }\n\n    const isOnlyAssetNodeDefined = this.asset && Object.keys(this.asset).length !== 0;\n    if (isOnlyAssetNodeDefined) {\n      this.rootNode = await this.createManagedObjectRootNode(this.asset);\n      this.rootNode.click();\n    }\n\n    this.columns.push(this.rootNode);\n  }\n\n  /**\n   * @ignore\n   */\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.asset && changes.asset.currentValue && !this.asset) {\n      this.columns = [];\n      this.columns.push(await this.createManagedObjectRootNode(changes.asset.currentValue));\n    }\n  }\n\n  /**\n   * Create a new column with the selected node as root.\n   */\n  addNewColumn(node): void {\n    const level = node.index;\n    this.selectedDevice = node.selectedDevices || undefined;\n    if (node.root) {\n      window.requestAnimationFrame(() => (this.millerViewWrapper.nativeElement.scrollLeft = 0));\n      this.columns.length = 1;\n    }\n\n    const isLevelLowerThanColumnNumber = level < this.columns.length - 1;\n    let goBack = false;\n    if (isLevelLowerThanColumnNumber) {\n      this.columns.length = level + 1;\n      goBack = true;\n    }\n\n    if (!node.root && !(this.config.singleColumn && goBack)) {\n      this.columns.push(node.nodeCopy);\n      window.requestAnimationFrame(() => (this.millerViewWrapper.nativeElement.scrollLeft = 99999));\n    }\n  }\n\n  /**\n   * Change the loading state of the asset selector.\n   */\n  onLoad(event) {\n    this.isLoading = event.loading;\n    this.filterText = event.filterText;\n    this.columnIndex = event.index;\n    this.selectedDevice = event.selectedDevice;\n    this.cd.detectChanges();\n  }\n\n  /**\n   * Add the selected node to the selected array.\n   */\n  onSelectionChange(event: AssetSelectionChangeEvent): void {\n    if (!this.config.multi) {\n      this.deselectAll(event.change.item);\n      return;\n    }\n    if (event.change.isSelected) {\n      this.select(event.change.item);\n      return;\n    }\n    this.deselect(event.change.item);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CoreModule, CommonModule, SearchModule } from '@c8y/ngx-components';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { GroupNodeService } from './group-node.service';\n\nimport { AssetSelectorNodeComponent } from './asset-selector-node.component';\nimport { AssetSelectorComponent } from './asset-selector.component';\nimport { FormsModule } from '@angular/forms';\nimport { MillerViewComponent } from './miller-view.component';\nimport { AssetSelectorService } from './asset-selector.service';\n\n@NgModule({\n  imports: [CoreModule, CommonModule, CollapseModule, BsDropdownModule, SearchModule, FormsModule],\n  exports: [AssetSelectorNodeComponent, AssetSelectorComponent, MillerViewComponent],\n  providers: [GroupNodeService, AssetSelectorService],\n  declarations: [AssetSelectorNodeComponent, AssetSelectorComponent, MillerViewComponent]\n})\nexport class AssetSelectorModule {}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  DeviceStatusComponent,\n  DeviceStatusModule,\n  HOOK_NAVIGATOR_NODES,\n  ModalModule,\n  ModalService\n} from '@c8y/ngx-components';\nimport { AssetNavigatorConfig, ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';\nimport { AssetNodeFactory } from './asset-node.factory';\nimport { AssetNodeService } from './asset-node.service';\nimport { AssetSelectorModule } from './asset-selector/asset-selector.module';\n\n@NgModule({\n  declarations: [],\n  imports: [ModalModule, AssetSelectorModule, DeviceStatusModule],\n  providers: [\n    ModalService,\n    AssetNodeService,\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: AssetNodeFactory,\n      multi: true\n    }\n  ],\n  entryComponents: [DeviceStatusComponent]\n})\nexport class AssetsNavigatorModule {\n  static config(config: AssetNavigatorConfig = {}): ModuleWithProviders<AssetsNavigatorModule> {\n    return {\n      ngModule: AssetsNavigatorModule,\n      providers: [\n        {\n          provide: ASSET_NAVIGATOR_CONFIG,\n          useValue: config\n        }\n      ]\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {AssetSelectorBase as ɵa} from './asset-selector/asset-selector-base';\nexport {AssetSelectorService as ɵb} from './asset-selector/asset-selector.service';"]}