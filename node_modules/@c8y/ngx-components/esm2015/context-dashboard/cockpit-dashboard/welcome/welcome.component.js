import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { gettext, DocsService, NavigatorService } from '@c8y/ngx-components';
import { Router } from '@angular/router';
import { TenantService, ApplicationService } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@angular/router';
import * as ɵngcc4 from '@angular/common';

const _c0 = function (a0) { return { link: a0 }; };
function WelcomeToCockpit_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelementStart(1, "c8y-quick-link", 8);
    ɵngcc0.ɵɵlistener("click", function WelcomeToCockpit_div_10_Template_c8y_quick_link_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r3); const link_r1 = restoredCtx.$implicit; return link_r1.click ? link_r1.click() : false; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const link_r1 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("icon", link_r1.icon)("label", link_r1.label)("actionName", "welcomeWidgetClicked")("actionData", ɵngcc0.ɵɵpureFunction1(4, _c0, link_r1.label));
} }
export class WelcomeToCockpit {
    constructor(tenantService, docs, router, navigator, applicationService) {
        this.tenantService = tenantService;
        this.docs = docs;
        this.router = router;
        this.navigator = navigator;
        this.applicationService = applicationService;
        this.quickLinks = [];
        this.CONFIGURATION_NODE = 'Configuration';
        this.TRIAL = 'TRIAL';
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.tenantType = yield this.tenantService.currentTenantType();
            this.setMessage();
            this.navSubscription = this.navigator.items$.subscribe(nodes => {
                this.navNodes = nodes;
                this.configurationNode = nodes.find((node) => node.label === this.CONFIGURATION_NODE);
            });
            this.docsSubscription = this.docs.items$.subscribe(links => {
                this.links = links;
            });
            // <---TRIAL & REGULAR TENANT --->
            this.createConnectSmartphoneQuickLink();
            yield this.createQuicklinkRegisterDevice();
            // <--- TRIAL TENANT --->
            if (this.tenantType === this.TRIAL) {
                this.createQuicklinkUserGuide();
                return;
            }
            // <--- REGULAR TENANT --->
            this.createQuicklinkAddGroup();
            this.createQuickLinkReports();
            this.createQuickLinkExports();
            this.createQuicklinkSmartRules();
        });
    }
    ngOnDestroy() {
        if (this.docsSubscription && !this.docsSubscription.closed) {
            this.docsSubscription.unsubscribe();
        }
        if (this.navSubscription && !this.navSubscription.closed) {
            this.navSubscription.unsubscribe();
        }
    }
    setMessage() {
        if (this.tenantType === this.TRIAL) {
            this.welcomeMessage = gettext(`
        The Cockpit application allows you to build IoT applications in minutes.
        To get started, connect any device to the platform.
        If you do not have an IoT device to hand, you can start by connecting your smartphone.
        Click below to be guided through the process.
      `);
        }
        else {
            this.welcomeMessage = gettext(`
        The Cockpit application provides you with options to manage
        and monitor Internet of Things assets and data from business perspective.
      `);
        }
    }
    createQuicklinkAddGroup() {
        // comes from angularJS factory c8yQuickLinks
        const addGroup = this.links.find(link => link.label === 'Add group');
        if (addGroup) {
            this.quickLinks.push(addGroup);
        }
    }
    createConnectSmartphoneQuickLink() {
        // Provider in SensorPhoneModule defines the
        // 'Connect smartphone' quicklink.
        const connectSmartphone = this.links.find(link => link.label === 'Connect smartphone');
        if (connectSmartphone) {
            this.quickLinks.push(connectSmartphone);
        }
    }
    createQuickLinkReports() {
        const label = gettext('Reports');
        const reports = {
            icon: 'th',
            label,
            url: '/reports'
        };
        const reportsNode = this.findNavigatorNode(label, this.navNodes);
        if (reportsNode) {
            reports.click = () => {
                reportsNode.open = true;
                this.router.navigateByUrl(reports.url);
            };
            this.quickLinks.push(reports);
        }
    }
    createQuickLinkExports() {
        const label = gettext('Exports');
        const exports = {
            icon: 'c8y-reports',
            label,
            url: '/export'
        };
        if (this.isConfigChildNodeShown(label)) {
            exports.click = () => {
                this.configurationNode.open = true;
                this.router.navigateByUrl(exports.url);
            };
            this.quickLinks.push(exports);
        }
    }
    createQuicklinkSmartRules() {
        const label = gettext('Smart rules');
        const smartRules = {
            icon: 'c8y-smart-rules',
            label,
            url: '/rules'
        };
        if (this.isConfigChildNodeShown('Global smart rules')) {
            smartRules.click = () => {
                this.configurationNode.open = true;
                this.router.navigateByUrl(smartRules.url);
            };
            this.quickLinks.push(smartRules);
        }
    }
    createQuicklinkRegisterDevice() {
        return __awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.applicationService.listByUser(undefined, { pageSize: 2000 });
            if (data) {
                const deviceManagement = data.find(app => app.contextPath === 'devicemanagement');
                if (deviceManagement) {
                    const deviceMgmtUrl = this.applicationService.getHref(deviceManagement);
                    const registerDevice = {
                        icon: 'c8y-device-connect',
                        label: gettext('Register device'),
                        click: () => window.open(`${deviceMgmtUrl}/#/deviceregistration`, '_self')
                    };
                    this.quickLinks.push(registerDevice);
                }
            }
        });
    }
    createQuicklinkUserGuide() {
        const userGuide = {
            icon: 'c8y-user',
            label: gettext('User guide'),
            url: '/users-guide/getting-started',
            click: () => {
                const userGuideURL = this.docs.getUserGuideLink(userGuide.url);
                window.open(userGuideURL);
            }
        };
        this.quickLinks.push(userGuide);
    }
    isConfigChildNodeShown(nodeName) {
        if (this.configurationNode && this.configurationNode.show) {
            const navNode = this.findNavigatorNode(nodeName, this.configurationNode.children);
            return !!navNode && navNode.show;
        }
        return false;
    }
    findNavigatorNode(nodeName, navNodes) {
        if (navNodes && navNodes.length > 0) {
            return navNodes.find((node) => node.label === nodeName);
        }
        return undefined;
    }
}
WelcomeToCockpit.ɵfac = function WelcomeToCockpit_Factory(t) { return new (t || WelcomeToCockpit)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TenantService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DocsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Router), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.NavigatorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ApplicationService)); };
WelcomeToCockpit.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: WelcomeToCockpit, selectors: [["c8y-welcome-to-cockpit"]], inputs: { config: "config" }, decls: 11, vars: 7, consts: [[1, "welcome-widget", "welcome-cockpit"], [1, "flex-row"], [1, "col-xs-12", "col-md-5", "flex-item-v-stretch", "p-24"], [1, "text-light"], [1, "text-16", "text-light", "p-t-16", "p-b-24"], [1, "card-group", "interact-grid", "tight-grid"], ["class", "col-sm-4 col-xs-6", 4, "ngFor", "ngForOf"], [1, "col-sm-4", "col-xs-6"], ["c8yProductExperience", "", 1, "card", 3, "icon", "label", "actionName", "actionData", "click"]], template: function WelcomeToCockpit_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "h2", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "p", 4);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 5);
        ɵngcc0.ɵɵtemplate(10, WelcomeToCockpit_div_10_Template, 2, 6, "div", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 3, "Welcome to Cockpit"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 5, ctx.welcomeMessage));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.quickLinks);
    } }, directives: [ɵngcc4.NgForOf, ɵngcc2.QuickLinkComponent, ɵngcc2.ProductExperienceDirective], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
WelcomeToCockpit.ctorParameters = () => [
    { type: TenantService },
    { type: DocsService },
    { type: Router },
    { type: NavigatorService },
    { type: ApplicationService }
];
WelcomeToCockpit.propDecorators = {
    config: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(WelcomeToCockpit, [{
        type: Component,
        args: [{
                selector: 'c8y-welcome-to-cockpit',
                template: "<div class=\"welcome-widget welcome-cockpit\">\n  <div class=\"flex-row\">\n    <div class=\"col-xs-12 col-md-5 flex-item-v-stretch p-24\">\n      <h2 class=\"text-light\">{{ 'Welcome to Cockpit' | translate }}</h2>\n      <p class=\"text-16 text-light p-t-16 p-b-24\">{{ welcomeMessage | translate }}</p>\n      <div class=\"card-group interact-grid tight-grid\">\n        <div *ngFor=\"let link of quickLinks\" class=\"col-sm-4 col-xs-6\">\n          <c8y-quick-link\n            (click)=\"link.click ? link.click() : false\"\n            [icon]=\"link.icon\"\n            [label]=\"link.label\"\n            class=\"card\"\n            c8yProductExperience\n            [actionName]=\"'welcomeWidgetClicked'\"\n            [actionData]=\"{ link: link.label }\"\n          >\n          </c8y-quick-link>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"col-sm-6 welcome-illustration flex-item-v-stretch\"></div> -->\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.TenantService }, { type: ɵngcc2.DocsService }, { type: ɵngcc3.Router }, { type: ɵngcc2.NavigatorService }, { type: ɵngcc1.ApplicationService }]; }, { config: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,