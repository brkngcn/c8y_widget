import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { ContextDashboardModule } from '../context-dashboard.module';
import { ContextDashboardComponent } from '../context-dashboard.component';
import { ReportDashboardGuard } from './report-dashboard.guard';
import { ReportDashboardNavigationFactory } from './report-dashboard-navigation.factory';
import { ReportDashboardListComponent } from './report-dashboard-list.component';
import { ReportDashboardService } from './report-dashboard.service';
import { PopoverModule } from 'ngx-bootstrap/popover';
const ɵ0 = [
    {
        path: 'dashboard/:dashboardId',
        component: ContextDashboardComponent,
        canActivate: [ReportDashboardGuard],
        context: ViewContext.Report
    }
];
export class ReportDashboardModule {
}
ReportDashboardModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ReportDashboardListComponent],
                entryComponents: [],
                imports: [
                    CoreModule,
                    ContextDashboardModule,
                    RouterModule.forChild([
                        {
                            path: 'reports',
                            component: ReportDashboardListComponent
                        }
                    ]),
                    PopoverModule
                ],
                providers: [
                    ReportDashboardGuard,
                    ReportDashboardNavigationFactory,
                    ReportDashboardService,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: ReportDashboardNavigationFactory,
                        multi: true
                    }
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3J0LWRhc2hib2FyZC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb250ZXh0LWRhc2hib2FyZC9yZXBvcnQtZGFzaGJvYXJkL3JlcG9ydC1kYXNoYm9hcmQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFDTCxVQUFVLEVBQ1Ysb0JBQW9CLEVBQ3BCLFVBQVUsRUFDVixXQUFXLEVBQ1osTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUVyRSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZ0NBQWdDLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUN6RixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNqRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7V0FzQnRDO0lBQ1I7UUFDRSxJQUFJLEVBQUUsd0JBQXdCO1FBQzlCLFNBQVMsRUFBRSx5QkFBeUI7UUFDcEMsV0FBVyxFQUFFLENBQUMsb0JBQW9CLENBQUM7UUFDbkMsT0FBTyxFQUFFLFdBQVcsQ0FBQyxNQUFNO0tBQzVCO0NBQ0Y7QUFVUCxNQUFNLE9BQU8scUJBQXFCOzs7WUFyQ2pDLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUUsQ0FBQyw0QkFBNEIsQ0FBQztnQkFDNUMsZUFBZSxFQUFFLEVBQUU7Z0JBQ25CLE9BQU8sRUFBRTtvQkFDUCxVQUFVO29CQUNWLHNCQUFzQjtvQkFDdEIsWUFBWSxDQUFDLFFBQVEsQ0FBQzt3QkFDcEI7NEJBQ0UsSUFBSSxFQUFFLFNBQVM7NEJBQ2YsU0FBUyxFQUFFLDRCQUE0Qjt5QkFDeEM7cUJBQ0YsQ0FBQztvQkFDRixhQUFhO2lCQUNkO2dCQUNELFNBQVMsRUFBRTtvQkFDVCxvQkFBb0I7b0JBQ3BCLGdDQUFnQztvQkFDaEMsc0JBQXNCO29CQUN0Qjt3QkFDRSxPQUFPLEVBQUUsVUFBVTt3QkFDbkIsUUFBUSxJQU9QO3dCQUNELEtBQUssRUFBRSxJQUFJO3FCQUNaO29CQUNEO3dCQUNFLE9BQU8sRUFBRSxvQkFBb0I7d0JBQzdCLFFBQVEsRUFBRSxnQ0FBZ0M7d0JBQzFDLEtBQUssRUFBRSxJQUFJO3FCQUNaO2lCQUNGO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7XG4gIENvcmVNb2R1bGUsXG4gIEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICBIT09LX1JPVVRFLFxuICBWaWV3Q29udGV4dFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IENvbnRleHREYXNoYm9hcmRNb2R1bGUgfSBmcm9tICcuLi9jb250ZXh0LWRhc2hib2FyZC5tb2R1bGUnO1xuXG5pbXBvcnQgeyBDb250ZXh0RGFzaGJvYXJkQ29tcG9uZW50IH0gZnJvbSAnLi4vY29udGV4dC1kYXNoYm9hcmQuY29tcG9uZW50JztcbmltcG9ydCB7IFJlcG9ydERhc2hib2FyZEd1YXJkIH0gZnJvbSAnLi9yZXBvcnQtZGFzaGJvYXJkLmd1YXJkJztcbmltcG9ydCB7IFJlcG9ydERhc2hib2FyZE5hdmlnYXRpb25GYWN0b3J5IH0gZnJvbSAnLi9yZXBvcnQtZGFzaGJvYXJkLW5hdmlnYXRpb24uZmFjdG9yeSc7XG5pbXBvcnQgeyBSZXBvcnREYXNoYm9hcmRMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9yZXBvcnQtZGFzaGJvYXJkLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFJlcG9ydERhc2hib2FyZFNlcnZpY2UgfSBmcm9tICcuL3JlcG9ydC1kYXNoYm9hcmQuc2VydmljZSc7XG5pbXBvcnQgeyBQb3BvdmVyTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wb3BvdmVyJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbUmVwb3J0RGFzaGJvYXJkTGlzdENvbXBvbmVudF0sXG4gIGVudHJ5Q29tcG9uZW50czogW10sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIENvbnRleHREYXNoYm9hcmRNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLmZvckNoaWxkKFtcbiAgICAgIHtcbiAgICAgICAgcGF0aDogJ3JlcG9ydHMnLFxuICAgICAgICBjb21wb25lbnQ6IFJlcG9ydERhc2hib2FyZExpc3RDb21wb25lbnRcbiAgICAgIH1cbiAgICBdKSxcbiAgICBQb3BvdmVyTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIFJlcG9ydERhc2hib2FyZEd1YXJkLFxuICAgIFJlcG9ydERhc2hib2FyZE5hdmlnYXRpb25GYWN0b3J5LFxuICAgIFJlcG9ydERhc2hib2FyZFNlcnZpY2UsXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoOiAnZGFzaGJvYXJkLzpkYXNoYm9hcmRJZCcsXG4gICAgICAgICAgY29tcG9uZW50OiBDb250ZXh0RGFzaGJvYXJkQ29tcG9uZW50LFxuICAgICAgICAgIGNhbkFjdGl2YXRlOiBbUmVwb3J0RGFzaGJvYXJkR3VhcmRdLFxuICAgICAgICAgIGNvbnRleHQ6IFZpZXdDb250ZXh0LlJlcG9ydFxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICAgICAgdXNlQ2xhc3M6IFJlcG9ydERhc2hib2FyZE5hdmlnYXRpb25GYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUmVwb3J0RGFzaGJvYXJkTW9kdWxlIHt9XG4iXX0=