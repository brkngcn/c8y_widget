import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { WidgetService } from '../widget.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../widget.service';
import * as ɵngcc2 from '@c8y/ngx-components';

const _c0 = function () { return {}; };
const _c1 = function () { return { isDisabled: false, canDelete: false, canCopy: false, translateWidgetTitle: true, allowFullscreen: false }; };
export class DeviceManagementHomeDashboardComponent {
    constructor(widgetService) {
        this.widgetService = widgetService;
        this.widgets = [];
        this.DEFAULT_HOME_WIDGETS = [
            {
                name: 'Asset Alarms',
                title: gettext('Active, critical alarms'),
                _x: 0,
                _y: 0,
                _height: 4,
                _width: 6
            },
            {
                name: 'Map',
                title: gettext('Map'),
                _x: 6,
                _y: 0,
                _height: 8,
                _width: 6
            }
        ];
    }
    ngOnInit() {
        this.DEFAULT_HOME_WIDGETS.map((widget) => __awaiter(this, void 0, void 0, function* () {
            yield this.widgetService
                .mapLegacy(widget)
                .then(transformedWidget => this.widgets.push(transformedWidget));
        }));
    }
}
DeviceManagementHomeDashboardComponent.ɵfac = function DeviceManagementHomeDashboardComponent_Factory(t) { return new (t || DeviceManagementHomeDashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.WidgetService)); };
DeviceManagementHomeDashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceManagementHomeDashboardComponent, selectors: [["c8y-device-management-home-dashboard"]], decls: 4, vars: 8, consts: [[3, "contextDashboard", "widgets", "settings"]], template: function DeviceManagementHomeDashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(3, "c8y-widgets-dashboard", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 4, "Home"), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("contextDashboard", ɵngcc0.ɵɵpureFunction0(6, _c0))("widgets", ctx.widgets)("settings", ɵngcc0.ɵɵpureFunction0(7, _c1));
    } }, directives: [ɵngcc2.TitleComponent, ɵngcc2.WidgetsDashboardComponent], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
DeviceManagementHomeDashboardComponent.ctorParameters = () => [
    { type: WidgetService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceManagementHomeDashboardComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-management-home-dashboard',
                template: "<c8y-title>\n  {{ 'Home' | translate }}\n</c8y-title>\n<c8y-widgets-dashboard\n  [contextDashboard]=\"{}\"\n  [widgets]=\"widgets\"\n  [settings]=\"{\n    isDisabled: false,\n    canDelete: false,\n    canCopy: false,\n    translateWidgetTitle: true,\n    allowFullscreen: false\n  }\"\n></c8y-widgets-dashboard>\n"
            }]
    }], function () { return [{ type: ɵngcc1.WidgetService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLW1hbmFnZW1lbnQtaG9tZS1kYXNoYm9hcmQuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb250ZXh0LWRhc2hib2FyZC9kZXZpY2UtbWFuYWdlbWVudC1ob21lLWRhc2hib2FyZC9kZXZpY2UtbWFuYWdlbWVudC1ob21lLWRhc2hib2FyZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFFLE9BQU8sRUFBVSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7Ozs7OztBQU1sRCxNQUFNLE9BQU8sc0NBQXNDO0FBQUcsSUFxQnBELFlBQW9CLGFBQTRCO0FBQUksUUFBaEMsa0JBQWEsR0FBYixhQUFhLENBQWU7QUFBQyxRQXBCakQsWUFBTyxHQUFHLEVBQUUsQ0FBQztBQUNmLFFBQUUseUJBQW9CLEdBQUc7QUFDekIsWUFBSTtBQUNKLGdCQUFNLElBQUksRUFBRSxjQUFjO0FBQzFCLGdCQUFNLEtBQUssRUFBRSxPQUFPLENBQUMseUJBQXlCLENBQUM7QUFDL0MsZ0JBQU0sRUFBRSxFQUFFLENBQUM7QUFDWCxnQkFBTSxFQUFFLEVBQUUsQ0FBQztBQUNYLGdCQUFNLE9BQU8sRUFBRSxDQUFDO0FBQ2hCLGdCQUFNLE1BQU0sRUFBRSxDQUFDO0FBQ2YsYUFBSztBQUNMLFlBQUk7QUFDSixnQkFBTSxJQUFJLEVBQUUsS0FBSztBQUNqQixnQkFBTSxLQUFLLEVBQUUsT0FBTyxDQUFDLEtBQUssQ0FBQztBQUMzQixnQkFBTSxFQUFFLEVBQUUsQ0FBQztBQUNYLGdCQUFNLEVBQUUsRUFBRSxDQUFDO0FBQ1gsZ0JBQU0sT0FBTyxFQUFFLENBQUM7QUFDaEIsZ0JBQU0sTUFBTSxFQUFFLENBQUM7QUFDZixhQUFLO0FBQ0wsU0FBZSxDQUFDO0FBQ2hCLElBQ3FELENBQUM7QUFDdEQsSUFDRSxRQUFRO0FBQ1YsUUFBSSxJQUFJLENBQUMsb0JBQW9CLENBQUMsR0FBRyxDQUFDLENBQU0sTUFBTSxFQUFDLEVBQUU7QUFFbkMsWUFEUixNQUFNLElBQUksQ0FBQyxhQUFhO0FBQzlCLGlCQUFTLFNBQVMsQ0FBQyxNQUFNLENBQUM7QUFDMUIsaUJBQVMsSUFBSSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLENBQUM7QUFDekUsUUFBSSxDQUFDLENBQUEsQ0FBQyxDQUFDO0FBQ1AsSUFBRSxDQUFDO0FBQ0g7a0VBbENDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsc0NBQXNDLGtCQUNoRDtzUkFBZ0UsY0FDakU7Ozs7Ozs7Ozs7O3NJQUNJO0FBQUM7QUFBZ0UsWUFON0QsYUFBYTtBQUFHOzs7Ozs7OzhFQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgV2lkZ2V0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBXaWRnZXRTZXJ2aWNlIH0gZnJvbSAnLi4vd2lkZ2V0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGV2aWNlLW1hbmFnZW1lbnQtaG9tZS1kYXNoYm9hcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGV2aWNlLW1hbmFnZW1lbnQtaG9tZS1kYXNoYm9hcmQuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERldmljZU1hbmFnZW1lbnRIb21lRGFzaGJvYXJkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgd2lkZ2V0cyA9IFtdO1xuICBERUZBVUxUX0hPTUVfV0lER0VUUyA9IFtcbiAgICB7XG4gICAgICBuYW1lOiAnQXNzZXQgQWxhcm1zJyxcbiAgICAgIHRpdGxlOiBnZXR0ZXh0KCdBY3RpdmUsIGNyaXRpY2FsIGFsYXJtcycpLFxuICAgICAgX3g6IDAsXG4gICAgICBfeTogMCxcbiAgICAgIF9oZWlnaHQ6IDQsXG4gICAgICBfd2lkdGg6IDZcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdNYXAnLFxuICAgICAgdGl0bGU6IGdldHRleHQoJ01hcCcpLFxuICAgICAgX3g6IDYsXG4gICAgICBfeTogMCxcbiAgICAgIF9oZWlnaHQ6IDgsXG4gICAgICBfd2lkdGg6IDZcbiAgICB9XG4gIF0gYXMgV2lkZ2V0W107XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSB3aWRnZXRTZXJ2aWNlOiBXaWRnZXRTZXJ2aWNlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuREVGQVVMVF9IT01FX1dJREdFVFMubWFwKGFzeW5jIHdpZGdldCA9PiB7XG4gICAgICBhd2FpdCB0aGlzLndpZGdldFNlcnZpY2VcbiAgICAgICAgLm1hcExlZ2FjeSh3aWRnZXQpXG4gICAgICAgIC50aGVuKHRyYW5zZm9ybWVkV2lkZ2V0ID0+IHRoaXMud2lkZ2V0cy5wdXNoKHRyYW5zZm9ybWVkV2lkZ2V0KSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==