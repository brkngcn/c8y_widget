import { Component, ViewChild, ViewContainerRef } from '@angular/core';
import { AddDashboardFactory } from './add-dashboard.factory';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './add-dashboard.factory';
import * as ɵngcc2 from 'ngx-bootstrap/tooltip';
import * as ɵngcc3 from '@c8y/ngx-components';

const _c0 = ["template"];
function AddDashboardComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 1);
    ɵngcc0.ɵɵelementStart(1, "button", 2);
    ɵngcc0.ɵɵlistener("click", function AddDashboardComponent_ng_template_0_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.addDashboard(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelement(4, "i", 3);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Add dashboard"));
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(3, 4, "Add dashboard"));
} }
export class AddDashboardComponent {
    constructor(viewContainerRef, addDashboardFactory) {
        this.viewContainerRef = viewContainerRef;
        this.addDashboardFactory = addDashboardFactory;
    }
    ngOnInit() {
        this.viewContainerRef.createEmbeddedView(this.template);
    }
    addDashboard() {
        this.addDashboardFactory.addDashboard();
    }
}
AddDashboardComponent.ɵfac = function AddDashboardComponent_Factory(t) { return new (t || AddDashboardComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AddDashboardFactory)); };
AddDashboardComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AddDashboardComponent, selectors: [["c8y-add-dashboard"]], viewQuery: function AddDashboardComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);
    } }, decls: 2, vars: 0, consts: [["template", ""], [1, "d-flex-xs", "a-i-center"], ["placement", "right", "container", "body", 1, "btn", "btn-clean", "m-t-lg-4", "p-l-xs-16", "p-r-xs-16", 3, "title", "tooltip", "click"], ["c8yIcon", "plus-circle", 1, "icon-20"]], template: function AddDashboardComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, AddDashboardComponent_ng_template_0_Template, 5, 6, "ng-template", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);
    } }, directives: [ɵngcc2.TooltipDirective, ɵngcc3.IconDirective], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
AddDashboardComponent.ctorParameters = () => [
    { type: ViewContainerRef },
    { type: AddDashboardFactory }
];
AddDashboardComponent.propDecorators = {
    template: [{ type: ViewChild, args: ['template', { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AddDashboardComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-add-dashboard',
                template: "<ng-template #template>\n  <li class=\"d-flex-xs a-i-center\">\n    <button\n      class=\"btn btn-clean m-t-lg-4 p-l-xs-16 p-r-xs-16\"\n      title=\"{{ 'Add dashboard' | translate }}\"\n      (click)=\"addDashboard()\"\n      tooltip=\"{{ 'Add dashboard' | translate }}\"\n      placement=\"right\"\n      container=\"body\"\n    >\n      <i c8yIcon=\"plus-circle\" class=\"icon-20\"></i>\n    </button>\n  </li>\n</ng-template>"
            }]
    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc1.AddDashboardFactory }]; }, { template: [{
            type: ViewChild,
            args: ['template', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWRhc2hib2FyZC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvbnRleHQtZGFzaGJvYXJkL2FkZC1kYXNoYm9hcmQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTTlELE1BQU0sT0FBTyxxQkFBcUI7QUFBRyxJQUduQyxZQUNVLGdCQUFrQyxFQUNsQyxtQkFBd0M7QUFDakQsUUFGUyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO0FBQUMsUUFDbkMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtBQUNwRCxJQUFLLENBQUM7QUFDTixJQUNFLFFBQVE7QUFDVixRQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDNUQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxZQUFZO0FBQ2QsUUFBSSxJQUFJLENBQUMsbUJBQW1CLENBQUMsWUFBWSxFQUFFLENBQUM7QUFDNUMsSUFBRSxDQUFDO0FBQ0g7aURBbkJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsbUJBQW1CLGtCQUM3Qjs7Ozs7d0VBQTZDLGNBQzlDOzs7NEhBQ0k7QUFBQztBQUErQyxZQVBkLGdCQUFnQjtBQUFJLFlBQ2xELG1CQUFtQjtBQUFHO0FBQUc7QUFFdkIsdUJBS1IsU0FBUyxTQUFDLFVBQVUsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFBTTs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIFZpZXdDaGlsZCwgVmlld0NvbnRhaW5lclJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWRkRGFzaGJvYXJkRmFjdG9yeSB9IGZyb20gJy4vYWRkLWRhc2hib2FyZC5mYWN0b3J5JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFkZC1kYXNoYm9hcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vYWRkLWRhc2hib2FyZC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQWRkRGFzaGJvYXJkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgndGVtcGxhdGUnLCB7IHN0YXRpYzogdHJ1ZSB9KSB0ZW1wbGF0ZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXJSZWY6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSBhZGREYXNoYm9hcmRGYWN0b3J5OiBBZGREYXNoYm9hcmRGYWN0b3J5XG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnZpZXdDb250YWluZXJSZWYuY3JlYXRlRW1iZWRkZWRWaWV3KHRoaXMudGVtcGxhdGUpO1xuICB9XG5cbiAgYWRkRGFzaGJvYXJkKCkge1xuICAgIHRoaXMuYWRkRGFzaGJvYXJkRmFjdG9yeS5hZGREYXNoYm9hcmQoKTtcbiAgfVxufVxuIl19