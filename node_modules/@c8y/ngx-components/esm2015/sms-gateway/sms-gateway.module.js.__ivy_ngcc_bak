import { NgModule } from '@angular/core';
import { gettext, HOOK_PATTERN_MESSAGES, ProviderConfigurationModule } from '@c8y/ngx-components';
import { MESSAGES } from './pattern-messages.data';
import { SmsGatewayGuard } from './sms-gateway.guard';
const ɵ0 = MESSAGES;
export class SmsGatewayModule {
}
SmsGatewayModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    ProviderConfigurationModule.config([
                        {
                            navigation: {
                                label: gettext('SMS provider'),
                                path: 'smsgateway',
                                icon: 'envelope-o',
                                parent: gettext('Settings'),
                                priority: 1000,
                                canActivate: [SmsGatewayGuard]
                            },
                            layout: {
                                pageTitle: gettext('SMS provider'),
                                cardTitle: gettext('Credentials'),
                                description: gettext('Enter your credentials from your SMS provider. This enables platform features that utilize SMS services (for example, two-factor authentication and user notifications).'),
                                providerName: gettext('SMS provider'),
                                providerNamePlaceholder: gettext('Select or type to filter providers'),
                                providerNameNoMatchesHint: gettext('Select one of the existing providers.'),
                                deleteRoles: ['ROLE_SMS_ADMIN'],
                                deleteBtnLabel: gettext('Delete'),
                                saveRoles: ['ROLE_SMS_ADMIN'],
                                saveBtnLabel: gettext('Save'),
                                configurationUpdatedSuccessMsg: gettext('Credentials updated.'),
                                deleteConfigurationModalTitle: gettext('Delete credentials'),
                                deleteConfigurationModalBody: gettext(`You are about to delete SMS provider credentials. Deleting credentials will lock out any users with SMS-based two-factor authentication and deactivate the SMS-based smart rules and device communication. Do you want to proceed?`),
                                deleteConfigurationModalOkBtnLabel: gettext('Delete'),
                                configurationDeletedSuccessMsg: gettext('Credentials deleted.')
                            },
                            endpoint: {
                                definitionsEndpoint: {
                                    baseUrl: 'service/messaging/providers',
                                    listUrl: 'definitions'
                                },
                                configurationEndpoint: {
                                    baseUrl: 'service/messaging/providers',
                                    listUrl: 'configuration'
                                }
                            }
                        }
                    ])
                ],
                providers: [SmsGatewayGuard, { provide: HOOK_PATTERN_MESSAGES, useValue: ɵ0, multi: true }]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21zLWdhdGV3YXkubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc21zLWdhdGV3YXkvc21zLWdhdGV3YXkubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xHLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7V0FnRHFCLFFBQVE7QUFFbkYsTUFBTSxPQUFPLGdCQUFnQjs7O1lBaEQ1QixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFO29CQUNQLDJCQUEyQixDQUFDLE1BQU0sQ0FBQzt3QkFDakM7NEJBQ0UsVUFBVSxFQUFFO2dDQUNWLEtBQUssRUFBRSxPQUFPLENBQUMsY0FBYyxDQUFDO2dDQUM5QixJQUFJLEVBQUUsWUFBWTtnQ0FDbEIsSUFBSSxFQUFFLFlBQVk7Z0NBQ2xCLE1BQU0sRUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDO2dDQUMzQixRQUFRLEVBQUUsSUFBSTtnQ0FDZCxXQUFXLEVBQUUsQ0FBQyxlQUFlLENBQUM7NkJBQy9COzRCQUNELE1BQU0sRUFBRTtnQ0FDTixTQUFTLEVBQUUsT0FBTyxDQUFDLGNBQWMsQ0FBQztnQ0FDbEMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxhQUFhLENBQUM7Z0NBQ2pDLFdBQVcsRUFBRSxPQUFPLENBQ2xCLDBLQUEwSyxDQUMzSztnQ0FDRCxZQUFZLEVBQUUsT0FBTyxDQUFDLGNBQWMsQ0FBQztnQ0FDckMsdUJBQXVCLEVBQUUsT0FBTyxDQUFDLG9DQUFvQyxDQUFDO2dDQUN0RSx5QkFBeUIsRUFBRSxPQUFPLENBQUMsdUNBQXVDLENBQUM7Z0NBQzNFLFdBQVcsRUFBRSxDQUFDLGdCQUFnQixDQUFDO2dDQUMvQixjQUFjLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztnQ0FDakMsU0FBUyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7Z0NBQzdCLFlBQVksRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDO2dDQUM3Qiw4QkFBOEIsRUFBRSxPQUFPLENBQUMsc0JBQXNCLENBQUM7Z0NBQy9ELDZCQUE2QixFQUFFLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztnQ0FDNUQsNEJBQTRCLEVBQUUsT0FBTyxDQUNuQyxvT0FBb08sQ0FDck87Z0NBQ0Qsa0NBQWtDLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztnQ0FDckQsOEJBQThCLEVBQUUsT0FBTyxDQUFDLHNCQUFzQixDQUFDOzZCQUNoRTs0QkFDRCxRQUFRLEVBQUU7Z0NBQ1IsbUJBQW1CLEVBQUU7b0NBQ25CLE9BQU8sRUFBRSw2QkFBNkI7b0NBQ3RDLE9BQU8sRUFBRSxhQUFhO2lDQUN2QjtnQ0FDRCxxQkFBcUIsRUFBRTtvQ0FDckIsT0FBTyxFQUFFLDZCQUE2QjtvQ0FDdEMsT0FBTyxFQUFFLGVBQWU7aUNBQ3pCOzZCQUNGO3lCQUNGO3FCQUNGLENBQUM7aUJBQ0g7Z0JBQ0QsU0FBUyxFQUFFLENBQUMsZUFBZSxFQUFFLEVBQUUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLFFBQVEsSUFBVSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQzthQUNsRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBIT09LX1BBVFRFUk5fTUVTU0FHRVMsIFByb3ZpZGVyQ29uZmlndXJhdGlvbk1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgTUVTU0FHRVMgfSBmcm9tICcuL3BhdHRlcm4tbWVzc2FnZXMuZGF0YSc7XG5pbXBvcnQgeyBTbXNHYXRld2F5R3VhcmQgfSBmcm9tICcuL3Ntcy1nYXRld2F5Lmd1YXJkJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIFByb3ZpZGVyQ29uZmlndXJhdGlvbk1vZHVsZS5jb25maWcoW1xuICAgICAge1xuICAgICAgICBuYXZpZ2F0aW9uOiB7XG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ1NNUyBwcm92aWRlcicpLFxuICAgICAgICAgIHBhdGg6ICdzbXNnYXRld2F5JyxcbiAgICAgICAgICBpY29uOiAnZW52ZWxvcGUtbycsXG4gICAgICAgICAgcGFyZW50OiBnZXR0ZXh0KCdTZXR0aW5ncycpLFxuICAgICAgICAgIHByaW9yaXR5OiAxMDAwLFxuICAgICAgICAgIGNhbkFjdGl2YXRlOiBbU21zR2F0ZXdheUd1YXJkXVxuICAgICAgICB9LFxuICAgICAgICBsYXlvdXQ6IHtcbiAgICAgICAgICBwYWdlVGl0bGU6IGdldHRleHQoJ1NNUyBwcm92aWRlcicpLFxuICAgICAgICAgIGNhcmRUaXRsZTogZ2V0dGV4dCgnQ3JlZGVudGlhbHMnKSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dChcbiAgICAgICAgICAgICdFbnRlciB5b3VyIGNyZWRlbnRpYWxzIGZyb20geW91ciBTTVMgcHJvdmlkZXIuIFRoaXMgZW5hYmxlcyBwbGF0Zm9ybSBmZWF0dXJlcyB0aGF0IHV0aWxpemUgU01TIHNlcnZpY2VzIChmb3IgZXhhbXBsZSwgdHdvLWZhY3RvciBhdXRoZW50aWNhdGlvbiBhbmQgdXNlciBub3RpZmljYXRpb25zKS4nXG4gICAgICAgICAgKSxcbiAgICAgICAgICBwcm92aWRlck5hbWU6IGdldHRleHQoJ1NNUyBwcm92aWRlcicpLFxuICAgICAgICAgIHByb3ZpZGVyTmFtZVBsYWNlaG9sZGVyOiBnZXR0ZXh0KCdTZWxlY3Qgb3IgdHlwZSB0byBmaWx0ZXIgcHJvdmlkZXJzJyksXG4gICAgICAgICAgcHJvdmlkZXJOYW1lTm9NYXRjaGVzSGludDogZ2V0dGV4dCgnU2VsZWN0IG9uZSBvZiB0aGUgZXhpc3RpbmcgcHJvdmlkZXJzLicpLFxuICAgICAgICAgIGRlbGV0ZVJvbGVzOiBbJ1JPTEVfU01TX0FETUlOJ10sXG4gICAgICAgICAgZGVsZXRlQnRuTGFiZWw6IGdldHRleHQoJ0RlbGV0ZScpLFxuICAgICAgICAgIHNhdmVSb2xlczogWydST0xFX1NNU19BRE1JTiddLFxuICAgICAgICAgIHNhdmVCdG5MYWJlbDogZ2V0dGV4dCgnU2F2ZScpLFxuICAgICAgICAgIGNvbmZpZ3VyYXRpb25VcGRhdGVkU3VjY2Vzc01zZzogZ2V0dGV4dCgnQ3JlZGVudGlhbHMgdXBkYXRlZC4nKSxcbiAgICAgICAgICBkZWxldGVDb25maWd1cmF0aW9uTW9kYWxUaXRsZTogZ2V0dGV4dCgnRGVsZXRlIGNyZWRlbnRpYWxzJyksXG4gICAgICAgICAgZGVsZXRlQ29uZmlndXJhdGlvbk1vZGFsQm9keTogZ2V0dGV4dChcbiAgICAgICAgICAgIGBZb3UgYXJlIGFib3V0IHRvIGRlbGV0ZSBTTVMgcHJvdmlkZXIgY3JlZGVudGlhbHMuIERlbGV0aW5nIGNyZWRlbnRpYWxzIHdpbGwgbG9jayBvdXQgYW55IHVzZXJzIHdpdGggU01TLWJhc2VkIHR3by1mYWN0b3IgYXV0aGVudGljYXRpb24gYW5kIGRlYWN0aXZhdGUgdGhlIFNNUy1iYXNlZCBzbWFydCBydWxlcyBhbmQgZGV2aWNlIGNvbW11bmljYXRpb24uIERvIHlvdSB3YW50IHRvIHByb2NlZWQ/YFxuICAgICAgICAgICksXG4gICAgICAgICAgZGVsZXRlQ29uZmlndXJhdGlvbk1vZGFsT2tCdG5MYWJlbDogZ2V0dGV4dCgnRGVsZXRlJyksXG4gICAgICAgICAgY29uZmlndXJhdGlvbkRlbGV0ZWRTdWNjZXNzTXNnOiBnZXR0ZXh0KCdDcmVkZW50aWFscyBkZWxldGVkLicpXG4gICAgICAgIH0sXG4gICAgICAgIGVuZHBvaW50OiB7XG4gICAgICAgICAgZGVmaW5pdGlvbnNFbmRwb2ludDoge1xuICAgICAgICAgICAgYmFzZVVybDogJ3NlcnZpY2UvbWVzc2FnaW5nL3Byb3ZpZGVycycsXG4gICAgICAgICAgICBsaXN0VXJsOiAnZGVmaW5pdGlvbnMnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb25maWd1cmF0aW9uRW5kcG9pbnQ6IHtcbiAgICAgICAgICAgIGJhc2VVcmw6ICdzZXJ2aWNlL21lc3NhZ2luZy9wcm92aWRlcnMnLFxuICAgICAgICAgICAgbGlzdFVybDogJ2NvbmZpZ3VyYXRpb24nXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgXSlcbiAgXSxcbiAgcHJvdmlkZXJzOiBbU21zR2F0ZXdheUd1YXJkLCB7IHByb3ZpZGU6IEhPT0tfUEFUVEVSTl9NRVNTQUdFUywgdXNlVmFsdWU6IE1FU1NBR0VTLCBtdWx0aTogdHJ1ZSB9XVxufSlcbmV4cG9ydCBjbGFzcyBTbXNHYXRld2F5TW9kdWxlIHt9XG4iXX0=