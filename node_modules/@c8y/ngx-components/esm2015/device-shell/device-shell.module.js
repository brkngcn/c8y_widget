import { NgModule } from '@angular/core';
import { gettext, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { DeviceShellGuard } from './device-shell.guard';
import { DeviceShellComponent, ShellModule } from './shell';
import * as ɵngcc0 from '@angular/core';
const DEVICE_SHELL_ROUTE = {
    path: 'shell',
    context: ViewContext.Device,
    component: DeviceShellComponent,
    label: gettext('Shell'),
    icon: 'terminal',
    canActivate: [DeviceShellGuard]
};
const ɵ0 = DEVICE_SHELL_ROUTE;
export class DeviceShellModule {
}
DeviceShellModule.ɵfac = function DeviceShellModule_Factory(t) { return new (t || DeviceShellModule)(); };
DeviceShellModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DeviceShellModule });
DeviceShellModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        DeviceShellGuard,
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[ShellModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceShellModule, [{
        type: NgModule,
        args: [{
                imports: [ShellModule],
                providers: [
                    DeviceShellGuard,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DeviceShellModule, { imports: function () { return [ShellModule]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXNoZWxsLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vZGV2aWNlLXNoZWxsL2RldmljZS1zaGVsbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBUyxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5RSxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsV0FBVyxFQUFFLE1BQU0sU0FBUyxDQUFDOztBQUU1RCxNQUFNLGtCQUFrQixHQUFVO0FBQ2xDLElBQUUsSUFBSSxFQUFFLE9BQU87QUFDZixJQUFFLE9BQU8sRUFBRSxXQUFXLENBQUMsTUFBTTtBQUM3QixJQUFFLFNBQVMsRUFBRSxvQkFBb0I7QUFDakMsSUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUN6QixJQUFFLElBQUksRUFBRSxVQUFVO0FBQ2xCLElBQUUsV0FBVyxFQUFFLENBQUMsZ0JBQWdCLENBQUM7QUFDakMsQ0FBQyxDQUFDO0FBQ0YsV0FPZ0Isa0JBQWtCO0FBS2xDLE1BQU0sT0FBTyxpQkFBaUI7QUFBRzs2Q0FYaEMsUUFBUSxTQUFDLGtCQUNSLE9BQU8sRUFBRSxDQUFDLFdBQVcsQ0FBQzthQUN0QixTQUFTLEVBQUUsc0JBQ1QsZ0JBQWdCLHNCQUNoQjtpQkFDRSxPQUFPLEVBQUUsVUFBVSwwQkFDbkIsUUFBUSxJQUFvQjtzQkFDNUI7Q0FBSyxFQUFFLElBQUk7bUJBQ1o7SUFDRixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7eUtBQ0k7QUFBQztBQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIEhPT0tfUk9VVEUsIFJvdXRlLCBWaWV3Q29udGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGV2aWNlU2hlbGxHdWFyZCB9IGZyb20gJy4vZGV2aWNlLXNoZWxsLmd1YXJkJztcbmltcG9ydCB7IERldmljZVNoZWxsQ29tcG9uZW50LCBTaGVsbE1vZHVsZSB9IGZyb20gJy4vc2hlbGwnO1xuXG5jb25zdCBERVZJQ0VfU0hFTExfUk9VVEU6IFJvdXRlID0ge1xuICBwYXRoOiAnc2hlbGwnLFxuICBjb250ZXh0OiBWaWV3Q29udGV4dC5EZXZpY2UsXG4gIGNvbXBvbmVudDogRGV2aWNlU2hlbGxDb21wb25lbnQsXG4gIGxhYmVsOiBnZXR0ZXh0KCdTaGVsbCcpLFxuICBpY29uOiAndGVybWluYWwnLFxuICBjYW5BY3RpdmF0ZTogW0RldmljZVNoZWxsR3VhcmRdXG59O1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbU2hlbGxNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICBEZXZpY2VTaGVsbEd1YXJkLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfUk9VVEUsXG4gICAgICB1c2VWYWx1ZTogREVWSUNFX1NIRUxMX1JPVVRFLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGV2aWNlU2hlbGxNb2R1bGUge31cbiJdfQ==