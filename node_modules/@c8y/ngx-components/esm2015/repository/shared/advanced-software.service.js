import { Injectable } from '@angular/core';
import { ApplicationService, FetchClient, Service } from '@c8y/client';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
export class AdvancedSoftwareService extends Service {
    constructor(client, applicationService) {
        super(client);
        this.applicationService = applicationService;
        this.baseUrl = 'service/advanced-software-mgmt';
        this.listUrl = 'software';
        this.propertyName = 'softwareList';
    }
    list(filter = {}) {
        return super.list(filter);
    }
    isASMAvailable() {
        if (this.isAvailable === undefined) {
            this.isAvailable = this.applicationService
                .isAvailable(AdvancedSoftwareService.applicationName)
                .then(result => !!(result === null || result === void 0 ? void 0 : result.data));
        }
        return this.isAvailable;
    }
}
AdvancedSoftwareService.ɵfac = function AdvancedSoftwareService_Factory(t) { return new (t || AdvancedSoftwareService)(ɵngcc0.ɵɵinject(ɵngcc1.FetchClient), ɵngcc0.ɵɵinject(ɵngcc1.ApplicationService)); };
AdvancedSoftwareService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: AdvancedSoftwareService, factory: AdvancedSoftwareService.ɵfac });
AdvancedSoftwareService.applicationName = 'advanced-software-mgmt';
AdvancedSoftwareService.ctorParameters = () => [
    { type: FetchClient },
    { type: ApplicationService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AdvancedSoftwareService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.FetchClient }, { type: ɵngcc1.ApplicationService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWR2YW5jZWQtc29mdHdhcmUuc2VydmljZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcmVwb3NpdG9yeS9zaGFyZWQvYWR2YW5jZWQtc29mdHdhcmUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxXQUFXLEVBQStCLE9BQU8sRUFBRSxNQUFNLGFBQWEsQ0FBQzs7O0FBR3BHLE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxPQUF1QjtBQUNwRSxJQVFFLFlBQVksTUFBbUIsRUFBVSxrQkFBc0M7QUFDakYsUUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDbEIsUUFGMkMsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtBQUFDLFFBTnRFLFlBQU8sR0FBVyxnQ0FBZ0MsQ0FBQztBQUMvRCxRQUFZLFlBQU8sR0FBVyxVQUFVLENBQUM7QUFDekMsUUFBWSxpQkFBWSxHQUFHLGNBQWMsQ0FBQztBQUMxQyxJQUtFLENBQUM7QUFDSCxJQUNFLElBQUksQ0FBQyxTQUFpQixFQUFFO0FBQUksUUFDMUIsT0FBTyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQzlCLElBQUUsQ0FBQztBQUNILElBQ0UsY0FBYztBQUFLLFFBQ2pCLElBQUksSUFBSSxDQUFDLFdBQVcsS0FBSyxTQUFTLEVBQUU7QUFDeEMsWUFBTSxJQUFJLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxrQkFBa0I7QUFDaEQsaUJBQVMsV0FBVyxDQUFDLHVCQUF1QixDQUFDLGVBQWUsQ0FBQztBQUM3RCxpQkFBUyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxNQUFNLGFBQU4sTUFBTSx1QkFBTixNQUFNLENBQUUsSUFBSSxDQUFBLENBQUMsQ0FBQztBQUN4QyxTQUFLO0FBQ0wsUUFDSSxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUM7QUFDNUIsSUFBRSxDQUFDO0FBQ0g7O21KQUFDO0FBekJ5Qix1Q0FBZSxHQUFHLHdCQUF3QixDQUFDLEFBRG5FO0FBQUM7RUFERixVQUFVLFpBQ3lDLFlBSHZCLFdBQVc7QUFBSSxZQUFuQyxrQkFBa0I7QUFBRzs7O2lIQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBcHBsaWNhdGlvblNlcnZpY2UsIEZldGNoQ2xpZW50LCBJTWFuYWdlZE9iamVjdCwgSVJlc3VsdExpc3QsIFNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBBZHZhbmNlZFNvZnR3YXJlU2VydmljZSBleHRlbmRzIFNlcnZpY2U8SU1hbmFnZWRPYmplY3Q+IHtcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgYXBwbGljYXRpb25OYW1lID0gJ2FkdmFuY2VkLXNvZnR3YXJlLW1nbXQnO1xuXG4gIHByb3RlY3RlZCBiYXNlVXJsOiBzdHJpbmcgPSAnc2VydmljZS9hZHZhbmNlZC1zb2Z0d2FyZS1tZ210JztcbiAgcHJvdGVjdGVkIGxpc3RVcmw6IHN0cmluZyA9ICdzb2Z0d2FyZSc7XG4gIHByb3RlY3RlZCBwcm9wZXJ0eU5hbWUgPSAnc29mdHdhcmVMaXN0JztcblxuICBwcml2YXRlIGlzQXZhaWxhYmxlOiBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKGNsaWVudDogRmV0Y2hDbGllbnQsIHByaXZhdGUgYXBwbGljYXRpb25TZXJ2aWNlOiBBcHBsaWNhdGlvblNlcnZpY2UpIHtcbiAgICBzdXBlcihjbGllbnQpO1xuICB9XG5cbiAgbGlzdChmaWx0ZXI6IG9iamVjdCA9IHt9KTogUHJvbWlzZTxJUmVzdWx0TGlzdDxJTWFuYWdlZE9iamVjdD4+IHtcbiAgICByZXR1cm4gc3VwZXIubGlzdChmaWx0ZXIpO1xuICB9XG5cbiAgaXNBU01BdmFpbGFibGUoKTogUHJvbWlzZTxib29sZWFuPiB7XG4gICAgaWYgKHRoaXMuaXNBdmFpbGFibGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgdGhpcy5pc0F2YWlsYWJsZSA9IHRoaXMuYXBwbGljYXRpb25TZXJ2aWNlXG4gICAgICAgIC5pc0F2YWlsYWJsZShBZHZhbmNlZFNvZnR3YXJlU2VydmljZS5hcHBsaWNhdGlvbk5hbWUpXG4gICAgICAgIC50aGVuKHJlc3VsdCA9PiAhIXJlc3VsdD8uZGF0YSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuaXNBdmFpbGFibGU7XG4gIH1cbn1cbiJdfQ==