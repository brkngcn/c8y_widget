import { ChangeDetectorRef, Component, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { QueriesUtil } from '@c8y/client';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { uniqBy } from 'lodash-es';
import { BehaviorSubject, pipe } from 'rxjs';
import { debounceTime, map, shareReplay, switchMap, tap } from 'rxjs/operators';
import { RepositoryType } from '../repository.model';
import { RepositoryService } from '../repository.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../repository.service';
import * as ɵngcc2 from '@ngx-translate/core';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@angular/forms';
import * as ɵngcc5 from '@angular/common';

const _c0 = ["deviceSoftwareTypeModel"];
const _c1 = ["notFoundTypeAddNewTemplate"];
const _c2 = ["notFoundTypeTemplate"];
function SoftwareTypeComponent_c8y_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 6);
    ɵngcc0.ɵɵlistener("click", function SoftwareTypeComponent_c8y_li_2_Template_c8y_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.clearSoftware(); });
    ɵngcc0.ɵɵelementStart(1, "span");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("active", !(ctx_r1.softwareTypeMO == null ? null : ctx_r1.softwareTypeMO.softwareType));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 2, ctx_r1.clearSelectionOptionLabel));
} }
function SoftwareTypeComponent_c8y_li_3_Template(rf, ctx) { if (rf & 1) {
    const _r11 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 6);
    ɵngcc0.ɵɵlistener("click", function SoftwareTypeComponent_c8y_li_3_Template_c8y_li_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r11); const software_r9 = restoredCtx.$implicit; const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.selectSoftware(software_r9); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 7);
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const software_r9 = ctx.$implicit;
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("active", (ctx_r2.softwareTypeMO == null ? null : ctx_r2.softwareTypeMO.softwareType) === software_r9.softwareType);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", software_r9.softwareType || "--")("pattern", ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r2.search$));
} }
function SoftwareTypeComponent_ng_template_4_c8y_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 9);
    ɵngcc0.ɵɵelementStart(1, "span", 10);
    ɵngcc0.ɵɵtext(2, "No match found.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 11);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5, " Add new`software type` ");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 1, "Add new`software type`"));
} }
function SoftwareTypeComponent_ng_template_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SoftwareTypeComponent_ng_template_4_c8y_li_0_Template, 6, 3, "c8y-li", 8);
    ɵngcc0.ɵɵpipe(1, "async");
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    let tmp_0_0;
    ɵngcc0.ɵɵproperty("ngIf", ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r4.search$)) == null ? null : tmp_0_0.length) > 0);
} }
function SoftwareTypeComponent_ng_template_6_c8y_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 9);
    ɵngcc0.ɵɵelementStart(1, "span", 10);
    ɵngcc0.ɵɵtext(2, "No match found. Refine your search terms or check your spelling.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function SoftwareTypeComponent_ng_template_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, SoftwareTypeComponent_ng_template_6_c8y_li_0_Template, 3, 0, "c8y-li", 8);
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "async");
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext();
    let tmp_0_0;
    ɵngcc0.ɵɵproperty("ngIf", ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(1, 1, ctx_r6.search$)) == null ? null : tmp_0_0.length) > 0 && ((tmp_0_0 = ɵngcc0.ɵɵpipeBind1(2, 3, ctx_r6.softwaresResult$)) == null ? null : tmp_0_0.data == null ? null : tmp_0_0.data.length) === 0);
} }
export class SoftwareTypeComponent {
    constructor(repositoryService, changeDetectorRef, translateService) {
        this.repositoryService = repositoryService;
        this.changeDetectorRef = changeDetectorRef;
        this.translateService = translateService;
        this.required = true;
        this.placeholder = this.translateService.instant(gettext('e.g. {{ example }}'), {
            example: 'yum'
        });
        this.emitResultsOnly = false;
        this.showBtnInNotFoundMessage = true;
        this.allowFreeEntries = true;
        this.showClearSelectionOption = false;
        this.clearSelectionOptionLabel = gettext('All software types');
        this.onSelectSoftware = new EventEmitter();
        this.filterPipe = pipe(tap());
        this.search$ = new BehaviorSubject(null);
        this.queriesUtil = new QueriesUtil();
        this.softwareTypes = new Set();
        this.softwaresResult$ = this.search$.pipe(debounceTime(300), tap(() => this.softwareTypes.clear()), switchMap((searchString) => {
            if (!this.emitResultsOnly || !searchString) {
                this.onSelectSoftware.emit(this.softwareTypeMO);
            }
            return this.getSoftwareByTypeResult(searchString);
        }), shareReplay(1));
        this.filterPipe = pipe(map(this.removeDuplicatesBySoftwareType.bind(this)));
    }
    ngOnInit() {
        this.notFoundTemplateToUse = this.showBtnInNotFoundMessage
            ? this.notFoundTypeAddNewTemplate
            : this.notFoundTypeTemplate;
    }
    getSoftwareByTypeResult(searchString) {
        let query = this.queriesUtil.prependOrderbys({}, [{ softwareType: 1 }]);
        const filter = !!searchString
            ? {
                softwareType: {
                    __eq: `*${searchString}*`
                }
            }
            : {
                __has: 'softwareType'
            };
        query = this.queriesUtil.addAndFilter(query, filter);
        return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, {
            query,
            params: {
                pageSize: 200
            }
        });
    }
    selectSoftware(software) {
        this.softwareTypeMO = software;
        this.onSelectSoftware.emit(software);
        this.deviceSoftwareTypeModel.searchControlModel.control.markAsDirty();
        this.deviceSoftwareTypeModel.onChange(software);
    }
    clearSoftware() {
        this.softwareTypeMO = undefined;
        this.search$.next('');
        this.onSelectSoftware.emit();
    }
    resetInput() {
        this.deviceSoftwareTypeModel.reset();
    }
    writeValue(value) {
        this.deviceSoftwareTypeModel.writeValue(value);
    }
    registerOnChange(fn) {
        this.deviceSoftwareTypeModel.registerOnChange(fn);
    }
    registerOnTouched(fn) {
        this.deviceSoftwareTypeModel.registerOnTouched(fn);
    }
    setDisabledState(isDisabled) {
        this.deviceSoftwareTypeModel.setDisabledState(isDisabled);
    }
    validate(control) {
        return this.deviceSoftwareTypeModel.validate(control);
    }
    removeDuplicatesBySoftwareType(list) {
        const uniqueBySoftwareType = uniqBy(list, 'softwareType').filter((sw) => !this.softwareTypes.has(sw.softwareType));
        uniqueBySoftwareType.forEach((sw) => this.softwareTypes.add(sw.softwareType));
        return uniqueBySoftwareType;
    }
}
SoftwareTypeComponent.ɵfac = function SoftwareTypeComponent_Factory(t) { return new (t || SoftwareTypeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RepositoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslateService)); };
SoftwareTypeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: SoftwareTypeComponent, selectors: [["c8y-software-type"]], viewQuery: function SoftwareTypeComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
        ɵngcc0.ɵɵviewQuery(_c1, 7);
        ɵngcc0.ɵɵviewQuery(_c2, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.deviceSoftwareTypeModel = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTypeAddNewTemplate = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.notFoundTypeTemplate = _t.first);
    } }, inputs: { required: "required", placeholder: "placeholder", emitResultsOnly: "emitResultsOnly", showBtnInNotFoundMessage: "showBtnInNotFoundMessage", allowFreeEntries: "allowFreeEntries", showClearSelectionOption: "showClearSelectionOption", clearSelectionOptionLabel: "clearSelectionOptionLabel", softwareTypeMO: "softwareTypeMO", disabled: "disabled", style: "style" }, outputs: { onSelectSoftware: "onSelectSoftware" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => SoftwareTypeComponent)
            },
            {
                provide: NG_VALIDATORS,
                useExisting: forwardRef(() => SoftwareTypeComponent),
                multi: true
            }
        ])], decls: 8, vars: 11, consts: [["name", "softwareType", "displayProperty", "softwareType", 3, "ngModel", "required", "disabled", "placeholder", "allowFreeEntries", "ngStyle", "ngModelChange", "onSearch"], ["deviceSoftwareTypeModel", ""], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "active", "click", 4, "ngIf"], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "active", "click", 4, "c8yFor", "c8yForOf", "c8yForPipe", "c8yForLoadMore", "c8yForNotFound"], ["notFoundTypeAddNewTemplate", ""], ["notFoundTypeTemplate", ""], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "active", "click"], [3, "text", "pattern"], ["class", "bg-gray-lighter p-8", 4, "ngIf"], [1, "bg-gray-lighter", "p-8"], ["translate", ""], ["type", "button", "translate", "", 1, "btn", "btn-primary", "btn-xs", "m-l-8", 3, "title"]], template: function SoftwareTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-typeahead", 0, 1);
        ɵngcc0.ɵɵlistener("ngModelChange", function SoftwareTypeComponent_Template_c8y_typeahead_ngModelChange_0_listener($event) { return ctx.softwareTypeMO = $event; })("onSearch", function SoftwareTypeComponent_Template_c8y_typeahead_onSearch_0_listener($event) { return ctx.search$.next($event); });
        ɵngcc0.ɵɵtemplate(2, SoftwareTypeComponent_c8y_li_2_Template, 4, 4, "c8y-li", 2);
        ɵngcc0.ɵɵtemplate(3, SoftwareTypeComponent_c8y_li_3_Template, 3, 5, "c8y-li", 3);
        ɵngcc0.ɵɵtemplate(4, SoftwareTypeComponent_ng_template_4_Template, 2, 3, "ng-template", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(6, SoftwareTypeComponent_ng_template_6_Template, 3, 5, "ng-template", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngModel", ctx.softwareTypeMO)("required", ctx.required)("disabled", ctx.disabled)("placeholder", ctx.placeholder)("allowFreeEntries", ctx.allowFreeEntries)("ngStyle", ctx.style);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.showClearSelectionOption);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("c8yForOf", ctx.softwaresResult$)("c8yForPipe", ctx.filterPipe)("c8yForLoadMore", "auto")("c8yForNotFound", ctx.notFoundTemplateToUse);
    } }, directives: [ɵngcc3.TypeaheadComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc4.RequiredValidator, ɵngcc5.NgStyle, ɵngcc5.NgIf, ɵngcc3.ForOfDirective, ɵngcc3.ListItemComponent, ɵngcc3.HighlightComponent, ɵngcc3.C8yTranslateDirective], pipes: [ɵngcc3.C8yTranslatePipe, ɵngcc5.AsyncPipe], encapsulation: 2 });
SoftwareTypeComponent.ctorParameters = () => [
    { type: RepositoryService },
    { type: ChangeDetectorRef },
    { type: TranslateService }
];
SoftwareTypeComponent.propDecorators = {
    softwareTypeMO: [{ type: Input }],
    disabled: [{ type: Input }],
    style: [{ type: Input }],
    required: [{ type: Input }],
    placeholder: [{ type: Input }],
    emitResultsOnly: [{ type: Input }],
    showBtnInNotFoundMessage: [{ type: Input }],
    allowFreeEntries: [{ type: Input }],
    showClearSelectionOption: [{ type: Input }],
    clearSelectionOptionLabel: [{ type: Input }],
    deviceSoftwareTypeModel: [{ type: ViewChild, args: ['deviceSoftwareTypeModel', { static: true },] }],
    notFoundTypeAddNewTemplate: [{ type: ViewChild, args: ['notFoundTypeAddNewTemplate', { static: true },] }],
    notFoundTypeTemplate: [{ type: ViewChild, args: ['notFoundTypeTemplate', { static: true },] }],
    onSelectSoftware: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SoftwareTypeComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-software-type',
                template: "<c8y-typeahead\n  [(ngModel)]=\"softwareTypeMO\"\n  [required]=\"required\"\n  [disabled]=\"disabled\"\n  name=\"softwareType\"\n  [placeholder]=\"placeholder\"\n  [allowFreeEntries]=\"allowFreeEntries\"\n  #deviceSoftwareTypeModel\n  (onSearch)=\"search$.next($event)\"\n  displayProperty=\"softwareType\"\n  [ngStyle]=\"style\"\n>\n  <c8y-li\n    *ngIf=\"showClearSelectionOption\"\n    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n    (click)=\"clearSoftware()\"\n    [active]=\"!softwareTypeMO?.softwareType\"\n  >\n    <span>{{ clearSelectionOptionLabel | translate }}</span>\n  </c8y-li>\n  <c8y-li\n    *c8yFor=\"\n      let software of softwaresResult$;\n      pipe: filterPipe;\n      loadMore: 'auto';\n      notFound: notFoundTemplateToUse\n    \"\n    class=\"p-l-8 p-r-8 c8y-list__item--link\"\n    (click)=\"selectSoftware(software)\"\n    [active]=\"softwareTypeMO?.softwareType === software.softwareType\"\n  >\n    <c8y-highlight\n      [text]=\"software.softwareType || '--'\"\n      [pattern]=\"search$ | async\"\n    ></c8y-highlight>\n  </c8y-li>\n  <ng-template #notFoundTypeAddNewTemplate>\n    <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"(search$ | async)?.length > 0\">\n      <span translate>No match found.</span>\n      <button\n        title=\"{{ 'Add new`software type`' | translate }}\"\n        type=\"button\"\n        class=\"btn btn-primary btn-xs m-l-8\"\n        translate\n      >\n        Add new`software type`\n      </button>\n    </c8y-li>\n  </ng-template>\n  <ng-template #notFoundTypeTemplate>\n    <c8y-li\n      class=\"bg-gray-lighter p-8\"\n      *ngIf=\"(search$ | async)?.length > 0 && (softwaresResult$ | async)?.data?.length === 0\"\n    >\n      <span translate>No match found. Refine your search terms or check your spelling.</span>\n    </c8y-li>\n  </ng-template>\n</c8y-typeahead>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => SoftwareTypeComponent)
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => SoftwareTypeComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.RepositoryService }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.TranslateService }]; }, { required: [{
            type: Input
        }], placeholder: [{
            type: Input
        }], emitResultsOnly: [{
            type: Input
        }], showBtnInNotFoundMessage: [{
            type: Input
        }], allowFreeEntries: [{
            type: Input
        }], showClearSelectionOption: [{
            type: Input
        }], clearSelectionOptionLabel: [{
            type: Input
        }], onSelectSoftware: [{
            type: Output
        }], softwareTypeMO: [{
            type: Input
        }], disabled: [{
            type: Input
        }], style: [{
            type: Input
        }], deviceSoftwareTypeModel: [{
            type: ViewChild,
            args: ['deviceSoftwareTypeModel', { static: true }]
        }], notFoundTypeAddNewTemplate: [{
            type: ViewChild,
            args: ['notFoundTypeAddNewTemplate', { static: true }]
        }], notFoundTypeTemplate: [{
            type: ViewChild,
            args: ['notFoundTypeTemplate', { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic29mdHdhcmUtdHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3JlcG9zaXRvcnkvc2hhcmVkL3NvZnR3YXJlLXR5cGUvc29mdHdhcmUtdHlwZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLGlCQUFpQixFQUNqQixTQUFTLEVBQ1QsWUFBWSxFQUNaLFVBQVUsRUFDVixLQUFLLEVBRUwsTUFBTSxFQUVOLFNBQVMsRUFDVixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBR0wsYUFBYSxFQUNiLGlCQUFpQixFQUdsQixNQUFNLGdCQUFnQixDQUFDO0FBQ3hCLE9BQU8sRUFBK0IsV0FBVyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxPQUFPLEVBQXNCLE1BQU0scUJBQXFCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNuQyxPQUFPLEVBQUUsZUFBZSxFQUFjLElBQUksRUFBaUIsTUFBTSxNQUFNLENBQUM7QUFDeEUsT0FBTyxFQUFFLFlBQVksRUFBRSxHQUFHLEVBQUUsV0FBVyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCMUQsTUFBTSxPQUFPLHFCQUFxQjtBQUFHLElBbURuQyxZQUNVLGlCQUFvQyxFQUNyQyxpQkFBb0MsRUFDbkMsZ0JBQWtDO0FBQzNDLFFBSFMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFt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RUFBRSxVQUFVLENBQUMsR0FBRyxFQUFFLENBQUMscUJBQXFCLENBQUMsMEJBQ3BELEtBQUssRUFBRSxJQUFJLHNCQUNaLGtCQUNGLGNBQ0Y7Ozs7Ozs7Ozs7Ozs7O21VQUNJO0FBQUM7QUFBK0MsWUFsQjVDLGlCQUFpQjtBQUFJLFlBekI1QixpQkFBaUI7QUFDakIsWUFtQk8sZ0JBQWdCO0FBQUc7QUFBRztBQUNmLDZCQXVCYixLQUFLO0FBQUssdUJBRVYsS0FBSztBQUFLLG9CQUVWLEtBQUs7QUFBSyx1QkFFVixLQUFLO0FBQ04sMEJBRUMsS0FBSztBQUNOLDhCQUlDLEtBQUs7QUFDTix1Q0FFQyxLQUFLO0FBQ04sK0JBRUMsS0FBSztBQUNOLHVDQUVDLEtBQUs7QUFDTix3Q0FFQyxLQUFLO0FBQ04sc0NBRUMsU0FBUyxTQUFDLHlCQUF5QixFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRTtBQUNuRCx5Q0FFRixTQUFTLFNBQUMsNEJBQTRCLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO0FBQ3RELG1DQUVGLFNBQVMsU0FBQyxzQkFBc0IsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7QUFDaEQsK0JBRUYsTUFBTTtBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBmb3J3YXJkUmVmLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFRlbXBsYXRlUmVmLFxuICBWaWV3Q2hpbGRcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBBYnN0cmFjdENvbnRyb2wsXG4gIENvbnRyb2xWYWx1ZUFjY2Vzc29yLFxuICBOR19WQUxJREFUT1JTLFxuICBOR19WQUxVRV9BQ0NFU1NPUixcbiAgVmFsaWRhdGlvbkVycm9ycyxcbiAgVmFsaWRhdG9yXG59IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0LCBJUmVzdWx0TGlzdCwgUXVlcmllc1V0aWwgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBUeXBlYWhlYWRDb21wb25lbnQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IHVuaXFCeSB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIE9ic2VydmFibGUsIHBpcGUsIFVuYXJ5RnVuY3Rpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IGRlYm91bmNlVGltZSwgbWFwLCBzaGFyZVJlcGxheSwgc3dpdGNoTWFwLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5VHlwZSB9IGZyb20gJy4uL3JlcG9zaXRvcnkubW9kZWwnO1xuaW1wb3J0IHsgUmVwb3NpdG9yeVNlcnZpY2UgfSBmcm9tICcuLi9yZXBvc2l0b3J5LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc29mdHdhcmUtdHlwZScsXG4gIHRlbXBsYXRlVXJsOiAnc29mdHdhcmUtdHlwZS5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBTb2Z0d2FyZVR5cGVDb21wb25lbnQpXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBOR19WQUxJREFUT1JTLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gU29mdHdhcmVUeXBlQ29tcG9uZW50KSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFNvZnR3YXJlVHlwZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQ29udHJvbFZhbHVlQWNjZXNzb3IsIFZhbGlkYXRvciB7XG4gIEBJbnB1dCgpIHNvZnR3YXJlVHlwZU1POiBJTWFuYWdlZE9iamVjdDtcblxuICBASW5wdXQoKSBkaXNhYmxlZDogYm9vbGVhbjtcblxuICBASW5wdXQoKSBzdHlsZTtcblxuICBASW5wdXQoKVxuICByZXF1aXJlZDogYm9vbGVhbiA9IHRydWU7XG5cbiAgQElucHV0KClcbiAgcGxhY2Vob2xkZXI6IHN0cmluZyA9IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGdldHRleHQoJ2UuZy4ge3sgZXhhbXBsZSB9fScpLCB7XG4gICAgZXhhbXBsZTogJ3l1bSdcbiAgfSk7XG5cbiAgQElucHV0KClcbiAgZW1pdFJlc3VsdHNPbmx5OiBib29sZWFuID0gZmFsc2U7XG5cbiAgQElucHV0KClcbiAgc2hvd0J0bkluTm90Rm91bmRNZXNzYWdlOiBib29sZWFuID0gdHJ1ZTtcblxuICBASW5wdXQoKVxuICBhbGxvd0ZyZWVFbnRyaWVzOiBib29sZWFuID0gdHJ1ZTtcblxuICBASW5wdXQoKVxuICBzaG93Q2xlYXJTZWxlY3Rpb25PcHRpb246IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICBjbGVhclNlbGVjdGlvbk9wdGlvbkxhYmVsOiBzdHJpbmcgPSBnZXR0ZXh0KCdBbGwgc29mdHdhcmUgdHlwZXMnKTtcblxuICBAVmlld0NoaWxkKCdkZXZpY2VTb2Z0d2FyZVR5cGVNb2RlbCcsIHsgc3RhdGljOiB0cnVlIH0pXG4gIGRldmljZVNvZnR3YXJlVHlwZU1vZGVsOiBUeXBlYWhlYWRDb21wb25lbnQ7XG5cbiAgQFZpZXdDaGlsZCgnbm90Rm91bmRUeXBlQWRkTmV3VGVtcGxhdGUnLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICBub3RGb3VuZFR5cGVBZGROZXdUZW1wbGF0ZTogVGVtcGxhdGVSZWY8dW5rbm93bj47XG5cbiAgQFZpZXdDaGlsZCgnbm90Rm91bmRUeXBlVGVtcGxhdGUnLCB7IHN0YXRpYzogdHJ1ZSB9KVxuICBub3RGb3VuZFR5cGVUZW1wbGF0ZTogVGVtcGxhdGVSZWY8dW5rbm93bj47XG5cbiAgQE91dHB1dCgpIG9uU2VsZWN0U29mdHdhcmU6IEV2ZW50RW1pdHRlcjxJTWFuYWdlZE9iamVjdD4gPSBuZXcgRXZlbnRFbWl0dGVyPElNYW5hZ2VkT2JqZWN0PigpO1xuXG4gIG5vdEZvdW5kVGVtcGxhdGVUb1VzZTogVGVtcGxhdGVSZWY8dW5rbm93bj47XG5cbiAgZmlsdGVyUGlwZTogVW5hcnlGdW5jdGlvbjx1bmtub3duLCB1bmtub3duPiA9IHBpcGUodGFwKCkpO1xuICBzb2Z0d2FyZXNSZXN1bHQkOiBPYnNlcnZhYmxlPElSZXN1bHRMaXN0PElNYW5hZ2VkT2JqZWN0Pj47XG4gIHNlYXJjaCQ6IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChudWxsKTtcbiAgc29mdHdhcmVzUmVzdWx0OiBJUmVzdWx0TGlzdDxJTWFuYWdlZE9iamVjdD47XG5cbiAgcHJpdmF0ZSBxdWVyaWVzVXRpbDogUXVlcmllc1V0aWwgPSBuZXcgUXVlcmllc1V0aWwoKTtcbiAgcHJpdmF0ZSBzb2Z0d2FyZVR5cGVzOiBTZXQ8c3RyaW5nPiA9IG5ldyBTZXQoKTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJlcG9zaXRvcnlTZXJ2aWNlOiBSZXBvc2l0b3J5U2VydmljZSxcbiAgICBwdWJsaWMgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZVxuICApIHtcbiAgICB0aGlzLnNvZnR3YXJlc1Jlc3VsdCQgPSB0aGlzLnNlYXJjaCQucGlwZShcbiAgICAgIGRlYm91bmNlVGltZSgzMDApLFxuICAgICAgdGFwKCgpID0+IHRoaXMuc29mdHdhcmVUeXBlcy5jbGVhcigpKSxcbiAgICAgIHN3aXRjaE1hcCgoc2VhcmNoU3RyaW5nOiBzdHJpbmcpID0+IHtcbiAgICAgICAgaWYgKCF0aGlzLmVtaXRSZXN1bHRzT25seSB8fCAhc2VhcmNoU3RyaW5nKSB7XG4gICAgICAgICAgdGhpcy5vblNlbGVjdFNvZnR3YXJlLmVtaXQodGhpcy5zb2Z0d2FyZVR5cGVNTyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuZ2V0U29mdHdhcmVCeVR5cGVSZXN1bHQoc2VhcmNoU3RyaW5nKTtcbiAgICAgIH0pLFxuICAgICAgc2hhcmVSZXBsYXkoMSlcbiAgICApO1xuXG4gICAgdGhpcy5maWx0ZXJQaXBlID0gcGlwZShtYXAodGhpcy5yZW1vdmVEdXBsaWNhdGVzQnlTb2Z0d2FyZVR5cGUuYmluZCh0aGlzKSkpO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5ub3RGb3VuZFRlbXBsYXRlVG9Vc2UgPSB0aGlzLnNob3dCdG5Jbk5vdEZvdW5kTWVzc2FnZVxuICAgICAgPyB0aGlzLm5vdEZvdW5kVHlwZUFkZE5ld1RlbXBsYXRlXG4gICAgICA6IHRoaXMubm90Rm91bmRUeXBlVGVtcGxhdGU7XG4gIH1cblxuICBnZXRTb2Z0d2FyZUJ5VHlwZVJlc3VsdChzZWFyY2hTdHJpbmc6IHN0cmluZykge1xuICAgIGxldCBxdWVyeSA9IHRoaXMucXVlcmllc1V0aWwucHJlcGVuZE9yZGVyYnlzKHt9LCBbeyBzb2Z0d2FyZVR5cGU6IDEgfV0pO1xuICAgIGNvbnN0IGZpbHRlciA9ICEhc2VhcmNoU3RyaW5nXG4gICAgICA/IHtcbiAgICAgICAgICBzb2Z0d2FyZVR5cGU6IHtcbiAgICAgICAgICAgIF9fZXE6IGAqJHtzZWFyY2hTdHJpbmd9KmBcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIDoge1xuICAgICAgICAgIF9faGFzOiAnc29mdHdhcmVUeXBlJ1xuICAgICAgICB9O1xuICAgIHF1ZXJ5ID0gdGhpcy5xdWVyaWVzVXRpbC5hZGRBbmRGaWx0ZXIocXVlcnksIGZpbHRlcik7XG5cbiAgICByZXR1cm4gdGhpcy5yZXBvc2l0b3J5U2VydmljZS5saXN0UmVwb3NpdG9yeUVudHJpZXMoUmVwb3NpdG9yeVR5cGUuU09GVFdBUkUsIHtcbiAgICAgIHF1ZXJ5LFxuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIHBhZ2VTaXplOiAyMDBcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHNlbGVjdFNvZnR3YXJlKHNvZnR3YXJlKSB7XG4gICAgdGhpcy5zb2Z0d2FyZVR5cGVNTyA9IHNvZnR3YXJlO1xuICAgIHRoaXMub25TZWxlY3RTb2Z0d2FyZS5lbWl0KHNvZnR3YXJlKTtcbiAgICB0aGlzLmRldmljZVNvZnR3YXJlVHlwZU1vZGVsLnNlYXJjaENvbnRyb2xNb2RlbC5jb250cm9sLm1hcmtBc0RpcnR5KCk7XG4gICAgKHRoaXMuZGV2aWNlU29mdHdhcmVUeXBlTW9kZWwgYXMgYW55KS5vbkNoYW5nZShzb2Z0d2FyZSk7XG4gIH1cblxuICBjbGVhclNvZnR3YXJlKCkge1xuICAgIHRoaXMuc29mdHdhcmVUeXBlTU8gPSB1bmRlZmluZWQ7XG4gICAgdGhpcy5zZWFyY2gkLm5leHQoJycpO1xuICAgIHRoaXMub25TZWxlY3RTb2Z0d2FyZS5lbWl0KCk7XG4gIH1cblxuICByZXNldElucHV0KCkge1xuICAgIHRoaXMuZGV2aWNlU29mdHdhcmVUeXBlTW9kZWwucmVzZXQoKTtcbiAgfVxuXG4gIHdyaXRlVmFsdWUodmFsdWU6IGFueSk6IHZvaWQge1xuICAgIHRoaXMuZGV2aWNlU29mdHdhcmVUeXBlTW9kZWwud3JpdGVWYWx1ZSh2YWx1ZSk7XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmRldmljZVNvZnR3YXJlVHlwZU1vZGVsLnJlZ2lzdGVyT25DaGFuZ2UoZm4pO1xuICB9XG5cbiAgcmVnaXN0ZXJPblRvdWNoZWQoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMuZGV2aWNlU29mdHdhcmVUeXBlTW9kZWwucmVnaXN0ZXJPblRvdWNoZWQoZm4pO1xuICB9XG5cbiAgc2V0RGlzYWJsZWRTdGF0ZShpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZCB7XG4gICAgdGhpcy5kZXZpY2VTb2Z0d2FyZVR5cGVNb2RlbC5zZXREaXNhYmxlZFN0YXRlKGlzRGlzYWJsZWQpO1xuICB9XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB7XG4gICAgcmV0dXJuIHRoaXMuZGV2aWNlU29mdHdhcmVUeXBlTW9kZWwudmFsaWRhdGUoY29udHJvbCk7XG4gIH1cblxuICBwcml2YXRlIHJlbW92ZUR1cGxpY2F0ZXNCeVNvZnR3YXJlVHlwZShsaXN0OiBJTWFuYWdlZE9iamVjdFtdKTogSU1hbmFnZWRPYmplY3RbXSB7XG4gICAgY29uc3QgdW5pcXVlQnlTb2Z0d2FyZVR5cGU6IElNYW5hZ2VkT2JqZWN0W10gPSB1bmlxQnkobGlzdCwgJ3NvZnR3YXJlVHlwZScpLmZpbHRlcihcbiAgICAgIChzdzogSU1hbmFnZWRPYmplY3QpID0+ICF0aGlzLnNvZnR3YXJlVHlwZXMuaGFzKHN3LnNvZnR3YXJlVHlwZSlcbiAgICApO1xuICAgIHVuaXF1ZUJ5U29mdHdhcmVUeXBlLmZvckVhY2goKHN3OiBJTWFuYWdlZE9iamVjdCkgPT4gdGhpcy5zb2Z0d2FyZVR5cGVzLmFkZChzdy5zb2Z0d2FyZVR5cGUpKTtcbiAgICByZXR1cm4gdW5pcXVlQnlTb2Z0d2FyZVR5cGU7XG4gIH1cbn1cbiJdfQ==