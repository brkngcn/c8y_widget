import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { RepositoryType, RepositoryService } from '@c8y/ngx-components/repository/shared';
import { AlertService, gettext } from '@c8y/ngx-components';
export class SaveToRepositoryComponent {
    constructor(modal, alertService, repositoryService) {
        this.modal = modal;
        this.alertService = alertService;
        this.repositoryService = repositoryService;
        this.result = new Promise((resolve, reject) => {
            this._save = resolve;
            this._cancel = reject;
        });
    }
    save() {
        return __awaiter(this, void 0, void 0, function* () {
            {
                try {
                    const configSnapshotData = {
                        selected: {
                            configurationType: this.configSnapshot.configurationType
                        },
                        version: this.configSnapshot.name,
                        deviceType: this.configSnapshot.deviceType,
                        description: this.configSnapshot.description,
                        binary: {
                            file: new File([this.configSnapshot.binary], this.configSnapshot.name)
                        }
                    };
                    yield this.repositoryService.save(configSnapshotData, RepositoryType.CONFIGURATION);
                    this.alertService.success(gettext('Configuration saved.'));
                    this._save();
                }
                catch (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    close() {
        this._cancel();
        this.modal.hide();
    }
}
SaveToRepositoryComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-save-config-to-configuration-repository',
                template: "<div class=\"modal-header bg-primary text-center text-white\">\n  <div style=\"font-size: 62px;\">\n    <span c8yIcon=\"gears\"></span>\n  </div>\n  <h4 class=\"text-uppercase\" translate>\n    Save configuration\n  </h4>\n</div>\n<div class=\"modal-body\">\n  <form #saveConfigurationSnapshot=\"ngForm\" class=\"p-t-24\">\n    <c8y-form-group>\n      <label translate for=\"name\">Name</label>\n      <input\n        id=\"name\"\n        type=\"text\"\n        class=\"form-control\"\n        autocomplete=\"off\"\n        name=\"name\"\n        [(ngModel)]=\"configSnapshot.name\"\n        required\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for=\"deviceType\">Device type</label>\n      <input\n        id=\"deviceType\"\n        class=\"form-control\"\n        rows=\"6\"\n        name=\"deviceType\"\n        [(ngModel)]=\"configSnapshot.deviceType\"\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for=\"description\">Description</label>\n      <input\n        type=\"text\"\n        id=\"description\"\n        class=\"form-control\"\n        maxlength=\"254\"\n        autocomplete=\"off\"\n        name=\"description\"\n        [(ngModel)]=\"configSnapshot.description\"\n      />\n    </c8y-form-group>\n    <c8y-form-group>\n      <label translate for=\"configurationType\">Configuration type</label>\n      <input\n        id=\"configurationType\"\n        class=\"form-control\"\n        rows=\"6\"\n        name=\"configurationType\"\n        [(ngModel)]=\"configSnapshot.configurationType\"\n      />\n    </c8y-form-group>\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <button title=\"{{ 'Cancel' | translate }}\" class=\"btn btn-default\" (click)=\"close()\" translate>\n    Cancel\n  </button>\n\n  <button\n    title=\"{{ 'Save configuration to repository' | translate }}\"\n    class=\"btn btn-primary\"\n    (click)=\"save()\"\n    [disabled]=\"saveConfigurationSnapshot.form.invalid\"\n    translate\n  >\n    Save\n  </button>\n</div>\n"
            },] }
];
SaveToRepositoryComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: AlertService },
    { type: RepositoryService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2F2ZS10by1yZXBvc2l0b3J5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3JlcG9zaXRvcnkvY29uZmlndXJhdGlvbi9kZXZpY2UtdGFiL3NhdmUtdG8tcmVwb3NpdG9yeS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBeUIsY0FBYyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDakgsT0FBTyxFQUFFLFlBQVksRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQU01RCxNQUFNLE9BQU8seUJBQXlCO0lBU3BDLFlBQ1UsS0FBaUIsRUFDakIsWUFBMEIsRUFDMUIsaUJBQW9DO1FBRnBDLFVBQUssR0FBTCxLQUFLLENBQVk7UUFDakIsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtRQVY5QyxXQUFNLEdBQWlCLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3JELElBQUksQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDO1lBQ3JCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBUUEsQ0FBQztJQUVFLElBQUk7O1lBQ1I7Z0JBQ0UsSUFBSTtvQkFDRixNQUFNLGtCQUFrQixHQUFHO3dCQUN6QixRQUFRLEVBQUU7NEJBQ1IsaUJBQWlCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxpQkFBaUI7eUJBQ3pEO3dCQUNELE9BQU8sRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUk7d0JBQ2pDLFVBQVUsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVU7d0JBQzFDLFdBQVcsRUFBRSxJQUFJLENBQUMsY0FBYyxDQUFDLFdBQVc7d0JBQzVDLE1BQU0sRUFBRTs0QkFDTixJQUFJLEVBQUUsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLE1BQU0sQ0FBQyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDO3lCQUN2RTtxQkFDRixDQUFDO29CQUNGLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxrQkFBa0IsRUFBRSxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7b0JBQ3BGLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUM7b0JBQzNELElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztpQkFDZDtnQkFBQyxPQUFPLEVBQUUsRUFBRTtvQkFDWCxJQUFJLENBQUMsWUFBWSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO2lCQUN4QzthQUNGO1FBQ0gsQ0FBQztLQUFBO0lBRUQsS0FBSztRQUNILElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDcEIsQ0FBQzs7O1lBN0NGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkNBQTZDO2dCQUN2RCw0L0RBQWdEO2FBQ2pEOzs7WUFQUSxVQUFVO1lBRVYsWUFBWTtZQUQyQixpQkFBaUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IENvbmZpZ3VyYXRpb25TbmFwc2hvdCwgUmVwb3NpdG9yeVR5cGUsIFJlcG9zaXRvcnlTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5L3NoYXJlZCc7XG5pbXBvcnQgeyBBbGVydFNlcnZpY2UsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXNhdmUtY29uZmlnLXRvLWNvbmZpZ3VyYXRpb24tcmVwb3NpdG9yeScsXG4gIHRlbXBsYXRlVXJsOiAnc2F2ZS10by1yZXBvc2l0b3J5LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTYXZlVG9SZXBvc2l0b3J5Q29tcG9uZW50IHtcbiAgY29uZmlnU25hcHNob3Q6IENvbmZpZ3VyYXRpb25TbmFwc2hvdDtcbiAgcmVzdWx0OiBQcm9taXNlPGFueT4gPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgdGhpcy5fc2F2ZSA9IHJlc29sdmU7XG4gICAgdGhpcy5fY2FuY2VsID0gcmVqZWN0O1xuICB9KTtcbiAgcHJpdmF0ZSBfc2F2ZTtcbiAgcHJpdmF0ZSBfY2FuY2VsO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbW9kYWw6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBhbGVydFNlcnZpY2U6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHJlcG9zaXRvcnlTZXJ2aWNlOiBSZXBvc2l0b3J5U2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgc2F2ZSgpIHtcbiAgICB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBjb25maWdTbmFwc2hvdERhdGEgPSB7XG4gICAgICAgICAgc2VsZWN0ZWQ6IHtcbiAgICAgICAgICAgIGNvbmZpZ3VyYXRpb25UeXBlOiB0aGlzLmNvbmZpZ1NuYXBzaG90LmNvbmZpZ3VyYXRpb25UeXBlXG4gICAgICAgICAgfSxcbiAgICAgICAgICB2ZXJzaW9uOiB0aGlzLmNvbmZpZ1NuYXBzaG90Lm5hbWUsXG4gICAgICAgICAgZGV2aWNlVHlwZTogdGhpcy5jb25maWdTbmFwc2hvdC5kZXZpY2VUeXBlLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLmNvbmZpZ1NuYXBzaG90LmRlc2NyaXB0aW9uLFxuICAgICAgICAgIGJpbmFyeToge1xuICAgICAgICAgICAgZmlsZTogbmV3IEZpbGUoW3RoaXMuY29uZmlnU25hcHNob3QuYmluYXJ5XSwgdGhpcy5jb25maWdTbmFwc2hvdC5uYW1lKVxuICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgYXdhaXQgdGhpcy5yZXBvc2l0b3J5U2VydmljZS5zYXZlKGNvbmZpZ1NuYXBzaG90RGF0YSwgUmVwb3NpdG9yeVR5cGUuQ09ORklHVVJBVElPTik7XG4gICAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLnN1Y2Nlc3MoZ2V0dGV4dCgnQ29uZmlndXJhdGlvbiBzYXZlZC4nKSk7XG4gICAgICAgIHRoaXMuX3NhdmUoKTtcbiAgICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAgIHRoaXMuYWxlcnRTZXJ2aWNlLmFkZFNlcnZlckZhaWx1cmUoZXgpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX2NhbmNlbCgpO1xuICAgIHRoaXMubW9kYWwuaGlkZSgpO1xuICB9XG59XG4iXX0=