import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CoreModule, ViewContext, HOOK_ROUTE, gettext } from '@c8y/ngx-components';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import { DeviceConfigurationGuard } from './device-configuration.guard';
import { DeviceConfigurationComponent } from './device-configuration.component';
import { ConfigurationPreviewComponent } from './configuration-preview.component';
import { ConfigurationFilterPipe } from './configuration-filter.pipe';
import { DeviceConfigurationService } from './device-configuration.service';
import { DeviceConfigurationListComponent } from './device-configuration-list.component';
import { TextBasedConfigurationComponent } from './text-based-configuration.component';
import { SaveToRepositoryComponent } from './save-to-repository.component';
import { SourceCodePreviewComponent } from './source-code-preview.component';
import { TabsModule } from 'ngx-bootstrap/tabs';
import { OperationDetailsModule } from '@c8y/ngx-components/operations/operation-details';
export class ConfigurationRepositoryDeviceTabModule {
    static forRoot() {
        return {
            ngModule: ConfigurationRepositoryDeviceTabModule,
            providers: [
                DeviceConfigurationGuard,
                {
                    provide: HOOK_ROUTE,
                    useValue: [
                        {
                            context: ViewContext.Device,
                            path: 'device-configuration',
                            component: DeviceConfigurationComponent,
                            label: gettext('Configuration'),
                            icon: 'gears',
                            priority: 600,
                            canActivate: [DeviceConfigurationGuard]
                        }
                    ],
                    multi: true
                }
            ]
        };
    }
}
ConfigurationRepositoryDeviceTabModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule,
                    CoreModule,
                    SharedRepositoryModule,
                    OperationDetailsModule,
                    TabsModule.forRoot()
                ],
                declarations: [
                    DeviceConfigurationComponent,
                    DeviceConfigurationListComponent,
                    ConfigurationPreviewComponent,
                    ConfigurationFilterPipe,
                    SaveToRepositoryComponent,
                    SourceCodePreviewComponent,
                    TextBasedConfigurationComponent
                ],
                entryComponents: [
                    DeviceConfigurationComponent,
                    SaveToRepositoryComponent,
                    TextBasedConfigurationComponent
                ],
                providers: [DeviceConfigurationService]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbi1yZXBvc2l0b3J5LWRldmljZS10YWIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcmVwb3NpdG9yeS9jb25maWd1cmF0aW9uL2RldmljZS10YWIvY29uZmlndXJhdGlvbi1yZXBvc2l0b3J5LWRldmljZS10YWIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFTLE1BQU0scUJBQXFCLENBQUM7QUFDMUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDL0UsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDeEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDaEYsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDbEYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGdDQUFnQyxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDekYsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWhELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBMEIxRixNQUFNLE9BQU8sc0NBQXNDO0lBQ2pELE1BQU0sQ0FBQyxPQUFPO1FBQ1osT0FBTztZQUNMLFFBQVEsRUFBRSxzQ0FBc0M7WUFDaEQsU0FBUyxFQUFFO2dCQUNULHdCQUF3QjtnQkFDeEI7b0JBQ0UsT0FBTyxFQUFFLFVBQVU7b0JBQ25CLFFBQVEsRUFBRTt3QkFDUjs0QkFDRSxPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07NEJBQzNCLElBQUksRUFBRSxzQkFBc0I7NEJBQzVCLFNBQVMsRUFBRSw0QkFBNEI7NEJBQ3ZDLEtBQUssRUFBRSxPQUFPLENBQUMsZUFBZSxDQUFDOzRCQUMvQixJQUFJLEVBQUUsT0FBTzs0QkFDYixRQUFRLEVBQUUsR0FBRzs0QkFDYixXQUFXLEVBQUUsQ0FBQyx3QkFBd0IsQ0FBQzt5QkFDeEM7cUJBQ1M7b0JBQ1osS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUEvQ0YsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLFVBQVU7b0JBQ1Ysc0JBQXNCO29CQUN0QixzQkFBc0I7b0JBQ3RCLFVBQVUsQ0FBQyxPQUFPLEVBQUU7aUJBQ3JCO2dCQUNELFlBQVksRUFBRTtvQkFDWiw0QkFBNEI7b0JBQzVCLGdDQUFnQztvQkFDaEMsNkJBQTZCO29CQUM3Qix1QkFBdUI7b0JBQ3ZCLHlCQUF5QjtvQkFDekIsMEJBQTBCO29CQUMxQiwrQkFBK0I7aUJBQ2hDO2dCQUNELGVBQWUsRUFBRTtvQkFDZiw0QkFBNEI7b0JBQzVCLHlCQUF5QjtvQkFDekIsK0JBQStCO2lCQUNoQztnQkFDRCxTQUFTLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQzthQUN4QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgVmlld0NvbnRleHQsIEhPT0tfUk9VVEUsIGdldHRleHQsIFJvdXRlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBTaGFyZWRSZXBvc2l0b3J5TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5L3NoYXJlZCc7XG5pbXBvcnQgeyBEZXZpY2VDb25maWd1cmF0aW9uR3VhcmQgfSBmcm9tICcuL2RldmljZS1jb25maWd1cmF0aW9uLmd1YXJkJztcbmltcG9ydCB7IERldmljZUNvbmZpZ3VyYXRpb25Db21wb25lbnQgfSBmcm9tICcuL2RldmljZS1jb25maWd1cmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uUHJldmlld0NvbXBvbmVudCB9IGZyb20gJy4vY29uZmlndXJhdGlvbi1wcmV2aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb25maWd1cmF0aW9uRmlsdGVyUGlwZSB9IGZyb20gJy4vY29uZmlndXJhdGlvbi1maWx0ZXIucGlwZSc7XG5pbXBvcnQgeyBEZXZpY2VDb25maWd1cmF0aW9uU2VydmljZSB9IGZyb20gJy4vZGV2aWNlLWNvbmZpZ3VyYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBEZXZpY2VDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudCB9IGZyb20gJy4vZGV2aWNlLWNvbmZpZ3VyYXRpb24tbGlzdC5jb21wb25lbnQnO1xuaW1wb3J0IHsgVGV4dEJhc2VkQ29uZmlndXJhdGlvbkNvbXBvbmVudCB9IGZyb20gJy4vdGV4dC1iYXNlZC1jb25maWd1cmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTYXZlVG9SZXBvc2l0b3J5Q29tcG9uZW50IH0gZnJvbSAnLi9zYXZlLXRvLXJlcG9zaXRvcnkuY29tcG9uZW50JztcbmltcG9ydCB7IFNvdXJjZUNvZGVQcmV2aWV3Q29tcG9uZW50IH0gZnJvbSAnLi9zb3VyY2UtY29kZS1wcmV2aWV3LmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYWJzTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90YWJzJztcblxuaW1wb3J0IHsgT3BlcmF0aW9uRGV0YWlsc01vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9vcGVyYXRpb24tZGV0YWlscyc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgQ29yZU1vZHVsZSxcbiAgICBTaGFyZWRSZXBvc2l0b3J5TW9kdWxlLFxuICAgIE9wZXJhdGlvbkRldGFpbHNNb2R1bGUsXG4gICAgVGFic01vZHVsZS5mb3JSb290KClcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRGV2aWNlQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICBEZXZpY2VDb25maWd1cmF0aW9uTGlzdENvbXBvbmVudCxcbiAgICBDb25maWd1cmF0aW9uUHJldmlld0NvbXBvbmVudCxcbiAgICBDb25maWd1cmF0aW9uRmlsdGVyUGlwZSxcbiAgICBTYXZlVG9SZXBvc2l0b3J5Q29tcG9uZW50LFxuICAgIFNvdXJjZUNvZGVQcmV2aWV3Q29tcG9uZW50LFxuICAgIFRleHRCYXNlZENvbmZpZ3VyYXRpb25Db21wb25lbnRcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgRGV2aWNlQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICBTYXZlVG9SZXBvc2l0b3J5Q29tcG9uZW50LFxuICAgIFRleHRCYXNlZENvbmZpZ3VyYXRpb25Db21wb25lbnRcbiAgXSxcbiAgcHJvdmlkZXJzOiBbRGV2aWNlQ29uZmlndXJhdGlvblNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpZ3VyYXRpb25SZXBvc2l0b3J5RGV2aWNlVGFiTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxDb25maWd1cmF0aW9uUmVwb3NpdG9yeURldmljZVRhYk1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQ29uZmlndXJhdGlvblJlcG9zaXRvcnlEZXZpY2VUYWJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgRGV2aWNlQ29uZmlndXJhdGlvbkd1YXJkLFxuICAgICAgICB7XG4gICAgICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgICAgICB1c2VWYWx1ZTogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBjb250ZXh0OiBWaWV3Q29udGV4dC5EZXZpY2UsXG4gICAgICAgICAgICAgIHBhdGg6ICdkZXZpY2UtY29uZmlndXJhdGlvbicsXG4gICAgICAgICAgICAgIGNvbXBvbmVudDogRGV2aWNlQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICAgICAgICAgICAgbGFiZWw6IGdldHRleHQoJ0NvbmZpZ3VyYXRpb24nKSxcbiAgICAgICAgICAgICAgaWNvbjogJ2dlYXJzJyxcbiAgICAgICAgICAgICAgcHJpb3JpdHk6IDYwMCxcbiAgICAgICAgICAgICAgY2FuQWN0aXZhdGU6IFtEZXZpY2VDb25maWd1cmF0aW9uR3VhcmRdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSBhcyBSb3V0ZVtdLFxuICAgICAgICAgIG11bHRpOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=