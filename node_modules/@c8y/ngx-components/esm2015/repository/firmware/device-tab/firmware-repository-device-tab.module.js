import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FirmwareDeviceTabComponent } from './firmware-device-tab.component';
import { FirmwareDeviceTabGuard } from './firmware-device-tab.guard';
import { CoreModule, gettext, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import { OperationDetailsModule } from '@c8y/ngx-components/operations/operation-details';
export class FirmwareRepositoryDeviceTabModule {
    static forRoot() {
        return {
            ngModule: FirmwareRepositoryDeviceTabModule,
            providers: [
                FirmwareDeviceTabGuard,
                {
                    provide: HOOK_ROUTE,
                    useValue: [
                        {
                            context: ViewContext.Device,
                            path: 'firmware',
                            component: FirmwareDeviceTabComponent,
                            label: gettext('Firmware'),
                            icon: 'c8y-firmware',
                            priority: 500,
                            canActivate: [FirmwareDeviceTabGuard]
                        }
                    ],
                    multi: true
                }
            ]
        };
    }
}
FirmwareRepositoryDeviceTabModule.decorators = [
    { type: NgModule, args: [{
                imports: [CommonModule, CoreModule, SharedRepositoryModule, OperationDetailsModule],
                declarations: [FirmwareDeviceTabComponent],
                entryComponents: [FirmwareDeviceTabComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlybXdhcmUtcmVwb3NpdG9yeS1kZXZpY2UtdGFiLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3JlcG9zaXRvcnkvZmlybXdhcmUvZGV2aWNlLXRhYi9maXJtd2FyZS1yZXBvc2l0b3J5LWRldmljZS10YWIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzlELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQVMsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDMUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDL0UsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFPMUYsTUFBTSxPQUFPLGlDQUFpQztJQUM1QyxNQUFNLENBQUMsT0FBTztRQUNaLE9BQU87WUFDTCxRQUFRLEVBQUUsaUNBQWlDO1lBQzNDLFNBQVMsRUFBRTtnQkFDVCxzQkFBc0I7Z0JBQ3RCO29CQUNFLE9BQU8sRUFBRSxVQUFVO29CQUNuQixRQUFRLEVBQUU7d0JBQ1I7NEJBQ0UsT0FBTyxFQUFFLFdBQVcsQ0FBQyxNQUFNOzRCQUMzQixJQUFJLEVBQUUsVUFBVTs0QkFDaEIsU0FBUyxFQUFFLDBCQUEwQjs0QkFDckMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUM7NEJBQzFCLElBQUksRUFBRSxjQUFjOzRCQUNwQixRQUFRLEVBQUUsR0FBRzs0QkFDYixXQUFXLEVBQUUsQ0FBQyxzQkFBc0IsQ0FBQzt5QkFDdEM7cUJBQ1M7b0JBQ1osS0FBSyxFQUFFLElBQUk7aUJBQ1o7YUFDRjtTQUNGLENBQUM7SUFDSixDQUFDOzs7WUE1QkYsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRSxDQUFDLFlBQVksRUFBRSxVQUFVLEVBQUUsc0JBQXNCLEVBQUUsc0JBQXNCLENBQUM7Z0JBQ25GLFlBQVksRUFBRSxDQUFDLDBCQUEwQixDQUFDO2dCQUMxQyxlQUFlLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQzthQUM5QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgRmlybXdhcmVEZXZpY2VUYWJDb21wb25lbnQgfSBmcm9tICcuL2Zpcm13YXJlLWRldmljZS10YWIuY29tcG9uZW50JztcbmltcG9ydCB7IEZpcm13YXJlRGV2aWNlVGFiR3VhcmQgfSBmcm9tICcuL2Zpcm13YXJlLWRldmljZS10YWIuZ3VhcmQnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgZ2V0dGV4dCwgSE9PS19ST1VURSwgUm91dGUsIFZpZXdDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBTaGFyZWRSZXBvc2l0b3J5TW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9yZXBvc2l0b3J5L3NoYXJlZCc7XG5pbXBvcnQgeyBPcGVyYXRpb25EZXRhaWxzTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL29wZXJhdGlvbi1kZXRhaWxzJztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgQ29yZU1vZHVsZSwgU2hhcmVkUmVwb3NpdG9yeU1vZHVsZSwgT3BlcmF0aW9uRGV0YWlsc01vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW0Zpcm13YXJlRGV2aWNlVGFiQ29tcG9uZW50XSxcbiAgZW50cnlDb21wb25lbnRzOiBbRmlybXdhcmVEZXZpY2VUYWJDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIEZpcm13YXJlUmVwb3NpdG9yeURldmljZVRhYk1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8RmlybXdhcmVSZXBvc2l0b3J5RGV2aWNlVGFiTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBGaXJtd2FyZVJlcG9zaXRvcnlEZXZpY2VUYWJNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgRmlybXdhcmVEZXZpY2VUYWJHdWFyZCxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEhPT0tfUk9VVEUsXG4gICAgICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuRGV2aWNlLFxuICAgICAgICAgICAgICBwYXRoOiAnZmlybXdhcmUnLFxuICAgICAgICAgICAgICBjb21wb25lbnQ6IEZpcm13YXJlRGV2aWNlVGFiQ29tcG9uZW50LFxuICAgICAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRmlybXdhcmUnKSxcbiAgICAgICAgICAgICAgaWNvbjogJ2M4eS1maXJtd2FyZScsXG4gICAgICAgICAgICAgIHByaW9yaXR5OiA1MDAsXG4gICAgICAgICAgICAgIGNhbkFjdGl2YXRlOiBbRmlybXdhcmVEZXZpY2VUYWJHdWFyZF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdIGFzIFJvdXRlW10sXG4gICAgICAgICAgbXVsdGk6IHRydWVcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==