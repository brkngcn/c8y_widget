import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { AlertService, gettext, ModalSelectionMode } from '@c8y/ngx-components';
import { InventoryService, QueriesUtil } from '@c8y/client';
import { BsModalService } from 'ngx-bootstrap/modal';
import { assign, isEqual, concat, uniqWith } from 'lodash-es';
import { SelectConfigurationModalComponent } from './select-configuration-modal.component';
import { has, isEmpty } from 'lodash-es';
import { take, distinctUntilChanged, switchMap, map, shareReplay } from 'rxjs/operators';
import { RepositoryType, RepositorySelectModalComponent, RepositoryService } from '@c8y/ngx-components/repository/shared';
export class DeviceProfileComponent {
    constructor(route, alertService, inventoryService, bsModal, repositoryService) {
        this.route = route;
        this.alertService = alertService;
        this.inventoryService = inventoryService;
        this.bsModal = bsModal;
        this.repositoryService = repositoryService;
        this.DEVICE_TYPE_POPOVER = gettext('The device profile will be available for assignments on devices of the specified type. Otherwise, it will be available for all device types.');
        this.queriesUtil = new QueriesUtil();
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const profileId = this.route.snapshot.paramMap.get('id');
            this.deviceProfile = (yield this.getDeviceProfile(profileId));
            if (this.deviceProfile) {
                this.profileName = this.deviceProfile.name;
                if (!this.deviceProfile.c8y_DeviceProfile.software) {
                    this.deviceProfile.c8y_DeviceProfile.software = [];
                }
                if (!this.deviceProfile.c8y_DeviceProfile.configuration) {
                    this.deviceProfile.c8y_DeviceProfile.configuration = [];
                }
            }
        });
    }
    addFirmware() {
        const initialState = {
            deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.FIRMWARE),
            repositoryType: RepositoryType.FIRMWARE,
            repositoryEntriesWithVersionsFn$: modalDialog => this.getRepositoryEntriesWithVersions$(modalDialog.content.searchTerm, RepositoryType.FIRMWARE),
            icon: 'c8y-firmware',
            title: gettext('Select firmware'),
            mode: ModalSelectionMode.SINGLE
        };
        const modal = this.bsModal.show(RepositorySelectModalComponent, {
            ignoreBackdropClick: true,
            initialState
        });
        if (initialState.repositoryEntriesWithVersionsFn$) {
            modal.content.repositoryEntriesWithVersions$ =
                initialState.repositoryEntriesWithVersionsFn$(modal);
        }
        modal.content.load.next();
        modal.content.resultEmitter.pipe(take(1)).subscribe(firmwareList => {
            const [firmware] = firmwareList;
            if (!firmware) {
                return;
            }
            const deviceProfilePartial = {
                c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}
            };
            assign(deviceProfilePartial.c8y_DeviceProfile, {
                firmware: {
                    name: firmware.name,
                    version: firmware.version,
                    url: firmware.url,
                    isPatch: firmware.isPatch,
                    patchDependency: firmware.patchDependency
                }
            });
            this.updateDeviceProfile(deviceProfilePartial);
        });
    }
    getRepositoryEntriesWithVersions$(searchTerm$, repoType) {
        return searchTerm$.pipe(distinctUntilChanged(), switchMap(searchTerm => this.repositoryService.listRepositoryEntries(repoType, {
            query: this.getDeviceTypeQuery(repoType),
            partialName: searchTerm.name,
            params: { pageSize: 100 },
            skipLegacy: true
        })), map(({ data }) => data), map(mos => this.getAndAssignRepositoryBinaries(mos)), shareReplay(1));
    }
    getAndAssignRepositoryBinaries(mos) {
        mos.forEach(mo => {
            mo.versions = this.repositoryService.listBaseVersions(mo);
        });
        return mos;
    }
    addConfiguration() {
        const modal = this.bsModal.show(SelectConfigurationModalComponent, {
            ignoreBackdropClick: true
        });
        modal.content.deviceTypeQuery = this.getDeviceTypeQuery(RepositoryType.CONFIGURATION);
        modal.content.selected = this.deviceProfile.c8y_DeviceProfile.configuration;
        modal.content.load.next();
        modal.content.resultEmitter.pipe(take(1)).subscribe(selectedConfigurations => {
            const selectedMapped = selectedConfigurations.map(selectedItem => {
                return assign({
                    url: selectedItem.url,
                    name: selectedItem.name
                }, selectedItem.configurationType ? { type: selectedItem.configurationType } : {});
            });
            const merged = concat(selectedMapped, this.deviceProfile.c8y_DeviceProfile.configuration || []);
            const configuration = uniqWith(merged, (arrVal, othVal) => {
                return arrVal.type && othVal.type && arrVal.type === othVal.type;
            });
            const deviceProfilePartial = {
                c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}
            };
            assign(deviceProfilePartial.c8y_DeviceProfile, { configuration });
            this.updateDeviceProfile(deviceProfilePartial);
        });
    }
    addSoftware() {
        const initialState = {
            deviceTypeQuery: this.getDeviceTypeQuery(RepositoryType.SOFTWARE),
            repositoryType: RepositoryType.SOFTWARE,
            repositoryEntriesWithVersionsFn$: modalDialog => this.getRepositoryEntriesWithVersions$(modalDialog.content.searchTerm, RepositoryType.SOFTWARE),
            selected: this.deviceProfile.c8y_DeviceProfile.software,
            icon: 'c8y-tools',
            title: gettext('Select software'),
            mode: ModalSelectionMode.MULTI
        };
        const modal = this.bsModal.show(RepositorySelectModalComponent, {
            ignoreBackdropClick: true,
            initialState
        });
        if (initialState.repositoryEntriesWithVersionsFn$) {
            modal.content.repositoryEntriesWithVersions$ =
                initialState.repositoryEntriesWithVersionsFn$(modal);
        }
        modal.content.load.next();
        modal.content.resultEmitter.pipe(take(1)).subscribe(selectedSoftware => {
            const selectedMapped = selectedSoftware.map(selectedItem => {
                return {
                    name: selectedItem.name,
                    version: selectedItem.version,
                    url: selectedItem.url,
                    action: 'install'
                };
            });
            const merged = concat(selectedMapped, this.deviceProfile.c8y_DeviceProfile.software || []);
            const software = uniqWith(merged, (arrVal, othVal) => {
                return arrVal.name && othVal.name && arrVal.name === othVal.name;
            });
            const deviceProfilePartial = {
                c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile || {}
            };
            assign(deviceProfilePartial.c8y_DeviceProfile, { software });
            this.updateDeviceProfile(deviceProfilePartial);
        });
    }
    get isDeviceProfileEmpty() {
        const isSoftware = this.deviceProfile.c8y_DeviceProfile.software &&
            this.deviceProfile.c8y_DeviceProfile.software.length > 0;
        const isFirmware = Boolean(this.deviceProfile.c8y_DeviceProfile.firmware);
        const isConfiguration = this.deviceProfile.c8y_DeviceProfile.configuration &&
            this.deviceProfile.c8y_DeviceProfile.configuration.length > 0;
        return isSoftware || isFirmware || isConfiguration;
    }
    removeItem(removedItem, category) {
        const deviceProfilePartial = {
            c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile
        };
        const filtered = deviceProfilePartial.c8y_DeviceProfile[category].filter(item => !isEqual(removedItem, item));
        deviceProfilePartial.c8y_DeviceProfile[category] = filtered;
        this.updateDeviceProfile(deviceProfilePartial);
    }
    removeFirmware() {
        delete this.deviceProfile.c8y_DeviceProfile.firmware;
        this.updateDeviceProfile({ c8y_DeviceProfile: this.deviceProfile.c8y_DeviceProfile });
    }
    updateDeviceProfile(partialDeviceProfile) {
        return __awaiter(this, void 0, void 0, function* () {
            if (partialDeviceProfile.c8y_Filter && partialDeviceProfile.c8y_Filter.type === '') {
                delete partialDeviceProfile.c8y_Filter.type;
            }
            Object.assign(partialDeviceProfile, { id: this.deviceProfile.id });
            try {
                const { data } = yield this.inventoryService.update(partialDeviceProfile);
                this.deviceProfile = data;
                this.profileName = this.deviceProfile.name;
                this.alertService.success(gettext('Device profile changed.'));
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
    getDeviceProfile(profileId) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                const { data } = yield this.inventoryService.detail(profileId);
                return data;
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
        });
    }
    getDeviceTypeQuery(repositoryType) {
        if (has(this.deviceProfile, 'c8y_Filter.type') &&
            !isEmpty(this.deviceProfile.c8y_Filter.type)) {
            if (repositoryType === RepositoryType.CONFIGURATION) {
                return this.queriesUtil.addOrFilter({ deviceType: this.deviceProfile.c8y_Filter.type }, { __not: { __has: `deviceType` } });
            }
            else {
                return this.queriesUtil.addOrFilter({ 'c8y_Filter.type': this.deviceProfile.c8y_Filter.type }, { __not: { __has: `c8y_Filter.type` } });
            }
        }
        return {};
    }
}
DeviceProfileComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-device-profile',
                template: "<c8y-title>{{ profileName }}</c8y-title>\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-device-profile'\"\n    [label]=\"'Device profiles' | translate\"\n    [path]=\"'device-profiles'\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<div *ngIf=\"deviceProfile\">\n  <div class=\"card m-b-4\" *ngIf=\"deviceProfile\">\n    <div class=\"card-header separator\">\n      <h4 translate>Name and device type</h4>\n    </div>\n    <div class=\"card-block\">\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <form #editNameForm=\"ngForm\">\n            <c8y-form-group>\n              <label class=\"control-label\" translate>\n                Name\n              </label>\n              <div class=\"input-group input-group-editable\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"deviceProfile.name\"\n                  name=\"name\"\n                  placeholder=\"{{ 'e.g. My device profile' | translate }}\"\n                  size=\"{{ deviceProfile.name?.length || 1 }}\"\n                  required\n                />\n                <span></span>\n                <div class=\"input-group-btn\">\n                  <button\n                    (click)=\"updateDeviceProfile({ name: deviceProfile.name }); editNameForm.form.markAsPristine()\"\n                    class=\"btn btn-primary\"\n                    title=\"{{ 'Save' | translate }}\"\n                    [disabled]=\"editNameForm.form.invalid\"\n                  >\n                    {{ 'Save' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n          </form>\n        </div>\n        <div class=\"col-md-4\">\n          <form #editTypeForm=\"ngForm\">\n            <c8y-form-group>\n              <label class=\"control-label\">\n                {{ 'Device type' | translate }}\n                <button\n                  class=\"btn btn-clean text-primary\"\n                  popover=\"{{ DEVICE_TYPE_POPOVER | translate }}\"\n                  triggers=\"focus\"\n                  container=\"body\"\n                  placement=\"right\"\n                >\n                  <i [c8yIcon]=\"'question-circle-o'\"></i>\n                </button>\n              </label>\n              <div class=\"input-group input-group-editable\">\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"deviceProfile.c8y_Filter.type\"\n                  name=\"type\"\n                  placeholder=\"{{ 'e.g.' | translate }} c8y_Linux\"\n                  size=\"{{ deviceProfile.c8y_Filter.type?.length || 1 }}\"\n                  [disabled]=\"isDeviceProfileEmpty\"\n                />\n                <span></span>\n                <div class=\"input-group-btn\">\n                  <button\n                    (click)=\" updateDeviceProfile({ c8y_Filter: { type: deviceProfile.c8y_Filter.type } }); editTypeForm.form.markAsPristine()\"\n                    class=\"btn btn-primary\"\n                    title=\"{{ 'Save' | translate }}\"\n                    [disabled]=\"isDeviceProfileEmpty\"\n                  >\n                    {{ 'Save' | translate }}\n                  </button>\n                </div>\n              </div>\n            </c8y-form-group>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card m-b-4\">\n    <div class=\"card-header separator\">\n      <div class=\"card-icon\">\n        <i [c8yIcon]=\"'c8y-firmware'\" class=\"c8y-icon-duocolor\"></i>\n      </div>\n      <h4 class=\"card-title\" translate>\n        Firmware\n      </h4>\n    </div>\n    <div class=\"card-block p-t-0\">\n      <c8y-list-group *ngIf=\"deviceProfile.c8y_DeviceProfile.firmware\">\n        <c8y-li>\n          <c8y-li-icon>\n            <i [c8yIcon]=\"'c8y-firmware'\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50 m-l-4\">\n            <div class=\"col-6\">\n              <span\n                class=\"text-truncate\"\n                title=\"{{ deviceProfile.c8y_DeviceProfile.firmware.name }}\"\n              >\n                {{ deviceProfile.c8y_DeviceProfile.firmware.name }}\n              </span>\n            </div>\n            <div class=\"col-5 flex-row\">\n              <span\n                class=\"text-truncate\"\n                title=\"{{ deviceProfile.c8y_DeviceProfile.firmware.version }}\"\n              >\n                <span class=\"text-label-small m-r-4\" translate>Version</span>\n                {{ deviceProfile.c8y_DeviceProfile.firmware.version }}\n              </span>\n              <button\n                class=\"btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8\"\n                title=\"{{ 'Remove`firmware`' | translate }}\"\n                (click)=\"removeFirmware()\"\n              >\n                <i c8yIcon=\"minus-circle\"></i> {{ 'Remove`firmware`' | translate }}\n              </button>\n            </div>\n            <div class=\"flex-item-right p-r-8 hidden-xs\">\n              <button\n                class=\"btn btn-dot showOnHover\"\n                title=\"{{ 'Remove`firmware`' | translate }}\"\n                (click)=\"removeFirmware()\"\n              >\n                <i class=\"text-danger\" c8yIcon=\"minus-circle\"></i>\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n      <div class=\"p-t-8\" *ngIf=\"!deviceProfile.c8y_DeviceProfile.firmware\">\n        <button\n          title=\"{{ 'Add firmware' | translate }}\"\n          class=\"btn-add-block\"\n          (click)=\"addFirmware()\"\n        >\n          <i c8yIcon=\"plus-circle\"></i> {{ 'No firmware defined. Add firmware' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card m-b-4\">\n    <div class=\"card-header separator\">\n      <div class=\"card-icon\">\n        <i [c8yIcon]=\"'c8y-tools'\" class=\"c8y-icon-duocolor\"></i>\n      </div>\n      <h4 class=\"card-title\" translate>\n        Software\n      </h4>\n    </div>\n    <div class=\"card-block p-t-0\">\n      <c8y-list-group>\n        <c8y-li *ngFor=\"let software of deviceProfile.c8y_DeviceProfile.software\">\n          <c8y-li-icon>\n            <i [c8yIcon]=\"'c8y-tools'\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50 m-l-4\">\n            <div class=\"col-6\">\n              <span class=\"text-truncate-wrap\" title=\"{{ software.name }}\">\n                {{ software.name }}\n              </span>\n            </div>\n            <div class=\"col-5 flex-row\">\n              <span class=\"text-truncate-wrap\" title=\"{{ software.version }}\">\n                <span class=\"text-label-small m-r-8\" translate>Version</span>\n                {{ software.version }}\n              </span>\n              <button\n                class=\"btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8\"\n                title=\"{{ 'Remove`software`' | translate }}\"\n                ((click)=\"removeItem(software, 'software')\"\n              >\n                <i c8yIcon=\"minus-circle\"></i>\n                {{ 'Remove`software`' | translate }}\n              </button>\n            </div>\n            <div class=\"flex-item-right p-r-8 hidden-xs \">\n              <button\n                class=\"btn btn-dot showOnHover text-danger\"\n                title=\"{{ 'Remove`software`' | translate }}\"\n                (click)=\"removeItem(software, 'software')\"\n              >\n                <i c8yIcon=\"minus-circle\"></i>\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n      <div class=\"p-t-8\">\n        <button\n          title=\"{{ 'Add software' | translate }}\"\n          class=\"btn-add-block m-b-0\"\n          (click)=\"addSoftware()\"\n        >\n          <i c8yIcon=\"plus-circle\"></i>\n          <span class=\"m-r-8\" *ngIf=\"deviceProfile.c8y_DeviceProfile.software?.length === 0\">\n            {{ 'No software defined.' | translate }}\n          </span>\n          {{ 'Add software' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"card\">\n    <div class=\"card-header separator\">\n      <div class=\"card-icon\">\n        <i [c8yIcon]=\"'gears'\" class=\"c8y-icon-duocolor\"></i>\n      </div>\n      <h4 class=\"card-title\" translate>\n        Configuration\n      </h4>\n    </div>\n    <div class=\"card-block p-t-0\">\n      <c8y-list-group class=\"m-b-8\">\n        <c8y-li *ngFor=\"let configuration of deviceProfile.c8y_DeviceProfile.configuration\">\n          <c8y-li-icon>\n            <i [c8yIcon]=\"'gears'\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50\">\n            <div class=\"col-6\">\n              <span\n                class=\"text-truncate\"\n                title=\"{{ configuration.name }}\"\n               >\n                {{ configuration.name }}\n              </span>\n            </div>\n            <div class=\"col-5 flex-row\">\n              <span class=\"label label-info\">{{ configuration.type }}</span>\n              <button\n                class=\"btn btn-danger btn-xs visible-xs flex-item-right m-r-8 m-t-8\"\n                title=\"{{ 'Remove`configuration`' | translate }}\"\n                (click)=\"removeItem(configuration, 'configuration')\"\n              >\n                <i c8yIcon=\"minus-circle\"></i>\n                {{ 'Remove`configuration`' | translate }}\n              </button>\n            </div>\n            <div class=\"flex-item-right p-r-8 hidden-xs\">\n              <button\n                class=\"btn btn-dot showOnHover text-danger\"\n                title=\"{{ 'Remove`configuration`' | translate }}\"\n                (click)=\"removeItem(configuration, 'configuration')\"\n              >\n                <i c8yIcon=\"minus-circle\"></i>\n              </button>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n      <div class=\"p-t-8\">\n        <button\n          title=\"{{ 'Add configuration' | translate }}\"\n          class=\"btn-add-block m-b-0\"\n          (click)=\"addConfiguration()\"\n        >\n          <i c8yIcon=\"plus-circle\"></i>\n          <span class=\"m-r-8\" *ngIf=\"deviceProfile.c8y_DeviceProfile.configuration?.length === 0\">\n            {{ 'No configuration defined.' | translate }}\n          </span>\n          {{ 'Add configuration' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n"
            },] }
];
DeviceProfileComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: AlertService },
    { type: InventoryService },
    { type: BsModalService },
    { type: RepositoryService }
];
//# sourceMappingURL=data:application/json;base64,