import { __awaiter } from "tslib";
import { ChangeDetectorRef, Component, EventEmitter, forwardRef, Input, Output, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { InventoryService } from '@c8y/client';
import { AssetSelectorService } from './asset-selector.service';
import { GroupNodeService } from './group-node.service';
import { AssetSelectorBase } from './asset-selector-base';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './group-node.service';
import * as ɵngcc2 from '@c8y/client';
import * as ɵngcc3 from './asset-selector.service';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from './asset-selector.component';
import * as ɵngcc6 from '@c8y/ngx-components';

const _c0 = ["millerViewWrapper"];
function MillerViewComponent_div_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementEnd();
} }
function MillerViewComponent_div_2_div_3_c8y_ui_empty_state_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-ui-empty-state", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "folder-open")("title", ɵngcc0.ɵɵpipeBind1(1, 4, "No results to display."))("subtitle", ɵngcc0.ɵɵpipeBind1(2, 6, "The selected asset has no children."))("horizontal", true);
} }
function MillerViewComponent_div_2_div_3_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-ui-empty-state", 11);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "folder-open")("title", ɵngcc0.ɵɵpipeBind1(1, 4, "No results to display for the current filter."))("subtitle", ɵngcc0.ɵɵpipeBind1(2, 6, "There are no assets matching the filter."))("horizontal", true);
} }
function MillerViewComponent_div_2_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 8);
    ɵngcc0.ɵɵtemplate(1, MillerViewComponent_div_2_div_3_c8y_ui_empty_state_1_Template, 3, 8, "c8y-ui-empty-state", 9);
    ɵngcc0.ɵɵtemplate(2, MillerViewComponent_div_2_div_3_ng_template_2_Template, 3, 8, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r7 = ɵngcc0.ɵɵreference(3);
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r5.filterText)("ngIfElse", _r7);
} }
const _c1 = function () { return []; };
function MillerViewComponent_div_2_Template(rf, ctx) { if (rf & 1) {
    const _r10 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelementStart(1, "c8y-asset-selector", 4);
    ɵngcc0.ɵɵlistener("onSelected", function MillerViewComponent_div_2_Template_c8y_asset_selector_onSelected_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onSelectionChange($event); })("onRowSelected", function MillerViewComponent_div_2_Template_c8y_asset_selector_onRowSelected_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.addNewColumn($event); })("onLoad", function MillerViewComponent_div_2_Template_c8y_asset_selector_onLoad_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r10); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onLoad($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, MillerViewComponent_div_2_div_2_Template, 2, 0, "div", 5);
    ɵngcc0.ɵɵtemplate(3, MillerViewComponent_div_2_div_3_Template, 4, 2, "div", 6);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r2 = ctx.$implicit;
    const i_r3 = ctx.index;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("config", ctx_r1.config)("index", i_r3)("active", ctx_r1.columns[i_r3 + 1])("rootNode", column_r2)("selectedItems", ctx_r1.selected || ɵngcc0.ɵɵpureFunction0(9, _c1))("selectedDevice", ctx_r1.selectedDevice)("container", ctx_r1.container);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.isLoading && ctx_r1.columnIndex === i_r3 && !ctx_r1.selectedDevice);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !column_r2.children.length && !ctx_r1.isLoading);
} }
const _c2 = function (a0) { return { "single-column": a0 }; };
export class MillerViewComponent extends AssetSelectorBase {
    constructor(groupNodeService, inventory, assetSelectorService, cd) {
        super(groupNodeService, inventory, assetSelectorService);
        this.groupNodeService = groupNodeService;
        this.inventory = inventory;
        this.assetSelectorService = assetSelectorService;
        this.cd = cd;
        /**
         * Config object containing all options for the asset selector.
         */
        this.config = {};
        /**
         * The asset to use as root.
         */
        this.asset = undefined;
        /**
         * The selected devices.
         */
        this.selectedDevice = undefined;
        /**
         * Emits if the selection changes
         */
        this.onSelected = new EventEmitter();
        /**
         * The column array will contain all currently selected nodes
         *  which will form the miller view columns (only one per level).
         */
        this.columns = [];
        /**
         * The current filter applied. Used for the empty state text in the view.
         */
        this.filterText = '';
        this.container = 'body';
        this.configOptionsDefault = {
            view: 'miller',
            singleColumn: false
        };
    }
    /**
     * @ignore
     */
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.config = Object.assign(Object.assign({}, this.configOptionsDefault), this.config);
            const isAnyNodeDefined = !this.rootNode && (!this.asset || Object.keys(this.asset).length === 0);
            if (isAnyNodeDefined) {
                this.rootNode = this.createDefaultRootNode();
            }
            const isOnlyAssetNodeDefined = this.asset && Object.keys(this.asset).length !== 0;
            if (isOnlyAssetNodeDefined) {
                this.rootNode = yield this.createManagedObjectRootNode(this.asset);
                this.rootNode.click();
            }
            this.columns.push(this.rootNode);
        });
    }
    /**
     * @ignore
     */
    ngOnChanges(changes) {
        return __awaiter(this, void 0, void 0, function* () {
            if (changes.asset && changes.asset.currentValue && !this.asset) {
                this.columns = [];
                this.columns.push(yield this.createManagedObjectRootNode(changes.asset.currentValue));
            }
        });
    }
    /**
     * Create a new column with the selected node as root.
     */
    addNewColumn(node) {
        const level = node.index;
        this.selectedDevice = node.selectedDevices || undefined;
        if (node.root) {
            window.requestAnimationFrame(() => (this.millerViewWrapper.nativeElement.scrollLeft = 0));
            this.columns.length = 1;
        }
        const isLevelLowerThanColumnNumber = level < this.columns.length - 1;
        let goBack = false;
        if (isLevelLowerThanColumnNumber) {
            this.columns.length = level + 1;
            goBack = true;
        }
        if (!node.root && !(this.config.singleColumn && goBack)) {
            this.columns.push(node.nodeCopy);
            window.requestAnimationFrame(() => (this.millerViewWrapper.nativeElement.scrollLeft = 99999));
        }
    }
    /**
     * Change the loading state of the asset selector.
     */
    onLoad(event) {
        this.isLoading = event.loading;
        this.filterText = event.filterText;
        this.columnIndex = event.index;
        this.selectedDevice = event.selectedDevice;
        this.cd.detectChanges();
    }
    /**
     * Add the selected node to the selected array.
     */
    onSelectionChange(event) {
        if (!this.config.multi) {
            this.deselectAll(event.change.item);
            return;
        }
        if (event.change.isSelected) {
            this.select(event.change.item);
            return;
        }
        this.deselect(event.change.item);
    }
}
MillerViewComponent.ɵfac = function MillerViewComponent_Factory(t) { return new (t || MillerViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GroupNodeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.InventoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AssetSelectorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };
MillerViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MillerViewComponent, selectors: [["c8y-asset-selector-miller"]], viewQuery: function MillerViewComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.millerViewWrapper = _t.first);
    } }, inputs: { config: "config", asset: "asset", selectedDevice: "selectedDevice", container: "container", rootNode: "rootNode" }, outputs: { onSelected: "onSelected" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => MillerViewComponent),
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 4, consts: [[1, "miller-view-wrapper", 3, "ngClass"], ["millerViewWrapper", ""], ["class", "miller-column bg-inherit", 4, "ngFor", "ngForOf"], [1, "miller-column", "bg-inherit"], [1, "bg-inherit", 3, "config", "index", "active", "rootNode", "selectedItems", "selectedDevice", "container", "onSelected", "onRowSelected", "onLoad"], ["class", "p-relative p-b-64", 4, "ngIf"], ["class", "p-l-8 p-r-8", 4, "ngIf"], [1, "p-relative", "p-b-64"], [1, "p-l-8", "p-r-8"], [3, "icon", "title", "subtitle", "horizontal", 4, "ngIf", "ngIfElse"], ["noSearchResults", ""], [3, "icon", "title", "subtitle", "horizontal"]], template: function MillerViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵtemplate(2, MillerViewComponent_div_2_Template, 4, 10, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c2, ctx.config.singleColumn));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.columns);
    } }, directives: [ɵngcc4.NgClass, ɵngcc4.NgForOf, ɵngcc5.AssetSelectorComponent, ɵngcc4.NgIf, ɵngcc6.LoadingComponent, ɵngcc6.EmptyStateComponent], pipes: [ɵngcc6.C8yTranslatePipe], encapsulation: 2 });
MillerViewComponent.ctorParameters = () => [
    { type: GroupNodeService },
    { type: InventoryService },
    { type: AssetSelectorService },
    { type: ChangeDetectorRef }
];
MillerViewComponent.propDecorators = {
    config: [{ type: Input }],
    asset: [{ type: Input }],
    selectedDevice: [{ type: Input }],
    rootNode: [{ type: Input }],
    onSelected: [{ type: Output }],
    millerViewWrapper: [{ type: ViewChild, args: ['millerViewWrapper',] }],
    container: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MillerViewComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-asset-selector-miller',
                template: "<div\n  #millerViewWrapper\n  class=\"miller-view-wrapper\"\n  [ngClass]=\"{ 'single-column': config.singleColumn }\"\n>\n  <div *ngFor=\"let column of columns; index as i\" class=\"miller-column bg-inherit\">\n    <c8y-asset-selector\n      [config]=\"config\"\n      [index]=\"i\"\n      [active]=\"columns[i + 1]\"\n      [rootNode]=\"column\"\n      [selectedItems]=\"selected || []\"\n      [selectedDevice]=\"selectedDevice\"\n      (onSelected)=\"onSelectionChange($event)\"\n      (onRowSelected)=\"addNewColumn($event)\"\n      (onLoad)=\"onLoad($event)\"\n      [container]=\"container\"\n      class=\"bg-inherit\"\n    >\n    </c8y-asset-selector>\n\n    <div class=\"p-relative p-b-64\" *ngIf=\"isLoading && columnIndex === i && !selectedDevice\">\n      <c8y-loading></c8y-loading>\n    </div>\n\n    <div *ngIf=\"!column.children.length && !isLoading\" class=\"p-l-8 p-r-8\">\n      <c8y-ui-empty-state\n        *ngIf=\"!filterText; else noSearchResults\"\n        [icon]=\"'folder-open'\"\n        [title]=\"'No results to display.' | translate\"\n        [subtitle]=\"'The selected asset has no children.' | translate\"\n        [horizontal]=\"true\"\n      ></c8y-ui-empty-state>\n      <ng-template #noSearchResults>\n        <c8y-ui-empty-state\n          [icon]=\"'folder-open'\"\n          [title]=\"'No results to display for the current filter.' | translate\"\n          [subtitle]=\"'There are no assets matching the filter.' | translate\"\n          [horizontal]=\"true\"\n        ></c8y-ui-empty-state>\n      </ng-template>\n    </div>\n  </div>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => MillerViewComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.GroupNodeService }, { type: ɵngcc2.InventoryService }, { type: ɵngcc3.AssetSelectorService }, { type: ɵngcc0.ChangeDetectorRef }]; }, { config: [{
            type: Input
        }], asset: [{
            type: Input
        }], selectedDevice: [{
            type: Input
        }], onSelected: [{
            type: Output
        }], container: [{
            type: Input
        }], rootNode: [{
            type: Input
        }], millerViewWrapper: [{
            type: ViewChild,
            args: ['millerViewWrapper']
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,