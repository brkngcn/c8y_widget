import { NgModule } from '@angular/core';
import { DeviceStatusComponent, DeviceStatusModule, HOOK_NAVIGATOR_NODES, ModalModule, ModalService } from '@c8y/ngx-components';
import { ASSET_NAVIGATOR_CONFIG } from './asset-node-config.model';
import { AssetNodeFactory } from './asset-node.factory';
import { AssetNodeService } from './asset-node.service';
import { AssetSelectorModule } from './asset-selector/asset-selector.module';
import * as ɵngcc0 from '@angular/core';
export class AssetsNavigatorModule {
    static config(config = {}) {
        return {
            ngModule: AssetsNavigatorModule,
            providers: [
                {
                    provide: ASSET_NAVIGATOR_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
AssetsNavigatorModule.ɵfac = function AssetsNavigatorModule_Factory(t) { return new (t || AssetsNavigatorModule)(); };
AssetsNavigatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AssetsNavigatorModule });
AssetsNavigatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        ModalService,
        AssetNodeService,
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: AssetNodeFactory,
            multi: true
        }
    ], imports: [[ModalModule, AssetSelectorModule, DeviceStatusModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssetsNavigatorModule, [{
        type: NgModule,
        args: [{
                declarations: [],
                imports: [ModalModule, AssetSelectorModule, DeviceStatusModule],
                providers: [
                    ModalService,
                    AssetNodeService,
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: AssetNodeFactory,
                        multi: true
                    }
                ],
                entryComponents: [DeviceStatusComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AssetsNavigatorModule, { imports: function () { return [ModalModule, AssetSelectorModule, DeviceStatusModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzLW5hdmlnYXRvci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2Fzc2V0cy1uYXZpZ2F0b3IvYXNzZXRzLW5hdmlnYXRvci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUNMLHFCQUFxQixFQUNyQixrQkFBa0IsRUFDbEIsb0JBQW9CLEVBQ3BCLFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQXdCLHNCQUFzQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDekYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sd0NBQXdDLENBQUM7O0FBZ0I3RSxNQUFNLE9BQU8scUJBQXFCO0FBQ2xDLElBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUErQixFQUFFO0FBQUksUUFDakQsT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLHFCQUFxQjtBQUNyQyxZQUFNLFNBQVMsRUFBRTtBQUNqQixnQkFBUTtBQUNSLG9CQUFVLE9BQU8sRUFBRSxzQkFBc0I7QUFDekMsb0JBQVUsUUFBUSxFQUFFLE1BQU07QUFDMUIsaUJBQVM7QUFDVCxhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7aURBMUJDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsRUFBRSxrQkFDaEI7TUFBTyxFQUFFLENBQUMsV0FBVyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixDQUFDLGtCQUMvRCxTQUFTLEVBQUU7WUFDVCxZQUFZLHNCQUNaLGdCQUFnQjtFQUNoQjtNQUNFLE9BQU8sRUFBRTtTQUFvQjt5QkFDN0IsUUFBUSxFQUFFO1FBQWdCLDBCQUMxQixLQUFLO0NBQUUsSUFBSTtHQUNaO1dBQ0Ysa0JBQ0QsZUFBZSxFQUFFLENBQUMscUJBQXFCLENBQUM7TUFDekM7Ozs7Ozs7Ozs7Ozs7Ozs7O3NOQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgRGV2aWNlU3RhdHVzQ29tcG9uZW50LFxuICBEZXZpY2VTdGF0dXNNb2R1bGUsXG4gIEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICBNb2RhbE1vZHVsZSxcbiAgTW9kYWxTZXJ2aWNlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQXNzZXROYXZpZ2F0b3JDb25maWcsIEFTU0VUX05BVklHQVRPUl9DT05GSUcgfSBmcm9tICcuL2Fzc2V0LW5vZGUtY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IEFzc2V0Tm9kZUZhY3RvcnkgfSBmcm9tICcuL2Fzc2V0LW5vZGUuZmFjdG9yeSc7XG5pbXBvcnQgeyBBc3NldE5vZGVTZXJ2aWNlIH0gZnJvbSAnLi9hc3NldC1ub2RlLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXNzZXRTZWxlY3Rvck1vZHVsZSB9IGZyb20gJy4vYXNzZXQtc2VsZWN0b3IvYXNzZXQtc2VsZWN0b3IubW9kdWxlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXSxcbiAgaW1wb3J0czogW01vZGFsTW9kdWxlLCBBc3NldFNlbGVjdG9yTW9kdWxlLCBEZXZpY2VTdGF0dXNNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICBNb2RhbFNlcnZpY2UsXG4gICAgQXNzZXROb2RlU2VydmljZSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBBc3NldE5vZGVGYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW0RldmljZVN0YXR1c0NvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgQXNzZXRzTmF2aWdhdG9yTW9kdWxlIHtcbiAgc3RhdGljIGNvbmZpZyhjb25maWc6IEFzc2V0TmF2aWdhdG9yQ29uZmlnID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEFzc2V0c05hdmlnYXRvck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQXNzZXRzTmF2aWdhdG9yTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBBU1NFVF9OQVZJR0FUT1JfQ09ORklHLFxuICAgICAgICAgIHVzZVZhbHVlOiBjb25maWdcbiAgICAgICAgfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==