import { __awaiter } from "tslib";
import { Component, Input, Optional } from '@angular/core';
import { MeasurementRealtimeService } from '@c8y/ngx-components';
import { DatapointLibraryService } from '@c8y/ngx-components/datapoint-selector';
import { combineLatest, from, NEVER } from 'rxjs';
import { distinctUntilChanged, filter, map, pairwise, startWith, tap } from 'rxjs/operators';
import { ContextDashboardComponent } from '@c8y/ngx-components/context-dashboard';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@c8y/ngx-components/datapoint-selector';
import * as ɵngcc3 from '@c8y/ngx-components/context-dashboard';
import * as ɵngcc4 from '@angular/common';

function KpiWidgetViewComponent_div_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelement(1, "i", 12);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lastState_r3 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", lastState_r3.colorClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r4.config.icon);
} }
const _c0 = function (a0) { return { transform: a0 }; };
function KpiWidgetViewComponent_div_0_div_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelement(1, "i", 14);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵpipe(3, "number");
    ɵngcc0.ɵɵpipe(4, "date");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const previousValue_r8 = ctx.ngIf;
    const lastState_r3 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Previous value") + ": " + ɵngcc0.ɵɵpipeBind2(3, 4, previousValue_r8.value, "1." + (ctx_r5.config.numberOfDecimalPlaces || "0") + "-" + (ctx_r5.config.numberOfDecimalPlaces || "0")) + " (" + ɵngcc0.ɵɵpipeBind2(4, 7, previousValue_r8.date, "medium") + ")")("ngStyle", ɵngcc0.ɵɵpureFunction1(10, _c0, "rotate(" + lastState_r3.trend + ")"));
} }
function KpiWidgetViewComponent_div_0_p_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 15);
    ɵngcc0.ɵɵelement(1, "i", 16);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "date");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lastState_r3 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(3, 1, lastState_r3.latestMeasurement.date, "medium"), " ");
} }
const _c1 = function (a0) { return { "font-size": a0 }; };
function KpiWidgetViewComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 2);
    ɵngcc0.ɵɵelementStart(1, "div", 3);
    ɵngcc0.ɵɵtemplate(2, KpiWidgetViewComponent_div_0_div_2_Template, 2, 2, "div", 4);
    ɵngcc0.ɵɵelementStart(3, "div", 5);
    ɵngcc0.ɵɵelementStart(4, "span", 6);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵpipe(7, "number");
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "number");
    ɵngcc0.ɵɵelementStart(10, "small", 7);
    ɵngcc0.ɵɵtext(11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(12, KpiWidgetViewComponent_div_0_div_12_Template, 5, 12, "div", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 9);
    ɵngcc0.ɵɵtemplate(14, KpiWidgetViewComponent_div_0_p_14_Template, 4, 4, "p", 10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const lastState_r3 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.config.icon && ctx_r0.config.showIcon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate3("title", "", lastState_r3.colorClass === "text-danger" ? ɵngcc0.ɵɵpipeBind1(5, 10, "Within red range:") : lastState_r3.colorClass === "text-warning" ? ɵngcc0.ɵɵpipeBind1(6, 12, "Within yellow range:") : "", " ", ɵngcc0.ɵɵpipeBind2(7, 14, lastState_r3.latestMeasurement.value, "1." + (ctx_r0.config.numberOfDecimalPlaces || "0") + "-" + (ctx_r0.config.numberOfDecimalPlaces || "0")), " ", lastState_r3.unit || "", "");
    ɵngcc0.ɵɵproperty("ngClass", lastState_r3.colorClass)("ngStyle", ɵngcc0.ɵɵpureFunction1(20, _c1, (ctx_r0.config.fontSize || "36") + "px"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind2(9, 17, lastState_r3.latestMeasurement.value, "1." + (ctx_r0.config.numberOfDecimalPlaces || "0") + "-" + (ctx_r0.config.numberOfDecimalPlaces || "0")), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(lastState_r3.unit || "");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r0.config == null ? null : ctx_r0.config.showTrend) && lastState_r3.previousValue);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.config == null ? null : ctx_r0.config.showTimestamp);
} }
function KpiWidgetViewComponent_ng_template_2_c8y_ui_empty_state_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-ui-empty-state", 20);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵpipe(2, "translate");
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("icon", "line-chart")("title", ɵngcc0.ɵɵpipeBind1(1, 4, "No measurement to display."))("subtitle", ɵngcc0.ɵɵpipeBind1(2, 6, "Waiting for measurements to be created."))("horizontal", true);
} }
function KpiWidgetViewComponent_ng_template_2_c8y_loading_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-loading");
} }
function KpiWidgetViewComponent_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 17);
    ɵngcc0.ɵɵtemplate(1, KpiWidgetViewComponent_ng_template_2_c8y_ui_empty_state_1_Template, 3, 8, "c8y-ui-empty-state", 18);
    ɵngcc0.ɵɵtemplate(2, KpiWidgetViewComponent_ng_template_2_c8y_loading_2_Template, 1, 0, "c8y-loading", 19);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.noDataInitiallyInDB);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.noDataInitiallyInDB);
} }
var ColorClass;
(function (ColorClass) {
    ColorClass["danger"] = "text-danger";
    ColorClass["warning"] = "text-warning";
    ColorClass["unknown"] = "";
})(ColorClass || (ColorClass = {}));
export class KpiWidgetViewComponent {
    constructor(measurementRealtime, datapointLib, dashboard) {
        this.measurementRealtime = measurementRealtime;
        this.datapointLib = datapointLib;
        this.dashboard = dashboard;
        this.config = { datapoints: [] };
        this.state$ = NEVER;
        // used to differentiate between loading state and empty state
        this.noDataInitiallyInDB = false;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const datapoints = this.config.datapoints || [];
            const datapoint = datapoints.find(tmp => tmp.__active);
            if (!datapoint) {
                return;
            }
            this.state$ = this.setupObservable(datapoint);
        });
    }
    setupObservable(datapoint) {
        this.assignContextFromContextDashboard(datapoint);
        const latestMeasurement$ = this.getLatestMeasurement$(datapoint);
        const lastTwoValues$ = this.getLastTwoValuesOfObservable$(latestMeasurement$);
        const previousValue$ = lastTwoValues$.pipe(map(res => res[0]), startWith(undefined));
        const datapointUpdate$ = this.getDatapointLibraryEntry$(datapoint);
        const combineMeasurementAndDatapointLibEntry$ = combineLatest([
            latestMeasurement$,
            datapointUpdate$
        ]);
        const unit$ = combineMeasurementAndDatapointLibEntry$.pipe(map(([latestMeasurementValue, currentDatapoint]) => currentDatapoint.unit || latestMeasurementValue.unit || ''), startWith(''), distinctUntilChanged());
        return combineLatest([
            latestMeasurement$,
            previousValue$,
            this.getTrendOfLatestMeasurements$(lastTwoValues$),
            unit$,
            this.getColorClass$(combineMeasurementAndDatapointLibEntry$)
        ]).pipe(map(([latestMeasurement, previousValue, trend, unit, colorClass]) => {
            return {
                latestMeasurement,
                previousValue,
                trend,
                unit,
                colorClass
            };
        }));
    }
    getLatestMeasurement$(datapoint) {
        return this.measurementRealtime
            .latestValueOfSpecificMeasurement$(datapoint.fragment, datapoint.series, datapoint.__target, 
        // we only need the last two values in case we want to show a trend
        this.config.showTrend ? 2 : 1, 
        // null will be emitted in case no measurement was found initially
        true)
            .pipe(tap(measurement => {
            if (!measurement) {
                this.noDataInitiallyInDB = true;
            }
        }), filter(measurement => !!measurement), map(measurement => {
            return {
                unit: measurement[datapoint.fragment][datapoint.series].unit,
                value: measurement[datapoint.fragment][datapoint.series].value,
                date: measurement.time
            };
        }));
    }
    getDatapointLibraryEntry$(datapoint) {
        return from(this.datapointLib.updateDatapoints([datapoint], true)).pipe(map(tmp => tmp[0]), filter(tmp => !!tmp), startWith(datapoint));
    }
    getColorClass$(measurementAndDatapointCombination$) {
        return measurementAndDatapointCombination$.pipe(map(([latestMeasurementValue, currentDatapoint]) => {
            if (this.inRangeOf(currentDatapoint, latestMeasurementValue.value, 'redRangeMin', 'redRangeMax')) {
                return ColorClass.danger;
            }
            if (this.inRangeOf(currentDatapoint, latestMeasurementValue.value, 'yellowRangeMin', 'yellowRangeMax')) {
                return ColorClass.warning;
            }
            return ColorClass.unknown;
        }), startWith(ColorClass.unknown), distinctUntilChanged());
    }
    getLastTwoValuesOfObservable$(input$) {
        return input$.pipe(pairwise());
    }
    getTrendOfLatestMeasurements$(latestMeasurement$) {
        return latestMeasurement$.pipe(map(res => {
            if (res.length === 2) {
                const oldValue = res[0].value;
                const newValue = res[1].value;
                if (oldValue < newValue) {
                    return '45deg';
                }
                if (oldValue > newValue) {
                    return '135deg';
                }
            }
            return '90deg';
        }), startWith('90deg'), distinctUntilChanged());
    }
    inRangeOf(datapoint, measurementValue, minAttribute, maxAttribute) {
        if (typeof datapoint[minAttribute] === 'number' &&
            typeof datapoint[maxAttribute] === 'number') {
            if (measurementValue >= datapoint[minAttribute] &&
                measurementValue < datapoint[maxAttribute]) {
                return true;
            }
        }
        return false;
    }
    assignContextFromContextDashboard(datapoint) {
        var _a, _b;
        if (!((_a = this.dashboard) === null || _a === void 0 ? void 0 : _a.isDeviceTypeDashboard)) {
            return;
        }
        const context = (_b = this.dashboard) === null || _b === void 0 ? void 0 : _b.context;
        if (context === null || context === void 0 ? void 0 : context.id) {
            const { name, id } = context;
            datapoint.__target = { name, id };
        }
    }
}
KpiWidgetViewComponent.ɵfac = function KpiWidgetViewComponent_Factory(t) { return new (t || KpiWidgetViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MeasurementRealtimeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DatapointLibraryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.ContextDashboardComponent, 8)); };
KpiWidgetViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: KpiWidgetViewComponent, selectors: [["c8y-kpi-widget-view"]], inputs: { config: "config" }, features: [ɵngcc0.ɵɵProvidersFeature([MeasurementRealtimeService])], decls: 4, vars: 4, consts: [["class", "kpi-widget__container d-flex d-col fit-h fit-w a-i-center j-c-center", 4, "ngIf", "ngIfElse"], ["noMeasurementFound", ""], [1, "kpi-widget__container", "d-flex", "d-col", "fit-h", "fit-w", "a-i-center", "j-c-center"], [1, "d-flex", "a-i-center", "j-c-center", "fit-w"], ["class", "m-r-16 flex-no-shrink text-muted", 3, "ngClass", 4, "ngIf"], [1, "text-truncate"], [1, "text-truncate", "text-medium", 3, "ngClass", "ngStyle", "title"], [1, "text-regular"], ["class", "dot dot-info dot-30 m-l-16 flex-no-shrink", 4, "ngIf"], [1, "d-flex", "j-c-center"], ["class", "icon-flex text-center text-muted small", 4, "ngIf"], [1, "m-r-16", "flex-no-shrink", "text-muted", 3, "ngClass"], [1, "icon-32", 3, "c8yIcon"], [1, "dot", "dot-info", "dot-30", "m-l-16", "flex-no-shrink"], ["c8yIcon", "arrow-dotted-up", 1, "icon-20", 3, "title", "ngStyle"], [1, "icon-flex", "text-center", "text-muted", "small"], ["c8yIcon", "calendar"], [1, "d-flex", "fit-h", "fit-w", "j-c-center", "a-i-center"], ["class", "fit-w", 3, "icon", "title", "subtitle", "horizontal", 4, "ngIf"], [4, "ngIf"], [1, "fit-w", 3, "icon", "title", "subtitle", "horizontal"]], template: function KpiWidgetViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, KpiWidgetViewComponent_div_0_Template, 15, 22, "div", 0);
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵtemplate(2, KpiWidgetViewComponent_ng_template_2_Template, 3, 2, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 2, ctx.state$))("ngIfElse", _r1);
    } }, directives: [ɵngcc4.NgIf, ɵngcc4.NgClass, ɵngcc4.NgStyle, ɵngcc1.IconDirective, ɵngcc1.EmptyStateComponent, ɵngcc1.LoadingComponent], pipes: [ɵngcc4.AsyncPipe, ɵngcc1.C8yTranslatePipe, ɵngcc4.DecimalPipe, ɵngcc4.DatePipe], encapsulation: 2 });
KpiWidgetViewComponent.ctorParameters = () => [
    { type: MeasurementRealtimeService },
    { type: DatapointLibraryService },
    { type: ContextDashboardComponent, decorators: [{ type: Optional }] }
];
KpiWidgetViewComponent.propDecorators = {
    config: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(KpiWidgetViewComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-kpi-widget-view',
                template: "<div\n  class=\"kpi-widget__container d-flex d-col fit-h fit-w a-i-center j-c-center\"\n  *ngIf=\"state$ | async as lastState; else noMeasurementFound\"\n>\n  <div class=\"d-flex a-i-center j-c-center fit-w\">\n    <div\n      class=\"m-r-16 flex-no-shrink text-muted\"\n      [ngClass]=\"lastState.colorClass\"\n      *ngIf=\"config.icon && config.showIcon\"\n    >\n      <i class=\"icon-32\" [c8yIcon]=\"config.icon\"></i>\n    </div>\n    <div class=\"text-truncate\">\n      <span\n        class=\"text-truncate text-medium\"\n        [ngClass]=\"lastState.colorClass\"\n        [ngStyle]=\"{ 'font-size': (config.fontSize || '36') + 'px' }\"\n        title=\"{{\n          lastState.colorClass === 'text-danger'\n            ? ('Within red range:' | translate)\n            : lastState.colorClass === 'text-warning'\n            ? ('Within yellow range:' | translate)\n            : ''\n        }} {{\n          lastState.latestMeasurement.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')\n        }} {{ lastState.unit || '' }}\"\n      >\n        {{\n          lastState.latestMeasurement.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')\n        }}\n        <small class=\"text-regular\">{{ lastState.unit || '' }}</small>\n      </span>\n    </div>\n    <div\n      class=\"dot dot-info dot-30 m-l-16 flex-no-shrink\"\n      *ngIf=\"config?.showTrend && lastState.previousValue as previousValue\"\n    >\n      <i\n        class=\"icon-20\"\n        [title]=\"\n          ('Previous value' | translate) +\n          ': ' +\n          (previousValue.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')) +\n          ' (' +\n          (previousValue.date | date: 'medium') +\n          ')'\n        \"\n        c8yIcon=\"arrow-dotted-up\"\n        [ngStyle]=\"{ transform: 'rotate(' + lastState.trend + ')' }\"\n      ></i>\n    </div>\n  </div>\n  <div class=\"d-flex j-c-center\">\n    <p *ngIf=\"config?.showTimestamp\" class=\"icon-flex text-center text-muted small\">\n      <i c8yIcon=\"calendar\"></i>\n      {{ lastState.latestMeasurement.date | date: 'medium' }}\n    </p>\n  </div>\n</div>\n\n<ng-template #noMeasurementFound>\n  <div class=\"d-flex fit-h fit-w j-c-center a-i-center\">\n    <c8y-ui-empty-state\n      *ngIf=\"noDataInitiallyInDB\"\n      class=\"fit-w\"\n      [icon]=\"'line-chart'\"\n      [title]=\"'No measurement to display.' | translate\"\n      [subtitle]=\"'Waiting for measurements to be created.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n    <c8y-loading *ngIf=\"!noDataInitiallyInDB\"></c8y-loading>\n  </div>\n</ng-template>\n",
                providers: [MeasurementRealtimeService]
            }]
    }], function () { return [{ type: ɵngcc1.MeasurementRealtimeService }, { type: ɵngcc2.DatapointLibraryService }, { type: ɵngcc3.ContextDashboardComponent, decorators: [{
                type: Optional
            }] }]; }, { config: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,