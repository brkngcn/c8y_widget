import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { DeviceGridService } from '@c8y/ngx-components/device-grid';
import { BsModalService } from 'ngx-bootstrap/modal';
import { AddSmartGroupComponent } from './add-smart-group.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/device-grid';
import * as ɵngcc2 from 'ngx-bootstrap/modal';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@angular/common';
export class DeviceListComponent {
    constructor(deviceGridService, bsModalService) {
        this.deviceGridService = deviceGridService;
        this.bsModalService = bsModalService;
        this.GRID_CONFIG_KEY = 'device-grid-all';
        this.count$ = this.deviceGridService.getTotal({});
    }
    createSmartGroup() {
        return __awaiter(this, void 0, void 0, function* () {
            const initialState = {
                configKey: this.GRID_CONFIG_KEY,
                deviceQuery: this.deviceQueryStringOutput
            };
            this.bsModalService.show(AddSmartGroupComponent, {
                class: 'modal-sm',
                initialState
            });
        });
    }
}
DeviceListComponent.ɵfac = function DeviceListComponent_Factory(t) { return new (t || DeviceListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DeviceGridService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BsModalService)); };
DeviceListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceListComponent, selectors: [["c8y-device-list"]], decls: 13, vars: 14, consts: [[3, "placement"], [1, "btn", "btn-link", 3, "title", "click"], ["c8yIcon", "c8y-group-smart"], ["src", "/users-guide/device-management/#viewing-devices"], [1, "content-fullpage"], [3, "infiniteScroll", "columnsConfigKey", "onDeviceQueryStringChange"]], template: function DeviceListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-title");
        ɵngcc0.ɵɵtext(1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "c8y-action-bar-item", 0);
        ɵngcc0.ɵɵelementStart(4, "button", 1);
        ɵngcc0.ɵɵlistener("click", function DeviceListComponent_Template_button_click_4_listener() { return ctx.createSmartGroup(); });
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelement(6, "i", 2);
        ɵngcc0.ɵɵtext(7);
        ɵngcc0.ɵɵpipe(8, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(9, "c8y-help", 3);
        ɵngcc0.ɵɵelementStart(10, "div", 4);
        ɵngcc0.ɵɵelementStart(11, "c8y-device-grid", 5);
        ɵngcc0.ɵɵlistener("onDeviceQueryStringChange", function DeviceListComponent_Template_c8y_device_grid_onDeviceQueryStringChange_11_listener($event) { return ctx.deviceQueryStringOutput = $event; });
        ɵngcc0.ɵɵpipe(12, "async");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 6, "All devices"), "\n");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("placement", "right");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(5, 8, "Create smart group"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 10, "Create smart group"), " ");
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("infiniteScroll", ɵngcc0.ɵɵpipeBind1(12, 12, ctx.count$) === undefined ? "auto" : undefined)("columnsConfigKey", ctx.GRID_CONFIG_KEY);
    } }, directives: [ɵngcc3.TitleComponent, ɵngcc3.ActionBarItemComponent, ɵngcc3.IconDirective, ɵngcc3.HelpComponent, ɵngcc1.DeviceGridComponent], pipes: [ɵngcc3.C8yTranslatePipe, ɵngcc4.AsyncPipe], encapsulation: 2 });
DeviceListComponent.ctorParameters = () => [
    { type: DeviceGridService },
    { type: BsModalService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-list',
                template: "<c8y-title>\n  {{ 'All devices' | translate }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Create smart group' | translate }}\"\n    (click)=\"createSmartGroup()\"\n  >\n    <i c8yIcon=\"c8y-group-smart\"></i>\n    {{ 'Create smart group' | translate }}\n  </button>\n</c8y-action-bar-item>\n\n<c8y-help src=\"/users-guide/device-management/#viewing-devices\"></c8y-help>\n\n<div class=\"content-fullpage\">\n  <c8y-device-grid\n    [infiniteScroll]=\"(count$ | async) === undefined ? 'auto' : undefined\"\n    [columnsConfigKey]=\"GRID_CONFIG_KEY\"\n    (onDeviceQueryStringChange)=\"deviceQueryStringOutput = $event\"\n  ></c8y-device-grid>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.DeviceGridService }, { type: ɵngcc2.BsModalService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWxpc3QuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZpY2UtbGlzdC9kZXZpY2UtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDcEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDOzs7Ozs7QUFNckUsTUFBTSxPQUFPLG1CQUFtQjtBQUNoQyxJQU1FLFlBQ1ksaUJBQW9DLEVBQ3RDLGNBQThCO0FBQ3ZDLFFBRlcsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFtQjtBQUFDLFFBQ3ZDLG1CQUFjLEdBQWQsY0FBYyxDQUFnQjtBQUMxQyxRQVRXLG9CQUFlLEdBQUcsaUJBQWlCLENBQUM7QUFDL0MsUUFDRSxXQUFNLEdBQUcsSUFBSSxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUMvQyxJQU1LLENBQUM7QUFDTixJQUNRLGdCQUFnQjtBQUN4QjtBQUNtQyxZQUQvQixNQUFNLFlBQVksR0FBRztBQUN6QixnQkFBTSxTQUFTLEVBQUUsSUFBSSxDQUFDLGVBQWU7QUFDckMsZ0JBQU0sV0FBVyxFQUFFLElBQUksQ0FBQyx1QkFBdUI7QUFDL0MsYUFBSyxDQUFDO0FBQ04sWUFDSSxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtBQUNyRCxnQkFBTSxLQUFLLEVBQUUsVUFBVTtBQUN2QixnQkFBTSxZQUFZO0FBQ2xCLGFBQUssQ0FBQyxDQUFDO0FBQ1AsUUFBRSxDQUFDO0FBRUgsS0FGRztBQUNIOytDQTNCQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLGlCQUFpQixrQkFDM0I7Ozs7OzsyQkFBMkMsY0FDNUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2TkFDSTtBQUFDO0FBQ1UsWUFUUCxpQkFBaUI7QUFBSSxZQUNyQixjQUFjO0FBQUc7Ozs7Ozs7bUhBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZFNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2RldmljZS1ncmlkJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBBZGRTbWFydEdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9hZGQtc21hcnQtZ3JvdXAuY29tcG9uZW50JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWRldmljZS1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RldmljZS1saXN0LmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBEZXZpY2VMaXN0Q29tcG9uZW50IHtcbiAgcmVhZG9ubHkgR1JJRF9DT05GSUdfS0VZID0gJ2RldmljZS1ncmlkLWFsbCc7XG5cbiAgY291bnQkID0gdGhpcy5kZXZpY2VHcmlkU2VydmljZS5nZXRUb3RhbCh7fSk7XG5cbiAgZGV2aWNlUXVlcnlTdHJpbmdPdXRwdXQ6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgZGV2aWNlR3JpZFNlcnZpY2U6IERldmljZUdyaWRTZXJ2aWNlLFxuICAgIHByaXZhdGUgYnNNb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlXG4gICkge31cblxuICBhc3luYyBjcmVhdGVTbWFydEdyb3VwKCkge1xuICAgIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICAgIGNvbmZpZ0tleTogdGhpcy5HUklEX0NPTkZJR19LRVksXG4gICAgICBkZXZpY2VRdWVyeTogdGhpcy5kZXZpY2VRdWVyeVN0cmluZ091dHB1dFxuICAgIH07XG5cbiAgICB0aGlzLmJzTW9kYWxTZXJ2aWNlLnNob3coQWRkU21hcnRHcm91cENvbXBvbmVudCwge1xuICAgICAgY2xhc3M6ICdtb2RhbC1zbScsXG4gICAgICBpbml0aWFsU3RhdGVcbiAgICB9KTtcbiAgfVxufVxuIl19