import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext } from '@c8y/ngx-components';
import { AbstractConnectivityTabFactory } from '../abstract-connectivity-tab.factory';
import { SigfoxGuard } from './sigfox.guard';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './sigfox.guard';
export class SigfoxTabFactory extends AbstractConnectivityTabFactory {
    constructor(router, guard) {
        super(router, guard);
        this.router = router;
        this.guard = guard;
        this.tabConfig = {
            label: gettext('Sigfox'),
            path: '/connectivitySettings/multiple_lns_connectors_sigfox',
            icon: 'wall-socket'
        };
    }
    config() {
        return this.tabConfig;
    }
}
SigfoxTabFactory.ɵfac = function SigfoxTabFactory_Factory(t) { return new (t || SigfoxTabFactory)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.SigfoxGuard)); };
SigfoxTabFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SigfoxTabFactory, factory: SigfoxTabFactory.ɵfac });
SigfoxTabFactory.ctorParameters = () => [
    { type: Router },
    { type: SigfoxGuard }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SigfoxTabFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.SigfoxGuard }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2lnZm94LXRhYi5mYWN0b3J5LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb25uZWN0aXZpdHkvc2lnZm94L3NpZ2ZveC10YWIuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFPLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEYsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7O0FBRzdDLE1BQU0sT0FBTyxnQkFBaUIsU0FBUSw4QkFBOEI7QUFDcEUsSUFNRSxZQUFzQixNQUFjLEVBQVksS0FBa0I7QUFDcEUsUUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFFBRndCLFdBQU0sR0FBTixNQUFNLENBQVE7QUFBQyxRQUFXLFVBQUssR0FBTCxLQUFLLENBQWE7QUFBQyxRQU4zRCxjQUFTLEdBQVE7QUFDM0IsWUFBSSxLQUFLLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUM1QixZQUFJLElBQUksRUFBRSxzREFBc0Q7QUFDaEUsWUFBSSxJQUFJLEVBQUUsYUFBYTtBQUN2QixTQUFHLENBQUM7QUFDSixJQUdFLENBQUM7QUFDSCxJQUNZLE1BQU07QUFBSyxRQUNuQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDMUIsSUFBRSxDQUFDO0FBQ0g7NENBZkMsVUFBVTs4SEFDVDtBQUFDO0FBQTBDLFlBTnBDLE1BQU07QUFBSSxZQUdWLFdBQVc7QUFBRzs7O3FHQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgZ2V0dGV4dCwgVGFiIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbm5lY3Rpdml0eVRhYkZhY3RvcnkgfSBmcm9tICcuLi9hYnN0cmFjdC1jb25uZWN0aXZpdHktdGFiLmZhY3RvcnknO1xuaW1wb3J0IHsgU2lnZm94R3VhcmQgfSBmcm9tICcuL3NpZ2ZveC5ndWFyZCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTaWdmb3hUYWJGYWN0b3J5IGV4dGVuZHMgQWJzdHJhY3RDb25uZWN0aXZpdHlUYWJGYWN0b3J5IHtcbiAgcHJpdmF0ZSB0YWJDb25maWc6IFRhYiA9IHtcbiAgICBsYWJlbDogZ2V0dGV4dCgnU2lnZm94JyksXG4gICAgcGF0aDogJy9jb25uZWN0aXZpdHlTZXR0aW5ncy9tdWx0aXBsZV9sbnNfY29ubmVjdG9yc19zaWdmb3gnLFxuICAgIGljb246ICd3YWxsLXNvY2tldCdcbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgcm91dGVyOiBSb3V0ZXIsIHByb3RlY3RlZCBndWFyZDogU2lnZm94R3VhcmQpIHtcbiAgICBzdXBlcihyb3V0ZXIsIGd1YXJkKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBjb25maWcoKTogVGFiIHtcbiAgICByZXR1cm4gdGhpcy50YWJDb25maWc7XG4gIH1cbn1cbiJdfQ==