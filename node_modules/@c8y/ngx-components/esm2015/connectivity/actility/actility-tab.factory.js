import { Injectable } from '@angular/core';
import { Router } from '@angular/router';
import { gettext } from '@c8y/ngx-components';
import { AbstractConnectivityTabFactory } from '../abstract-connectivity-tab.factory';
import { ActilityGuard } from './actility.guard';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from './actility.guard';
export class ActilityTabFactory extends AbstractConnectivityTabFactory {
    constructor(router, guard) {
        super(router, guard);
        this.router = router;
        this.guard = guard;
        this.tabConfig = {
            label: gettext('Actility'),
            path: '/connectivitySettings/multiple_lns_connectors_actility',
            icon: 'wall-socket'
        };
    }
    config() {
        return this.tabConfig;
    }
}
ActilityTabFactory.ɵfac = function ActilityTabFactory_Factory(t) { return new (t || ActilityTabFactory)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.ActilityGuard)); };
ActilityTabFactory.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ActilityTabFactory, factory: ActilityTabFactory.ɵfac });
ActilityTabFactory.ctorParameters = () => [
    { type: Router },
    { type: ActilityGuard }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ActilityTabFactory, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.Router }, { type: ɵngcc2.ActilityGuard }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWN0aWxpdHktdGFiLmZhY3RvcnkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2Nvbm5lY3Rpdml0eS9hY3RpbGl0eS9hY3RpbGl0eS10YWIuZmFjdG9yeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QyxPQUFPLEVBQUUsT0FBTyxFQUFPLE1BQU0scUJBQXFCLENBQUM7QUFDbkQsT0FBTyxFQUFFLDhCQUE4QixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGtCQUFrQixDQUFDOzs7O0FBR2pELE1BQU0sT0FBTyxrQkFBbUIsU0FBUSw4QkFBOEI7QUFDdEUsSUFNRSxZQUFzQixNQUFjLEVBQVksS0FBb0I7QUFDdEUsUUFBSSxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFFBRndCLFdBQU0sR0FBTixNQUFNLENBQVE7QUFBQyxRQUFXLFVBQUssR0FBTCxLQUFLLENBQWU7QUFBQyxRQU43RCxjQUFTLEdBQVE7QUFDM0IsWUFBSSxLQUFLLEVBQUUsT0FBTyxDQUFDLFVBQVUsQ0FBQztBQUM5QixZQUFJLElBQUksRUFBRSx3REFBd0Q7QUFDbEUsWUFBSSxJQUFJLEVBQUUsYUFBYTtBQUN2QixTQUFHLENBQUM7QUFDSixJQUdFLENBQUM7QUFDSCxJQUNZLE1BQU07QUFBSyxRQUNuQixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7QUFDMUIsSUFBRSxDQUFDO0FBQ0g7OENBZkMsVUFBVTtvSUFDVDtBQUFDO0FBQTRDLFlBTnRDLE1BQU07QUFBSSxZQUdWLGFBQWE7QUFBRzs7O3VHQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXIgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgZ2V0dGV4dCwgVGFiIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbm5lY3Rpdml0eVRhYkZhY3RvcnkgfSBmcm9tICcuLi9hYnN0cmFjdC1jb25uZWN0aXZpdHktdGFiLmZhY3RvcnknO1xuaW1wb3J0IHsgQWN0aWxpdHlHdWFyZCB9IGZyb20gJy4vYWN0aWxpdHkuZ3VhcmQnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgQWN0aWxpdHlUYWJGYWN0b3J5IGV4dGVuZHMgQWJzdHJhY3RDb25uZWN0aXZpdHlUYWJGYWN0b3J5IHtcbiAgcHJpdmF0ZSB0YWJDb25maWc6IFRhYiA9IHtcbiAgICBsYWJlbDogZ2V0dGV4dCgnQWN0aWxpdHknKSxcbiAgICBwYXRoOiAnL2Nvbm5lY3Rpdml0eVNldHRpbmdzL211bHRpcGxlX2xuc19jb25uZWN0b3JzX2FjdGlsaXR5JyxcbiAgICBpY29uOiAnd2FsbC1zb2NrZXQnXG4gIH07XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJvdXRlcjogUm91dGVyLCBwcm90ZWN0ZWQgZ3VhcmQ6IEFjdGlsaXR5R3VhcmQpIHtcbiAgICBzdXBlcihyb3V0ZXIsIGd1YXJkKTtcbiAgfVxuXG4gIHByb3RlY3RlZCBjb25maWcoKTogVGFiIHtcbiAgICByZXR1cm4gdGhpcy50YWJDb25maWc7XG4gIH1cbn1cbiJdfQ==