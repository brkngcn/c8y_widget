import { __awaiter } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { GainsightService, gettext, Status } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { Subject } from 'rxjs';
export class DeleteAssetsModalComponent {
    constructor(translateService, gainsightService) {
        this.translateService = translateService;
        this.gainsightService = gainsightService;
        this.showWithCascadeCheckbox = true;
        this.showWithDeviceUserCheckbox = false;
        this.closeSubject = new Subject();
        this.labels = { ok: gettext('Delete'), cancel: gettext('Cancel') };
        this.title = gettext('Delete');
        this.status = Status.DANGER;
        this.config = {
            cascade: false,
            withDeviceUser: false
        };
    }
    ngOnInit() {
        this.message = this.translateService.instant(gettext('You are about to delete asset: "{{name}}". This operation is irreversible. Do you want to proceed?'), { name: this.asset.name });
    }
    ngAfterViewInit() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modalRef.result;
                this.onClose();
            }
            catch (error) {
                this.onDismiss();
            }
        });
    }
    onClose() {
        this.gainsightService.triggerEvent('deleteAssetsModal:AssetDeleted');
        this.closeSubject.next(this.config);
        this.closeSubject.complete();
    }
    onDismiss() {
        this.gainsightService.triggerEvent('deleteAssetsModal:Cancel');
        this.closeSubject.complete();
    }
}
DeleteAssetsModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-delete-assets-modal',
                template: "<c8y-confirm-modal [title]=\"title\" [status]=\"status\" [labels]=\"labels\" #modalRef>\n  <form #assetsForm=\"ngForm\">\n    <p class=\"text-wrap m-b-16\">\n      {{ message | translate }}\n    </p>\n    <c8y-form-group *ngIf=\"showWithCascadeCheckbox\" class=\"m-b-0\">\n      <label title=\"{{ 'Delete devices' | translate }}\" class=\"c8y-checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"cascade\" [(ngModel)]=\"config.cascade\"\n          c8yProductExperience\n          [actionName]=\"'deleteAssetsModal:DeleteDevices'\"\n          [disabled]=\"config?.withDeviceUser\"\n        />\n        <span></span>\n        <span>\n          {{ 'Also delete all devices inside selected asset and its subassets.' | translate }}\n        </span>\n      </label>\n    </c8y-form-group>\n    <c8y-form-group *ngIf=\"showWithDeviceUserCheckbox\" class=\"m-b-0\">\n      <label title=\"{{ 'Delete associated device owner' | translate }}\" class=\"c8y-checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"withDeviceUser\" [(ngModel)]=\"config.withDeviceUser\"\n          c8yProductExperience\n          [actionName]=\"'deleteAssetsModal:DeleteDeviceOwner'\"\n          [disabled]=\"config?.cascade\"\n        />\n        <span></span>\n        <span>\n          {{ 'Also delete associated device owner.' | translate }}\n        </span>\n      </label>\n    </c8y-form-group>\n  </form>\n</c8y-confirm-modal>\n"
            },] }
];
DeleteAssetsModalComponent.ctorParameters = () => [
    { type: TranslateService },
    { type: GainsightService }
];
DeleteAssetsModalComponent.propDecorators = {
    showWithCascadeCheckbox: [{ type: Input }],
    showWithDeviceUserCheckbox: [{ type: Input }],
    asset: [{ type: Input }],
    modalRef: [{ type: ViewChild, args: ['modalRef', { static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsZXRlLWFzc2V0cy1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zdWItYXNzZXRzL2RlbGV0ZS1hc3NldHMtbW9kYWwvZGVsZXRlLWFzc2V0cy1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQ2tCLGdCQUFnQixFQUFFLE9BQU8sRUFDaEQsTUFBTSxFQUVQLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQU8vQixNQUFNLE9BQU8sMEJBQTBCO0lBZXJDLFlBQ1UsZ0JBQWtDLEVBQ2xDLGdCQUFrQztRQURsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFoQm5DLDRCQUF1QixHQUFZLElBQUksQ0FBQztRQUN4QywrQkFBMEIsR0FBWSxLQUFLLENBQUM7UUFHckQsaUJBQVksR0FBbUMsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUM3RCxXQUFNLEdBQWdCLEVBQUUsRUFBRSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDM0UsVUFBSyxHQUFXLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNsQyxXQUFNLEdBQWUsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNuQyxXQUFNLEdBQTBCO1lBQzlCLE9BQU8sRUFBRSxLQUFLO1lBQ2QsY0FBYyxFQUFFLEtBQUs7U0FDdEIsQ0FBQztJQU9GLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUMxQyxPQUFPLENBQ0wsb0dBQW9HLENBQ3JHLEVBQ0QsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFSyxlQUFlOztZQUNuQixJQUFJO2dCQUNGLE1BQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUNoQjtZQUFDLE9BQU8sS0FBSyxFQUFFO2dCQUNkLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQzthQUNsQjtRQUNILENBQUM7S0FBQTtJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7UUFDckUsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELFNBQVM7UUFDUCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDL0QsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMvQixDQUFDOzs7WUFwREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSx5QkFBeUI7Z0JBQ25DLGs3Q0FBbUQ7YUFDcEQ7OztZQVBRLGdCQUFnQjtZQUpBLGdCQUFnQjs7O3NDQWF0QyxLQUFLO3lDQUNMLEtBQUs7b0JBQ0wsS0FBSzt1QkFDTCxTQUFTLFNBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQge1xuICBDb25maXJtTW9kYWxDb21wb25lbnQsIEdhaW5zaWdodFNlcnZpY2UsIGdldHRleHQsIE1vZGFsTGFiZWxzLFxuICBTdGF0dXMsXG4gIFN0YXR1c1R5cGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBEZWxldGVNb2RhbENoZWNrYm94ZXMgfSBmcm9tICcuL2RlbGV0ZS1hc3NldHMtbW9kYWwubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGVsZXRlLWFzc2V0cy1tb2RhbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9kZWxldGUtYXNzZXRzLW1vZGFsLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBEZWxldGVBc3NldHNNb2RhbENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIHNob3dXaXRoQ2FzY2FkZUNoZWNrYm94OiBib29sZWFuID0gdHJ1ZTtcbiAgQElucHV0KCkgc2hvd1dpdGhEZXZpY2VVc2VyQ2hlY2tib3g6IGJvb2xlYW4gPSBmYWxzZTtcbiAgQElucHV0KCkgYXNzZXQ6IElNYW5hZ2VkT2JqZWN0O1xuICBAVmlld0NoaWxkKCdtb2RhbFJlZicsIHsgc3RhdGljOiBmYWxzZSB9KSBtb2RhbFJlZjogQ29uZmlybU1vZGFsQ29tcG9uZW50O1xuICBjbG9zZVN1YmplY3Q6IFN1YmplY3Q8RGVsZXRlTW9kYWxDaGVja2JveGVzPiA9IG5ldyBTdWJqZWN0KCk7XG4gIGxhYmVsczogTW9kYWxMYWJlbHMgPSB7IG9rOiBnZXR0ZXh0KCdEZWxldGUnKSwgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwnKSB9O1xuICB0aXRsZTogc3RyaW5nID0gZ2V0dGV4dCgnRGVsZXRlJyk7XG4gIHN0YXR1czogU3RhdHVzVHlwZSA9IFN0YXR1cy5EQU5HRVI7XG4gIGNvbmZpZzogRGVsZXRlTW9kYWxDaGVja2JveGVzID0ge1xuICAgIGNhc2NhZGU6IGZhbHNlLFxuICAgIHdpdGhEZXZpY2VVc2VyOiBmYWxzZVxuICB9O1xuICBtZXNzYWdlOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB0cmFuc2xhdGVTZXJ2aWNlOiBUcmFuc2xhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgZ2FpbnNpZ2h0U2VydmljZTogR2FpbnNpZ2h0U2VydmljZVxuICApIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubWVzc2FnZSA9IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KFxuICAgICAgZ2V0dGV4dChcbiAgICAgICAgJ1lvdSBhcmUgYWJvdXQgdG8gZGVsZXRlIGFzc2V0OiBcInt7bmFtZX19XCIuIFRoaXMgb3BlcmF0aW9uIGlzIGlycmV2ZXJzaWJsZS4gRG8geW91IHdhbnQgdG8gcHJvY2VlZD8nXG4gICAgICApLFxuICAgICAgeyBuYW1lOiB0aGlzLmFzc2V0Lm5hbWUgfVxuICAgICk7XG4gIH1cblxuICBhc3luYyBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubW9kYWxSZWYucmVzdWx0O1xuICAgICAgdGhpcy5vbkNsb3NlKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMub25EaXNtaXNzKCk7XG4gICAgfVxuICB9XG5cbiAgb25DbG9zZSgpIHtcbiAgICB0aGlzLmdhaW5zaWdodFNlcnZpY2UudHJpZ2dlckV2ZW50KCdkZWxldGVBc3NldHNNb2RhbDpBc3NldERlbGV0ZWQnKTtcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5uZXh0KHRoaXMuY29uZmlnKTtcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5jb21wbGV0ZSgpO1xuICB9XG5cbiAgb25EaXNtaXNzKCkge1xuICAgIHRoaXMuZ2FpbnNpZ2h0U2VydmljZS50cmlnZ2VyRXZlbnQoJ2RlbGV0ZUFzc2V0c01vZGFsOkNhbmNlbCcpO1xuICAgIHRoaXMuY2xvc2VTdWJqZWN0LmNvbXBsZXRlKCk7XG4gIH1cbn1cbiJdfQ==