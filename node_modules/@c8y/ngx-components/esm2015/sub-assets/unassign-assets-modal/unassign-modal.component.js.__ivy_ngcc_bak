import { __awaiter } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { GainsightService, gettext, Status } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { Subject } from 'rxjs';
export class UnassignModalComponent {
    constructor(translateService, gainsightService) {
        this.translateService = translateService;
        this.gainsightService = gainsightService;
        this.closeSubject = new Subject();
        this.labels = { ok: gettext('Unassign'), cancel: gettext('Cancel') };
        this.title = gettext('Unassign asset');
        this.status = Status.WARNING;
    }
    ngOnInit() {
        this.message = this.translateService.instant(gettext('You are about to unassign asset "{{name}}". Do you want to proceed?'), { name: this.asset.name });
    }
    ngAfterViewInit() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.modalRef.result;
                this.onClose();
            }
            catch (error) {
                this.onDismiss();
            }
        });
    }
    onClose() {
        this.gainsightService.triggerEvent('unassignAssetModal:AssetUnassigned');
        this.closeSubject.next(true);
        this.closeSubject.complete();
    }
    onDismiss() {
        this.gainsightService.triggerEvent('unassignAssetModal:Cancel');
        this.closeSubject.complete();
    }
}
UnassignModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-unassign-modal',
                template: "<c8y-confirm-modal [title]=\"title\" [status]=\"status\" [labels]=\"labels\" #modalRef>\n  <span>{{ message | translate }}</span>\n</c8y-confirm-modal>\n"
            },] }
];
UnassignModalComponent.ctorParameters = () => [
    { type: TranslateService },
    { type: GainsightService }
];
UnassignModalComponent.propDecorators = {
    asset: [{ type: Input }],
    modalRef: [{ type: ViewChild, args: ['modalRef', { static: false },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5hc3NpZ24tbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3ViLWFzc2V0cy91bmFzc2lnbi1hc3NldHMtbW9kYWwvdW5hc3NpZ24tbW9kYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUQsT0FBTyxFQUVMLGdCQUFnQixFQUNoQixPQUFPLEVBRVAsTUFBTSxFQUVQLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQU0vQixNQUFNLE9BQU8sc0JBQXNCO0lBU2pDLFlBQ1UsZ0JBQWtDLEVBQ2xDLGdCQUFrQztRQURsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFQNUMsaUJBQVksR0FBcUIsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUMvQyxXQUFNLEdBQWdCLEVBQUUsRUFBRSxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDN0UsVUFBSyxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ2xDLFdBQU0sR0FBZSxNQUFNLENBQUMsT0FBTyxDQUFDO0lBTXBDLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxDQUMxQyxPQUFPLENBQUMscUVBQXFFLENBQUMsRUFDOUUsRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FDMUIsQ0FBQztJQUNKLENBQUM7SUFFSyxlQUFlOztZQUNuQixJQUFJO2dCQUNGLE1BQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUM7Z0JBQzNCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQzthQUNoQjtZQUFDLE9BQU8sS0FBSyxFQUFFO2dCQUNkLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQzthQUNsQjtRQUNILENBQUM7S0FBQTtJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLG9DQUFvQyxDQUFDLENBQUM7UUFDekUsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7UUFDN0IsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMvQixDQUFDO0lBRUQsU0FBUztRQUNQLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsMkJBQTJCLENBQUMsQ0FBQztRQUNoRSxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7OztZQTVDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIscUtBQThDO2FBQy9DOzs7WUFOUSxnQkFBZ0I7WUFOdkIsZ0JBQWdCOzs7b0JBY2YsS0FBSzt1QkFDTCxTQUFTLFNBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQge1xuICBDb25maXJtTW9kYWxDb21wb25lbnQsXG4gIEdhaW5zaWdodFNlcnZpY2UsXG4gIGdldHRleHQsXG4gIE1vZGFsTGFiZWxzLFxuICBTdGF0dXMsXG4gIFN0YXR1c1R5cGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS11bmFzc2lnbi1tb2RhbCcsXG4gIHRlbXBsYXRlVXJsOiAnLi91bmFzc2lnbi1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVW5hc3NpZ25Nb2RhbENvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGFzc2V0OiBJTWFuYWdlZE9iamVjdDtcbiAgQFZpZXdDaGlsZCgnbW9kYWxSZWYnLCB7IHN0YXRpYzogZmFsc2UgfSkgbW9kYWxSZWY6IENvbmZpcm1Nb2RhbENvbXBvbmVudDtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBjbG9zZVN1YmplY3Q6IFN1YmplY3Q8Ym9vbGVhbj4gPSBuZXcgU3ViamVjdCgpO1xuICBsYWJlbHM6IE1vZGFsTGFiZWxzID0geyBvazogZ2V0dGV4dCgnVW5hc3NpZ24nKSwgY2FuY2VsOiBnZXR0ZXh0KCdDYW5jZWwnKSB9O1xuICB0aXRsZSA9IGdldHRleHQoJ1VuYXNzaWduIGFzc2V0Jyk7XG4gIHN0YXR1czogU3RhdHVzVHlwZSA9IFN0YXR1cy5XQVJOSU5HO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgdHJhbnNsYXRlU2VydmljZTogVHJhbnNsYXRlU2VydmljZSxcbiAgICBwcml2YXRlIGdhaW5zaWdodFNlcnZpY2U6IEdhaW5zaWdodFNlcnZpY2VcbiAgKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLm1lc3NhZ2UgPSB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChcbiAgICAgIGdldHRleHQoJ1lvdSBhcmUgYWJvdXQgdG8gdW5hc3NpZ24gYXNzZXQgXCJ7e25hbWV9fVwiLiBEbyB5b3Ugd2FudCB0byBwcm9jZWVkPycpLFxuICAgICAgeyBuYW1lOiB0aGlzLmFzc2V0Lm5hbWUgfVxuICAgICk7XG4gIH1cblxuICBhc3luYyBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubW9kYWxSZWYucmVzdWx0O1xuICAgICAgdGhpcy5vbkNsb3NlKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIHRoaXMub25EaXNtaXNzKCk7XG4gICAgfVxuICB9XG5cbiAgb25DbG9zZSgpIHtcbiAgICB0aGlzLmdhaW5zaWdodFNlcnZpY2UudHJpZ2dlckV2ZW50KCd1bmFzc2lnbkFzc2V0TW9kYWw6QXNzZXRVbmFzc2lnbmVkJyk7XG4gICAgdGhpcy5jbG9zZVN1YmplY3QubmV4dCh0cnVlKTtcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5jb21wbGV0ZSgpO1xuICB9XG5cbiAgb25EaXNtaXNzKCkge1xuICAgIHRoaXMuZ2FpbnNpZ2h0U2VydmljZS50cmlnZ2VyRXZlbnQoJ3VuYXNzaWduQXNzZXRNb2RhbDpDYW5jZWwnKTtcbiAgICB0aGlzLmNsb3NlU3ViamVjdC5jb21wbGV0ZSgpO1xuICB9XG59XG4iXX0=