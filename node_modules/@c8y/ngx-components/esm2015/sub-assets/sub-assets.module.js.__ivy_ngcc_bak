import { NgModule } from '@angular/core';
import { CoreModule, gettext, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { AddGroupModule } from './add-group/add-group.module';
import { AssetTypeCellRendererComponent } from './columns/asset-type.cell-renderer.component';
import { DeleteAssetsModalComponent } from './delete-assets-modal/delete-assets-modal.component';
import { GroupInfoComponent } from './group-info.component';
import { GroupsComponent } from './groups.component';
import { SubAssetsGridComponent } from './sub-assets-grid.component';
import { SubAssetsComponent } from './sub-assets.component';
import { SubAssetsService } from './sub-assets.service';
import { UnassignModalComponent } from './unassign-assets-modal/unassign-modal.component';
import { AssignDevicesComponent } from './assign-devices/assign-devices.component';
import { AssignChildDevicesComponent } from './assign-devices/assign-child-devices.component';
import { AssetPropertiesComponent } from './asset-properties.component';
import { AssetPropertiesItemComponent } from './asset-properties-item.component';
const ɵ0 = [
    {
        context: ViewContext.Group,
        path: 'subassets',
        priority: 1000,
        icon: 'c8y-group-open',
        label: gettext('Subassets'),
        component: SubAssetsComponent,
        featureId: 'subassets'
    },
    {
        path: 'group',
        component: GroupsComponent
    }
];
export class SubAssetsModule {
}
SubAssetsModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    SubAssetsComponent,
                    SubAssetsGridComponent,
                    AssetTypeCellRendererComponent,
                    GroupsComponent,
                    GroupInfoComponent,
                    DeleteAssetsModalComponent,
                    UnassignModalComponent,
                    AssignDevicesComponent,
                    AssignChildDevicesComponent,
                    AssetPropertiesComponent,
                    AssetPropertiesItemComponent
                ],
                imports: [CoreModule, DeviceGridModule, AddGroupModule, PopoverModule],
                entryComponents: [
                    SubAssetsComponent,
                    AssetTypeCellRendererComponent,
                    GroupsComponent,
                    DeleteAssetsModalComponent,
                    UnassignModalComponent
                ],
                exports: [],
                providers: [
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    SubAssetsService
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWFzc2V0cy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zdWItYXNzZXRzL3N1Yi1hc3NldHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLFdBQVcsRUFBZ0IsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNuRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzlELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQzlGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUMxRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNuRixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxpREFBaUQsQ0FBQztBQUM5RixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztXQTRCakU7SUFDUjtRQUNFLE9BQU8sRUFBRSxXQUFXLENBQUMsS0FBSztRQUMxQixJQUFJLEVBQUUsV0FBVztRQUNqQixRQUFRLEVBQUUsSUFBSTtRQUNkLElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDM0IsU0FBUyxFQUFFLGtCQUFrQjtRQUM3QixTQUFTLEVBQUUsV0FBVztLQUN2QjtJQUNEO1FBQ0UsSUFBSSxFQUFFLE9BQU87UUFDYixTQUFTLEVBQUUsZUFBZTtLQUMzQjtDQUNGO0FBTVAsTUFBTSxPQUFPLGVBQWU7OztZQTlDM0IsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixrQkFBa0I7b0JBQ2xCLHNCQUFzQjtvQkFDdEIsOEJBQThCO29CQUM5QixlQUFlO29CQUNmLGtCQUFrQjtvQkFDbEIsMEJBQTBCO29CQUMxQixzQkFBc0I7b0JBQ3RCLHNCQUFzQjtvQkFDdEIsMkJBQTJCO29CQUMzQix3QkFBd0I7b0JBQ3hCLDRCQUE0QjtpQkFDN0I7Z0JBQ0QsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGNBQWMsRUFBRSxhQUFhLENBQUM7Z0JBQ3RFLGVBQWUsRUFBRTtvQkFDZixrQkFBa0I7b0JBQ2xCLDhCQUE4QjtvQkFDOUIsZUFBZTtvQkFDZiwwQkFBMEI7b0JBQzFCLHNCQUFzQjtpQkFDdkI7Z0JBQ0QsT0FBTyxFQUFFLEVBQUU7Z0JBQ1gsU0FBUyxFQUFFO29CQUNUO3dCQUNFLE9BQU8sRUFBRSxVQUFVO3dCQUNuQixRQUFRLElBY1A7d0JBQ0QsS0FBSyxFQUFFLElBQUk7cUJBQ1o7b0JBQ0QsZ0JBQWdCO2lCQUNqQjthQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmVNb2R1bGUsIGdldHRleHQsIEhPT0tfUk9VVEUsIFZpZXdDb250ZXh0LCBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERldmljZUdyaWRNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2RldmljZS1ncmlkJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgQWRkR3JvdXBNb2R1bGUgfSBmcm9tICcuL2FkZC1ncm91cC9hZGQtZ3JvdXAubW9kdWxlJztcbmltcG9ydCB7IEFzc2V0VHlwZUNlbGxSZW5kZXJlckNvbXBvbmVudCB9IGZyb20gJy4vY29sdW1ucy9hc3NldC10eXBlLmNlbGwtcmVuZGVyZXIuY29tcG9uZW50JztcbmltcG9ydCB7IERlbGV0ZUFzc2V0c01vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9kZWxldGUtYXNzZXRzLW1vZGFsL2RlbGV0ZS1hc3NldHMtbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IEdyb3VwSW5mb0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXAtaW5mby5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3JvdXBzQ29tcG9uZW50IH0gZnJvbSAnLi9ncm91cHMuY29tcG9uZW50JztcbmltcG9ydCB7IFN1YkFzc2V0c0dyaWRDb21wb25lbnQgfSBmcm9tICcuL3N1Yi1hc3NldHMtZ3JpZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3ViQXNzZXRzQ29tcG9uZW50IH0gZnJvbSAnLi9zdWItYXNzZXRzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdWJBc3NldHNTZXJ2aWNlIH0gZnJvbSAnLi9zdWItYXNzZXRzLnNlcnZpY2UnO1xuaW1wb3J0IHsgVW5hc3NpZ25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vdW5hc3NpZ24tYXNzZXRzLW1vZGFsL3VuYXNzaWduLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBc3NpZ25EZXZpY2VzQ29tcG9uZW50IH0gZnJvbSAnLi9hc3NpZ24tZGV2aWNlcy9hc3NpZ24tZGV2aWNlcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXNzaWduQ2hpbGREZXZpY2VzQ29tcG9uZW50IH0gZnJvbSAnLi9hc3NpZ24tZGV2aWNlcy9hc3NpZ24tY2hpbGQtZGV2aWNlcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXNzZXRQcm9wZXJ0aWVzQ29tcG9uZW50IH0gZnJvbSAnLi9hc3NldC1wcm9wZXJ0aWVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBBc3NldFByb3BlcnRpZXNJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9hc3NldC1wcm9wZXJ0aWVzLWl0ZW0uY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU3ViQXNzZXRzQ29tcG9uZW50LFxuICAgIFN1YkFzc2V0c0dyaWRDb21wb25lbnQsXG4gICAgQXNzZXRUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3Vwc0NvbXBvbmVudCxcbiAgICBHcm91cEluZm9Db21wb25lbnQsXG4gICAgRGVsZXRlQXNzZXRzTW9kYWxDb21wb25lbnQsXG4gICAgVW5hc3NpZ25Nb2RhbENvbXBvbmVudCxcbiAgICBBc3NpZ25EZXZpY2VzQ29tcG9uZW50LFxuICAgIEFzc2lnbkNoaWxkRGV2aWNlc0NvbXBvbmVudCxcbiAgICBBc3NldFByb3BlcnRpZXNDb21wb25lbnQsXG4gICAgQXNzZXRQcm9wZXJ0aWVzSXRlbUNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgRGV2aWNlR3JpZE1vZHVsZSwgQWRkR3JvdXBNb2R1bGUsIFBvcG92ZXJNb2R1bGVdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBTdWJBc3NldHNDb21wb25lbnQsXG4gICAgQXNzZXRUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3Vwc0NvbXBvbmVudCxcbiAgICBEZWxldGVBc3NldHNNb2RhbENvbXBvbmVudCxcbiAgICBVbmFzc2lnbk1vZGFsQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX1JPVVRFLFxuICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAge1xuICAgICAgICAgIGNvbnRleHQ6IFZpZXdDb250ZXh0Lkdyb3VwLFxuICAgICAgICAgIHBhdGg6ICdzdWJhc3NldHMnLFxuICAgICAgICAgIHByaW9yaXR5OiAxMDAwLFxuICAgICAgICAgIGljb246ICdjOHktZ3JvdXAtb3BlbicsXG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ1N1YmFzc2V0cycpLFxuICAgICAgICAgIGNvbXBvbmVudDogU3ViQXNzZXRzQ29tcG9uZW50LFxuICAgICAgICAgIGZlYXR1cmVJZDogJ3N1YmFzc2V0cydcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdncm91cCcsXG4gICAgICAgICAgY29tcG9uZW50OiBHcm91cHNDb21wb25lbnRcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICBTdWJBc3NldHNTZXJ2aWNlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU3ViQXNzZXRzTW9kdWxlIHt9XG4iXX0=