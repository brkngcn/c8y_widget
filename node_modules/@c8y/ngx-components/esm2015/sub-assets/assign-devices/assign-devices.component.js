import { __awaiter } from "tslib";
import { Component, EventEmitter, HostListener, Input, Output, TemplateRef, ViewChild } from '@angular/core';
import { InventoryService } from '@c8y/client';
import { AlertService, GainsightService, gettext } from '@c8y/ngx-components';
import { SubAssetsService } from '../sub-assets.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '../sub-assets.service';
import * as ɵngcc3 from '@c8y/client';
import * as ɵngcc4 from '@c8y/ngx-components/device-grid';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@angular/forms';
import * as ɵngcc7 from 'ngx-bootstrap/popover';

const _c0 = ["showDevicesToggle"];
function AssignDevicesComponent_ng_template_19_ng_template_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 14);
    ɵngcc0.ɵɵtext(1, " Displays the button ");
    ɵngcc0.ɵɵelementStart(2, "button", 15);
    ɵngcc0.ɵɵelement(3, "i", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtext(4, " next to target devices with children. Clicking it displays a list with all child devices of the selected target device. ");
    ɵngcc0.ɵɵelementEnd();
} }
function AssignDevicesComponent_ng_template_19_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "label", 9);
    ɵngcc0.ɵɵelementStart(1, "input", 10);
    ɵngcc0.ɵɵlistener("ngModelChange", function AssignDevicesComponent_ng_template_19_Template_input_ngModelChange_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.showChildren = $event; })("click", function AssignDevicesComponent_ng_template_19_Template_input_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); const control_r2 = restoredCtx.headerActionControl; return control_r2.callback(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(2, "span");
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "button", 11);
    ɵngcc0.ɵɵelement(7, "i", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, AssignDevicesComponent_ng_template_19_ng_template_8_Template, 5, 0, "ng-template", null, 13, ɵngcc0.ɵɵtemplateRefExtractor);
} if (rf & 2) {
    const control_r2 = ctx.headerActionControl;
    const _r3 = ɵngcc0.ɵɵreference(9);
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r1.showChildren);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 4, control_r2.text));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("popover", _r3)("outsideClick", true);
} }
const _c1 = function (a0) { return { "btn-pending": a0 }; };
export class AssignDevicesComponent {
    constructor(alert, subAssetsService, inventoryService, gainsightService) {
        this.alert = alert;
        this.subAssetsService = subAssetsService;
        this.inventoryService = inventoryService;
        this.gainsightService = gainsightService;
        this.refresh = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.onShowChildDevices = new EventEmitter();
        this.selectedDevice = new EventEmitter();
        this.pendingStatus = false;
        this.pagination = { pageSize: 20, currentPage: 1 };
        this.selected = [];
        this.canAssignDevice = false;
        this.actionControls = [];
        this.headerActionControls = [];
        this.showChildren = false;
        this.isSelectable = true;
    }
    onEnterKeyDown(event) {
        if (this.selected.length > 0) {
            this.assignDevices();
        }
    }
    onEscapeKeyDown(event) {
        this.onCancel.emit();
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.setNotIncludedInGroupQuery();
            this.canAssignDevice = yield this.subAssetsService.canAssignDevice({
                id: this.currentGroupId
            });
            this.setHeaderActionControls();
        });
    }
    setNotIncludedInGroupQuery() {
        const notIncludedInGroupQuery = { __not: { __bygroupid: this.currentGroupId } };
        this.baseQuery = notIncludedInGroupQuery;
    }
    setHeaderActionControls() {
        const headerActionControls = [];
        const showChildDevices = {
            type: 'DISPLAY_CHILD_DEVICES_BUTTON',
            text: gettext('Display child devices button'),
            template: this.showDevicesToggle,
            callback: () => {
                this.showChildren = !this.showChildren;
                this.setActionControls(this.showChildren);
                this.gainsightService.triggerEvent('assignDevices:DisplayChildDevices');
            }
        };
        headerActionControls.push(showChildDevices);
        this.headerActionControls = headerActionControls;
    }
    setActionControls(showChildren) {
        const actionControls = [];
        const selectChildrenAction = {
            type: 'SHOW_TARGET_CHILD_DEVICES',
            icon: 'enter-bottom',
            text: gettext('Show target child devices'),
            callback: (asset) => this.selectChildren(asset),
            showIf: (asset) => asset.childDevices.references.length > 0
        };
        if (showChildren) {
            actionControls.push(selectChildrenAction);
        }
        this.actionControls = actionControls;
        this.refresh.emit();
    }
    assignDevices() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.canAssignDevice === false) {
                return;
            }
            this.pendingStatus = true;
            try {
                yield this.inventoryService.childAssetsBulkAdd(this.selected, this.currentGroupId);
                this.refresh.emit();
                this.alert.success(gettext('Devices assigned to the group.'));
            }
            catch (error) {
                this.alert.danger(gettext('Could not assign devices to the group'), error);
            }
            this.pendingStatus = false;
            this.selected = [];
            this.onCancel.emit();
        });
    }
    onSelected(selectedDevicesIDs) {
        this.selected = selectedDevicesIDs;
    }
    selectChildren(asset) {
        this.onShowChildDevices.emit(true);
        this.selectedDevice.emit(asset);
    }
}
AssignDevicesComponent.ɵfac = function AssignDevicesComponent_Factory(t) { return new (t || AssignDevicesComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.SubAssetsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.InventoryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.GainsightService)); };
AssignDevicesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AssignDevicesComponent, selectors: [["c8y-assign-devices"]], viewQuery: function AssignDevicesComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5, TemplateRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.showDevicesToggle = _t.first);
    } }, hostBindings: function AssignDevicesComponent_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("keydown.enter", function AssignDevicesComponent_keydown_enter_HostBindingHandler($event) { return ctx.onEnterKeyDown($event); }, false, ɵngcc0.ɵɵresolveDocument)("keydown.escape", function AssignDevicesComponent_keydown_escape_HostBindingHandler($event) { return ctx.onEscapeKeyDown($event); }, false, ɵngcc0.ɵɵresolveDocument);
    } }, inputs: { refresh: "refresh", currentGroupId: "currentGroupId" }, outputs: { onCancel: "onCancel", onShowChildDevices: "onShowChildDevices", selectedDevice: "selectedDevice" }, decls: 21, vars: 32, consts: [[1, "card-block", "flex-no-shrink", "separator-bottom", "col-xs-12", "large-padding", "p-t-24", "p-b-24"], [1, "row"], [1, "col-md-6", "col-md-offset-3", "col-lg-4", "col-lg-offset-4"], [1, "text-center", "text-medium"], [1, "flex-grow", "col-xs-12", "no-gutter", 3, "title", "actionControls", "infiniteScroll", "selectable", "pagination", "refresh", "baseQuery", "headerActionControls", "withChildren", "itemsSelect"], [1, "text-center", "card-footer", "p-24", "separator"], ["type", "button", "c8yProductExperience", "", 1, "btn", "btn-default", 3, "title", "actionName", "click"], ["type", "button", "c8yProductExperience", "", 1, "btn", "btn-primary", 3, "ngClass", "title", "disabled", "actionName", "click"], ["showDevicesToggle", ""], [1, "c8y-switch"], ["type", "checkbox", 3, "ngModel", "ngModelChange", "click"], ["placement", "bottom", 1, "btn-clean", "m-r-8", 3, "popover", "outsideClick"], ["c8yIcon", "question-circle-o", 1, "text-primary"], ["childDevicesPop", ""], ["translate", ""], [1, "btn", "btn-xs", "btn-icon", "btn-default", "no-pointer"], [1, "text-primary", "dlt-c8y-icon-enter-bottom"]], template: function AssignDevicesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "h4", 3);
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "c8y-device-grid", 4);
        ɵngcc0.ɵɵlistener("itemsSelect", function AssignDevicesComponent_Template_c8y_device_grid_itemsSelect_6_listener($event) { return ctx.onSelected($event); });
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵelementStart(9, "button", 6);
        ɵngcc0.ɵɵlistener("click", function AssignDevicesComponent_Template_button_click_9_listener() { return ctx.onCancel.emit(); });
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementStart(11, "span");
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "button", 7);
        ɵngcc0.ɵɵlistener("click", function AssignDevicesComponent_Template_button_click_14_listener() { return ctx.assignDevices(); });
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementStart(16, "span");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(19, AssignDevicesComponent_ng_template_19_Template, 10, 6, "ng-template", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 18, "Assign devices"), " ");
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(7, 20, "Select devices"))("actionControls", ctx.actionControls)("infiniteScroll", "auto")("selectable", ctx.isSelectable)("pagination", ctx.pagination)("refresh", ctx.refresh)("baseQuery", ctx.baseQuery)("headerActionControls", ctx.headerActionControls)("withChildren", true);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 22, "Cancel"));
        ɵngcc0.ɵɵproperty("actionName", "assignDevices:Cancel");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 24, "Cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(15, 26, "Assign"));
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(30, _c1, ctx.pendingStatus))("disabled", ctx.selected.length === 0 || !ctx.canAssignDevice)("actionName", "assignDevices:Assign");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(18, 28, "Assign"));
    } }, directives: [ɵngcc4.DeviceGridComponent, ɵngcc1.ProductExperienceDirective, ɵngcc5.NgClass, ɵngcc6.CheckboxControlValueAccessor, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc7.PopoverDirective, ɵngcc1.IconDirective, ɵngcc1.C8yTranslateDirective], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
AssignDevicesComponent.ctorParameters = () => [
    { type: AlertService },
    { type: SubAssetsService },
    { type: InventoryService },
    { type: GainsightService }
];
AssignDevicesComponent.propDecorators = {
    currentGroupId: [{ type: Input }],
    refresh: [{ type: Input }],
    onCancel: [{ type: Output }],
    onShowChildDevices: [{ type: Output }],
    selectedDevice: [{ type: Output }],
    showDevicesToggle: [{ type: ViewChild, args: ['showDevicesToggle', { read: TemplateRef },] }],
    onEnterKeyDown: [{ type: HostListener, args: ['document:keydown.enter', ['$event'],] }],
    onEscapeKeyDown: [{ type: HostListener, args: ['document:keydown.escape', ['$event'],] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AssignDevicesComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-assign-devices',
                template: "<div class=\"card-block flex-no-shrink separator-bottom col-xs-12 large-padding p-t-24 p-b-24\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center text-medium\">\n        {{ 'Assign devices' | translate }}\n      </h4>\n    </div>\n  </div>\n</div>\n<c8y-device-grid\n  [title]=\"'Select devices' | translate\"\n  [actionControls]=\"actionControls\"\n  [infiniteScroll]=\"'auto'\"\n  [selectable]=\"isSelectable\"\n  [pagination]=\"pagination\"\n  (itemsSelect)=\"onSelected($event)\"\n  [refresh]=\"refresh\"\n  [baseQuery]=\"baseQuery\"\n  [headerActionControls]=\"headerActionControls\"\n  [withChildren]=\"true\"\n  class=\"flex-grow col-xs-12 no-gutter\"\n>\n</c8y-device-grid>\n\n<div class=\"text-center card-footer p-24 separator\">\n  <button\n    (click)=\"onCancel.emit()\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Cancel' | translate }}\"\n    c8yProductExperience\n    [actionName]=\"'assignDevices:Cancel'\"\n  >\n    <span>{{ 'Cancel' | translate }}</span>\n  </button>\n  <button\n    (click)=\"assignDevices()\"\n    type=\"button\"\n    class=\"btn btn-primary\"\n    [ngClass]=\"{ 'btn-pending': pendingStatus }\"\n    title=\"{{ 'Assign' | translate }}\"\n    [disabled]=\"selected.length === 0 || !canAssignDevice\"\n    c8yProductExperience\n    [actionName]=\"'assignDevices:Assign'\"\n  >\n    <span>{{ 'Assign' | translate }}</span>\n  </button>\n</div>\n\n<ng-template #showDevicesToggle let-control=\"headerActionControl\">\n  <label class=\"c8y-switch\">\n    <input type=\"checkbox\" [(ngModel)]=\"showChildren\" (click)=\"control.callback()\" />\n    <span></span>\n    <span>{{ control.text | translate }}</span>\n  </label>\n  <button\n    class=\"btn-clean m-r-8\"\n    [popover]=\"childDevicesPop\"\n    placement=\"bottom\"\n    [outsideClick]=\"true\"\n  >\n    <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n  </button>\n  <ng-template #childDevicesPop>\n    <span translate>\n      Displays the button\n      <button class=\"btn btn-xs btn-icon btn-default no-pointer\">\n        <i class=\"text-primary dlt-c8y-icon-enter-bottom\"></i>\n      </button>\n      next to target devices with children. Clicking it displays a list with all child devices of\n      the selected target device.\n    </span>\n  </ng-template>\n</ng-template>\n"
            }]
    }], function () { return [{ type: ɵngcc1.AlertService }, { type: ɵngcc2.SubAssetsService }, { type: ɵngcc3.InventoryService }, { type: ɵngcc1.GainsightService }]; }, { refresh: [{
            type: Input
        }], onCancel: [{
            type: Output
        }], onShowChildDevices: [{
            type: Output
        }], selectedDevice: [{
            type: Output
        }], onEnterKeyDown: [{
            type: HostListener,
            args: ['document:keydown.enter', ['$event']]
        }], onEscapeKeyDown: [{
            type: HostListener,
            args: ['document:keydown.escape', ['$event']]
        }], currentGroupId: [{
            type: Input
        }], showDevicesToggle: [{
            type: ViewChild,
            args: ['showDevicesToggle', { read: TemplateRef }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,