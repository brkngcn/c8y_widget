import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { AlertService, C8yJSONSchema, gettext, FilesService } from '@c8y/ngx-components';
export class AssetPropertiesItemComponent {
    constructor(alert, c8yJsonSchemaService, filesService) {
        this.alert = alert;
        this.c8yJsonSchemaService = c8yJsonSchemaService;
        this.filesService = filesService;
    }
    ngOnChanges(changes) {
        return __awaiter(this, void 0, void 0, function* () {
            if (changes.isEdit) {
                this.resolveJsonSchema();
                yield this.resolveFile();
            }
        });
    }
    resolveFile() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.file) {
                try {
                    const imageFile = yield this.filesService.getFile(this.file);
                    this.previewImage = yield this.getPreviewIfImage(imageFile);
                }
                catch (ex) {
                    this.alert.danger(gettext('File could not be loaded.'));
                }
            }
        });
    }
    resolveJsonSchema() {
        if (this.jsonSchema) {
            const fieldConfig = this.c8yJsonSchemaService.toFieldConfig(this.jsonSchema, this.jsonSchema);
            this.form = new FormGroup({});
            this.fields = [fieldConfig];
            this.model = {
                [this.key]: this.value
            };
        }
    }
    getPreviewIfImage(imageFile) {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.filesService.haveValidExtensions(imageFile, 'image')) {
                return this.filesService.toBase64(imageFile);
            }
        });
    }
}
AssetPropertiesItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-asset-properties-item',
                template: "<ng-container [ngSwitch]=\"type\" *ngIf=\"!isEdit\">\n  <ng-container *ngSwitchCase=\"'date'\">\n    {{ value | c8yDate: 'fullDate' }}\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'file'\">\n    <ng-container *ngIf=\"file\">\n      <img *ngIf=\"previewImage\" [src]=\"previewImage\" class=\"img-responsive\" />\n      <button\n        *ngIf=\"!previewImage\"\n        (click)=\"filesService.download(file)\"\n        type=\"button\"\n        title=\"{{ 'Download' | translate }} {{ file.name }}\"\n        class=\"btn btn-clean text-truncate p-0\"\n      >\n        {{ file.name }}\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"!file\">\n      {{ 'No file attached.' | translate }}\n    </ng-container>\n  </ng-container>\n  <ng-container *ngSwitchCase=\"'object'\">\n    <ul class=\"list-unstyled c8y-custom-properties\">\n      <li\n        *ngFor=\"let prop of complex; let i = index\"\n        [ngClass]=\"{ 'separator-top-bottom': i === 0, 'separator-bottom': i > 0 }\"\n        class=\"p-t-4 p-b-4 flex-row text-nowrap\"\n      >\n        <label class=\"small m-b-0 m-r-8\" [ngClass]=\"{ 'a-s-start': prop.file }\">\n          {{ prop.label | humanize }}\n        </label>\n        <span class=\"m-l-auto\" style=\"max-width: {{ prop.file ? '50%' : '100%' }}\">\n          <c8y-asset-properties-item\n            [file]=\"prop.file\"\n            [key]=\"prop.key\"\n            [type]=\"prop.type\"\n            [value]=\"prop.value\"\n          ></c8y-asset-properties-item>\n        </span>\n      </li>\n    </ul>\n  </ng-container>\n  <!--  \n  <ng-container *ngSwitchCase=\"'boolean'\">\n      <input type=\"checkbox\" [checked]=\"value\" [disabled]=\"true\" />\n    </ng-container>\n  -->\n  <ng-container *ngSwitchDefault>\n    <p>{{ (value | translate) || ('Undefined' | translate) }}</p>\n  </ng-container>\n</ng-container>\n<formly-form *ngIf=\"isEdit\" [form]=\"form\" [fields]=\"fields\" [model]=\"model\"></formly-form>\n"
            },] }
];
AssetPropertiesItemComponent.ctorParameters = () => [
    { type: AlertService },
    { type: C8yJSONSchema },
    { type: FilesService }
];
AssetPropertiesItemComponent.propDecorators = {
    key: [{ type: Input }],
    value: [{ type: Input }],
    label: [{ type: Input }],
    type: [{ type: Input }],
    file: [{ type: Input }],
    complex: [{ type: Input }],
    isEdit: [{ type: Input }],
    jsonSchema: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXQtcHJvcGVydGllcy1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3N1Yi1hc3NldHMvYXNzZXQtcHJvcGVydGllcy1pdGVtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQTRCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUUzQyxPQUFPLEVBQUUsWUFBWSxFQUFFLGFBQWEsRUFBRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFTekYsTUFBTSxPQUFPLDRCQUE0QjtJQXVCdkMsWUFDVSxLQUFtQixFQUNuQixvQkFBbUMsRUFDcEMsWUFBMEI7UUFGekIsVUFBSyxHQUFMLEtBQUssQ0FBYztRQUNuQix5QkFBb0IsR0FBcEIsb0JBQW9CLENBQWU7UUFDcEMsaUJBQVksR0FBWixZQUFZLENBQWM7SUFDaEMsQ0FBQztJQUVFLFdBQVcsQ0FBQyxPQUFzQjs7WUFDdEMsSUFBSSxPQUFPLENBQUMsTUFBTSxFQUFFO2dCQUNsQixJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztnQkFDekIsTUFBTSxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7YUFDMUI7UUFDSCxDQUFDO0tBQUE7SUFFYSxXQUFXOztZQUN2QixJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7Z0JBQ2IsSUFBSTtvQkFDRixNQUFNLFNBQVMsR0FBRyxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztvQkFDN0QsSUFBSSxDQUFDLFlBQVksR0FBRyxNQUFNLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztpQkFDN0Q7Z0JBQUMsT0FBTyxFQUFFLEVBQUU7b0JBQ1gsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLDJCQUEyQixDQUFDLENBQUMsQ0FBQztpQkFDekQ7YUFDRjtRQUNILENBQUM7S0FBQTtJQUVPLGlCQUFpQjtRQUN2QixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztZQUM5RixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksU0FBUyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztZQUM1QixJQUFJLENBQUMsS0FBSyxHQUFHO2dCQUNYLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLO2FBQ3ZCLENBQUM7U0FDSDtJQUNILENBQUM7SUFFYSxpQkFBaUIsQ0FBQyxTQUFlOztZQUM3QyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsbUJBQW1CLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxFQUFFO2dCQUM3RCxPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLFNBQVMsQ0FBQyxDQUFDO2FBQzlDO1FBQ0gsQ0FBQztLQUFBOzs7WUFsRUYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSwyQkFBMkI7Z0JBQ3JDLDI3REFBcUQ7YUFDdEQ7OztZQVJRLFlBQVk7WUFBRSxhQUFhO1lBQVcsWUFBWTs7O2tCQVV4RCxLQUFLO29CQUVMLEtBQUs7b0JBRUwsS0FBSzttQkFFTCxLQUFLO21CQUVMLEtBQUs7c0JBRUwsS0FBSztxQkFFTCxLQUFLO3lCQUVMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0QmluYXJ5IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBDOHlKU09OU2NoZW1hLCBnZXR0ZXh0LCBGaWxlc1NlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEZvcm1seUZpZWxkQ29uZmlnIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBBc3NldFByb3BlcnRpZXNJdGVtIH0gZnJvbSAnLi9hc3NldC1wcm9wZXJ0aWVzLm1vZGVsJztcbmltcG9ydCB7IEpTT05TY2hlbWE3IH0gZnJvbSAnanNvbi1zY2hlbWEnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktYXNzZXQtcHJvcGVydGllcy1pdGVtJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Fzc2V0LXByb3BlcnRpZXMtaXRlbS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQXNzZXRQcm9wZXJ0aWVzSXRlbUNvbXBvbmVudCBpbXBsZW1lbnRzIEFzc2V0UHJvcGVydGllc0l0ZW0sIE9uQ2hhbmdlcyB7XG4gIEBJbnB1dCgpXG4gIGtleTogc3RyaW5nO1xuICBASW5wdXQoKVxuICB2YWx1ZTogYW55O1xuICBASW5wdXQoKVxuICBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKVxuICB0eXBlOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGZpbGU6IElNYW5hZ2VkT2JqZWN0QmluYXJ5O1xuICBASW5wdXQoKVxuICBjb21wbGV4OiBBc3NldFByb3BlcnRpZXNJdGVtW107XG4gIEBJbnB1dCgpXG4gIGlzRWRpdDogYm9vbGVhbjtcbiAgQElucHV0KClcbiAganNvblNjaGVtYTogSlNPTlNjaGVtYTc7XG5cbiAgZm9ybTogRm9ybUdyb3VwO1xuICBmaWVsZHM6IEZvcm1seUZpZWxkQ29uZmlnW107XG4gIG1vZGVsOiBhbnk7XG4gIHByZXZpZXdJbWFnZTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFsZXJ0OiBBbGVydFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBjOHlKc29uU2NoZW1hU2VydmljZTogQzh5SlNPTlNjaGVtYSxcbiAgICBwdWJsaWMgZmlsZXNTZXJ2aWNlOiBGaWxlc1NlcnZpY2VcbiAgKSB7fVxuXG4gIGFzeW5jIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBpZiAoY2hhbmdlcy5pc0VkaXQpIHtcbiAgICAgIHRoaXMucmVzb2x2ZUpzb25TY2hlbWEoKTtcbiAgICAgIGF3YWl0IHRoaXMucmVzb2x2ZUZpbGUoKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGFzeW5jIHJlc29sdmVGaWxlKCkge1xuICAgIGlmICh0aGlzLmZpbGUpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGltYWdlRmlsZSA9IGF3YWl0IHRoaXMuZmlsZXNTZXJ2aWNlLmdldEZpbGUodGhpcy5maWxlKTtcbiAgICAgICAgdGhpcy5wcmV2aWV3SW1hZ2UgPSBhd2FpdCB0aGlzLmdldFByZXZpZXdJZkltYWdlKGltYWdlRmlsZSk7XG4gICAgICB9IGNhdGNoIChleCkge1xuICAgICAgICB0aGlzLmFsZXJ0LmRhbmdlcihnZXR0ZXh0KCdGaWxlIGNvdWxkIG5vdCBiZSBsb2FkZWQuJykpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgcmVzb2x2ZUpzb25TY2hlbWEoKSB7XG4gICAgaWYgKHRoaXMuanNvblNjaGVtYSkge1xuICAgICAgY29uc3QgZmllbGRDb25maWcgPSB0aGlzLmM4eUpzb25TY2hlbWFTZXJ2aWNlLnRvRmllbGRDb25maWcodGhpcy5qc29uU2NoZW1hLCB0aGlzLmpzb25TY2hlbWEpO1xuICAgICAgdGhpcy5mb3JtID0gbmV3IEZvcm1Hcm91cCh7fSk7XG4gICAgICB0aGlzLmZpZWxkcyA9IFtmaWVsZENvbmZpZ107XG4gICAgICB0aGlzLm1vZGVsID0ge1xuICAgICAgICBbdGhpcy5rZXldOiB0aGlzLnZhbHVlXG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgYXN5bmMgZ2V0UHJldmlld0lmSW1hZ2UoaW1hZ2VGaWxlOiBGaWxlKSB7XG4gICAgaWYgKHRoaXMuZmlsZXNTZXJ2aWNlLmhhdmVWYWxpZEV4dGVuc2lvbnMoaW1hZ2VGaWxlLCAnaW1hZ2UnKSkge1xuICAgICAgcmV0dXJuIHRoaXMuZmlsZXNTZXJ2aWNlLnRvQmFzZTY0KGltYWdlRmlsZSk7XG4gICAgfVxuICB9XG59XG4iXX0=