import { __awaiter } from "tslib";
import { Component, Inject, Optional } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { InventoryService } from '@c8y/client';
import { AlertService, gettext, HumanizePipe } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { get } from 'lodash-es';
import { DATAPOINT_LIBRARY_CONFIG, pathToDatapointLibrary } from '../datapoint-library.model';
import { C8yValidators, ColorService } from '@c8y/ngx-components';
import { DatapointParserService } from '@c8y/ngx-components/datapoint-library/services';
export class DatapointLibraryDetailsComponent {
    constructor(activatedRoute, inventory, formBuilder, alertService, router, translate, colorService, parser, config) {
        this.activatedRoute = activatedRoute;
        this.inventory = inventory;
        this.formBuilder = formBuilder;
        this.alertService = alertService;
        this.router = router;
        this.translate = translate;
        this.colorService = colorService;
        this.parser = parser;
        this.config = config;
        this.path = pathToDatapointLibrary;
        this.isLoading = true;
        this.rangeConfig = {};
        this.initForm();
    }
    ngOnInit() {
        this.routeSub = this.activatedRoute.parent.data.subscribe(data => {
            this.load(data);
        });
    }
    ngOnDestroy() {
        if (this.routeSub) {
            this.routeSub.unsubscribe();
        }
    }
    save(value) {
        var _a, _b;
        return __awaiter(this, void 0, void 0, function* () {
            const kpiValues = this.extractKpiValuesFromFormValue(value);
            const kpi = Object.assign({}, ((_a = this.datapoint) === null || _a === void 0 ? void 0 : _a.c8y_Kpi) || {}, kpiValues);
            const cleanedUpKpi = this.removeNullValues(kpi);
            const mo = {
                c8y_Kpi: cleanedUpKpi,
                c8y_Global: value.c8y_Global ? {} : null
            };
            try {
                if ((_b = this.datapoint) === null || _b === void 0 ? void 0 : _b.id) {
                    mo.id = this.datapoint.id;
                    const res = yield this.inventory.update(mo);
                    this.datapointUpdate(res.data);
                    this.alertService.saveSuccess(gettext('Data point library entry'))();
                }
                else {
                    const res = yield this.inventory.create(mo);
                    this.datapointUpdate(res.data);
                    this.alertService.createSuccess(gettext('Data point library entry'))();
                }
                this.navigateBackToList();
            }
            catch (e) {
                this.alertService.addServerFailure(e);
            }
        });
    }
    cancel() {
        this.navigateBackToList();
    }
    formChange() {
        if (this.formGroup.invalid) {
            return;
        }
        const kpiValues = this.extractKpiValuesFromFormValue(this.formGroup.value);
        this.rangeConfig = Object.assign({ orientation: 'horizontal' }, kpiValues);
    }
    navigateBackToList() {
        return this.router.navigate([pathToDatapointLibrary]);
    }
    datapointUpdate(tmpDatapoint) {
        const datapoint = this.parser.parseDatapoint(tmpDatapoint);
        this.datapoint = datapoint;
        const { fragment, series, description, unit, target, label, color, yellowRangeMin, yellowRangeMax, redRangeMin, redRangeMax, min, max } = datapoint.c8y_Kpi;
        this.formGroup.patchValue({
            fragment,
            series,
            description,
            unit,
            target,
            label,
            color,
            range: { min, max },
            yellowRange: { min: yellowRangeMin, max: yellowRangeMax },
            redRange: { min: redRangeMin, max: redRangeMax },
            c8y_Global: !!datapoint.c8y_Global
        });
        this.formChange();
    }
    extractKpiValuesFromFormValue(formValue) {
        const { fragment, series, description, unit, target, label, color } = formValue;
        return {
            fragment,
            series,
            description,
            unit,
            target,
            label,
            color,
            yellowRangeMin: get(formValue, 'yellowRange.min'),
            yellowRangeMax: get(formValue, 'yellowRange.max'),
            redRangeMin: get(formValue, 'redRange.min'),
            redRangeMax: get(formValue, 'redRange.max'),
            min: get(formValue, 'range.min'),
            max: get(formValue, 'range.max')
        };
    }
    load(data) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            this.isLoading = true;
            this.formGroup.reset();
            const { fragment, series } = this.activatedRoute.snapshot.queryParams;
            const humanize = new HumanizePipe();
            const label = fragment && series
                ? humanize.transform(`${fragment} => ${series}`)
                : this.translate.instant(gettext('New data point template'));
            const currentDate = new Date().toISOString();
            const color = yield this.colorService.generateColor(currentDate);
            const contextData = (data && data.contextData) || {
                c8y_Kpi: {
                    label,
                    fragment,
                    series,
                    color
                },
                c8y_Global: !((_a = this.config) === null || _a === void 0 ? void 0 : _a.doNotAddGlobalFragmentByDefault) ? {} : null
            };
            const { id } = contextData;
            if (id) {
                this.datapointUpdate((yield this.inventory.detail(id)).data);
            }
            else {
                this.datapointUpdate(contextData);
            }
            this.isLoading = false;
        });
    }
    initForm() {
        var _a;
        this.range = this.formBuilder.group({
            min: [undefined, []],
            max: [undefined, []]
        }, { validators: [C8yValidators.minMaxValidator(), C8yValidators.requireBothMinAndMax()] });
        this.redRange = this.formBuilder.group({
            min: [undefined, []],
            max: [undefined, []]
        }, { validators: [C8yValidators.minMaxValidator(), C8yValidators.requireBothMinAndMax()] });
        this.yellowRange = this.formBuilder.group({
            min: [undefined, []],
            max: [undefined, []]
        }, { validators: [C8yValidators.minMaxValidator(), C8yValidators.requireBothMinAndMax()] });
        this.formGroup = this.formBuilder.group({
            color: ['', [Validators.required, Validators.minLength(4)]],
            label: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(120)]],
            description: ['', []],
            fragment: [
                '',
                [
                    Validators.required,
                    Validators.minLength(1),
                    Validators.maxLength(120),
                    Validators.pattern(/^[^.]*$/)
                ]
            ],
            series: [
                '',
                [
                    Validators.required,
                    Validators.minLength(1),
                    Validators.maxLength(120),
                    Validators.pattern(/^[^.]*$/)
                ]
            ],
            range: this.range,
            unit: [undefined, []],
            target: [undefined, []],
            redRange: this.redRange,
            yellowRange: this.yellowRange,
            c8y_Global: [!((_a = this.config) === null || _a === void 0 ? void 0 : _a.doNotAddGlobalFragmentByDefault), []]
        }, {
            validators: [
                C8yValidators.withinScale('redRange.min'),
                C8yValidators.withinScale('redRange.max'),
                C8yValidators.withinScale('yellowRange.min'),
                C8yValidators.withinScale('yellowRange.max'),
                C8yValidators.withinScale('target')
            ]
        });
    }
    removeNullValues(value) {
        // remove null values before sending data to backend
        const cleanedupValues = Object.assign({}, value);
        Object.keys(cleanedupValues).forEach(key => {
            if (cleanedupValues[key] === null) {
                delete cleanedupValues[key];
            }
        });
        return cleanedupValues;
    }
}
DatapointLibraryDetailsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-datapoint-library-details',
                template: "<c8y-title *ngIf=\"!isLoading\">\n  {{ formGroup.value?.label }}\n  <small *ngIf=\"formGroup.value?.fragment && formGroup.value?.series\"\n    >{{ formGroup.value?.fragment }} / {{ formGroup.value?.series }}</small\n  >\n</c8y-title>\n\n<c8y-breadcrumb>\n  <c8y-breadcrumb-item\n    [icon]=\"'c8y-data-points'\"\n    [label]=\"'Data point library' | translate\"\n    [path]=\"path\"\n  ></c8y-breadcrumb-item>\n</c8y-breadcrumb>\n\n<form\n  (ngSubmit)=\"formGroup.valid && save(formGroup.value)\"\n  (change)=\"formChange()\"\n  [formGroup]=\"formGroup\"\n  class=\"card content-fullpage card--grid grid__col--6-6--md grid__row--fit-auto\"\n  novalidate\n>\n  <div class=\"card-header large-padding separator grid__col--fullspan\">\n    <h4 class=\"card-title\">\n      {{ formGroup.value?.label }}\n    </h4>\n  </div>\n  <div *ngIf=\"!isLoading\" class=\"d-contents\">\n    <div class=\"inner-scroll bg-white flex-grow\">\n      <div class=\"card-block large-padding\">\n        <div class=\"d-flex\">\n          <c8y-form-group>\n            <label translate>Color</label>\n            <div class=\"data-point-color form-control\">\n              <div class=\"c8y-colorpicker\">\n                <input type=\"color\" name=\"color\" formControlName=\"color\" />\n                <span [style.background-color]=\"formGroup.value?.color\"></span>\n              </div>\n            </div>\n          </c8y-form-group>\n          <c8y-form-group class=\"flex-grow p-l-8\">\n            <label translate>Label</label>\n            <input\n              class=\"form-control\"\n              formControlName=\"label\"\n              name=\"label\"\n              [placeholder]=\"'e.g. Temperature' | translate\"\n              type=\"text\"\n            />\n            <c8y-messages [show]=\"formGroup.controls?.label?.touched && formGroup.controls?.label?.errors\">\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n        <!-- TODO: add description to data point library templates -->\n        <c8y-form-group>\n          <label translate>Description</label>\n          <textarea\n            class=\"form-control\"\n            formControlName=\"description\"\n            name=\"description\"\n            [placeholder]=\"'e.g. Ambient Temperature in Celsius' | translate\"\n            rows=\"3\"\n          ></textarea>\n        </c8y-form-group>\n\n        <div class=\"row\">\n          <div class=\"col-sm-6\">\n            <c8y-form-group>\n              <label translate>Fragment</label>\n              <input\n                class=\"form-control\"\n                name=\"fragment\"\n                formControlName=\"fragment\"\n                [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'c8y_Temperature' }\"\n                type=\"text\"\n              />\n              <c8y-messages [show]=\"formGroup.controls?.fragment?.touched && formGroup.controls?.fragment?.errors\">\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n\n          <div class=\"col-sm-6\">\n            <c8y-form-group>\n              <label translate>Series</label>\n              <input\n                class=\"form-control\"\n                formControlName=\"series\"\n                name=\"series\"\n                [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'T' }\"\n                type=\"text\"\n              />\n              <c8y-messages [show]=\"formGroup.controls?.series?.touched && formGroup.controls?.series?.errors\">\n              </c8y-messages>\n            </c8y-form-group>\n          </div>\n        </div>\n        <div class=\"row\" *ngIf=\"config?.showCheckboxForGlobalFragment\">\n          <div class=\"col-sm-6\">\n            <c8y-form-group>\n              <label class=\"c8y-checkbox\">\n                <input\n                  name=\"c8y_Global\"\n                  formControlName=\"c8y_Global\"\n                  type=\"checkbox\"\n                />\n                <span></span>\n                <span translate>Globally available</span>\n                <button\n                  class=\"btn btn-clean\"\n                  [popover]=\"'Will make this entry available to all users on the tenant if checked.' | translate\"\n                  container=\"body\"\n                  type=\"button\"\n                  [outsideClick]=\"true\"\n                >\n                  <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n                </button>\n              </label>\n            </c8y-form-group>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"inner-scroll bg-gray-white\">\n      <div class=\"card-block large-padding\">\n        <fieldset class=\"c8y-fieldset\">\n          <legend translate>Preview</legend>\n          <c8y-range-display [config]=\"rangeConfig\" class=\"m-b-16 d-block\"></c8y-range-display>\n        </fieldset>\n        <fieldset class=\"c8y-fieldset\">\n          <legend translate>Range</legend>\n          <div class=\"row\" formGroupName=\"range\">\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.min?.errors }\"\n              >\n                <label translate>Min</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"min\"\n                  formControlName=\"min\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 0 }\"\n                />\n                <c8y-messages [show]=\"range?.touched && range.controls?.min?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.max?.errors }\"\n              >\n                <label translate>Max</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"max\"\n                  formControlName=\"max\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n                />\n                <c8y-messages [show]=\"range?.touched && range.controls?.max?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <c8y-form-group>\n                <label translate>Unit</label>\n                <input\n                  class=\"form-control\"\n                  name=\"unit\"\n                  formControlName=\"unit\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: '\u00BAC' }\"\n                />\n                <c8y-messages [show]=\"formGroup.controls?.unit?.touched && formGroup.controls?.unit?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || formGroup.controls?.target?.touched) &&\n                    formGroup.controls?.target?.errors\n                }\"\n              >\n                <label translate>Target</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"target\"\n                  formControlName=\"target\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 25 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || formGroup.controls?.target?.touched) && formGroup.controls?.target?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class=\"c8y-fieldset\" formGroupName=\"yellowRange\">\n          <legend translate>Yellow range</legend>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || yellowRange?.touched) && yellowRange?.controls?.min?.errors\n                }\"\n              >\n                <label translate>Min</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"min\"\n                  formControlName=\"min\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 50 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.min?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || yellowRange?.touched) && yellowRange?.controls?.max?.errors\n                }\"\n              >\n                <label translate>Max</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"max\"\n                  formControlName=\"max\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.max?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n        </fieldset>\n\n        <fieldset class=\"c8y-fieldset\" formGroupName=\"redRange\">\n          <legend translate>Red range</legend>\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || redRange?.touched) && redRange?.controls?.min?.errors\n                }\"\n              >\n                <label translate>Min</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"min\"\n                  formControlName=\"min\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.min?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n\n            <div class=\"col-md-6\">\n              <c8y-form-group\n                [ngClass]=\"{\n                  'has-error':\n                    (range?.touched || redRange?.touched) && redRange?.controls?.max?.errors\n                }\"\n              >\n                <label translate>Max</label>\n                <input\n                  type=\"number\"\n                  class=\"form-control\"\n                  name=\"max\"\n                  formControlName=\"max\"\n                  [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n                />\n                <c8y-messages [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.max?.errors\">\n                </c8y-messages>\n              </c8y-form-group>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n  <div class=\"card-footer separator grid__col--fullspan\">\n    <button (click)=\"cancel()\" class=\"btn btn-default\" [title]=\"'Cancel' | translate\" type=\"button\">\n      {{ 'Cancel' | translate }}\n    </button>\n    <button\n      *c8yIfAllowed=\"['ROLE_INVENTORY_ADMIN', 'ROLE_INVENTORY_UPDATE']; allowAny: true\"\n      [disabled]=\"formGroup.invalid || formGroup.pristine\"\n      class=\"btn btn-primary btn-form\"\n      [title]=\"'Save' | translate\"\n      type=\"submit\"\n    >\n      {{ 'Save' | translate }}\n    </button>\n  </div>\n</form>\n"
            },] }
];
DatapointLibraryDetailsComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: InventoryService },
    { type: FormBuilder },
    { type: AlertService },
    { type: Router },
    { type: TranslateService },
    { type: ColorService },
    { type: DatapointParserService },
    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DATAPOINT_LIBRARY_CONFIG,] }] }
];
//# sourceMappingURL=data:application/json;base64,