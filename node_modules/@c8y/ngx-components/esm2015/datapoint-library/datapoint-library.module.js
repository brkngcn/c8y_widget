import { NgModule } from '@angular/core';
import { CoreModule, gettext, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, NavigatorNode, ViewContext } from '@c8y/ngx-components';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { DatapointLibraryDetailsComponent } from './datapoint-library-details/datapoint-library-details.component';
import { DatapointLibraryListComponent } from './datapoint-library-list.component';
import { DATAPOINT_LIBRARY_CONFIG, pathToDatapointLibrary } from './datapoint-library.model';
import * as ɵngcc0 from '@angular/core';
export class DatapointLibraryModule {
    static forRoot(config = {}) {
        return {
            ngModule: DatapointLibraryModule,
            providers: [
                {
                    provide: HOOK_ROUTE,
                    useValue: [
                        {
                            path: pathToDatapointLibrary,
                            component: DatapointLibraryListComponent
                        },
                        {
                            context: ViewContext.DatapointLibrary,
                            path: 'details',
                            component: DatapointLibraryDetailsComponent,
                            label: gettext('Details'),
                            icon: 'palette',
                            priority: 500
                        }
                    ],
                    multi: true
                },
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useValue: [
                        new NavigatorNode({
                            parent: gettext('Configuration'),
                            label: gettext('Data point library'),
                            featureId: 'dataPointLibrary',
                            path: pathToDatapointLibrary,
                            icon: 'c8y-data-points',
                            routerLinkExact: false
                        })
                    ],
                    multi: true
                },
                {
                    provide: DATAPOINT_LIBRARY_CONFIG,
                    useValue: config
                }
            ]
        };
    }
}
DatapointLibraryModule.ɵfac = function DatapointLibraryModule_Factory(t) { return new (t || DatapointLibraryModule)(); };
DatapointLibraryModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DatapointLibraryModule });
DatapointLibraryModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CoreModule, BsDropdownModule, PopoverModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointLibraryModule, [{
        type: NgModule,
        args: [{
                imports: [CoreModule, BsDropdownModule, PopoverModule],
                declarations: [DatapointLibraryListComponent, DatapointLibraryDetailsComponent],
                exports: [DatapointLibraryListComponent, DatapointLibraryDetailsComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DatapointLibraryModule, { declarations: function () { return [DatapointLibraryListComponent, DatapointLibraryDetailsComponent]; }, imports: function () { return [CoreModule, BsDropdownModule, PopoverModule]; }, exports: function () { return [DatapointLibraryListComponent, DatapointLibraryDetailsComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LWxpYnJhcnkubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9kYXRhcG9pbnQtbGlicmFyeS9kYXRhcG9pbnQtbGlicmFyeS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUNMLFVBQVUsRUFDVixPQUFPLEVBQ1Asb0JBQW9CLEVBQ3BCLFVBQVUsRUFDVixhQUFhLEVBRWIsV0FBVyxFQUNaLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLGlFQUFpRSxDQUFDO0FBQ25ILE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ25GLE9BQU8sRUFFTCx3QkFBd0IsRUFDeEIsc0JBQXNCLEVBQ3ZCLE1BQU0sMkJBQTJCLENBQUM7O0FBT25DLE1BQU0sT0FBTyxzQkFBc0I7QUFDbkMsSUFBRSxNQUFNLENBQUMsT0FBTyxDQUNaLFNBQWtDLEVBQUU7QUFDckMsUUFDQyxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsc0JBQXNCO0FBQ3RDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRO0FBQ1Isb0JBQVUsT0FBTyxFQUFFLFVBQVU7QUFDN0Isb0JBQVUsUUFBUSxFQUFFO0FBQ3BCLHdCQUFZO0FBQ1osNEJBQWMsSUFBSSxFQUFFLHNCQUFzQjtBQUMxQyw0QkFBYyxTQUFTLEVBQUUsNkJBQTZCO0FBQ3RELHlCQUFhO0FBQ2Isd0JBQVk7QUFDWiw0QkFBYyxPQUFPLEVBQUUsV0FBVyxDQUFDLGdCQUFnQjtBQUNuRCw0QkFBYyxJQUFJLEVBQUUsU0FBUztBQUM3Qiw0QkFBYyxTQUFTLEVBQUUsZ0NBQWdDO0FBQ3pELDRCQUFjLEtBQUssRUFBRSxPQUFPLENBQUMsU0FBUyxDQUFDO0FBQ3ZDLDRCQUFjLElBQUksRUFBRSxTQUFTO0FBQzdCLDRCQUFjLFFBQVEsRUFBRSxHQUFHO0FBQzNCLHlCQUFhO0FBQ2IscUJBQXNCO0FBQ3RCLG9CQUFVLEtBQUssRUFBRSxJQUFJO0FBQ3JCLGlCQUFTO0FBQ1QsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsb0JBQW9CO0FBQ3ZDLG9CQUFVLFFBQVEsRUFBRTtBQUNwQix3QkFBWSxJQUFJLGFBQWEsQ0FBQztBQUM5Qiw0QkFBYyxNQUFNLEVBQUUsT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUM5Qyw0QkFBYyxLQUFLLEVBQUUsT0FBTyxDQUFDLG9CQUFvQixDQUFDO0FBQ2xELDRCQUFjLFNBQVMsRUFBRSxrQkFBa0I7QUFDM0MsNEJBQWMsSUFBSSxFQUFFLHNCQUFzQjtBQUMxQyw0QkFBYyxJQUFJLEVBQUUsaUJBQWlCO0FBQ3JDLDRCQUFjLGVBQWUsRUFBRSxLQUFLO0FBQ3BDLHlCQUFhLENBQUM7QUFDZCxxQkFBVztBQUNYLG9CQUFVLEtBQUssRUFBRSxJQUFJO0FBQ3JCLGlCQUFTO0FBQ1QsZ0JBQVE7QUFDUixvQkFBVSxPQUFPLEVBQUUsd0JBQXdCO0FBQzNDLG9CQUFVLFFBQVEsRUFBRSxNQUFNO0FBQzFCLGlCQUFTO0FBQ1QsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNIO2tEQW5EQyxRQUFRLFNBQUMsa0JBQ1IsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFO0NBQWdCLEVBQUUsYUFBYSxDQUFDLGtCQUN0RCxZQUFZLEVBQUUsQ0FBQyw2QkFBNkIsRUFBRTtVQUFnQyxDQUFDLGtCQUMvRSxPQUFPLEVBQUUsQ0FBQyw2QkFBNkIsRUFBRSxnQ0FBZ0MsQ0FBQyxjQUMzRTs7Ozs7Ozs7OzJaQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgQ29yZU1vZHVsZSxcbiAgZ2V0dGV4dCxcbiAgSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gIEhPT0tfUk9VVEUsXG4gIE5hdmlnYXRvck5vZGUsXG4gIFJvdXRlLFxuICBWaWV3Q29udGV4dFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJzRHJvcGRvd25Nb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2Ryb3Bkb3duJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgRGF0YXBvaW50TGlicmFyeURldGFpbHNDb21wb25lbnQgfSBmcm9tICcuL2RhdGFwb2ludC1saWJyYXJ5LWRldGFpbHMvZGF0YXBvaW50LWxpYnJhcnktZGV0YWlscy5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0YXBvaW50TGlicmFyeUxpc3RDb21wb25lbnQgfSBmcm9tICcuL2RhdGFwb2ludC1saWJyYXJ5LWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7XG4gIERhdGFwb2ludExpYnJhcnlPcHRpb25zLFxuICBEQVRBUE9JTlRfTElCUkFSWV9DT05GSUcsXG4gIHBhdGhUb0RhdGFwb2ludExpYnJhcnlcbn0gZnJvbSAnLi9kYXRhcG9pbnQtbGlicmFyeS5tb2RlbCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBCc0Ryb3Bkb3duTW9kdWxlLCBQb3BvdmVyTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbRGF0YXBvaW50TGlicmFyeUxpc3RDb21wb25lbnQsIERhdGFwb2ludExpYnJhcnlEZXRhaWxzQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW0RhdGFwb2ludExpYnJhcnlMaXN0Q29tcG9uZW50LCBEYXRhcG9pbnRMaWJyYXJ5RGV0YWlsc0NvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgRGF0YXBvaW50TGlicmFyeU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KFxuICAgIGNvbmZpZzogRGF0YXBvaW50TGlicmFyeU9wdGlvbnMgPSB7fVxuICApOiBNb2R1bGVXaXRoUHJvdmlkZXJzPERhdGFwb2ludExpYnJhcnlNb2R1bGU+IHtcbiAgICByZXR1cm4ge1xuICAgICAgbmdNb2R1bGU6IERhdGFwb2ludExpYnJhcnlNb2R1bGUsXG4gICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEhPT0tfUk9VVEUsXG4gICAgICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgcGF0aDogcGF0aFRvRGF0YXBvaW50TGlicmFyeSxcbiAgICAgICAgICAgICAgY29tcG9uZW50OiBEYXRhcG9pbnRMaWJyYXJ5TGlzdENvbXBvbmVudFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuRGF0YXBvaW50TGlicmFyeSxcbiAgICAgICAgICAgICAgcGF0aDogJ2RldGFpbHMnLFxuICAgICAgICAgICAgICBjb21wb25lbnQ6IERhdGFwb2ludExpYnJhcnlEZXRhaWxzQ29tcG9uZW50LFxuICAgICAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRGV0YWlscycpLFxuICAgICAgICAgICAgICBpY29uOiAncGFsZXR0ZScsXG4gICAgICAgICAgICAgIHByaW9yaXR5OiA1MDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdIGFzIFJvdXRlW10sXG4gICAgICAgICAgbXVsdGk6IHRydWVcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHByb3ZpZGU6IEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICAgICAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgICAgICBuZXcgTmF2aWdhdG9yTm9kZSh7XG4gICAgICAgICAgICAgIHBhcmVudDogZ2V0dGV4dCgnQ29uZmlndXJhdGlvbicpLFxuICAgICAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRGF0YSBwb2ludCBsaWJyYXJ5JyksXG4gICAgICAgICAgICAgIGZlYXR1cmVJZDogJ2RhdGFQb2ludExpYnJhcnknLFxuICAgICAgICAgICAgICBwYXRoOiBwYXRoVG9EYXRhcG9pbnRMaWJyYXJ5LFxuICAgICAgICAgICAgICBpY29uOiAnYzh5LWRhdGEtcG9pbnRzJyxcbiAgICAgICAgICAgICAgcm91dGVyTGlua0V4YWN0OiBmYWxzZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICBdLFxuICAgICAgICAgIG11bHRpOiB0cnVlXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwcm92aWRlOiBEQVRBUE9JTlRfTElCUkFSWV9DT05GSUcsXG4gICAgICAgICAgdXNlVmFsdWU6IGNvbmZpZ1xuICAgICAgICB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19