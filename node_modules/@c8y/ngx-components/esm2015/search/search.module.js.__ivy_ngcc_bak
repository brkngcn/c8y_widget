import { NgModule } from '@angular/core';
import { CoreModule, HOOK_SEARCH, HOOK_ROUTE, SearchModule as CoreSearchModule } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { SearchResultsComponent } from './search-results.component';
import { SearchGridComponent } from './search-grid.component';
import { SearchActionComponent } from './search-action.component';
import { AssetSearchService } from './search.service';
const ɵ0 = [
    {
        path: 'assetsearch',
        component: SearchResultsComponent
    }
], ɵ1 = [
    {
        template: SearchActionComponent
    }
];
export class SearchModule {
}
SearchModule.decorators = [
    { type: NgModule, args: [{
                declarations: [SearchResultsComponent, SearchGridComponent, SearchActionComponent],
                imports: [CoreModule, DeviceGridModule, CoreSearchModule],
                entryComponents: [SearchResultsComponent, SearchActionComponent],
                exports: [SearchResultsComponent, SearchGridComponent],
                providers: [
                    AssetSearchService,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    {
                        provide: HOOK_SEARCH,
                        useValue: ɵ1,
                        multi: true
                    }
                ]
            },] }
];
export { ɵ0, ɵ1 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NlYXJjaC9zZWFyY2gubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUNMLFVBQVUsRUFFVixXQUFXLEVBRVgsVUFBVSxFQUNWLFlBQVksSUFBSSxnQkFBZ0IsRUFDakMsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNuRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztXQVd0QztJQUNSO1FBQ0UsSUFBSSxFQUFFLGFBQWE7UUFDbkIsU0FBUyxFQUFFLHNCQUFzQjtLQUNsQztDQUNGLE9BS1M7SUFDUjtRQUNFLFFBQVEsRUFBRSxxQkFBcUI7S0FDaEM7Q0FDVTtBQUtuQixNQUFNLE9BQU8sWUFBWTs7O1lBNUJ4QixRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMsc0JBQXNCLEVBQUUsbUJBQW1CLEVBQUUscUJBQXFCLENBQUM7Z0JBQ2xGLE9BQU8sRUFBRSxDQUFDLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxnQkFBZ0IsQ0FBQztnQkFDekQsZUFBZSxFQUFFLENBQUMsc0JBQXNCLEVBQUUscUJBQXFCLENBQUM7Z0JBQ2hFLE9BQU8sRUFBRSxDQUFDLHNCQUFzQixFQUFFLG1CQUFtQixDQUFDO2dCQUN0RCxTQUFTLEVBQUU7b0JBQ1Qsa0JBQWtCO29CQUNsQjt3QkFDRSxPQUFPLEVBQUUsVUFBVTt3QkFDbkIsUUFBUSxJQUtQO3dCQUNELEtBQUssRUFBRSxJQUFJO3FCQUNaO29CQUNEO3dCQUNFLE9BQU8sRUFBRSxXQUFXO3dCQUNwQixRQUFRLElBSUs7d0JBQ2IsS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb3JlTW9kdWxlLFxuICBIT09LX09OQ0VfUk9VVEUsXG4gIEhPT0tfU0VBUkNILFxuICBTZWFyY2gsXG4gIEhPT0tfUk9VVEUsXG4gIFNlYXJjaE1vZHVsZSBhcyBDb3JlU2VhcmNoTW9kdWxlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZE1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQnO1xuaW1wb3J0IHsgU2VhcmNoUmVzdWx0c0NvbXBvbmVudCB9IGZyb20gJy4vc2VhcmNoLXJlc3VsdHMuY29tcG9uZW50JztcbmltcG9ydCB7IFNlYXJjaEdyaWRDb21wb25lbnQgfSBmcm9tICcuL3NlYXJjaC1ncmlkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZWFyY2hBY3Rpb25Db21wb25lbnQgfSBmcm9tICcuL3NlYXJjaC1hY3Rpb24uY29tcG9uZW50JztcbmltcG9ydCB7IEFzc2V0U2VhcmNoU2VydmljZSB9IGZyb20gJy4vc2VhcmNoLnNlcnZpY2UnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtTZWFyY2hSZXN1bHRzQ29tcG9uZW50LCBTZWFyY2hHcmlkQ29tcG9uZW50LCBTZWFyY2hBY3Rpb25Db21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgRGV2aWNlR3JpZE1vZHVsZSwgQ29yZVNlYXJjaE1vZHVsZV0sXG4gIGVudHJ5Q29tcG9uZW50czogW1NlYXJjaFJlc3VsdHNDb21wb25lbnQsIFNlYXJjaEFjdGlvbkNvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtTZWFyY2hSZXN1bHRzQ29tcG9uZW50LCBTZWFyY2hHcmlkQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgQXNzZXRTZWFyY2hTZXJ2aWNlLFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfUk9VVEUsXG4gICAgICB1c2VWYWx1ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgcGF0aDogJ2Fzc2V0c2VhcmNoJyxcbiAgICAgICAgICBjb21wb25lbnQ6IFNlYXJjaFJlc3VsdHNDb21wb25lbnRcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX1NFQVJDSCxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICB0ZW1wbGF0ZTogU2VhcmNoQWN0aW9uQ29tcG9uZW50XG4gICAgICAgIH1cbiAgICAgIF0gYXMgU2VhcmNoW10sXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBTZWFyY2hNb2R1bGUge31cbiJdfQ==