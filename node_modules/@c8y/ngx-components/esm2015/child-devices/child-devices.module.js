import { NgModule } from '@angular/core';
import { CoreModule, gettext, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { ChildDevicesComponent } from './child-devices.component';
import { ChildDevicesTabGuard } from './child-devices.guard';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = [
    {
        context: ViewContext.Device,
        path: 'child-devices',
        priority: 1000,
        icon: 'code-fork',
        label: gettext('Child devices'),
        component: ChildDevicesComponent,
        canActivate: [ChildDevicesTabGuard]
    }
];
export class ChildDevicesModule {
}
ChildDevicesModule.ɵfac = function ChildDevicesModule_Factory(t) { return new (t || ChildDevicesModule)(); };
ChildDevicesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ChildDevicesModule });
ChildDevicesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        ChildDevicesTabGuard,
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[CoreModule, DeviceGridModule, PopoverModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ChildDevicesModule, [{
        type: NgModule,
        args: [{
                declarations: [ChildDevicesComponent],
                imports: [CoreModule, DeviceGridModule, PopoverModule],
                entryComponents: [ChildDevicesComponent],
                providers: [
                    ChildDevicesTabGuard,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ChildDevicesModule, { declarations: function () { return [ChildDevicesComponent]; }, imports: function () { return [CoreModule, DeviceGridModule, PopoverModule]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hpbGQtZGV2aWNlcy5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NoaWxkLWRldmljZXMvY2hpbGQtZGV2aWNlcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDbkYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDOztBQUM3RCxXQVNnQjtBQUNoQixJQUFRO0FBQ1IsUUFBVSxPQUFPLEVBQUUsV0FBVyxDQUFDLE1BQU07QUFDckMsUUFBVSxJQUFJLEVBQUUsZUFBZTtBQUMvQixRQUFVLFFBQVEsRUFBRSxJQUFJO0FBQ3hCLFFBQVUsSUFBSSxFQUFFLFdBQVc7QUFDM0IsUUFBVSxLQUFLLEVBQUUsT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUN6QyxRQUFVLFNBQVMsRUFBRSxxQkFBcUI7QUFDMUMsUUFBVSxXQUFXLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztBQUM3QyxLQUFTO0FBQ1QsQ0FBTztBQUtQLE1BQU0sT0FBTyxrQkFBa0I7QUFBRzs4Q0F2QmpDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsQ0FBQztPQUFxQixDQUFDLGtCQUNyQyxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsYUFBYSxDQUFDO0dBQ3RELGVBQWUsRUFBRSxDQUFDLHFCQUFxQixDQUFDLGtCQUN4QyxTQUFTLEVBQUU7ZUFDVDtLQUFvQjtpQkFDcEI7VUFDRSxPQUFPLEVBQUU7R0FBVTtLQUNuQjtHQUFRLElBVVAsMEJBQ0QsS0FBSyxFQUFFLElBQUksc0JBQ1o7Z0JBQ0YsY0FDRjs7Ozs7Ozs7Ozs7Ozs7Ozt5UUFDSTtBQUFDO0FBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29yZU1vZHVsZSwgZ2V0dGV4dCwgSE9PS19ST1VURSwgVmlld0NvbnRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERldmljZUdyaWRNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2RldmljZS1ncmlkJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgQ2hpbGREZXZpY2VzQ29tcG9uZW50IH0gZnJvbSAnLi9jaGlsZC1kZXZpY2VzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDaGlsZERldmljZXNUYWJHdWFyZCB9IGZyb20gJy4vY2hpbGQtZGV2aWNlcy5ndWFyZCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0NoaWxkRGV2aWNlc0NvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBEZXZpY2VHcmlkTW9kdWxlLCBQb3BvdmVyTW9kdWxlXSxcbiAgZW50cnlDb21wb25lbnRzOiBbQ2hpbGREZXZpY2VzQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgQ2hpbGREZXZpY2VzVGFiR3VhcmQsXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBjb250ZXh0OiBWaWV3Q29udGV4dC5EZXZpY2UsXG4gICAgICAgICAgcGF0aDogJ2NoaWxkLWRldmljZXMnLFxuICAgICAgICAgIHByaW9yaXR5OiAxMDAwLFxuICAgICAgICAgIGljb246ICdjb2RlLWZvcmsnLFxuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdDaGlsZCBkZXZpY2VzJyksXG4gICAgICAgICAgY29tcG9uZW50OiBDaGlsZERldmljZXNDb21wb25lbnQsXG4gICAgICAgICAgY2FuQWN0aXZhdGU6IFtDaGlsZERldmljZXNUYWJHdWFyZF1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIENoaWxkRGV2aWNlc01vZHVsZSB7fVxuIl19