import { Component, Input } from '@angular/core';
import { FormBuilder, Validators } from '@angular/forms';
import { gettext } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/forms';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@c8y/ngx-components/operations/bulk-operation-scheduler';
export class CreateBulkOperationDetailsComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.titlePlaceholder = gettext('e.g. Reset factory settings');
        this.descriptionPlaceholder = gettext('e.g. Reset factory settings of all devices of model XYZ');
        this.placeholders = {
            [BulkOperationType.SOFTWARE]: {
                title: gettext('e.g. Cloud connectivity software'),
                description: gettext('e.g. Cloud connectivity software applied to devices with type c8y_Linux')
            },
            [BulkOperationType.FIRMWARE]: {
                title: gettext('e.g. Firmware for hardware revision b'),
                description: gettext('e.g. Firmware for hardware revision b applied to devices with type c8y_Linux')
            },
            [BulkOperationType.CONFIGURATION]: {
                title: gettext('e.g. Host configuration c8y_Linux'),
                description: gettext('e.g. Host configuration applied to devices with type c8y_Linux')
            },
            [BulkOperationType.DEVICE_PROFILE]: {
                title: gettext('e.g. Device profile for c8y_Linux devices'),
                description: gettext('e.g. Device profile applied to devices with type c8y_Linux')
            }
        };
    }
    set bulkOperationType(bulkOperationType) {
        this.titlePlaceholder = get(this.placeholders[bulkOperationType], 'title');
        this.descriptionPlaceholder = get(this.placeholders[bulkOperationType], 'description');
    }
    ngOnInit() {
        const config = {
            description: ['', Validators.required],
            note: [''],
            schedule: []
        };
        this.fgOperationDescription = this.formBuilder.group(config);
    }
}
CreateBulkOperationDetailsComponent.ɵfac = function CreateBulkOperationDetailsComponent_Factory(t) { return new (t || CreateBulkOperationDetailsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FormBuilder)); };
CreateBulkOperationDetailsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CreateBulkOperationDetailsComponent, selectors: [["c8y-create-bulk-operation-details"]], inputs: { bulkOperationType: "bulkOperationType" }, decls: 12, vars: 7, consts: [[3, "formGroup"], ["translate", ""], ["formControlName", "description", "required", "", 1, "form-control", 3, "placeholder"], ["formControlName", "note", "rows", "3", 1, "form-control", 3, "placeholder"], ["formControlName", "schedule"]], template: function CreateBulkOperationDetailsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(2, "label", 1);
        ɵngcc0.ɵɵtext(3, "Title");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(4, "input", 2);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "c8y-form-group");
        ɵngcc0.ɵɵelementStart(7, "label", 1);
        ɵngcc0.ɵɵtext(8, "Description");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(9, "textarea", 3);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(11, "c8y-operation-scheduler", 4);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("formGroup", ctx.fgOperationDescription);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(5, 3, ctx.titlePlaceholder));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind1(10, 5, ctx.descriptionPlaceholder));
    } }, directives: [ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc2.FormGroupComponent, ɵngcc2.C8yTranslateDirective, ɵngcc1.DefaultValueAccessor, ɵngcc2.RequiredInputPlaceholderDirective, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc1.RequiredValidator, ɵngcc3.OperationSchedulerComponent], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
CreateBulkOperationDetailsComponent.ctorParameters = () => [
    { type: FormBuilder }
];
CreateBulkOperationDetailsComponent.propDecorators = {
    bulkOperationType: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CreateBulkOperationDetailsComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-create-bulk-operation-details',
                template: "<div [formGroup]=\"fgOperationDescription\">\n  <c8y-form-group>\n    <label translate>Title</label>\n    <input\n      formControlName=\"description\"\n      class=\"form-control\"\n      [placeholder]=\"titlePlaceholder | translate\"\n      required\n    />\n  </c8y-form-group>\n  <c8y-form-group>\n    <label translate>Description</label>\n    <textarea\n      formControlName=\"note\"\n      class=\"form-control\"\n      [placeholder]=\"descriptionPlaceholder | translate\"\n      rows=\"3\"\n    ></textarea>\n  </c8y-form-group>\n  <c8y-operation-scheduler formControlName=\"schedule\"></c8y-operation-scheduler>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.FormBuilder }]; }, { bulkOperationType: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLWJ1bGstb3BlcmF0aW9uLWRldGFpbHMuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2NyZWF0ZS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzL2NyZWF0ZS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN6RCxPQUFPLEVBQUUsV0FBVyxFQUFhLFVBQVUsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3BFLE9BQU8sRUFBbUIsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDL0QsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNoQyxPQUFPLEVBQ0wsaUJBQWlCLEVBRWxCLE1BQU0sd0RBQXdELENBQUM7Ozs7O0FBTWhFLE1BQU0sT0FBTyxtQ0FBbUM7QUFBRyxJQW9DakQsWUFBb0IsV0FBd0I7QUFBSSxRQUE1QixnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBN0I3QyxxQkFBZ0IsR0FBVyxPQUFPLENBQUMsNkJBQTZCLENBQUMsQ0FBQztBQUNwRSxRQUFFLDJCQUFzQixHQUFXLE9BQU8sQ0FDdEMseURBQXlELENBQzFELENBQUM7QUFDSixRQUVVLGlCQUFZLEdBQTJFO0FBQ2pHLFlBQUksQ0FBQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsRUFBRTtBQUNsQyxnQkFBTSxLQUFLLEVBQUUsT0FBTyxDQUFDLGtDQUFrQyxDQUFDO0FBQ3hELGdCQUFNLFdBQVcsRUFBRSxPQUFPLENBQ2xCLHlFQUF5RSxDQUMxRTtBQUNQLGFBQUs7QUFDTCxZQUFJLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLEVBQUU7QUFDbEMsZ0JBQU0sS0FBSyxFQUFFLE9BQU8sQ0FBQyx1Q0FBdUMsQ0FBQztBQUM3RCxnQkFBTSxXQUFXLEVBQUUsT0FBTyxDQUNsQiw4RUFBOEUsQ0FDL0U7QUFDUCxhQUFLO0FBQ0wsWUFBSSxDQUFDLGlCQUFpQixDQUFDLGFBQWEsQ0FBQyxFQUFFO0FBQ3ZDLGdCQUFNLEtBQUssRUFBRSxPQUFPLENBQUMsbUNBQW1DLENBQUM7QUFDekQsZ0JBQU0sV0FBVyxFQUFFLE9BQU8sQ0FBQyxnRUFBZ0UsQ0FBQztBQUM1RixhQUFLO0FBQ0wsWUFBSSxDQUFDLGlCQUFpQixDQUFDLGNBQWMsQ0FBQyxFQUFFO0FBQ3hDLGdCQUFNLEtBQUssRUFBRSxPQUFPLENBQUMsMkNBQTJDLENBQUM7QUFDakUsZ0JBQU0sV0FBVyxFQUFFLE9BQU8sQ0FBQyw0REFBNEQsQ0FBQztBQUN4RixhQUFLO0FBQ0wsU0FBRyxDQUFDO0FBQ0osSUFDaUQsQ0FBQztBQUNsRCxJQXBDRSxJQUNJLGlCQUFpQixDQUFDLGlCQUFvQztBQUM1RCxRQUFJLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9FLFFBQUksSUFBSSxDQUFDLHNCQUFzQixHQUFHLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsYUFBYSxDQUFDLENBQUM7QUFDM0YsSUFBRSxDQUFDO0FBQ0gsSUFnQ0UsUUFBUTtBQUFLLFFBQ1gsTUFBTSxNQUFNLEdBQXNDO0FBQ3RELFlBQU0sV0FBVyxFQUFFLENBQUMsRUFBRSxFQUFFLFVBQVUsQ0FBQyxRQUFRLENBQUM7QUFDNUMsWUFBTSxJQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUM7QUFDaEIsWUFBTSxRQUFRLEVBQUUsRUFBRTtBQUNsQixTQUFLLENBQUM7QUFDTixRQUNJLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUNqRSxJQUFFLENBQUM7QUFDSDsrREFuREMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxtQ0FBbUMsa0JBQzdDOztXQUEyRCxjQUM1RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bVhBQ0k7QUFBQztBQUE2RCxZQVoxRCxXQUFXO0FBQUc7QUFBRztBQUNkLGdDQVlULEtBQUs7QUFDUDs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1CdWlsZGVyLCBGb3JtR3JvdXAsIFZhbGlkYXRvcnMgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBGb3JtR3JvdXBDb25maWcsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQge1xuICBCdWxrT3BlcmF0aW9uVHlwZSxcbiAgT3BlcmF0aW9uRGV0YWlsc1xufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktY3JlYXRlLWJ1bGstb3BlcmF0aW9uLWRldGFpbHMnLFxuICB0ZW1wbGF0ZVVybDogJ2NyZWF0ZS1idWxrLW9wZXJhdGlvbi1kZXRhaWxzLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBDcmVhdGVCdWxrT3BlcmF0aW9uRGV0YWlsc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpXG4gIHNldCBidWxrT3BlcmF0aW9uVHlwZShidWxrT3BlcmF0aW9uVHlwZTogQnVsa09wZXJhdGlvblR5cGUpIHtcbiAgICB0aGlzLnRpdGxlUGxhY2Vob2xkZXIgPSBnZXQodGhpcy5wbGFjZWhvbGRlcnNbYnVsa09wZXJhdGlvblR5cGVdLCAndGl0bGUnKTtcbiAgICB0aGlzLmRlc2NyaXB0aW9uUGxhY2Vob2xkZXIgPSBnZXQodGhpcy5wbGFjZWhvbGRlcnNbYnVsa09wZXJhdGlvblR5cGVdLCAnZGVzY3JpcHRpb24nKTtcbiAgfVxuXG4gIHRpdGxlUGxhY2Vob2xkZXI6IHN0cmluZyA9IGdldHRleHQoJ2UuZy4gUmVzZXQgZmFjdG9yeSBzZXR0aW5ncycpO1xuICBkZXNjcmlwdGlvblBsYWNlaG9sZGVyOiBzdHJpbmcgPSBnZXR0ZXh0KFxuICAgICdlLmcuIFJlc2V0IGZhY3Rvcnkgc2V0dGluZ3Mgb2YgYWxsIGRldmljZXMgb2YgbW9kZWwgWFlaJ1xuICApO1xuICBmZ09wZXJhdGlvbkRlc2NyaXB0aW9uOiBGb3JtR3JvdXA7XG5cbiAgcHJpdmF0ZSBwbGFjZWhvbGRlcnM6IHsgW2tleSBpbiBCdWxrT3BlcmF0aW9uVHlwZV06IHsgdGl0bGU6IHN0cmluZzsgZGVzY3JpcHRpb246IHN0cmluZyB9IH0gPSB7XG4gICAgW0J1bGtPcGVyYXRpb25UeXBlLlNPRlRXQVJFXToge1xuICAgICAgdGl0bGU6IGdldHRleHQoJ2UuZy4gQ2xvdWQgY29ubmVjdGl2aXR5IHNvZnR3YXJlJyksXG4gICAgICBkZXNjcmlwdGlvbjogZ2V0dGV4dChcbiAgICAgICAgJ2UuZy4gQ2xvdWQgY29ubmVjdGl2aXR5IHNvZnR3YXJlIGFwcGxpZWQgdG8gZGV2aWNlcyB3aXRoIHR5cGUgYzh5X0xpbnV4J1xuICAgICAgKVxuICAgIH0sXG4gICAgW0J1bGtPcGVyYXRpb25UeXBlLkZJUk1XQVJFXToge1xuICAgICAgdGl0bGU6IGdldHRleHQoJ2UuZy4gRmlybXdhcmUgZm9yIGhhcmR3YXJlIHJldmlzaW9uIGInKSxcbiAgICAgIGRlc2NyaXB0aW9uOiBnZXR0ZXh0KFxuICAgICAgICAnZS5nLiBGaXJtd2FyZSBmb3IgaGFyZHdhcmUgcmV2aXNpb24gYiBhcHBsaWVkIHRvIGRldmljZXMgd2l0aCB0eXBlIGM4eV9MaW51eCdcbiAgICAgIClcbiAgICB9LFxuICAgIFtCdWxrT3BlcmF0aW9uVHlwZS5DT05GSUdVUkFUSU9OXToge1xuICAgICAgdGl0bGU6IGdldHRleHQoJ2UuZy4gSG9zdCBjb25maWd1cmF0aW9uIGM4eV9MaW51eCcpLFxuICAgICAgZGVzY3JpcHRpb246IGdldHRleHQoJ2UuZy4gSG9zdCBjb25maWd1cmF0aW9uIGFwcGxpZWQgdG8gZGV2aWNlcyB3aXRoIHR5cGUgYzh5X0xpbnV4JylcbiAgICB9LFxuICAgIFtCdWxrT3BlcmF0aW9uVHlwZS5ERVZJQ0VfUFJPRklMRV06IHtcbiAgICAgIHRpdGxlOiBnZXR0ZXh0KCdlLmcuIERldmljZSBwcm9maWxlIGZvciBjOHlfTGludXggZGV2aWNlcycpLFxuICAgICAgZGVzY3JpcHRpb246IGdldHRleHQoJ2UuZy4gRGV2aWNlIHByb2ZpbGUgYXBwbGllZCB0byBkZXZpY2VzIHdpdGggdHlwZSBjOHlfTGludXgnKVxuICAgIH1cbiAgfTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcikge31cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBjb25maWc6IEZvcm1Hcm91cENvbmZpZzxPcGVyYXRpb25EZXRhaWxzPiA9IHtcbiAgICAgIGRlc2NyaXB0aW9uOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxuICAgICAgbm90ZTogWycnXSxcbiAgICAgIHNjaGVkdWxlOiBbXVxuICAgIH07XG5cbiAgICB0aGlzLmZnT3BlcmF0aW9uRGVzY3JpcHRpb24gPSB0aGlzLmZvcm1CdWlsZGVyLmdyb3VwKGNvbmZpZyk7XG4gIH1cbn1cbiJdfQ==