import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { get } from 'lodash-es';
import { BehaviorSubject } from 'rxjs';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc2 from '@ngx-translate/core';
import * as ɵngcc3 from '@c8y/ngx-components/operations/bulk-operation-stepper';
import * as ɵngcc4 from './select-firmware.component';
import * as ɵngcc5 from '@c8y/ngx-components/operations/stepper-frames';
import * as ɵngcc6 from './version-or-patch.component';
import * as ɵngcc7 from '@c8y/ngx-components';

function StepperBulkTypeFirmwareComponent_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r3 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "c8y-select-firmware-step", 2);
    ɵngcc0.ɵɵlistener("firmware", function StepperBulkTypeFirmwareComponent_ng_container_1_Template_c8y_select_firmware_step_firmware_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.onFirmwareSelected($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("selected", ctx_r0.stepData == null ? null : ctx_r0.stepData.firmware);
} }
function StepperBulkTypeFirmwareComponent_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "c8y-preview-selection-frame", 3);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "c8y-version-or-patch-step", 4);
    ɵngcc0.ɵɵlistener("versionOrPatch", function StepperBulkTypeFirmwareComponent_ng_container_3_Template_c8y_version_or_patch_step_versionOrPatch_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4.onVersionOrPatchSelected($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("header", ɵngcc0.ɵɵpipeBind1(2, 4, "Select version or patch"))("name", ctx_r1.stepData == null ? null : ctx_r1.stepData.firmware == null ? null : ctx_r1.stepData.firmware.name)("description", ctx_r1.stepData == null ? null : ctx_r1.stepData.firmware == null ? null : ctx_r1.stepData.firmware.description);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("selected", ctx_r1.stepData == null ? null : ctx_r1.stepData.versionOrPatch);
} }
export class StepperBulkTypeFirmwareComponent extends BaseStepperComponent {
    constructor(bulkOperationService, translate) {
        super();
        this.bulkOperationService = bulkOperationService;
        this.translate = translate;
        this.descriptionTemplate = gettext('{{ name }} (version {{ version }})');
        this.textFilter$ = new BehaviorSubject('');
        this.stepData = {
            firmware: undefined,
            versionOrPatch: undefined
        };
    }
    goToVersionOrPatchStep({ stepper }) {
        const selectedFirmware = this.stepData.firmware;
        this.bulkOperationService.setFirmwareId(selectedFirmware.id);
        this.deviceTypes = (selectedFirmware.c8y_Filter || {}).type;
        stepper.next();
    }
    onVersionOrPatchSelected(versionOrPatch) {
        this.stepData.versionOrPatch = versionOrPatch;
    }
    onFirmwareSelected(fw) {
        this.stepData.firmware = fw;
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
    retrieveOperationPrototype() {
        const selectedFirmware = this.stepData.firmware;
        const selectedVersionOrPatch = this.stepData.versionOrPatch;
        if (!selectedFirmware || !selectedVersionOrPatch) {
            return;
        }
        const firmware = {
            name: selectedFirmware.name,
            version: selectedVersionOrPatch.c8y_Firmware.version,
            url: selectedVersionOrPatch.c8y_Firmware.url
        };
        if (selectedVersionOrPatch.c8y_Patch) {
            firmware.isPatch = true;
            firmware.dependency = selectedVersionOrPatch.c8y_Patch.dependency;
        }
        const name = selectedFirmware.name;
        const version = selectedVersionOrPatch.c8y_Firmware.version;
        const description = `Update firmware to: ${name} (version: ${version}).`;
        return {
            name: gettext('Firmware update'),
            description: this.translate.instant(this.descriptionTemplate, {
                name: get(this.stepData, 'firmware.name'),
                version: get(this.stepData, 'versionOrPatch.c8y_Firmware.version')
            }),
            prototype: {
                description,
                c8y_Firmware: firmware
            }
        };
    }
    onSelectionChange(event) {
        this.textFilter$.next('');
        super.onSelectionChange(event);
    }
}
StepperBulkTypeFirmwareComponent.ɵfac = function StepperBulkTypeFirmwareComponent_Factory(t) { return new (t || StepperBulkTypeFirmwareComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TranslateService)); };
StepperBulkTypeFirmwareComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: StepperBulkTypeFirmwareComponent, selectors: [["c8y-stepper-firmware"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 5, vars: 11, consts: [[4, "customStep", "customStepCompleted", "customStepButtonsDisabled", "customStepOnNext"], [4, "customStep", "customStepCompleted", "customStepButtonsDisabled"], [1, "d-contents", 3, "selected", "firmware"], [3, "header", "name", "description"], ["list", "", 3, "selected", "versionOrPatch"]], template: function StepperBulkTypeFirmwareComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-bulk-operation-stepper");
        ɵngcc0.ɵɵtemplate(1, StepperBulkTypeFirmwareComponent_ng_container_1_Template, 2, 1, "ng-container", 0);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtemplate(3, StepperBulkTypeFirmwareComponent_ng_container_3_Template, 4, 6, "ng-container", 1);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("customStep", ɵngcc0.ɵɵpipeBind1(2, 7, "Select firmware"))("customStepCompleted", !!(ctx.stepData == null ? null : ctx.stepData.firmware))("customStepButtonsDisabled", !(ctx.stepData == null ? null : ctx.stepData.firmware))("customStepOnNext", ctx.goToVersionOrPatchStep.bind(ctx));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("customStep", ɵngcc0.ɵɵpipeBind1(4, 9, "Select version or patch"))("customStepCompleted", !!(ctx.stepData == null ? null : ctx.stepData.versionOrPatch))("customStepButtonsDisabled", !(ctx.stepData == null ? null : ctx.stepData.versionOrPatch));
    } }, directives: [ɵngcc3.BulkOperationStepper, ɵngcc3.CustomStep, ɵngcc4.SelectFirmwareComponent, ɵngcc5.PreviewSelectionFrameComponent, ɵngcc6.VersionOrPatchComponent], pipes: [ɵngcc7.C8yTranslatePipe], encapsulation: 2 });
StepperBulkTypeFirmwareComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: TranslateService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperBulkTypeFirmwareComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-stepper-firmware',
                template: "<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select firmware' | translate;\n      completed: !!stepData?.firmware;\n      buttonsDisabled: !stepData?.firmware;\n      onNext: goToVersionOrPatchStep.bind(this)\n    \"\n  >\n    <c8y-select-firmware-step\n      [selected]=\"stepData?.firmware\"\n      (firmware)=\"onFirmwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-firmware-step\n  ></ng-container>\n  <ng-container\n    *customStep=\"\n      'Select version or patch' | translate;\n      completed: !!stepData?.versionOrPatch;\n      buttonsDisabled: !stepData?.versionOrPatch\n    \"\n  >\n    <c8y-preview-selection-frame\n      [header]=\"'Select version or patch' | translate\"\n      [name]=\"stepData?.firmware?.name\"\n      [description]=\"stepData?.firmware?.description\"\n    >\n      <c8y-version-or-patch-step\n        list\n        [selected]=\"stepData?.versionOrPatch\"\n        (versionOrPatch)=\"onVersionOrPatchSelected($event)\"\n      >\n      </c8y-version-or-patch-step>\n    </c8y-preview-selection-frame>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BulkOperationsService }, { type: ɵngcc2.TranslateService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlL3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxlQUFlLEVBQWdCLE1BQU0sTUFBTSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFDTCxxQkFBcUIsRUFFdEIsTUFBTSx3REFBd0QsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTWhFLE1BQU0sT0FBTyxnQ0FBaUMsU0FBUSxvQkFBb0I7QUFBRyxJQWUzRSxZQUNVLG9CQUEyQyxFQUMzQyxTQUEyQjtBQUNwQyxRQUNDLEtBQUssRUFBRSxDQUFDO0FBQ1osUUFKWSx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXVCO0FBQUMsUUFDNUMsY0FBUyxHQUFULFNBQVMsQ0FBa0I7QUFDdkMsUUFqQlcsd0JBQW1CLEdBQVcsT0FBTyxDQUFDLG9DQUFvQyxDQUFDLENBQUM7QUFDdkYsUUFDRSxnQkFBVyxHQUE0QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNqRSxRQUNFLGFBQVEsR0FBaUU7QUFDM0UsWUFBSSxRQUFRLEVBQUUsU0FBUztBQUN2QixZQUFJLGNBQWMsRUFBRSxTQUFTO0FBQzdCLFNBQUcsQ0FBQztBQUNKLElBV0UsQ0FBQztBQUNILElBQ0Usc0JBQXNCLENBQUMsRUFBRSxPQUFPLEVBQUU7QUFDcEMsUUFBSSxNQUFNLGdCQUFnQixHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDO0FBQ3BELFFBQUksSUFBSSxDQUFDLG9CQUFvQixDQUFDLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUNqRSxRQUFJLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2hFLFFBQUksT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ25CLElBQUUsQ0FBQztBQUNILElBQ0Usd0JBQXdCLENBQUMsY0FBOEI7QUFDekQsUUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLGNBQWMsR0FBRyxjQUFjLENBQUM7QUFDbEQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxrQkFBa0IsQ0FBQyxFQUFrQjtBQUN2QyxRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNoQyxJQUFFLENBQUM7QUFDSCxJQUNFLFdBQVc7QUFBSyxRQUNkLElBQUksSUFBSSxDQUFDLFlBQVksRUFBRTtBQUMzQixZQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDdEMsU0FBSztBQUNMLElBQUUsQ0FBQztBQUNILElBQ1ksMEJBQTBCO0FBQUssUUFDdkMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztBQUNwRCxRQUFJLE1BQU0sc0JBQXNCLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUM7QUFDaEUsUUFDSSxJQUFJLENBQUMsZ0JBQWdCLElBQUksQ0FBQyxzQkFBc0IsRUFBRTtBQUN0RCxZQUFNLE9BQU87QUFDYixTQUFLO0FBQ0wsUUFDSSxNQUFNLFFBQVEsR0FBb0I7QUFDdEMsWUFBTSxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsSUFBSTtBQUNqQyxZQUFNLE9BQU8sRUFBRSxzQkFBc0IsQ0FBQyxZQUFZLENBQUMsT0FBTztBQUMxRCxZQUFNLEdBQUcsRUFBRSxzQkFBc0IsQ0FBQyxZQUFZLENBQUMsR0FBRztBQUNsRCxTQUFtQyxDQUFDO0FBQ3BDLFFBQ0ksSUFBSSxzQkFBc0IsQ0FBQyxTQUFTLEVBQUU7QUFDMUMsWUFBTSxRQUFRLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztBQUM5QixZQUFNLFFBQVEsQ0FBQyxVQUFVLEdBQUcsc0JBQXNCLENBQUMsU0FBUyxDQUFDLFVBQVUsQ0FBQztBQUN4RSxTQUFLO0FBQ0wsUUFDSSxNQUFNLElBQUksR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7QUFDdkMsUUFBSSxNQUFNLE9BQU8sR0FBRyxzQkFBc0IsQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDO0FBQ2hFLFFBQUksTUFBTSxXQUFXLEdBQVcsdUJBQXVCLElBQUksY0FBYyxPQUFPLElBQUksQ0FBQztBQUNyRixRQUNJLE9BQU87QUFDWCxZQUFNLElBQUksRUFBRSxPQUFPLENBQUMsaUJBQWlCLENBQUM7QUFDdEMsWUFBTSxXQUFXLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLG1CQUFtQixFQUFFO0FBQ3BFLGdCQUFRLElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxlQUFlLENBQUM7QUFDakQsZ0JBQVEsT0FBTyxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLHFDQUFxQyxDQUFDO0FBQzFFLGFBQU8sQ0FBQztBQUNSLFlBQU0sU0FBUyxFQUFHO0FBQ2xCLGdCQUFRLFdBQVc7QUFDbkIsZ0JBQVEsWUFBWSxFQUFFLFFBQVE7QUFDOUIsYUFBaUM7QUFDakMsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0gsSUFDWSxpQkFBaUIsQ0FBQyxLQUE0QjtBQUMxRCxRQUFJLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQzlCLFFBQUksS0FBSyxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ25DLElBQUUsQ0FBQztBQUNIOzREQXZGQyxTQUFTLFNBQUMsa0JBQ1QsUUFBUSxFQUFFLHNCQUFzQixrQkFDaEM7Ozs7Ozs7OztFQUF3RCxjQUN6RDs7OztvT0FDSTtBQUFDO0FBQTBELFlBUjlELHFCQUFxQjtBQUNyQixZQU5PLGdCQUFnQjtBQUFHOzs7Ozs7O3lIQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdGVwcGVyU2VsZWN0aW9uRXZlbnQgfSBmcm9tICdAYW5ndWxhci9jZGsvc3RlcHBlcic7XG5pbXBvcnQgeyBDb21wb25lbnQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSU1hbmFnZWRPYmplY3QsIElPcGVyYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEJhc2VTdGVwcGVyQ29tcG9uZW50IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLXN0ZXBwZXInO1xuaW1wb3J0IHtcbiAgQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICBPcGVyYXRpb25EZXRhaWxzXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zdGVwcGVyLWZpcm13YXJlJyxcbiAgdGVtcGxhdGVVcmw6ICdzdGVwcGVyLWJ1bGstdHlwZS1maXJtd2FyZS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgU3RlcHBlckJ1bGtUeXBlRmlybXdhcmVDb21wb25lbnQgZXh0ZW5kcyBCYXNlU3RlcHBlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XG4gIHJlYWRvbmx5IGRlc2NyaXB0aW9uVGVtcGxhdGU6IHN0cmluZyA9IGdldHRleHQoJ3t7IG5hbWUgfX0gKHZlcnNpb24ge3sgdmVyc2lvbiB9fSknKTtcblxuICB0ZXh0RmlsdGVyJDogQmVoYXZpb3JTdWJqZWN0PHN0cmluZz4gPSBuZXcgQmVoYXZpb3JTdWJqZWN0KCcnKTtcblxuICBzdGVwRGF0YTogeyBmaXJtd2FyZTogSU1hbmFnZWRPYmplY3Q7IHZlcnNpb25PclBhdGNoOiBJTWFuYWdlZE9iamVjdCB9ID0ge1xuICAgIGZpcm13YXJlOiB1bmRlZmluZWQsXG4gICAgdmVyc2lvbk9yUGF0Y2g6IHVuZGVmaW5lZFxuICB9O1xuXG4gIHNlbGVjdGVkRmlybXdhcmU6IElNYW5hZ2VkT2JqZWN0O1xuICBzZWxlY3RlZFZlcnNpb25PclBhdGNoOiBJTWFuYWdlZE9iamVjdDtcblxuICBwcml2YXRlIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYnVsa09wZXJhdGlvblNlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIHRyYW5zbGF0ZTogVHJhbnNsYXRlU2VydmljZVxuICApIHtcbiAgICBzdXBlcigpO1xuICB9XG5cbiAgZ29Ub1ZlcnNpb25PclBhdGNoU3RlcCh7IHN0ZXBwZXIgfSkge1xuICAgIGNvbnN0IHNlbGVjdGVkRmlybXdhcmUgPSB0aGlzLnN0ZXBEYXRhLmZpcm13YXJlO1xuICAgIHRoaXMuYnVsa09wZXJhdGlvblNlcnZpY2Uuc2V0RmlybXdhcmVJZChzZWxlY3RlZEZpcm13YXJlLmlkKTtcbiAgICB0aGlzLmRldmljZVR5cGVzID0gKHNlbGVjdGVkRmlybXdhcmUuYzh5X0ZpbHRlciB8fCB7fSkudHlwZTtcbiAgICBzdGVwcGVyLm5leHQoKTtcbiAgfVxuXG4gIG9uVmVyc2lvbk9yUGF0Y2hTZWxlY3RlZCh2ZXJzaW9uT3JQYXRjaDogSU1hbmFnZWRPYmplY3QpIHtcbiAgICB0aGlzLnN0ZXBEYXRhLnZlcnNpb25PclBhdGNoID0gdmVyc2lvbk9yUGF0Y2g7XG4gIH1cblxuICBvbkZpcm13YXJlU2VsZWN0ZWQoZnc6IElNYW5hZ2VkT2JqZWN0KSB7XG4gICAgdGhpcy5zdGVwRGF0YS5maXJtd2FyZSA9IGZ3O1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuc3Vic2NyaXB0aW9uKSB7XG4gICAgICB0aGlzLnN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH1cbiAgfVxuXG4gIHByb3RlY3RlZCByZXRyaWV2ZU9wZXJhdGlvblByb3RvdHlwZSgpOiBPcGVyYXRpb25EZXRhaWxzIHtcbiAgICBjb25zdCBzZWxlY3RlZEZpcm13YXJlID0gdGhpcy5zdGVwRGF0YS5maXJtd2FyZTtcbiAgICBjb25zdCBzZWxlY3RlZFZlcnNpb25PclBhdGNoID0gdGhpcy5zdGVwRGF0YS52ZXJzaW9uT3JQYXRjaDtcblxuICAgIGlmICghc2VsZWN0ZWRGaXJtd2FyZSB8fCAhc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaCkge1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIGNvbnN0IGZpcm13YXJlOiBJTWFuYWdlZE9iamVjdCA9ICh7XG4gICAgICBuYW1lOiBzZWxlY3RlZEZpcm13YXJlLm5hbWUsXG4gICAgICB2ZXJzaW9uOiBzZWxlY3RlZFZlcnNpb25PclBhdGNoLmM4eV9GaXJtd2FyZS52ZXJzaW9uLFxuICAgICAgdXJsOiBzZWxlY3RlZFZlcnNpb25PclBhdGNoLmM4eV9GaXJtd2FyZS51cmxcbiAgICB9IGFzIHVua25vd24pIGFzIElNYW5hZ2VkT2JqZWN0O1xuXG4gICAgaWYgKHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2guYzh5X1BhdGNoKSB7XG4gICAgICBmaXJtd2FyZS5pc1BhdGNoID0gdHJ1ZTtcbiAgICAgIGZpcm13YXJlLmRlcGVuZGVuY3kgPSBzZWxlY3RlZFZlcnNpb25PclBhdGNoLmM4eV9QYXRjaC5kZXBlbmRlbmN5O1xuICAgIH1cblxuICAgIGNvbnN0IG5hbWUgPSBzZWxlY3RlZEZpcm13YXJlLm5hbWU7XG4gICAgY29uc3QgdmVyc2lvbiA9IHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2guYzh5X0Zpcm13YXJlLnZlcnNpb247XG4gICAgY29uc3QgZGVzY3JpcHRpb246IHN0cmluZyA9IGBVcGRhdGUgZmlybXdhcmUgdG86ICR7bmFtZX0gKHZlcnNpb246ICR7dmVyc2lvbn0pLmA7XG5cbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogZ2V0dGV4dCgnRmlybXdhcmUgdXBkYXRlJyksXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy50cmFuc2xhdGUuaW5zdGFudCh0aGlzLmRlc2NyaXB0aW9uVGVtcGxhdGUsIHtcbiAgICAgICAgbmFtZTogZ2V0KHRoaXMuc3RlcERhdGEsICdmaXJtd2FyZS5uYW1lJyksXG4gICAgICAgIHZlcnNpb246IGdldCh0aGlzLnN0ZXBEYXRhLCAndmVyc2lvbk9yUGF0Y2guYzh5X0Zpcm13YXJlLnZlcnNpb24nKVxuICAgICAgfSksXG4gICAgICBwcm90b3R5cGU6ICh7XG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICBjOHlfRmlybXdhcmU6IGZpcm13YXJlXG4gICAgICB9IGFzIHVua25vd24pIGFzIElPcGVyYXRpb25cbiAgICB9O1xuICB9XG5cbiAgcHJvdGVjdGVkIG9uU2VsZWN0aW9uQ2hhbmdlKGV2ZW50OiBTdGVwcGVyU2VsZWN0aW9uRXZlbnQpIHtcbiAgICB0aGlzLnRleHRGaWx0ZXIkLm5leHQoJycpO1xuICAgIHN1cGVyLm9uU2VsZWN0aW9uQ2hhbmdlKGV2ZW50KTtcbiAgfVxufVxuIl19