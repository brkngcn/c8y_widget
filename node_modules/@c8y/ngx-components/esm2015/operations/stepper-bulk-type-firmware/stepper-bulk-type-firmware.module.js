import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { HOOK_LIST_BULK_TYPE, baseUrl, BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { StepperFramesModule } from '@c8y/ngx-components/operations/stepper-frames';
import { SelectFirmwareComponent } from './select-firmware.component';
import { VersionOrPatchComponent } from './version-or-patch.component';
import { StepperBulkTypeFirmwareComponent } from './stepper-bulk-type-firmware.component';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = {
    type: BulkOperationType.FIRMWARE,
    c8yIcon: 'c8y-firmware',
    name: gettext('Firmware update'),
    path: `${baseUrl}firmware`,
    component: StepperBulkTypeFirmwareComponent,
    fragments: ['c8y_Firmware'],
    selected: false
};
/** Module for the 'Firmware update' operation type stepper */
export class StepperBulkTypeFirmwareModule {
}
StepperBulkTypeFirmwareModule.ɵfac = function StepperBulkTypeFirmwareModule_Factory(t) { return new (t || StepperBulkTypeFirmwareModule)(); };
StepperBulkTypeFirmwareModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StepperBulkTypeFirmwareModule });
StepperBulkTypeFirmwareModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_LIST_BULK_TYPE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            BulkOperationStepperModule,
            StepperFramesModule,
            SharedRepositoryModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperBulkTypeFirmwareModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    StepperBulkTypeFirmwareComponent,
                    VersionOrPatchComponent,
                    SelectFirmwareComponent
                ],
                imports: [
                    CoreModule,
                    FormsModule,
                    ReactiveFormsModule,
                    BulkOperationStepperModule,
                    StepperFramesModule,
                    SharedRepositoryModule
                ],
                providers: [
                    {
                        provide: HOOK_LIST_BULK_TYPE,
                        useValue: ɵ0,
                        multi: true
                    }
                ],
                entryComponents: [StepperBulkTypeFirmwareComponent],
                exports: [StepperBulkTypeFirmwareComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperBulkTypeFirmwareModule, { declarations: function () { return [StepperBulkTypeFirmwareComponent,
        VersionOrPatchComponent,
        SelectFirmwareComponent]; }, imports: function () { return [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        BulkOperationStepperModule,
        StepperFramesModule,
        SharedRepositoryModule]; }, exports: function () { return [StepperBulkTypeFirmwareComponent]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlL3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJELE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQ25HLE9BQU8sRUFDTCxtQkFBbUIsRUFDbkIsT0FBTyxFQUNQLGlCQUFpQixFQUNsQixNQUFNLHdEQUF3RCxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBRXBGLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLHdDQUF3QyxDQUFDOztBQUMxRixXQW1CZ0I7QUFDaEIsSUFBUSxJQUFJLEVBQUUsaUJBQWlCLENBQUMsUUFBUTtBQUN4QyxJQUFRLE9BQU8sRUFBRSxjQUFjO0FBQy9CLElBQVEsSUFBSSxFQUFFLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQztBQUN4QyxJQUFRLElBQUksRUFBRSxHQUFHLE9BQU8sVUFBVTtBQUNsQyxJQUFRLFNBQVMsRUFBRSxnQ0FBZ0M7QUFDbkQsSUFBUSxTQUFTLEVBQUUsQ0FBQyxjQUFjLENBQUM7QUFDbkMsSUFBUSxRQUFRLEVBQUUsS0FBSztBQUN2QixDQUFPO0FBMUJQLDhEQUE4RDtBQWlDOUQsTUFBTSxPQUFPLDZCQUE2QjtBQUFHO3lEQWhDNUMsUUFBUSxTQUFDLGtCQUNSLFlBQVksRUFBRSxzQkFDWjtpQkFBZ0Msc0JBQ2hDLHVCQUF1QixzQkFDdkIsdUJBQXVCO1FBQ3hCLGtCQUNELE9BQU8sRUFBRSxzQkFDUCxVQUFVLHNCQUNWOztBQUFXLHNCQUNYLG1CQUFtQjtxQkFDbkI7cUJBQTBCOztTQUMxQjtTQUFtQjtPQUNuQjtJQUFzQixrQkFDdkI7T0FDRCxTQUFTLEVBQUU7QUFDVCwwQkFDRTtBQUFPLEVBQUUsbUJBQW1CO1lBQzVCO0tBQVEsSUFRUCwwQkFDRCxLQUFLLEVBQUUsSUFBSSxzQkFDWixrQkFDRixrQkFDRCxlQUFlLEVBQUUsQ0FBQzs7S0FBZ0MsQ0FBQztPQUNuRCxPQUFPLEVBQUUsQ0FBQztpQkFBZ0MsQ0FBQyxjQUM1Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2lIQUNJO0FBQUM7QUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBGb3Jtc01vZHVsZSwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgU2hhcmVkUmVwb3NpdG9yeU1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvcmVwb3NpdG9yeS9zaGFyZWQnO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBIT09LX0xJU1RfQlVMS19UWVBFLFxuICBiYXNlVXJsLFxuICBCdWxrT3BlcmF0aW9uVHlwZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuaW1wb3J0IHsgU3RlcHBlckZyYW1lc01vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9zdGVwcGVyLWZyYW1lcyc7XG5cbmltcG9ydCB7IFNlbGVjdEZpcm13YXJlQ29tcG9uZW50IH0gZnJvbSAnLi9zZWxlY3QtZmlybXdhcmUuY29tcG9uZW50JztcbmltcG9ydCB7IFZlcnNpb25PclBhdGNoQ29tcG9uZW50IH0gZnJvbSAnLi92ZXJzaW9uLW9yLXBhdGNoLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdGVwcGVyQnVsa1R5cGVGaXJtd2FyZUNvbXBvbmVudCB9IGZyb20gJy4vc3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50JztcblxuLyoqIE1vZHVsZSBmb3IgdGhlICdGaXJtd2FyZSB1cGRhdGUnIG9wZXJhdGlvbiB0eXBlIHN0ZXBwZXIgKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFN0ZXBwZXJCdWxrVHlwZUZpcm13YXJlQ29tcG9uZW50LFxuICAgIFZlcnNpb25PclBhdGNoQ29tcG9uZW50LFxuICAgIFNlbGVjdEZpcm13YXJlQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQnVsa09wZXJhdGlvblN0ZXBwZXJNb2R1bGUsXG4gICAgU3RlcHBlckZyYW1lc01vZHVsZSxcbiAgICBTaGFyZWRSZXBvc2l0b3J5TW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfTElTVF9CVUxLX1RZUEUsXG4gICAgICB1c2VWYWx1ZToge1xuICAgICAgICB0eXBlOiBCdWxrT3BlcmF0aW9uVHlwZS5GSVJNV0FSRSxcbiAgICAgICAgYzh5SWNvbjogJ2M4eS1maXJtd2FyZScsXG4gICAgICAgIG5hbWU6IGdldHRleHQoJ0Zpcm13YXJlIHVwZGF0ZScpLFxuICAgICAgICBwYXRoOiBgJHtiYXNlVXJsfWZpcm13YXJlYCxcbiAgICAgICAgY29tcG9uZW50OiBTdGVwcGVyQnVsa1R5cGVGaXJtd2FyZUNvbXBvbmVudCxcbiAgICAgICAgZnJhZ21lbnRzOiBbJ2M4eV9GaXJtd2FyZSddLFxuICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgIH0sXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbU3RlcHBlckJ1bGtUeXBlRmlybXdhcmVDb21wb25lbnRdLFxuICBleHBvcnRzOiBbU3RlcHBlckJ1bGtUeXBlRmlybXdhcmVDb21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJCdWxrVHlwZUZpcm13YXJlTW9kdWxlIHt9XG4iXX0=