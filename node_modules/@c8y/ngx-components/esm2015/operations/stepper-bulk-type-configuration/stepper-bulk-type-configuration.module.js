import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';
import { SharedRepositoryModule } from '@c8y/ngx-components/repository/shared';
import { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { HOOK_LIST_BULK_TYPE, baseUrl, BulkOperationType } from '@c8y/ngx-components/operations/bulk-operations-service';
import { StepperFramesModule } from '@c8y/ngx-components/operations/stepper-frames';
import { StepperBulkTypeConfigurationComponent } from './stepper-bulk-type-configuration.component';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = {
    type: BulkOperationType.CONFIGURATION,
    c8yIcon: 'cogs',
    name: gettext('Configuration update'),
    path: `${baseUrl}configuration`,
    component: StepperBulkTypeConfigurationComponent,
    fragments: ['c8y_DownloadConfigFile', 'c8y_Configuration'],
    selected: false
};
/** Module for the 'Configuration update' operation type stepper */
export class StepperBulkTypeConfigurationModule {
}
StepperBulkTypeConfigurationModule.ɵfac = function StepperBulkTypeConfigurationModule_Factory(t) { return new (t || StepperBulkTypeConfigurationModule)(); };
StepperBulkTypeConfigurationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StepperBulkTypeConfigurationModule });
StepperBulkTypeConfigurationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_LIST_BULK_TYPE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            BulkOperationStepperModule,
            SharedRepositoryModule,
            StepperFramesModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperBulkTypeConfigurationModule, [{
        type: NgModule,
        args: [{
                declarations: [StepperBulkTypeConfigurationComponent],
                imports: [
                    CoreModule,
                    FormsModule,
                    ReactiveFormsModule,
                    BulkOperationStepperModule,
                    SharedRepositoryModule,
                    StepperFramesModule
                ],
                providers: [
                    {
                        provide: HOOK_LIST_BULK_TYPE,
                        useValue: ɵ0,
                        multi: true
                    }
                ],
                entryComponents: [StepperBulkTypeConfigurationComponent],
                exports: [StepperBulkTypeConfigurationComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperBulkTypeConfigurationModule, { declarations: function () { return [StepperBulkTypeConfigurationComponent]; }, imports: function () { return [CoreModule,
        FormsModule,
        ReactiveFormsModule,
        BulkOperationStepperModule,
        SharedRepositoryModule,
        StepperFramesModule]; }, exports: function () { return [StepperBulkTypeConfigurationComponent]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtY29uZmlndXJhdGlvbi5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvc3RlcHBlci1idWxrLXR5cGUtY29uZmlndXJhdGlvbi9zdGVwcGVyLWJ1bGstdHlwZS1jb25maWd1cmF0aW9uLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJELE9BQU8sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQy9FLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQ25HLE9BQU8sRUFDTCxtQkFBbUIsRUFDbkIsT0FBTyxFQUNQLGlCQUFpQixFQUNsQixNQUFNLHdEQUF3RCxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBRXBGLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLDZDQUE2QyxDQUFDOztBQUNwRyxXQWVnQjtBQUNoQixJQUFRLElBQUksRUFBRSxpQkFBaUIsQ0FBQyxhQUFhO0FBQzdDLElBQVEsT0FBTyxFQUFFLE1BQU07QUFDdkIsSUFBUSxJQUFJLEVBQUUsT0FBTyxDQUFDLHNCQUFzQixDQUFDO0FBQzdDLElBQVEsSUFBSSxFQUFFLEdBQUcsT0FBTyxlQUFlO0FBQ3ZDLElBQVEsU0FBUyxFQUFFLHFDQUFxQztBQUN4RCxJQUFRLFNBQVMsRUFBRSxDQUFDLHdCQUF3QixFQUFFLG1CQUFtQixDQUFDO0FBQ2xFLElBQVEsUUFBUSxFQUFFLEtBQUs7QUFDdkIsQ0FBTztBQXRCUCxtRUFBbUU7QUE2Qm5FLE1BQU0sT0FBTyxrQ0FBa0M7QUFBRzs4REE1QmpELFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsQ0FBQyxxQ0FBcUMsQ0FBQztVQUNyRCxPQUFPLEVBQUUsc0JBQ1AsVUFBVSxzQkFDVixXQUFXLHNCQUNYLG1CQUFtQjtvQkFDbkIsMEJBQTBCLHNCQUMxQixzQkFBc0I7O09BQ3RCLG1CQUFtQjtFQUNwQixrQkFDRDtHQUFTLEVBQUU7R0FDVDs7QUFDRSxPQUFPLEVBQUU7SUFBbUI7S0FDNUIsUUFBUSxJQVFQO1VBQ0QsS0FBSyxFQUFFLElBQUk7R0FDWixrQkFDRjtHQUNELGVBQWUsRUFBRSxDQUFDOztXQUFxQyxDQUFDLGtCQUN4RCxPQUFPLEVBQUUsQ0FBQyxxQ0FBcUMsQ0FBQyxjQUNqRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzttSEFDSTtBQUFDO0FBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuaW1wb3J0IHsgQ29yZU1vZHVsZSwgRm9ybXNNb2R1bGUsIGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFNoYXJlZFJlcG9zaXRvcnlNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnkvc2hhcmVkJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25TdGVwcGVyTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLXN0ZXBwZXInO1xuaW1wb3J0IHtcbiAgSE9PS19MSVNUX0JVTEtfVFlQRSxcbiAgYmFzZVVybCxcbiAgQnVsa09wZXJhdGlvblR5cGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IFN0ZXBwZXJGcmFtZXNNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvc3RlcHBlci1mcmFtZXMnO1xuXG5pbXBvcnQgeyBTdGVwcGVyQnVsa1R5cGVDb25maWd1cmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9zdGVwcGVyLWJ1bGstdHlwZS1jb25maWd1cmF0aW9uLmNvbXBvbmVudCc7XG5cbi8qKiBNb2R1bGUgZm9yIHRoZSAnQ29uZmlndXJhdGlvbiB1cGRhdGUnIG9wZXJhdGlvbiB0eXBlIHN0ZXBwZXIgKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1N0ZXBwZXJCdWxrVHlwZUNvbmZpZ3VyYXRpb25Db21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29yZU1vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIEJ1bGtPcGVyYXRpb25TdGVwcGVyTW9kdWxlLFxuICAgIFNoYXJlZFJlcG9zaXRvcnlNb2R1bGUsXG4gICAgU3RlcHBlckZyYW1lc01vZHVsZVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX0xJU1RfQlVMS19UWVBFLFxuICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgdHlwZTogQnVsa09wZXJhdGlvblR5cGUuQ09ORklHVVJBVElPTixcbiAgICAgICAgYzh5SWNvbjogJ2NvZ3MnLFxuICAgICAgICBuYW1lOiBnZXR0ZXh0KCdDb25maWd1cmF0aW9uIHVwZGF0ZScpLFxuICAgICAgICBwYXRoOiBgJHtiYXNlVXJsfWNvbmZpZ3VyYXRpb25gLFxuICAgICAgICBjb21wb25lbnQ6IFN0ZXBwZXJCdWxrVHlwZUNvbmZpZ3VyYXRpb25Db21wb25lbnQsXG4gICAgICAgIGZyYWdtZW50czogWydjOHlfRG93bmxvYWRDb25maWdGaWxlJywgJ2M4eV9Db25maWd1cmF0aW9uJ10sXG4gICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtTdGVwcGVyQnVsa1R5cGVDb25maWd1cmF0aW9uQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW1N0ZXBwZXJCdWxrVHlwZUNvbmZpZ3VyYXRpb25Db21wb25lbnRdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJCdWxrVHlwZUNvbmZpZ3VyYXRpb25Nb2R1bGUge31cbiJdfQ==