import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CoreModule, gettext, HOOK_ROUTE, ViewContext } from '@c8y/ngx-components';
import { StatusFilterModule } from '@c8y/ngx-components/operations/status-filter';
import { OperationsListItemDetailsModule } from '@c8y/ngx-components/operations/operations-list-item-details';
import { BulkOperationListItemService } from '@c8y/ngx-components/operations/bulk-operation-list-item';
import { OperationsSharedModule } from '@c8y/ngx-components/operations/shared';
import { OperationsListComponent } from './operations-list.component';
import { OperationsListItemComponent } from './operations-list-item.component';
import { OperationsListService } from './operations-list.service';
export const singleOperationListRoutes = [
    {
        path: 'devicecontrol/single',
        component: OperationsListComponent
    }
];
const ɵ0 = [
    {
        context: ViewContext.Device,
        path: 'control',
        component: OperationsListComponent,
        label: gettext('Control'),
        icon: 'c8y-icon c8y-icon-device-control',
        priority: 600
    }
];
/**
 * This module allows for displaying the list item details of single and bulk operations.
 */
export class OperationsListModule {
}
OperationsListModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CoreModule,
                    StatusFilterModule,
                    OperationsListItemDetailsModule,
                    OperationsSharedModule,
                    TooltipModule,
                    RouterModule.forChild(singleOperationListRoutes)
                ],
                declarations: [OperationsListComponent, OperationsListItemComponent],
                exports: [OperationsListComponent, OperationsListItemComponent],
                providers: [
                    OperationsListService,
                    BulkOperationListItemService,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            },] }
];
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9ucy1saXN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvb3BlcmF0aW9ucy1saXN0L29wZXJhdGlvbnMtbGlzdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBUyxXQUFXLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMxRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUNsRixPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSw2REFBNkQsQ0FBQztBQUM5RyxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUN2RyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx1Q0FBdUMsQ0FBQztBQUUvRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUMvRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVsRSxNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBWTtJQUNoRDtRQUNFLElBQUksRUFBRSxzQkFBc0I7UUFDNUIsU0FBUyxFQUFFLHVCQUF1QjtLQUNuQztDQUNGLENBQUM7V0FxQmM7SUFDUjtRQUNFLE9BQU8sRUFBRSxXQUFXLENBQUMsTUFBTTtRQUMzQixJQUFJLEVBQUUsU0FBUztRQUNmLFNBQVMsRUFBRSx1QkFBdUI7UUFDbEMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7UUFDekIsSUFBSSxFQUFFLGtDQUFrQztRQUN4QyxRQUFRLEVBQUUsR0FBRztLQUNkO0NBQ1M7QUE1QmxCOztHQUVHO0FBK0JILE1BQU0sT0FBTyxvQkFBb0I7OztZQTlCaEMsUUFBUSxTQUFDO2dCQUNSLE9BQU8sRUFBRTtvQkFDUCxVQUFVO29CQUNWLGtCQUFrQjtvQkFDbEIsK0JBQStCO29CQUMvQixzQkFBc0I7b0JBQ3RCLGFBQWE7b0JBQ2IsWUFBWSxDQUFDLFFBQVEsQ0FBQyx5QkFBeUIsQ0FBQztpQkFDakQ7Z0JBQ0QsWUFBWSxFQUFFLENBQUMsdUJBQXVCLEVBQUUsMkJBQTJCLENBQUM7Z0JBQ3BFLE9BQU8sRUFBRSxDQUFDLHVCQUF1QixFQUFFLDJCQUEyQixDQUFDO2dCQUMvRCxTQUFTLEVBQUU7b0JBQ1QscUJBQXFCO29CQUNyQiw0QkFBNEI7b0JBQzVCO3dCQUNFLE9BQU8sRUFBRSxVQUFVO3dCQUNuQixRQUFRLElBU0k7d0JBQ1osS0FBSyxFQUFFLElBQUk7cUJBQ1o7aUJBQ0Y7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgVG9vbHRpcE1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvdG9vbHRpcCc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBnZXR0ZXh0LCBIT09LX1JPVVRFLCBSb3V0ZSwgVmlld0NvbnRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFN0YXR1c0ZpbHRlck1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9zdGF0dXMtZmlsdGVyJztcbmltcG9ydCB7IE9wZXJhdGlvbnNMaXN0SXRlbURldGFpbHNNb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvb3BlcmF0aW9ucy1saXN0LWl0ZW0tZGV0YWlscyc7XG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uTGlzdEl0ZW1TZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLWxpc3QtaXRlbSc7XG5pbXBvcnQgeyBPcGVyYXRpb25zU2hhcmVkTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL3NoYXJlZCc7XG5cbmltcG9ydCB7IE9wZXJhdGlvbnNMaXN0Q29tcG9uZW50IH0gZnJvbSAnLi9vcGVyYXRpb25zLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IE9wZXJhdGlvbnNMaXN0SXRlbUNvbXBvbmVudCB9IGZyb20gJy4vb3BlcmF0aW9ucy1saXN0LWl0ZW0uY29tcG9uZW50JztcbmltcG9ydCB7IE9wZXJhdGlvbnNMaXN0U2VydmljZSB9IGZyb20gJy4vb3BlcmF0aW9ucy1saXN0LnNlcnZpY2UnO1xuXG5leHBvcnQgY29uc3Qgc2luZ2xlT3BlcmF0aW9uTGlzdFJvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIHBhdGg6ICdkZXZpY2Vjb250cm9sL3NpbmdsZScsXG4gICAgY29tcG9uZW50OiBPcGVyYXRpb25zTGlzdENvbXBvbmVudFxuICB9XG5dO1xuXG4vKipcbiAqIFRoaXMgbW9kdWxlIGFsbG93cyBmb3IgZGlzcGxheWluZyB0aGUgbGlzdCBpdGVtIGRldGFpbHMgb2Ygc2luZ2xlIGFuZCBidWxrIG9wZXJhdGlvbnMuXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIFN0YXR1c0ZpbHRlck1vZHVsZSxcbiAgICBPcGVyYXRpb25zTGlzdEl0ZW1EZXRhaWxzTW9kdWxlLFxuICAgIE9wZXJhdGlvbnNTaGFyZWRNb2R1bGUsXG4gICAgVG9vbHRpcE1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoc2luZ2xlT3BlcmF0aW9uTGlzdFJvdXRlcylcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbT3BlcmF0aW9uc0xpc3RDb21wb25lbnQsIE9wZXJhdGlvbnNMaXN0SXRlbUNvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtPcGVyYXRpb25zTGlzdENvbXBvbmVudCwgT3BlcmF0aW9uc0xpc3RJdGVtQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAgT3BlcmF0aW9uc0xpc3RTZXJ2aWNlLFxuICAgIEJ1bGtPcGVyYXRpb25MaXN0SXRlbVNlcnZpY2UsXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBjb250ZXh0OiBWaWV3Q29udGV4dC5EZXZpY2UsXG4gICAgICAgICAgcGF0aDogJ2NvbnRyb2wnLFxuICAgICAgICAgIGNvbXBvbmVudDogT3BlcmF0aW9uc0xpc3RDb21wb25lbnQsXG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ0NvbnRyb2wnKSxcbiAgICAgICAgICBpY29uOiAnYzh5LWljb24gYzh5LWljb24tZGV2aWNlLWNvbnRyb2wnLFxuICAgICAgICAgIHByaW9yaXR5OiA2MDBcbiAgICAgICAgfVxuICAgICAgXSBhcyBSb3V0ZVtdLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgT3BlcmF0aW9uc0xpc3RNb2R1bGUge31cbiJdfQ==