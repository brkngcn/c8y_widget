import { Component, ViewChild } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { flatten } from 'lodash-es';
import { BehaviorSubject, combineLatest } from 'rxjs';
import { shareReplay, switchMap, tap } from 'rxjs/operators';
import { gettext, OperationRealtimeService } from '@c8y/ngx-components';
import { OPERATION_STATUS_OPTIONS_MAP } from '@c8y/ngx-components/operations/shared';
import { OperationsListService } from './operations-list.service';
export class OperationsListComponent {
    constructor(realtime, operationsListService, route) {
        var _a;
        this.realtime = realtime;
        this.operationsListService = operationsListService;
        this.route = route;
        this.deviceId = (_a = this.route.snapshot.parent.data.contextData) === null || _a === void 0 ? void 0 : _a.id;
        this.OPERATION_STATUS_OPTIONS_MAP = OPERATION_STATUS_OPTIONS_MAP;
        this.refreshLoading = false;
        this.statusFilter$ = new BehaviorSubject(null);
        this.reload$ = new BehaviorSubject(null);
        this.operations$ = combineLatest(this.statusFilter$, this.reload$).pipe(tap(() => {
            this.refreshLoading = true;
        }), switchMap(([statusFilters]) => this.filter(statusFilters)), tap(() => {
            this.refreshLoading = false;
        }), shareReplay(1));
        this.title = this.route.snapshot.parent.data.contextData
            ? this.route.snapshot.parent.data.contextData.name
            : gettext('Device control');
    }
    filter(statusFilters) {
        const status = statusFilters && statusFilters.length > 0
            ? {
                status: flatten(statusFilters.map(statusFilter => statusFilter.status))
            }
            : {};
        return this.getOperations(status);
    }
    getOperations(filter) {
        const queryFilter = this.deviceId ? Object.assign(Object.assign({}, filter), { deviceId: this.deviceId }) : filter;
        return this.operationsListService.getOperations(queryFilter);
    }
    compareOperations(operationA, operationB) {
        return (new Date(operationA.creationTime).getTime() - new Date(operationB.creationTime).getTime());
    }
}
OperationsListComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operations-list',
                template: "<c8y-title> {{ title | translate }}</c8y-title>\n<c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form\">\n  <c8y-status-filter\n    #statusFilter\n    [options]=\"OPERATION_STATUS_OPTIONS_MAP\"\n    (onFilterChanged)=\"statusFilter$.next($event)\"\n  ></c8y-status-filter>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <c8y-realtime-btn [service]=\"realtime\"></c8y-realtime-btn>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\">\n  <button\n    class=\"btn btn-link d-flex a-i-center\"\n    title=\"{{ 'Reload' | translate }}\"\n    (click)=\"reload$.next()\"\n  >\n    <i c8yIcon=\"refresh\" [ngClass]=\"{ 'icon-spin': refreshLoading }\" class=\"m-r-4\"></i>\n    <span class=\"text-truncate\">\n      {{ 'Reload' | translate }}\n    </span>\n  </button>\n</c8y-action-bar-item>\n\n<!-- Empty state  -->\n<c8y-ui-empty-state\n  [icon]=\"'c8y-energy'\"\n  [title]=\"'No items to display.' | translate\"\n  [subtitle]=\"'Operations will be displayed here.' | translate\"\n  *ngIf=\"(operations$ | async)?.data.length === 0 && !(statusFilter$ | async)\"\n></c8y-ui-empty-state>\n<!-- No results empty state -->\n<c8y-ui-empty-state\n  [icon]=\"'search'\"\n  [title]=\"'No results to display.' | translate\"\n  [subtitle]=\"'Adjust or reset the filter.' | translate\"\n  *ngIf=\"(operations$ | async)?.data.length === 0 && (statusFilter$ | async)\"\n>\n  <button\n    type=\"button\"\n    title=\"{{ 'Reset filter' | translate }}\"\n    class=\"btn btn-primary\"\n    (click)=\"statusFilter.reset()\"\n    translate\n  >\n    Reset filter\n  </button>\n</c8y-ui-empty-state>\n\n<!-- Detailed list of operations + load more button -->\n<c8y-list-group class=\"m-b-24\" [ngClass]=\"{ 'dd-low': (operations$ | async)?.data.length < 10 }\">\n  <c8y-li\n    class=\"page-sticky-header c8y-list__item--empty-actions hidden-xs\"\n    *ngIf=\"(operations$ | async)?.data.length\"\n  >\n    <c8y-li-icon>\n      <i class=\"p-l-24\"></i>\n    </c8y-li-icon>\n    <c8y-li-body class=\"content-flex-57\">\n      <div class=\"col-5\">\n        {{ 'Operation' | translate }}\n      </div>\n      <div class=\"flex-grow\" *ngIf=\"!deviceId\">\n        {{ 'Device' | translate }}\n      </div>\n      <div class=\"col-4\">\n        {{ 'Date' | translate }}\n      </div>\n    </c8y-li-body>\n  </c8y-li>\n  <div\n    class=\"d-contents\"\n    *c8yFor=\"\n      let op of operations$ | async;\n      let i = index;\n      realtime: realtime;\n      realtimeOptions: { entityOrId: deviceId };\n      comparator: compareOperations.bind(this);\n      loadMore: 'auto'\n    \"\n  >\n    <c8y-operations-list-item [operation]=\"op\" (reload)=\"reload$.next()\" class=\"d-contents\">\n    </c8y-operations-list-item>\n  </div>\n</c8y-list-group>\n",
                providers: [OperationRealtimeService]
            },] }
];
OperationsListComponent.ctorParameters = () => [
    { type: OperationRealtimeService },
    { type: OperationsListService },
    { type: ActivatedRoute }
];
OperationsListComponent.propDecorators = {
    statusFilter: [{ type: ViewChild, args: ['statusFilter', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9ucy1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL29wZXJhdGlvbnMvb3BlcmF0aW9ucy1saXN0L29wZXJhdGlvbnMtbGlzdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDckQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDcEMsT0FBTyxFQUFFLGVBQWUsRUFBRSxhQUFhLEVBQWMsTUFBTSxNQUFNLENBQUM7QUFDbEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0QsT0FBTyxFQUFFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXhFLE9BQU8sRUFHTCw0QkFBNEIsRUFDN0IsTUFBTSx1Q0FBdUMsQ0FBQztBQUMvQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQU9sRSxNQUFNLE9BQU8sdUJBQXVCO0lBd0JsQyxZQUNTLFFBQWtDLEVBQ2pDLHFCQUE0QyxFQUM1QyxLQUFxQjs7UUFGdEIsYUFBUSxHQUFSLFFBQVEsQ0FBMEI7UUFDakMsMEJBQXFCLEdBQXJCLHFCQUFxQixDQUF1QjtRQUM1QyxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQTFCL0IsYUFBUSxHQUFvQixNQUFBLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVywwQ0FBRSxFQUFFLENBQUM7UUFDNUUsaUNBQTRCLEdBQThCLDRCQUE0QixDQUFDO1FBR3ZGLG1CQUFjLEdBQVksS0FBSyxDQUFDO1FBQ2hDLGtCQUFhLEdBQW9DLElBQUksZUFBZSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNFLFlBQU8sR0FBMEIsSUFBSSxlQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7UUFHM0QsZ0JBQVcsR0FBd0MsYUFBYSxDQUM5RCxJQUFJLENBQUMsYUFBYSxFQUNsQixJQUFJLENBQUMsT0FBTyxDQUNiLENBQUMsSUFBSSxDQUNKLEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDUCxJQUFJLENBQUMsY0FBYyxHQUFHLElBQUksQ0FBQztRQUM3QixDQUFDLENBQUMsRUFDRixTQUFTLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDLEVBQzFELEdBQUcsQ0FBQyxHQUFHLEVBQUU7WUFDUCxJQUFJLENBQUMsY0FBYyxHQUFHLEtBQUssQ0FBQztRQUM5QixDQUFDLENBQUMsRUFDRixXQUFXLENBQUMsQ0FBQyxDQUFDLENBQ2YsQ0FBQztRQU9BLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXO1lBQ3RELENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJO1lBQ2xELENBQUMsQ0FBQyxPQUFPLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsTUFBTSxDQUFDLGFBQTZCO1FBQ2xDLE1BQU0sTUFBTSxHQUNWLGFBQWEsSUFBSSxhQUFhLENBQUMsTUFBTSxHQUFHLENBQUM7WUFDdkMsQ0FBQyxDQUFDO2dCQUNFLE1BQU0sRUFBRSxPQUFPLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQzthQUN4RTtZQUNILENBQUMsQ0FBQyxFQUFFLENBQUM7UUFFVCxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDcEMsQ0FBQztJQUVELGFBQWEsQ0FBQyxNQUFPO1FBQ25CLE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxpQ0FBTSxNQUFNLEtBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUFRLElBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQztRQUNwRixPQUFPLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDL0QsQ0FBQztJQUVELGlCQUFpQixDQUFDLFVBQXNCLEVBQUUsVUFBc0I7UUFDOUQsT0FBTyxDQUNMLElBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQyxPQUFPLEVBQUUsR0FBRyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLENBQUMsT0FBTyxFQUFFLENBQzFGLENBQUM7SUFDSixDQUFDOzs7WUEzREYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxxQkFBcUI7Z0JBQy9CLGt2RkFBNkM7Z0JBQzdDLFNBQVMsRUFBRSxDQUFDLHdCQUF3QixDQUFDO2FBQ3RDOzs7WUFiaUIsd0JBQXdCO1lBT2pDLHFCQUFxQjtZQVpyQixjQUFjOzs7MkJBMkJwQixTQUFTLFNBQUMsY0FBYyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBmbGF0dGVuIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgY29tYmluZUxhdGVzdCwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgc2hhcmVSZXBsYXksIHN3aXRjaE1hcCwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgSU9wZXJhdGlvbiwgSVJlc3VsdExpc3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBPcGVyYXRpb25SZWFsdGltZVNlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFN0YXR1c0ZpbHRlckNvbXBvbmVudCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9zdGF0dXMtZmlsdGVyJztcbmltcG9ydCB7XG4gIFN0YXR1c09wdGlvbixcbiAgT3BlcmF0aW9uU3RhdHVzT3B0aW9uc01hcCxcbiAgT1BFUkFUSU9OX1NUQVRVU19PUFRJT05TX01BUFxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvc2hhcmVkJztcbmltcG9ydCB7IE9wZXJhdGlvbnNMaXN0U2VydmljZSB9IGZyb20gJy4vb3BlcmF0aW9ucy1saXN0LnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktb3BlcmF0aW9ucy1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICdvcGVyYXRpb25zLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICBwcm92aWRlcnM6IFtPcGVyYXRpb25SZWFsdGltZVNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIE9wZXJhdGlvbnNMaXN0Q29tcG9uZW50IHtcbiAgZGV2aWNlSWQ6IHN0cmluZyB8IG51bWJlciA9IHRoaXMucm91dGUuc25hcHNob3QucGFyZW50LmRhdGEuY29udGV4dERhdGE/LmlkO1xuICBPUEVSQVRJT05fU1RBVFVTX09QVElPTlNfTUFQOiBPcGVyYXRpb25TdGF0dXNPcHRpb25zTWFwID0gT1BFUkFUSU9OX1NUQVRVU19PUFRJT05TX01BUDtcblxuICB0aXRsZTogc3RyaW5nO1xuICByZWZyZXNoTG9hZGluZzogYm9vbGVhbiA9IGZhbHNlO1xuICBzdGF0dXNGaWx0ZXIkOiBCZWhhdmlvclN1YmplY3Q8U3RhdHVzT3B0aW9uW10+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChudWxsKTtcbiAgcmVsb2FkJDogQmVoYXZpb3JTdWJqZWN0PHZvaWQ+ID0gbmV3IEJlaGF2aW9yU3ViamVjdChudWxsKTtcbiAgQFZpZXdDaGlsZCgnc3RhdHVzRmlsdGVyJywgeyBzdGF0aWM6IHRydWUgfSkgc3RhdHVzRmlsdGVyOiBTdGF0dXNGaWx0ZXJDb21wb25lbnQ7XG5cbiAgb3BlcmF0aW9ucyQ6IE9ic2VydmFibGU8SVJlc3VsdExpc3Q8SU9wZXJhdGlvbj4+ID0gY29tYmluZUxhdGVzdChcbiAgICB0aGlzLnN0YXR1c0ZpbHRlciQsXG4gICAgdGhpcy5yZWxvYWQkXG4gICkucGlwZShcbiAgICB0YXAoKCkgPT4ge1xuICAgICAgdGhpcy5yZWZyZXNoTG9hZGluZyA9IHRydWU7XG4gICAgfSksXG4gICAgc3dpdGNoTWFwKChbc3RhdHVzRmlsdGVyc10pID0+IHRoaXMuZmlsdGVyKHN0YXR1c0ZpbHRlcnMpKSxcbiAgICB0YXAoKCkgPT4ge1xuICAgICAgdGhpcy5yZWZyZXNoTG9hZGluZyA9IGZhbHNlO1xuICAgIH0pLFxuICAgIHNoYXJlUmVwbGF5KDEpXG4gICk7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHJlYWx0aW1lOiBPcGVyYXRpb25SZWFsdGltZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBvcGVyYXRpb25zTGlzdFNlcnZpY2U6IE9wZXJhdGlvbnNMaXN0U2VydmljZSxcbiAgICBwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVxuICApIHtcbiAgICB0aGlzLnRpdGxlID0gdGhpcy5yb3V0ZS5zbmFwc2hvdC5wYXJlbnQuZGF0YS5jb250ZXh0RGF0YVxuICAgICAgPyB0aGlzLnJvdXRlLnNuYXBzaG90LnBhcmVudC5kYXRhLmNvbnRleHREYXRhLm5hbWVcbiAgICAgIDogZ2V0dGV4dCgnRGV2aWNlIGNvbnRyb2wnKTtcbiAgfVxuXG4gIGZpbHRlcihzdGF0dXNGaWx0ZXJzOiBTdGF0dXNPcHRpb25bXSkge1xuICAgIGNvbnN0IHN0YXR1cyA9XG4gICAgICBzdGF0dXNGaWx0ZXJzICYmIHN0YXR1c0ZpbHRlcnMubGVuZ3RoID4gMFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIHN0YXR1czogZmxhdHRlbihzdGF0dXNGaWx0ZXJzLm1hcChzdGF0dXNGaWx0ZXIgPT4gc3RhdHVzRmlsdGVyLnN0YXR1cykpXG4gICAgICAgICAgfVxuICAgICAgICA6IHt9O1xuXG4gICAgcmV0dXJuIHRoaXMuZ2V0T3BlcmF0aW9ucyhzdGF0dXMpO1xuICB9XG5cbiAgZ2V0T3BlcmF0aW9ucyhmaWx0ZXI/KSB7XG4gICAgY29uc3QgcXVlcnlGaWx0ZXIgPSB0aGlzLmRldmljZUlkID8geyAuLi5maWx0ZXIsIGRldmljZUlkOiB0aGlzLmRldmljZUlkIH0gOiBmaWx0ZXI7XG4gICAgcmV0dXJuIHRoaXMub3BlcmF0aW9uc0xpc3RTZXJ2aWNlLmdldE9wZXJhdGlvbnMocXVlcnlGaWx0ZXIpO1xuICB9XG5cbiAgY29tcGFyZU9wZXJhdGlvbnMob3BlcmF0aW9uQTogSU9wZXJhdGlvbiwgb3BlcmF0aW9uQjogSU9wZXJhdGlvbik6IG51bWJlciB7XG4gICAgcmV0dXJuIChcbiAgICAgIG5ldyBEYXRlKG9wZXJhdGlvbkEuY3JlYXRpb25UaW1lKS5nZXRUaW1lKCkgLSBuZXcgRGF0ZShvcGVyYXRpb25CLmNyZWF0aW9uVGltZSkuZ2V0VGltZSgpXG4gICAgKTtcbiAgfVxufVxuIl19