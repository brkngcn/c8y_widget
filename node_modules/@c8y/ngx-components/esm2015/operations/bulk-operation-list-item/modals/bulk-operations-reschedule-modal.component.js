import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { Subject } from 'rxjs';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
import * as ɵngcc2 from '@c8y/ngx-components/operations/bulk-operations-service';
import * as ɵngcc3 from '@c8y/ngx-components';
import * as ɵngcc4 from '@c8y/ngx-components/operations/operation-summary';
import * as ɵngcc5 from '@c8y/ngx-components/operations/bulk-operation-scheduler';
import * as ɵngcc6 from '@angular/forms';
export class BulkOperationsRescheduleModalComponent {
    constructor(bsModalRef, bulkOperationsService, alert) {
        this.bsModalRef = bsModalRef;
        this.bulkOperationsService = bulkOperationsService;
        this.alert = alert;
        this.closeSubject = new Subject();
    }
    ngOnInit() {
        this.modalTitle = this.getTitle();
    }
    onDateAndDelaySelect($event) {
        this.dateAndDelay = $event;
    }
    getTitle() {
        return this.isRetryOperation ? gettext('Retry operation') : gettext('Edit schedule');
    }
    onCancel() {
        this.bsModalRef.hide();
    }
    onSave() {
        return __awaiter(this, void 0, void 0, function* () {
            let newBulkOperation;
            this.bulkOperation.startDate = this.dateAndDelay.scheduledDate.toISOString();
            this.bulkOperation.creationRamp = this.dateAndDelay.delayInSeconds;
            if (this.isRetryOperation) {
                try {
                    newBulkOperation = yield this.bulkOperationsService.createBulkOperation(this.bulkOperation);
                    this.alert.success(gettext('Successfully rescheduled for a retry.'));
                }
                catch (er) {
                    this.alert.addServerFailure(er);
                }
            }
            else {
                try {
                    newBulkOperation = yield this.bulkOperationsService.updateBulkOperation(this.bulkOperation);
                    this.alert.success(gettext('Successfully rescheduled.'));
                }
                catch (er) {
                    this.alert.addServerFailure(er);
                }
            }
            // send back to component from which modal was called
            this.closeSubject.next(newBulkOperation.data);
            this.bsModalRef.hide();
        });
    }
}
BulkOperationsRescheduleModalComponent.ɵfac = function BulkOperationsRescheduleModalComponent_Factory(t) { return new (t || BulkOperationsRescheduleModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.BulkOperationsService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlertService)); };
BulkOperationsRescheduleModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: BulkOperationsRescheduleModalComponent, selectors: [["c8y-bulk-operations-reschedule-modal"]], decls: 22, vars: 12, consts: [[1, "viewport-modal"], [1, "modal-header", "dialog-header"], [1, "c8y-icon", "c8y-icon-energy"], [1, "modal-inner-scroll"], [1, "modal-body"], [1, "text-center"], [3, "description"], [1, "p-t-16", "center-block", 2, "max-width", "300px"], [3, "ngModel", "ngModelChange"], ["scheduler", "ngModel"], [1, "modal-footer"], ["type", "button", 1, "btn", "btn-default", 3, "title", "click"], ["translate", ""], ["id", "save-btn", "type", "button", 1, "btn", "btn-primary", 3, "title", "disabled", "click"]], template: function BulkOperationsRescheduleModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "h1", 2);
        ɵngcc0.ɵɵelementStart(3, "h4");
        ɵngcc0.ɵɵtext(4);
        ɵngcc0.ɵɵpipe(5, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "div", 3);
        ɵngcc0.ɵɵelementStart(7, "div", 4);
        ɵngcc0.ɵɵelementStart(8, "div", 5);
        ɵngcc0.ɵɵelement(9, "c8y-operation-summary", 6);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(10, "div", 7);
        ɵngcc0.ɵɵelementStart(11, "c8y-operation-scheduler", 8, 9);
        ɵngcc0.ɵɵlistener("ngModelChange", function BulkOperationsRescheduleModalComponent_Template_c8y_operation_scheduler_ngModelChange_11_listener($event) { return ctx.dateAndDelay = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "div", 10);
        ɵngcc0.ɵɵelementStart(14, "button", 11);
        ɵngcc0.ɵɵlistener("click", function BulkOperationsRescheduleModalComponent_Template_button_click_14_listener() { return ctx.onCancel(); });
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementStart(16, "span", 12);
        ɵngcc0.ɵɵtext(17, "Cancel");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "button", 13);
        ɵngcc0.ɵɵlistener("click", function BulkOperationsRescheduleModalComponent_Template_button_click_18_listener() { return ctx.onSave(); });
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵelementStart(20, "span", 12);
        ɵngcc0.ɵɵtext(21, "Save");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(12);
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 6, ctx.modalTitle));
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("description", ctx.bulkOperation.operationPrototype.description);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngModel", ctx.dateAndDelay);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(15, 8, "Cancel"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(19, 10, "Save"));
        ɵngcc0.ɵɵproperty("disabled", _r0 == null ? null : _r0.control == null ? null : _r0.control.errors);
    } }, directives: [ɵngcc4.OperationSummaryComponent, ɵngcc5.OperationSchedulerComponent, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc3.C8yTranslateDirective], pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
BulkOperationsRescheduleModalComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: BulkOperationsService },
    { type: AlertService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BulkOperationsRescheduleModalComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-bulk-operations-reschedule-modal',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header dialog-header\">\n    <h1 class=\"c8y-icon c8y-icon-energy\"></h1>\n    <h4>{{ modalTitle | translate }}</h4>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div class=\"modal-body\">\n      <div class=\"text-center\">\n        <c8y-operation-summary\n          [description]=\"bulkOperation.operationPrototype.description\"\n        ></c8y-operation-summary>\n      </div>\n      <div class=\"p-t-16 center-block\" style=\"max-width: 300px;\">\n        <c8y-operation-scheduler\n          [(ngModel)]=\"dateAndDelay\"\n          #scheduler=\"ngModel\"\n        ></c8y-operation-scheduler>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n    <button\n      (click)=\"onCancel()\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      title=\"{{ 'Cancel' | translate }}\"\n    >\n      <span translate>Cancel</span>\n    </button>\n    <button\n      id=\"save-btn\"\n      (click)=\"onSave()\"\n      type=\"button\"\n      class=\"btn btn-primary\"\n      title=\"{{ 'Save' | translate }}\"\n      [disabled]=\"scheduler?.control?.errors\"\n    >\n      <span translate>Save</span>\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }, { type: ɵngcc2.BulkOperationsService }, { type: ɵngcc3.AlertService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXJlc2NoZWR1bGUtbW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLWxpc3QtaXRlbS9tb2RhbHMvYnVsay1vcGVyYXRpb25zLXJlc2NoZWR1bGUtbW9kYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBRWxELE9BQU8sRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFL0IsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sd0RBQXdELENBQUM7Ozs7Ozs7O0FBTS9GLE1BQU0sT0FBTyxzQ0FBc0M7QUFBRyxJQU9wRCxZQUNTLFVBQXNCLEVBQ3JCLHFCQUE0QyxFQUM1QyxLQUFtQjtBQUM1QixRQUhRLGVBQVUsR0FBVixVQUFVLENBQVk7QUFBQyxRQUN0QiwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO0FBQUMsUUFDN0MsVUFBSyxHQUFMLEtBQUssQ0FBYztBQUMvQixRQVZFLGlCQUFZLEdBQTRCLElBQUksT0FBTyxFQUFFLENBQUM7QUFDeEQsSUFTSyxDQUFDO0FBQ04sSUFDRSxRQUFRO0FBQ1YsUUFBSSxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUN0QyxJQUFFLENBQUM7QUFDSCxJQUNFLG9CQUFvQixDQUFDLE1BQU07QUFDN0IsUUFBSSxJQUFJLENBQUMsWUFBWSxHQUFHLE1BQU0sQ0FBQztBQUMvQixJQUFFLENBQUM7QUFDSCxJQUNFLFFBQVE7QUFDVixRQUFJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3pGLElBQUUsQ0FBQztBQUNILElBQ0UsUUFBUTtBQUNWLFFBQUksSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixJQUFFLENBQUM7QUFDSCxJQUNRLE1BQU07QUFDZDtBQUNvQyxZQURoQyxJQUFJLGdCQUFnQixDQUFDO0FBQ3pCLFlBQUksSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDakYsWUFBSSxJQUFJLENBQUMsYUFBYSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQztBQUN2RSxZQUNJLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO0FBQy9CLGdCQUFNLElBQUk7QUFDVixvQkFBUSxnQkFBZ0IsR0FBRyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLENBQUMsYUFBYSxDQUFDLENBQUM7QUFDcEcsb0JBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLHVDQUF1QyxDQUFDLENBQUMsQ0FBQztBQUM3RSxpQkFBTztBQUFDLGdCQUFBLE9BQU8sRUFBRSxFQUFFO0FBQ25CLG9CQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDeEMsaUJBQU87QUFDUCxhQUFLO0FBQUMsaUJBQUs7QUFDWCxnQkFBTSxJQUFJO0FBQ1Ysb0JBQVEsZ0JBQWdCLEdBQUcsTUFBTSxJQUFJLENBQUMscUJBQXFCLENBQUMsbUJBQW1CLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBQ3BHLG9CQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLENBQUM7QUFDakUsaUJBQU87QUFBQyxnQkFBQSxPQUFPLEVBQUUsRUFBRTtBQUNuQixvQkFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO0FBQ3hDLGlCQUFPO0FBQ1AsYUFBSztBQUNMLFlBQ0kscURBQXFEO0FBQ3pELFlBQUksSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDbEQsWUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzNCLFFBQUUsQ0FBQztBQUVILEtBRkc7QUFDSDtrRUExREMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxzQ0FBc0Msa0JBQ2hEOzs7Ozs7Ozs7SUFBOEQsY0FDL0Q7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7eU5BQ0k7QUFBQztBQUFnRSxZQVQ3RCxVQUFVO0FBQUksWUFHZCxxQkFBcUI7QUFBSSxZQUp6QixZQUFZO0FBQUc7Ozs7Ozs7a0pBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJT3BlcmF0aW9uQnVsayB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSwgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgT3BlcmF0aW9uU2NoZWR1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc2NoZWR1bGVyJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1idWxrLW9wZXJhdGlvbnMtcmVzY2hlZHVsZS1tb2RhbCcsXG4gIHRlbXBsYXRlVXJsOiAnYnVsay1vcGVyYXRpb25zLXJlc2NoZWR1bGUtbW9kYWwuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEJ1bGtPcGVyYXRpb25zUmVzY2hlZHVsZU1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY2xvc2VTdWJqZWN0OiBTdWJqZWN0PElPcGVyYXRpb25CdWxrPiA9IG5ldyBTdWJqZWN0KCk7XG4gIGRhdGVBbmREZWxheTogT3BlcmF0aW9uU2NoZWR1bGU7XG4gIGJ1bGtPcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbkJ1bGs+O1xuICBpc1JldHJ5T3BlcmF0aW9uOiBib29sZWFuO1xuICBtb2RhbFRpdGxlOiBzdHJpbmc7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIGJzTW9kYWxSZWY6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBidWxrT3BlcmF0aW9uc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0OiBBbGVydFNlcnZpY2VcbiAgKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubW9kYWxUaXRsZSA9IHRoaXMuZ2V0VGl0bGUoKTtcbiAgfVxuXG4gIG9uRGF0ZUFuZERlbGF5U2VsZWN0KCRldmVudCkge1xuICAgIHRoaXMuZGF0ZUFuZERlbGF5ID0gJGV2ZW50O1xuICB9XG5cbiAgZ2V0VGl0bGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuaXNSZXRyeU9wZXJhdGlvbiA/IGdldHRleHQoJ1JldHJ5IG9wZXJhdGlvbicpIDogZ2V0dGV4dCgnRWRpdCBzY2hlZHVsZScpO1xuICB9XG5cbiAgb25DYW5jZWwoKSB7XG4gICAgdGhpcy5ic01vZGFsUmVmLmhpZGUoKTtcbiAgfVxuXG4gIGFzeW5jIG9uU2F2ZSgpIHtcbiAgICBsZXQgbmV3QnVsa09wZXJhdGlvbjtcbiAgICB0aGlzLmJ1bGtPcGVyYXRpb24uc3RhcnREYXRlID0gdGhpcy5kYXRlQW5kRGVsYXkuc2NoZWR1bGVkRGF0ZS50b0lTT1N0cmluZygpO1xuICAgIHRoaXMuYnVsa09wZXJhdGlvbi5jcmVhdGlvblJhbXAgPSB0aGlzLmRhdGVBbmREZWxheS5kZWxheUluU2Vjb25kcztcblxuICAgIGlmICh0aGlzLmlzUmV0cnlPcGVyYXRpb24pIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIG5ld0J1bGtPcGVyYXRpb24gPSBhd2FpdCB0aGlzLmJ1bGtPcGVyYXRpb25zU2VydmljZS5jcmVhdGVCdWxrT3BlcmF0aW9uKHRoaXMuYnVsa09wZXJhdGlvbik7XG4gICAgICAgIHRoaXMuYWxlcnQuc3VjY2VzcyhnZXR0ZXh0KCdTdWNjZXNzZnVsbHkgcmVzY2hlZHVsZWQgZm9yIGEgcmV0cnkuJykpO1xuICAgICAgfSBjYXRjaCAoZXIpIHtcbiAgICAgICAgdGhpcy5hbGVydC5hZGRTZXJ2ZXJGYWlsdXJlKGVyKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdHJ5IHtcbiAgICAgICAgbmV3QnVsa09wZXJhdGlvbiA9IGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLnVwZGF0ZUJ1bGtPcGVyYXRpb24odGhpcy5idWxrT3BlcmF0aW9uKTtcbiAgICAgICAgdGhpcy5hbGVydC5zdWNjZXNzKGdldHRleHQoJ1N1Y2Nlc3NmdWxseSByZXNjaGVkdWxlZC4nKSk7XG4gICAgICB9IGNhdGNoIChlcikge1xuICAgICAgICB0aGlzLmFsZXJ0LmFkZFNlcnZlckZhaWx1cmUoZXIpO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIHNlbmQgYmFjayB0byBjb21wb25lbnQgZnJvbSB3aGljaCBtb2RhbCB3YXMgY2FsbGVkXG4gICAgdGhpcy5jbG9zZVN1YmplY3QubmV4dChuZXdCdWxrT3BlcmF0aW9uLmRhdGEpO1xuICAgIHRoaXMuYnNNb2RhbFJlZi5oaWRlKCk7XG4gIH1cbn1cbiJdfQ==