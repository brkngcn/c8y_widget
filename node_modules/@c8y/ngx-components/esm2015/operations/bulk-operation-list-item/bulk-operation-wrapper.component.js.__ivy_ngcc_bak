import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
export class BulkOperationWrapperComponent {
    constructor(bulkOperationsService, modalRef, modalService) {
        this.bulkOperationsService = bulkOperationsService;
        this.modalRef = modalRef;
        this.modalService = modalService;
    }
    // openDetails function needs to be defined in the both places (component and the service) to avoid circular dependency.
    openDetails(bulkOperationId) {
        return __awaiter(this, void 0, void 0, function* () {
            const bulkOperation = (yield this.bulkOperationsService.getBulkOperationById(bulkOperationId)).data;
            const initialState = { bulkOperation };
            this.modalService.show(BulkOperationWrapperComponent, {
                initialState,
                class: 'modal-lg'
            });
        });
    }
}
BulkOperationWrapperComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-bulk-operations-wrapper',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header\">\n    <h3>{{ 'Bulk operation details' | translate }}</h3>\n  </div>\n\n  <div class=\"modal-inner-scroll\">\n    <c8y-bulk-operation-list-item\n      [bulkOperation]=\"bulkOperation\"\n      [detailsCollapsed]=\"false\"\n      [readOnly]=\"true\"\n      (showFailedOperation)=\"openDetails($event)\"\n    ></c8y-bulk-operation-list-item>\n  </div>\n\n  <div class=\"modal-footer\">\n    <button title=\"{{ 'Close' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n      {{ 'Close' | translate }}\n    </button>\n  </div>\n</div>\n"
            },] }
];
BulkOperationWrapperComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: BsModalRef },
    { type: BsModalService }
];
BulkOperationWrapperComponent.propDecorators = {
    bulkOperation: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24td3JhcHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLWxpc3QtaXRlbS9idWxrLW9wZXJhdGlvbi13cmFwcGVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFakQsT0FBTyxFQUFFLFVBQVUsRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSx3REFBd0QsQ0FBQztBQU0vRixNQUFNLE9BQU8sNkJBQTZCO0lBR3hDLFlBQ1MscUJBQTRDLEVBQzVDLFFBQW9CLEVBQ25CLFlBQTRCO1FBRjdCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsYUFBUSxHQUFSLFFBQVEsQ0FBWTtRQUNuQixpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7SUFDbkMsQ0FBQztJQUVKLHdIQUF3SDtJQUNsSCxXQUFXLENBQUMsZUFBZ0M7O1lBQ2hELE1BQU0sYUFBYSxHQUFtQixDQUNwQyxNQUFNLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxvQkFBb0IsQ0FBQyxlQUFlLENBQUMsQ0FDdkUsQ0FBQyxJQUFJLENBQUM7WUFDUCxNQUFNLFlBQVksR0FBRyxFQUFFLGFBQWEsRUFBRSxDQUFDO1lBQ3ZDLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLDZCQUE2QixFQUFFO2dCQUNwRCxZQUFZO2dCQUNaLEtBQUssRUFBRSxVQUFVO2FBQ2xCLENBQUMsQ0FBQztRQUNMLENBQUM7S0FBQTs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNkJBQTZCO2dCQUN2QyxtbkJBQXNEO2FBQ3ZEOzs7WUFMUSxxQkFBcUI7WUFEckIsVUFBVTtZQUFFLGNBQWM7Ozs0QkFRaEMsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb25CdWxrIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiwgQnNNb2RhbFNlcnZpY2UgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IEJ1bGtPcGVyYXRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1idWxrLW9wZXJhdGlvbnMtd3JhcHBlcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9idWxrLW9wZXJhdGlvbi13cmFwcGVyLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uV3JhcHBlckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGJ1bGtPcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbkJ1bGs+O1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBidWxrT3BlcmF0aW9uc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgICBwdWJsaWMgbW9kYWxSZWY6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlXG4gICkge31cblxuICAvLyBvcGVuRGV0YWlscyBmdW5jdGlvbiBuZWVkcyB0byBiZSBkZWZpbmVkIGluIHRoZSBib3RoIHBsYWNlcyAoY29tcG9uZW50IGFuZCB0aGUgc2VydmljZSkgdG8gYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jeS5cbiAgYXN5bmMgb3BlbkRldGFpbHMoYnVsa09wZXJhdGlvbklkOiBzdHJpbmcgfCBudW1iZXIpIHtcbiAgICBjb25zdCBidWxrT3BlcmF0aW9uOiBJT3BlcmF0aW9uQnVsayA9IChcbiAgICAgIGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvbnNTZXJ2aWNlLmdldEJ1bGtPcGVyYXRpb25CeUlkKGJ1bGtPcGVyYXRpb25JZClcbiAgICApLmRhdGE7XG4gICAgY29uc3QgaW5pdGlhbFN0YXRlID0geyBidWxrT3BlcmF0aW9uIH07XG4gICAgdGhpcy5tb2RhbFNlcnZpY2Uuc2hvdyhCdWxrT3BlcmF0aW9uV3JhcHBlckNvbXBvbmVudCwge1xuICAgICAgaW5pdGlhbFN0YXRlLFxuICAgICAgY2xhc3M6ICdtb2RhbC1sZydcbiAgICB9KTtcbiAgfVxufVxuIl19