import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
export class OperationDetailsTabsComponent {
    constructor() {
        this.readOnly = false;
        this.onRetryFailedOperations = new EventEmitter();
        this.showFailedOperation = new EventEmitter();
        this.tabs = [];
    }
    ngOnInit() {
        this.template = this.detailsTemplate;
        this.tabs = [
            {
                label: gettext('Details'),
                path: null,
                icon: 'asterisk',
                template: this.detailsTemplate
            },
            {
                label: gettext('History of changes'),
                path: null,
                icon: 'archive',
                template: this.auditTemplate
            }
        ];
    }
}
OperationDetailsTabsComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-operation-details-tabs',
                template: "<div #container class=\"tabContainer\">\n  <ul class=\"nav nav-tabs nav-tabsc8y\">\n    <li [ngClass]=\"{ active: tab.template === template }\" *ngFor=\"let tab of tabs\">\n      <button [title]=\"tab.label | translate\" class=\"btn\" (click)=\"template = tab.template\">\n        <i [c8yIcon]=\"tab.icon\"></i>\n        <span class=\"txt\">{{ tab.label | translate }}</span>\n      </button>\n    </li>\n  </ul>\n</div>\n\n<ng-container *ngTemplateOutlet=\"template\"></ng-container>\n\n<ng-template #details>\n  <c8y-operation-details\n    [operation]=\"operation\"\n    (showFailedOperation)=\"showFailedOperation.emit($event)\"\n    [bulkOperationModalDetailsService]=\"bulkOperationModalDetailsService\"\n  >\n  </c8y-operation-details>\n</ng-template>\n\n<ng-template #audit>\n  <c8y-audit-log [source]=\"operation.id\"></c8y-audit-log>\n</ng-template>\n\n<c8y-single-operations-list\n  *ngIf=\"operation.operationPrototype\"\n  [bulkOperation]=\"operation\"\n  [readOnly]=\"readOnly\"\n  (onRetryFailedOperations)=\"onRetryFailedOperations.emit($event)\"\n  class=\"d-flex d-col\"\n></c8y-single-operations-list>\n"
            },] }
];
OperationDetailsTabsComponent.propDecorators = {
    operation: [{ type: Input }],
    readOnly: [{ type: Input }],
    bulkOperationModalDetailsService: [{ type: Input }],
    onRetryFailedOperations: [{ type: Output }],
    showFailedOperation: [{ type: Output }],
    detailsTemplate: [{ type: ViewChild, args: ['details', { static: true },] }],
    auditTemplate: [{ type: ViewChild, args: ['audit', { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLWRldGFpbHMtdGFicy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9vcGVyYXRpb25zL29wZXJhdGlvbnMtbGlzdC1pdGVtLWRldGFpbHMvb3BlcmF0aW9uLWRldGFpbHMtdGFicy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFDVCxZQUFZLEVBQ1osS0FBSyxFQUVMLE1BQU0sRUFDTixTQUFTLEVBRVYsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLE9BQU8sRUFBTyxNQUFNLHFCQUFxQixDQUFDO0FBT25ELE1BQU0sT0FBTyw2QkFBNkI7SUFKMUM7UUFRRSxhQUFRLEdBQVksS0FBSyxDQUFDO1FBSWhCLDRCQUF1QixHQUEwQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3BGLHdCQUFtQixHQUF5QixJQUFJLFlBQVksRUFBRSxDQUFDO1FBS3pFLFNBQUksR0FBVSxFQUFFLENBQUM7SUFxQm5CLENBQUM7SUFsQkMsUUFBUTtRQUNOLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQztRQUVyQyxJQUFJLENBQUMsSUFBSSxHQUFHO1lBQ1Y7Z0JBQ0UsS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7Z0JBQ3pCLElBQUksRUFBRSxJQUFJO2dCQUNWLElBQUksRUFBRSxVQUFVO2dCQUNoQixRQUFRLEVBQUUsSUFBSSxDQUFDLGVBQWU7YUFDL0I7WUFDRDtnQkFDRSxLQUFLLEVBQUUsT0FBTyxDQUFDLG9CQUFvQixDQUFDO2dCQUNwQyxJQUFJLEVBQUUsSUFBSTtnQkFDVixJQUFJLEVBQUUsU0FBUztnQkFDZixRQUFRLEVBQUUsSUFBSSxDQUFDLGFBQWE7YUFDN0I7U0FDRixDQUFDO0lBQ0osQ0FBQzs7O1lBdENGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsNEJBQTRCO2dCQUN0Qyw2bUNBQXNEO2FBQ3ZEOzs7d0JBRUUsS0FBSzt1QkFFTCxLQUFLOytDQUdMLEtBQUs7c0NBRUwsTUFBTTtrQ0FDTixNQUFNOzhCQUVOLFNBQVMsU0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOzRCQUNyQyxTQUFTLFNBQUMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT25Jbml0LFxuICBPdXRwdXQsXG4gIFZpZXdDaGlsZCxcbiAgVmlld0NvbnRhaW5lclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElPcGVyYXRpb24sIElPcGVyYXRpb25CdWxrIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgZ2V0dGV4dCwgVGFiIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uTW9kYWxEZXRhaWxzU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbi1tb2RhbC1kZXRhaWxzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LW9wZXJhdGlvbi1kZXRhaWxzLXRhYnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vb3BlcmF0aW9uLWRldGFpbHMtdGFicy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgT3BlcmF0aW9uRGV0YWlsc1RhYnNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBASW5wdXQoKVxuICBvcGVyYXRpb246IFBhcnRpYWw8SU9wZXJhdGlvbiAmIElPcGVyYXRpb25CdWxrPjtcbiAgQElucHV0KClcbiAgcmVhZE9ubHk6IGJvb2xlYW4gPSBmYWxzZTtcblxuICBASW5wdXQoKVxuICBidWxrT3BlcmF0aW9uTW9kYWxEZXRhaWxzU2VydmljZTogQnVsa09wZXJhdGlvbk1vZGFsRGV0YWlsc1NlcnZpY2U7XG4gIEBPdXRwdXQoKSBvblJldHJ5RmFpbGVkT3BlcmF0aW9uczogRXZlbnRFbWl0dGVyPFBhcnRpYWw8SU9wZXJhdGlvbkJ1bGs+PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIHNob3dGYWlsZWRPcGVyYXRpb246IEV2ZW50RW1pdHRlcjxudW1iZXI+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIEBWaWV3Q2hpbGQoJ2RldGFpbHMnLCB7IHN0YXRpYzogdHJ1ZSB9KSBkZXRhaWxzVGVtcGxhdGU6IGFueTtcbiAgQFZpZXdDaGlsZCgnYXVkaXQnLCB7IHN0YXRpYzogdHJ1ZSB9KSBhdWRpdFRlbXBsYXRlOiBhbnk7XG5cbiAgdGFiczogVGFiW10gPSBbXTtcbiAgdGVtcGxhdGU6IFZpZXdDb250YWluZXJSZWY7XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy50ZW1wbGF0ZSA9IHRoaXMuZGV0YWlsc1RlbXBsYXRlO1xuXG4gICAgdGhpcy50YWJzID0gW1xuICAgICAge1xuICAgICAgICBsYWJlbDogZ2V0dGV4dCgnRGV0YWlscycpLFxuICAgICAgICBwYXRoOiBudWxsLFxuICAgICAgICBpY29uOiAnYXN0ZXJpc2snLFxuICAgICAgICB0ZW1wbGF0ZTogdGhpcy5kZXRhaWxzVGVtcGxhdGVcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdIaXN0b3J5IG9mIGNoYW5nZXMnKSxcbiAgICAgICAgcGF0aDogbnVsbCxcbiAgICAgICAgaWNvbjogJ2FyY2hpdmUnLFxuICAgICAgICB0ZW1wbGF0ZTogdGhpcy5hdWRpdFRlbXBsYXRlXG4gICAgICB9XG4gICAgXTtcbiAgfVxufVxuIl19