import { __awaiter } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { Router } from '@angular/router';
import { ApplicationService } from '@c8y/client';
import { AlertService, gettext, WizardService } from '@c8y/ngx-components';
import { BehaviorSubject } from 'rxjs';
import { EcosystemService } from './../ecosystem.service';
export class ApplicationCardComponent {
    constructor(applicationService, ecosystemService, alertService, router, wizardService) {
        this.applicationService = applicationService;
        this.ecosystemService = ecosystemService;
        this.alertService = alertService;
        this.router = router;
        this.wizardService = wizardService;
        this.canEdit = true;
        this.onAppDeleted = new EventEmitter();
        this.onAppCloned = new EventEmitter();
        this.CANNOT_DELETE_HINT = gettext(`Subscribed or current applications can't be deleted. Delete the application on the parent tenant or unsubscribe it from the current.`);
    }
    get openButtonTitle() {
        return !this.disableOpenInBrowser ?
            gettext('Open') :
            gettext('This application is overridden.');
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.appState = this.ecosystemService.getAppState(this.app);
            const contextPath = this.app.contextPath;
            this.canOpenInBrowser = this.ecosystemService.canOpenAppInBrowser(this.app);
            this.disableOpenInBrowser =
                this.canOpenInBrowser && (yield this.ecosystemService.isOverwrittenByCustomApp(this.app));
            this.canDelete = yield this.ecosystemService.canDeleteApp(this.app);
            this.isPackage = this.ecosystemService.isPackage(this.app);
            this.isFeature = this.ecosystemService.isFeature(this.app);
            this.isMicroservice = this.ecosystemService.isMicroservice(this.app);
            this.isExternal = this.ecosystemService.isExternal(this.app);
            this.canClone = !this.isMicroservice;
        });
    }
    detail() {
        this.isMicroservice
            ? this.router.navigateByUrl(`/microservices/${this.app.id}`)
            : this.router.navigateByUrl(`/ecosystem/application/${this.app.id}`);
    }
    openApp() {
        window.open(this.applicationService.getHref(this.app));
    }
    delete() {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.ecosystemService.deleteApp(this.app);
                this.onAppDeleted.emit();
            }
            catch (ex) {
                if (ex) {
                    this.alertService.addServerFailure(ex);
                }
            }
        });
    }
    clone() {
        return __awaiter(this, void 0, void 0, function* () {
            const wizardConfig = {
                headerText: 'Add Application',
                headerIcon: 'c8y-atom'
            };
            const initialState = {
                wizardConfig,
                componentInitialState: {
                    selectedApp: new BehaviorSubject(this.app)
                },
                id: 'duplicateApplication'
            };
            const modalOptions = { initialState };
            const modalRef = this.wizardService.show(modalOptions);
            modalRef.content.onClose.subscribe(() => {
                this.onAppCloned.next();
            });
        });
    }
}
ApplicationCardComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-application-card',
                template: "<div class=\"card pointer card--d-col\">\n  <div (click)=\"detail()\" class=\"card-block text-center card-column-40\">\n    <div class=\"card-appicon\">\n      <c8y-app-icon\n        *ngIf=\"!isPackage && !isFeature && !isMicroservice && !isExternal\"\n        [app]=\"app\"\n        [contextPath]=\"app.contextPath\"\n        [name]=\"app.name\"\n      ></c8y-app-icon>\n      <i *ngIf=\"isPackage\" c8yIcon=\"big-parcel\"></i>\n      <i *ngIf=\"isFeature\" c8yIcon=\"tab\"></i>\n      <i *ngIf=\"isMicroservice\" c8yIcon=\"microchip\"></i>\n      <i *ngIf=\"isExternal\" c8yIcon=\"globe1\"></i>\n    </div>\n    <p class=\"e2e-appCardName text-medium\" title=\"{{ app | humanizeAppName | async }}\">\n      {{ app | humanizeAppName | async }}\n    </p>\n    <small *ngIf=\"app.manifest?.version && (isPackage || isMicroservice)\" class=\"text-muted\">\n      <em>{{ app.manifest.version }}</em>\n    </small>\n  </div>\n  <div (click)=\"detail()\" class=\"card-block p-0 no-min-height card--d-col card-column-80 flex-grow\">\n    <div class=\"card-block no-min-height p-t-0 p-b-0 card-column-80\">\n      <div *ngIf=\"app.description\" class=\"text-center-grid\">\n        <div class=\"p-b-8 card-hidden-grid\"></div>\n        <p class=\"small l-h-tight p-b-8 p-l-0 p-r-0\">{{ app.description | translate }}</p>\n      </div>\n    </div>\n    <div class=\"card-block no-min-height p-t-0 p-b-0 card-column-20 text-center-grid\">\n      <span [ngClass]=\"appState.class\" class=\"label\">{{ appState.label | translate }}</span>\n    </div>\n    <div class=\"card-footer no-min-height p-t-0 p-b-0 card-column-20 text-center-grid\">\n      <div class=\"p-b-16 card-hidden-list\"></div>\n      <button\n        (click)=\"openApp(); $event.stopPropagation()\"\n        *ngIf=\"canOpenInBrowser\"\n        [disabled]=\"disableOpenInBrowser\"\n        class=\"btn btn-xs btn-default\"\n        [title]=\"openButtonTitle | translate\"\n      >\n        <i c8yIcon=\"external-link\" class=\"m-r-4\"></i>\n        {{ 'Open' | translate }}\n      </button>\n      <div class=\"p-b-32 card-hidden-list\"></div>\n    </div>\n  </div>\n\n  <div *ngIf=\"canEdit || canOpenInBrowser || canDelete\" class=\"card-actions m-t-0\">\n    <div class=\"dropdown\" dropdown>\n      <button\n        class=\"dropdown-toggle c8y-dropdown\"\n        dropdownToggle\n        title=\"{{ 'Settings' | translate }}\"\n      >\n        <i c8yIcon=\"ellipsis-v\"></i>\n      </button>\n      <ul *dropdownMenu class=\"dropdown-menu dropdown-menu-right\">\n        <li *ngIf=\"canEdit\">\n          <button (click)=\"detail()\" title=\"{{ 'Edit' | translate }}\">\n            <i c8yIcon=\"pencil\" class=\"m-r-4\"></i>\n            {{ 'Edit' | translate }}\n          </button>\n        </li>\n        <ng-container *c8yIfAllowed=\"['ROLE_APPLICATION_MANAGEMENT_ADMIN']\">\n          <li>\n            <button\n              (click)=\"delete()\"\n              href=\"\"\n              title=\"{{ canDelete ? 'Delete' : (CANNOT_DELETE_HINT | translate) }}\"\n              [disabled]=\"!canDelete\"\n            >\n              <i c8yIcon=\"trash\" class=\"m-r-4\"></i>\n              {{ 'Delete' | translate }}\n            </button>\n          </li>\n          <li *ngIf=\"canClone\">\n            <button\n              (click)=\"clone()\"\n              href=\"\"\n              [title]=\"'Clone application' | translate\"\n            >\n              <i c8yIcon=\"copy\" class=\"m-r-4\"></i>\n              {{ 'Clone application' | translate }}\n            </button>\n          </li>\n        </ng-container>\n      </ul>\n    </div>\n  </div>\n</div>\n"
            },] }
];
ApplicationCardComponent.ctorParameters = () => [
    { type: ApplicationService },
    { type: EcosystemService },
    { type: AlertService },
    { type: Router },
    { type: WizardService }
];
ApplicationCardComponent.propDecorators = {
    app: [{ type: Input }],
    canEdit: [{ type: Input }],
    onAppDeleted: [{ type: Output }],
    onAppCloned: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,