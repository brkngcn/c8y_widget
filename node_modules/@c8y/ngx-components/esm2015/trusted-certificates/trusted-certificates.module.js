import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, HOOK_NAVIGATOR_NODES } from '@c8y/ngx-components';
import { TrustedCertificatesComponent } from './trusted-certificates.component';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { AddTrustedCertificateComponent } from './add-trusted-certificate.component';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import { ReactiveFormsModule } from '@angular/forms';
import { TrustedCertificatesNavigationFactory } from './trusted-certificates-navigation.factory';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/router';
import * as ɵngcc2 from 'ngx-bootstrap/dropdown';
const trustedCertificatesRoutes = [
    {
        path: 'trusted-certificates',
        component: TrustedCertificatesComponent
    }
];
export class TrustedCertificatesModule {
}
TrustedCertificatesModule.ɵfac = function TrustedCertificatesModule_Factory(t) { return new (t || TrustedCertificatesModule)(); };
TrustedCertificatesModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: TrustedCertificatesModule });
TrustedCertificatesModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: TrustedCertificatesNavigationFactory,
            multi: true
        }
    ], imports: [[
            CoreModule,
            CommonModule,
            RouterModule.forChild(trustedCertificatesRoutes),
            BsDropdownModule.forRoot(),
            TooltipModule,
            ReactiveFormsModule,
            ButtonsModule,
            PopoverModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TrustedCertificatesModule, [{
        type: NgModule,
        args: [{
                declarations: [TrustedCertificatesComponent, AddTrustedCertificateComponent],
                exports: [],
                imports: [
                    CoreModule,
                    CommonModule,
                    RouterModule.forChild(trustedCertificatesRoutes),
                    BsDropdownModule.forRoot(),
                    TooltipModule,
                    ReactiveFormsModule,
                    ButtonsModule,
                    PopoverModule
                ],
                entryComponents: [TrustedCertificatesComponent, AddTrustedCertificateComponent],
                providers: [
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: TrustedCertificatesNavigationFactory,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TrustedCertificatesModule, { declarations: function () { return [TrustedCertificatesComponent, AddTrustedCertificateComponent]; }, imports: function () { return [CoreModule,
        CommonModule, ɵngcc1.RouterModule, ɵngcc2.BsDropdownModule, TooltipModule,
        ReactiveFormsModule,
        ButtonsModule,
        PopoverModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJ1c3RlZC1jZXJ0aWZpY2F0ZXMubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi90cnVzdGVkLWNlcnRpZmljYXRlcy90cnVzdGVkLWNlcnRpZmljYXRlcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQVMsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRixPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUMxRCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSw4QkFBOEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQzs7OztBQUVqRyxNQUFNLHlCQUF5QixHQUFZO0FBQzNDLElBQUU7QUFDRixRQUFJLElBQUksRUFBRSxzQkFBc0I7QUFDaEMsUUFBSSxTQUFTLEVBQUUsNEJBQTRCO0FBQzNDLEtBQUc7QUFDSCxDQUFDLENBQUM7QUF3QkYsTUFBTSxPQUFPLHlCQUF5QjtBQUFHO3FEQXRCeEMsUUFBUSxTQUFDLGtCQUNSLFlBQVksRUFBRSxDQUFDO0FBQTRCLEVBQUUsOEJBQThCLENBQUMsa0JBQzVFLE9BQU8sRUFBRSxFQUFFLGtCQUNYLE9BQU8sRUFBRTtFQUNQLFVBQVUsc0JBQ1YsWUFBWSxzQkFDWixZQUFZLENBQUM7R0FBUSxDQUFDO21CQUF5QixDQUFDLHNCQUNoRDtlQUFnQixDQUFDLE9BQU8sRUFBRSxzQkFDMUI7QUFBYSxzQkFDYjs7T0FBbUI7VUFDbkIsYUFBYTtxQkFDYjtRQUFhLGtCQUNkLGtCQUNELGVBQWUsRUFBRTtBQUFDLDRCQUE0QixFQUFFO29CQUE4QixDQUFDO1lBQy9FLFNBQVMsRUFBRTtZQUNUO1dBQ0UsT0FBTyxFQUFFO2NBQW9CO3lCQUM3QixRQUFRLEVBQUUsb0NBQW9DLDBCQUM5QyxLQUFLLEVBQUUsSUFBSTtTQUNaO0dBQ0Y7QUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZSwgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSwgQ29yZU1vZHVsZSwgSE9PS19OQVZJR0FUT1JfTk9ERVMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFRydXN0ZWRDZXJ0aWZpY2F0ZXNDb21wb25lbnQgfSBmcm9tICcuL3RydXN0ZWQtY2VydGlmaWNhdGVzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCc0Ryb3Bkb3duTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9kcm9wZG93bic7XG5pbXBvcnQgeyBQb3BvdmVyTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wb3BvdmVyJztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3Rvb2x0aXAnO1xuaW1wb3J0IHsgQWRkVHJ1c3RlZENlcnRpZmljYXRlQ29tcG9uZW50IH0gZnJvbSAnLi9hZGQtdHJ1c3RlZC1jZXJ0aWZpY2F0ZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQnV0dG9uc01vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvYnV0dG9ucyc7XG5pbXBvcnQgeyBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgVHJ1c3RlZENlcnRpZmljYXRlc05hdmlnYXRpb25GYWN0b3J5IH0gZnJvbSAnLi90cnVzdGVkLWNlcnRpZmljYXRlcy1uYXZpZ2F0aW9uLmZhY3RvcnknO1xuXG5jb25zdCB0cnVzdGVkQ2VydGlmaWNhdGVzUm91dGVzOiBSb3V0ZVtdID0gW1xuICB7XG4gICAgcGF0aDogJ3RydXN0ZWQtY2VydGlmaWNhdGVzJyxcbiAgICBjb21wb25lbnQ6IFRydXN0ZWRDZXJ0aWZpY2F0ZXNDb21wb25lbnRcbiAgfVxuXTtcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbVHJ1c3RlZENlcnRpZmljYXRlc0NvbXBvbmVudCwgQWRkVHJ1c3RlZENlcnRpZmljYXRlQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW10sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQodHJ1c3RlZENlcnRpZmljYXRlc1JvdXRlcyksXG4gICAgQnNEcm9wZG93bk1vZHVsZS5mb3JSb290KCksXG4gICAgVG9vbHRpcE1vZHVsZSxcbiAgICBSZWFjdGl2ZUZvcm1zTW9kdWxlLFxuICAgIEJ1dHRvbnNNb2R1bGUsXG4gICAgUG9wb3Zlck1vZHVsZVxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtUcnVzdGVkQ2VydGlmaWNhdGVzQ29tcG9uZW50LCBBZGRUcnVzdGVkQ2VydGlmaWNhdGVDb21wb25lbnRdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBUcnVzdGVkQ2VydGlmaWNhdGVzTmF2aWdhdGlvbkZhY3RvcnksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBUcnVzdGVkQ2VydGlmaWNhdGVzTW9kdWxlIHt9XG4iXX0=