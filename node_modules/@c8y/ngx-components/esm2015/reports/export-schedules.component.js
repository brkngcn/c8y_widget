import { __awaiter } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { ActionType } from './export-schedules.interface';
import { ReportsService } from './reports.service';
import { BsModalService } from 'ngx-bootstrap/modal';
import { ScheduleModalComponent } from './schedule-modal.component';
import { gettext, OptionsService } from '@c8y/ngx-components';
import { cloneDeep } from 'lodash-es';
import { CronService } from './cron.service';
import { TranslateService } from '@ngx-translate/core';
import { UserService } from '@c8y/client';
export class ExportSchedulesComponent {
    constructor(reportsService, bsModalService, cronService, translateService, userService, optionsService) {
        this.reportsService = reportsService;
        this.bsModalService = bsModalService;
        this.cronService = cronService;
        this.translateService = translateService;
        this.userService = userService;
        this.optionsService = optionsService;
        this.onSchedulesUpdate = new EventEmitter();
        this.scheduleList = [];
        this.initialSchedule = {
            timestamp: null,
            emailConfig: {
                to: [],
                cc: [],
                bcc: [],
                replyTo: '',
                text: '',
                subject: ''
            },
            cronConfig: {
                minute: '0',
                hour: '0',
                day: '1',
                month: '1',
                weekday: '?'
            }
        };
        this.listClass = 'interact-list';
        this.sortReverse = false;
        this.isOpen = {};
        this.isEditMenuOpen = false;
        this.currentUserEmail = '';
        this.hasRequiredRole = false;
        this.defaultExportEmailTemplate = this.translateService.instant(gettext('File with exported data can be downloaded from {tenant-domain}/apps/cockpit/index.html#?download={binaryId}.'));
        this.loadingStatus = {
            inProgress: false,
            done: false,
            error: false
        };
    }
    set exportId(exportId) {
        this._exportId = exportId;
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            this.hasRequiredRole = yield this.checkRole();
            this.getScheduleList(true);
            const currentUserEmail = yield this.getCurrentUserEmail();
            this.initialSchedule.emailConfig.text = yield this.optionsService.getTenantOption('configuration', 'export.data.mail.text', this.defaultExportEmailTemplate);
            this.initialSchedule.emailConfig.to = currentUserEmail;
            this.exp = yield this.reportsService.getExport(this._exportId);
            this.initialSchedule.emailConfig.subject = this.translateService.instant(gettext('Export of "{{expName}}"'), { expName: this.exp.name });
        });
    }
    ngOnChanges() {
        this.translateButtonTitles();
    }
    translateButtonTitles() {
        this.buttonLabels = {
            edit: this.translateService.instant(gettext('Edit schedule')),
            editNoPermission: this.translateService.instant(gettext('Edit schedule - no permissions')),
            duplicate: this.translateService.instant(gettext('Duplicate schedule')),
            duplicateNoPermission: this.translateService.instant(gettext('Duplicate schedule - no permissions')),
            delete: this.translateService.instant(gettext('Delete schedule')),
            deleteNoPermission: this.translateService.instant(gettext('Delete schedule - no permissions'))
        };
    }
    getCurrentUserEmail() {
        return __awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.userService.current();
            return data && data.email ? [data.email] : [];
        });
    }
    checkRole() {
        return __awaiter(this, void 0, void 0, function* () {
            const { data } = yield this.userService.current();
            const role = 'ROLE_SCHEDULE_REPORT_ADMIN';
            const hasRole = this.userService.hasRole(data, role);
            return hasRole;
        });
    }
    getScheduleList(withProgress) {
        return __awaiter(this, void 0, void 0, function* () {
            if (withProgress) {
                this.loadingStatus.inProgress = true;
            }
            this.scheduleList = yield this.reportsService.getScheduleList(this._exportId);
            if (withProgress) {
                this.loadingStatus.inProgress = false;
            }
        });
    }
    addSchedule() {
        this.openAddEditModal(this._exportId, this.initialSchedule, ActionType.CREATE);
    }
    editSchedule(schedule, index, event) {
        if (this.hasRequiredRole) {
            event.preventDefault();
            this.openAddEditModal(this._exportId, schedule, ActionType.EDIT, index);
        }
    }
    duplicateSchedule(schedule, event) {
        event.preventDefault();
        this.openAddEditModal(this._exportId, schedule, ActionType.DUPLICATE);
    }
    openAddEditModal(exportId, schedule, actionType, index) {
        const payload = { actionType, exportId, schedule: cloneDeep(schedule) };
        const modalOptions = { class: 'modal-sm', initialState: payload };
        this.modalRef = this.bsModalService.show(ScheduleModalComponent, modalOptions);
        this.modalRef.content.emitter.subscribe((load) => this.getMessageFromModal(load, index));
    }
    getMessageFromModal(payload, index) {
        if (payload.success) {
            if (index !== undefined) {
                this.scheduleList[index] = payload.schedule;
            }
            else {
                this.scheduleList.push(payload.schedule);
            }
            this.onSchedulesUpdate.emit(this.scheduleList);
        }
    }
    removeSchedule(schedule, index, event) {
        event.preventDefault();
        this.scheduleList.splice(index, 1);
        this.onSchedulesUpdate.emit(this.scheduleList);
    }
}
ExportSchedulesComponent.decorators = [
    { type: Component, args: [{
                selector: 'export-schedules',
                template: "<div>\n  <div *ngIf=\"loadingStatus.inProgress\" class=\"flex-row\">\n    <c8y-loading></c8y-loading>\n    <span translate>Retrieving schedules\u2026</span>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && loadingStatus.done && loadingStatus.error\">\n    <div class=\"alert alert-warning max-width-100\" translate>\n      Could not load schedules list.\n    </div>\n  </div>\n\n  <div *ngIf=\"!loadingStatus.inProgress && !loadingStatus.done && !loadingStatus.error\">\n    <div class=\"c8y-empty-state text-center max-width-100\" *ngIf=\"!scheduleList.length\">\n      <h1 c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></h1>\n      <h3 translate>No export schedules defined.</h3>\n    </div>\n\n    <div class=\"c8y-list__group\" *ngIf=\"scheduleList.length\">\n      <div class=\"c8y-list__item hidden-xs\">\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i class=\"p-l-24\"></i>\n          </div>\n          <div class=\"c8y-list__item__body\">\n            <div class=\"flex-row\">\n              <div class=\"col-sm-6\">\n                <label class=\"m-0\">\n                  {{ 'Description' | translate }}\n                </label>\n              </div>\n              <div class=\"col-sm-6 m-r-40\">\n                <label class=\"m-0\">\n                  {{ 'Frequency' | translate }}\n                </label>\n              </div>\n            </div>\n          </div>\n          <span></span>\n        </div>\n      </div>\n\n      <div\n        class=\"c8y-list__item flex-row pointer\"\n        *ngFor=\"let schedule of scheduleList; index as i\"\n        (click)=\"editSchedule(schedule, i, $event)\"\n      >\n        <div class=\"c8y-list__item__block\">\n          <div class=\"c8y-list__item__icon\">\n            <i c8yIcon=\"c8y-report\" class=\"c8y-icon-duocolor\"></i>\n          </div>\n          <div class=\"c8y-list__item__body flex-row\">\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"text-truncate\" title=\"{{ schedule.emailConfig.subject }}\">\n                {{ schedule.emailConfig.subject }}\n              </div>\n            </div>\n            <div class=\"col-sm-6 col-xs-6\">\n              <div class=\"flex-row a-i-baseline\">\n                <i c8yIcon=\"calendar\" class=\"text-muted m-r-4\"></i>\n                <span class=\"smart-rule-information\">\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 2\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ minutes: schedule.cronConfig.minute | number: '2.0-0' }\"\n                  >\n                    Hourly: {{ minutes }} minute(s) past the hour.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 3\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Daily: at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 4\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      weekDay: cronService.getWeekDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Weekly: {{ weekDay }}, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 5\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Monthly: {{ monthDay }} day of the month, at {{ hour }}:{{ minutes }}.\n                  </span>\n                  <span\n                    *ngIf=\"cronService.getBase(schedule.cronConfig) === 6\"\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{\n                      month: cronService.getMonthName(schedule.cronConfig),\n                      monthDay: cronService.getMonthDayName(schedule.cronConfig),\n                      hour: schedule.cronConfig.hour | number: '2.0-0',\n                      minutes: schedule.cronConfig.minute | number: '2.0-0'\n                    }\"\n                  >\n                    Yearly: {{ month }}, {{ monthDay }} day of the month, at {{ hour }}:{{\n                      minutes\n                    }}.\n                  </span>\n                </span>\n              </div>\n            </div>\n          </div>\n          <div class=\"c8y-list__item__actions\" (click)=\"$event.stopPropagation()\">\n            <div class=\"settings dropdown\" dropdown>\n              <button\n                class=\"dropdown-toggle c8y-dropdown\"\n                dropdownToggle\n                aria-haspopup=\"true\"\n                aria-expanded=\"false\"\n                title=\"{{ 'Actions' | translate }}\"\n              >\n                <i [c8yIcon]=\"'ellipsis-v'\"></i>\n              </button>\n              <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"hasRequiredRole ? buttonLabels.edit : buttonLabels.editNoPermission\"\n                    (click)=\"editSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'pencil'\"></i> {{ 'Edit' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.duplicate : buttonLabels.duplicateNoPermission\n                    \"\n                    (click)=\"duplicateSchedule(schedule, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'copy'\"></i> {{ 'Duplicate' | translate }}\n                  </button>\n                </li>\n                <li role=\"menuitem\">\n                  <button\n                    [title]=\"\n                      hasRequiredRole ? buttonLabels.delete : buttonLabels.deleteNoPermission\n                    \"\n                    (click)=\"removeSchedule(schedule, i, $event)\"\n                    [disabled]=\"!hasRequiredRole\"\n                  >\n                    <i [c8yIcon]=\"'trash'\"></i> {{ 'Delete' | translate }}\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"alert alert-warning max-width-100\" *ngIf=\"!hasRequiredRole\" role=\"alert\" translate>\n    You don't have the permission required to schedule exports.\n  </div>\n  <button\n    type=\"button\"\n    class=\"btn-add-block m-t-16\"\n    title=\"{{ 'Add schedule' | translate }}\"\n    (click)=\"addSchedule()\"\n    [disabled]=\"!hasRequiredRole\"\n  >\n    <i [c8yIcon]=\"'plus-circle'\"></i>\n    {{ 'Add schedule' | translate }}\n  </button>\n</div>\n"
            },] }
];
ExportSchedulesComponent.ctorParameters = () => [
    { type: ReportsService },
    { type: BsModalService },
    { type: CronService },
    { type: TranslateService },
    { type: UserService },
    { type: OptionsService }
];
ExportSchedulesComponent.propDecorators = {
    exportId: [{ type: Input }],
    onSchedulesUpdate: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3J0LXNjaGVkdWxlcy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9yZXBvcnRzL2V4cG9ydC1zY2hlZHVsZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQXFCLE1BQU0sRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRixPQUFPLEVBQW9DLFVBQVUsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQzVGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsY0FBYyxFQUE0QixNQUFNLHFCQUFxQixDQUFDO0FBQy9FLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUN0QyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFN0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUsxQyxNQUFNLE9BQU8sd0JBQXdCO0lBNkNuQyxZQUNVLGNBQThCLEVBQzlCLGNBQThCLEVBQy9CLFdBQXdCLEVBQ3ZCLGdCQUFrQyxFQUNsQyxXQUF3QixFQUN4QixjQUE4QjtRQUw5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQy9CLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQ3ZCLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFDbEMsZ0JBQVcsR0FBWCxXQUFXLENBQWE7UUFDeEIsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBOUM5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O0lBQ0osQ0FBQztJQUVELG1CQUFtQixDQUFDLE9BQXVCLEVBQUUsS0FBYztRQUN6RCxJQUFJLE9BQU8sQ0FBQyxPQUFPLEVBQUU7WUFDbkIsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO2dCQUN2QixJQUFJLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7YUFDN0M7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDO2FBQzFDO1lBQ0QsSUFBSSxDQUFDLGlCQUFpQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDaEQ7SUFDSCxDQUFDO0lBRUQsY0FBYyxDQUFDLFFBQWtCLEVBQUUsS0FBYSxFQUFFLEtBQVU7UUFDMUQsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQztRQUNuQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs7WUE1SkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLHl0UEFBZ0Q7YUFDakQ7OztZQVpRLGNBQWM7WUFDZCxjQUFjO1lBSWQsV0FBVztZQUVYLGdCQUFnQjtZQUNoQixXQUFXO1lBTEYsY0FBYzs7O3VCQVc3QixLQUFLO2dDQUlMLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE9uQ2hhbmdlcywgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEV4cG9ydCwgU2NoZWR1bGUsIEVtaXR0ZXJQYXlsb2FkLCBBY3Rpb25UeXBlIH0gZnJvbSAnLi9leHBvcnQtc2NoZWR1bGVzLmludGVyZmFjZSc7XG5pbXBvcnQgeyBSZXBvcnRzU2VydmljZSB9IGZyb20gJy4vcmVwb3J0cy5zZXJ2aWNlJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlLCBCc01vZGFsUmVmLCBNb2RhbE9wdGlvbnMgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IFNjaGVkdWxlTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL3NjaGVkdWxlLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBPcHRpb25zU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgY2xvbmVEZWVwIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IENyb25TZXJ2aWNlIH0gZnJvbSAnLi9jcm9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgSWRSZWZlcmVuY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBUcmFuc2xhdGVTZXJ2aWNlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5pbXBvcnQgeyBVc2VyU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2V4cG9ydC1zY2hlZHVsZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vZXhwb3J0LXNjaGVkdWxlcy5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRXhwb3J0U2NoZWR1bGVzQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMge1xuICBASW5wdXQoKSBzZXQgZXhwb3J0SWQoZXhwb3J0SWQ6IElkUmVmZXJlbmNlKSB7XG4gICAgdGhpcy5fZXhwb3J0SWQgPSBleHBvcnRJZDtcbiAgfVxuXG4gIEBPdXRwdXQoKSBvblNjaGVkdWxlc1VwZGF0ZSA9IG5ldyBFdmVudEVtaXR0ZXI8U2NoZWR1bGVbXT4oKTtcblxuICBleHA6IEV4cG9ydDtcbiAgc2NoZWR1bGVMaXN0OiBTY2hlZHVsZVtdID0gW107XG4gIGluaXRpYWxTY2hlZHVsZTogU2NoZWR1bGUgPSB7XG4gICAgdGltZXN0YW1wOiBudWxsLFxuICAgIGVtYWlsQ29uZmlnOiB7XG4gICAgICB0bzogW10sXG4gICAgICBjYzogW10sXG4gICAgICBiY2M6IFtdLFxuICAgICAgcmVwbHlUbzogJycsXG4gICAgICB0ZXh0OiAnJyxcbiAgICAgIHN1YmplY3Q6ICcnXG4gICAgfSxcbiAgICBjcm9uQ29uZmlnOiB7XG4gICAgICBtaW51dGU6ICcwJyxcbiAgICAgIGhvdXI6ICcwJyxcbiAgICAgIGRheTogJzEnLFxuICAgICAgbW9udGg6ICcxJyxcbiAgICAgIHdlZWtkYXk6ICc/J1xuICAgIH1cbiAgfTtcbiAgYnV0dG9uTGFiZWxzOiBhbnk7XG4gIGxpc3RDbGFzczogc3RyaW5nID0gJ2ludGVyYWN0LWxpc3QnO1xuICBsb2FkaW5nU3RhdHVzOiBhbnk7XG4gIHNvcnRUeXBlOiBzdHJpbmc7XG4gIHNvcnRSZXZlcnNlOiBib29sZWFuID0gZmFsc2U7XG4gIGlzT3BlbjogYW55ID0ge307XG4gIGlzRmxpcHBlZDogYm9vbGVhbjtcbiAgaXNFZGl0TWVudU9wZW46IGJvb2xlYW4gPSBmYWxzZTtcbiAgbW9kYWxSZWY6IEJzTW9kYWxSZWY7XG4gIGN1cnJlbnRVc2VyRW1haWw6IHN0cmluZyA9ICcnO1xuICBoYXNSZXF1aXJlZFJvbGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgcHJpdmF0ZSBfZXhwb3J0SWQ6IElkUmVmZXJlbmNlO1xuICBwcml2YXRlIGRlZmF1bHRFeHBvcnRFbWFpbFRlbXBsYXRlID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoXG4gICAgZ2V0dGV4dChcbiAgICAgICdGaWxlIHdpdGggZXhwb3J0ZWQgZGF0YSBjYW4gYmUgZG93bmxvYWRlZCBmcm9tIHt0ZW5hbnQtZG9tYWlufS9hcHBzL2NvY2twaXQvaW5kZXguaHRtbCM/ZG93bmxvYWQ9e2JpbmFyeUlkfS4nXG4gICAgKVxuICApO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVwb3J0c1NlcnZpY2U6IFJlcG9ydHNTZXJ2aWNlLFxuICAgIHByaXZhdGUgYnNNb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlLFxuICAgIHB1YmxpYyBjcm9uU2VydmljZTogQ3JvblNlcnZpY2UsXG4gICAgcHJpdmF0ZSB0cmFuc2xhdGVTZXJ2aWNlOiBUcmFuc2xhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgdXNlclNlcnZpY2U6IFVzZXJTZXJ2aWNlLFxuICAgIHByaXZhdGUgb3B0aW9uc1NlcnZpY2U6IE9wdGlvbnNTZXJ2aWNlXG4gICkge1xuICAgIHRoaXMubG9hZGluZ1N0YXR1cyA9IHtcbiAgICAgIGluUHJvZ3Jlc3M6IGZhbHNlLFxuICAgICAgZG9uZTogZmFsc2UsXG4gICAgICBlcnJvcjogZmFsc2VcbiAgICB9O1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5oYXNSZXF1aXJlZFJvbGUgPSBhd2FpdCB0aGlzLmNoZWNrUm9sZSgpO1xuICAgIHRoaXMuZ2V0U2NoZWR1bGVMaXN0KHRydWUpO1xuICAgIGNvbnN0IGN1cnJlbnRVc2VyRW1haWwgPSBhd2FpdCB0aGlzLmdldEN1cnJlbnRVc2VyRW1haWwoKTtcbiAgICB0aGlzLmluaXRpYWxTY2hlZHVsZS5lbWFpbENvbmZpZy50ZXh0ID0gYXdhaXQgdGhpcy5vcHRpb25zU2VydmljZS5nZXRUZW5hbnRPcHRpb24oXG4gICAgICAnY29uZmlndXJhdGlvbicsXG4gICAgICAnZXhwb3J0LmRhdGEubWFpbC50ZXh0JyxcbiAgICAgIHRoaXMuZGVmYXVsdEV4cG9ydEVtYWlsVGVtcGxhdGUpO1xuICAgIHRoaXMuaW5pdGlhbFNjaGVkdWxlLmVtYWlsQ29uZmlnLnRvID0gY3VycmVudFVzZXJFbWFpbDtcbiAgICB0aGlzLmV4cCA9IGF3YWl0IHRoaXMucmVwb3J0c1NlcnZpY2UuZ2V0RXhwb3J0KHRoaXMuX2V4cG9ydElkKTtcbiAgICB0aGlzLmluaXRpYWxTY2hlZHVsZS5lbWFpbENvbmZpZy5zdWJqZWN0ID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoXG4gICAgICBnZXR0ZXh0KCdFeHBvcnQgb2YgXCJ7e2V4cE5hbWV9fVwiJyksXG4gICAgICB7IGV4cE5hbWU6IHRoaXMuZXhwLm5hbWUgfVxuICAgICk7XG4gIH1cblxuICBuZ09uQ2hhbmdlcygpIHtcbiAgICB0aGlzLnRyYW5zbGF0ZUJ1dHRvblRpdGxlcygpO1xuICB9XG5cbiAgdHJhbnNsYXRlQnV0dG9uVGl0bGVzKCkge1xuICAgIHRoaXMuYnV0dG9uTGFiZWxzID0ge1xuICAgICAgZWRpdDogdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoZ2V0dGV4dCgnRWRpdCBzY2hlZHVsZScpKSxcbiAgICAgIGVkaXROb1Blcm1pc3Npb246IHRoaXMudHJhbnNsYXRlU2VydmljZS5pbnN0YW50KGdldHRleHQoJ0VkaXQgc2NoZWR1bGUgLSBubyBwZXJtaXNzaW9ucycpKSxcbiAgICAgIGR1cGxpY2F0ZTogdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoZ2V0dGV4dCgnRHVwbGljYXRlIHNjaGVkdWxlJykpLFxuICAgICAgZHVwbGljYXRlTm9QZXJtaXNzaW9uOiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCdEdXBsaWNhdGUgc2NoZWR1bGUgLSBubyBwZXJtaXNzaW9ucycpKSxcbiAgICAgIGRlbGV0ZTogdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoZ2V0dGV4dCgnRGVsZXRlIHNjaGVkdWxlJykpLFxuICAgICAgZGVsZXRlTm9QZXJtaXNzaW9uOiB0aGlzLnRyYW5zbGF0ZVNlcnZpY2UuaW5zdGFudChnZXR0ZXh0KCdEZWxldGUgc2NoZWR1bGUgLSBubyBwZXJtaXNzaW9ucycpKVxuICAgIH07XG4gIH1cblxuICBhc3luYyBnZXRDdXJyZW50VXNlckVtYWlsKCkge1xuICAgIGNvbnN0IHsgZGF0YSB9ID0gYXdhaXQgdGhpcy51c2VyU2VydmljZS5jdXJyZW50KCk7XG4gICAgcmV0dXJuIGRhdGEgJiYgZGF0YS5lbWFpbCA/IFtkYXRhLmVtYWlsXSA6IFtdO1xuICB9XG4gIGFzeW5jIGNoZWNrUm9sZSgpIHtcbiAgICBjb25zdCB7IGRhdGEgfSA9IGF3YWl0IHRoaXMudXNlclNlcnZpY2UuY3VycmVudCgpO1xuICAgIGNvbnN0IHJvbGUgPSAnUk9MRV9TQ0hFRFVMRV9SRVBPUlRfQURNSU4nO1xuICAgIGNvbnN0IGhhc1JvbGUgPSB0aGlzLnVzZXJTZXJ2aWNlLmhhc1JvbGUoZGF0YSwgcm9sZSk7XG4gICAgcmV0dXJuIGhhc1JvbGU7XG4gIH1cblxuICBhc3luYyBnZXRTY2hlZHVsZUxpc3Qod2l0aFByb2dyZXNzOiBib29sZWFuKSB7XG4gICAgaWYgKHdpdGhQcm9ncmVzcykge1xuICAgICAgdGhpcy5sb2FkaW5nU3RhdHVzLmluUHJvZ3Jlc3MgPSB0cnVlO1xuICAgIH1cbiAgICB0aGlzLnNjaGVkdWxlTGlzdCA9IGF3YWl0IHRoaXMucmVwb3J0c1NlcnZpY2UuZ2V0U2NoZWR1bGVMaXN0KHRoaXMuX2V4cG9ydElkKTtcbiAgICBpZiAod2l0aFByb2dyZXNzKSB7XG4gICAgICB0aGlzLmxvYWRpbmdTdGF0dXMuaW5Qcm9ncmVzcyA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGFkZFNjaGVkdWxlKCkge1xuICAgIHRoaXMub3BlbkFkZEVkaXRNb2RhbCh0aGlzLl9leHBvcnRJZCwgdGhpcy5pbml0aWFsU2NoZWR1bGUsIEFjdGlvblR5cGUuQ1JFQVRFKTtcbiAgfVxuXG4gIGVkaXRTY2hlZHVsZShzY2hlZHVsZTogU2NoZWR1bGUsIGluZGV4OiBudW1iZXIsIGV2ZW50OiBhbnkpIHtcbiAgICBpZiAodGhpcy5oYXNSZXF1aXJlZFJvbGUpIHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICB0aGlzLm9wZW5BZGRFZGl0TW9kYWwodGhpcy5fZXhwb3J0SWQsIHNjaGVkdWxlLCBBY3Rpb25UeXBlLkVESVQsIGluZGV4KTtcbiAgICB9XG4gIH1cblxuICBkdXBsaWNhdGVTY2hlZHVsZShzY2hlZHVsZTogU2NoZWR1bGUsIGV2ZW50OiBhbnkpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMub3BlbkFkZEVkaXRNb2RhbCh0aGlzLl9leHBvcnRJZCwgc2NoZWR1bGUsIEFjdGlvblR5cGUuRFVQTElDQVRFKTtcbiAgfVxuXG4gIG9wZW5BZGRFZGl0TW9kYWwoZXhwb3J0SWQ6IElkUmVmZXJlbmNlLCBzY2hlZHVsZTogU2NoZWR1bGUsIGFjdGlvblR5cGU6IEFjdGlvblR5cGUsIGluZGV4PzogbnVtYmVyKSB7XG4gICAgY29uc3QgcGF5bG9hZCA9IHsgYWN0aW9uVHlwZSwgZXhwb3J0SWQsIHNjaGVkdWxlOiBjbG9uZURlZXAoc2NoZWR1bGUpIH07XG4gICAgY29uc3QgbW9kYWxPcHRpb25zID0geyBjbGFzczogJ21vZGFsLXNtJywgaW5pdGlhbFN0YXRlOiBwYXlsb2FkIH0gYXMgTW9kYWxPcHRpb25zO1xuICAgIHRoaXMubW9kYWxSZWYgPSB0aGlzLmJzTW9kYWxTZXJ2aWNlLnNob3coU2NoZWR1bGVNb2RhbENvbXBvbmVudCwgbW9kYWxPcHRpb25zKTtcbiAgICB0aGlzLm1vZGFsUmVmLmNvbnRlbnQuZW1pdHRlci5zdWJzY3JpYmUoKGxvYWQ6IEVtaXR0ZXJQYXlsb2FkKSA9PlxuICAgICAgdGhpcy5nZXRNZXNzYWdlRnJvbU1vZGFsKGxvYWQsIGluZGV4KVxuICAgICk7XG4gIH1cblxuICBnZXRNZXNzYWdlRnJvbU1vZGFsKHBheWxvYWQ6IEVtaXR0ZXJQYXlsb2FkLCBpbmRleD86IG51bWJlcikge1xuICAgIGlmIChwYXlsb2FkLnN1Y2Nlc3MpIHtcbiAgICAgIGlmIChpbmRleCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRoaXMuc2NoZWR1bGVMaXN0W2luZGV4XSA9IHBheWxvYWQuc2NoZWR1bGU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnNjaGVkdWxlTGlzdC5wdXNoKHBheWxvYWQuc2NoZWR1bGUpO1xuICAgICAgfVxuICAgICAgdGhpcy5vblNjaGVkdWxlc1VwZGF0ZS5lbWl0KHRoaXMuc2NoZWR1bGVMaXN0KTtcbiAgICB9XG4gIH1cblxuICByZW1vdmVTY2hlZHVsZShzY2hlZHVsZTogU2NoZWR1bGUsIGluZGV4OiBudW1iZXIsIGV2ZW50OiBhbnkpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuc2NoZWR1bGVMaXN0LnNwbGljZShpbmRleCwgMSk7XG4gICAgdGhpcy5vblNjaGVkdWxlc1VwZGF0ZS5lbWl0KHRoaXMuc2NoZWR1bGVMaXN0KTtcbiAgfVxufVxuIl19