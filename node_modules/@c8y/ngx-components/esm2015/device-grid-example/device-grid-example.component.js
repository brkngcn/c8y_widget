import { Component } from '@angular/core';
import { DeviceGridService, CustomDeviceGridColumn } from '@c8y/ngx-components/device-grid';
import { gettext } from '@c8y/ngx-components';
import { find, cloneDeep } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components/device-grid';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '@angular/common';

function DeviceGridExampleComponent_option_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 12);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const example_r1 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", example_r1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(example_r1.label);
} }
const _c0 = function () { return []; };
export class DeviceGridExampleComponent {
    constructor(deviceGridService) {
        this.deviceGridService = deviceGridService;
        this.examples = [
            this.getExampleWithStandardColumns(),
            this.getExampleWithStandardColumnsAndSavedFilteringSorting(),
            this.getExampleWithCustomColumnAndPredefinedFiltering()
        ];
    }
    getExampleWithStandardColumns() {
        const columns = this.deviceGridService.getDefaultColumns();
        return {
            label: 'Standard columns',
            columns
        };
    }
    getExampleWithStandardColumnsAndSavedFilteringSorting() {
        const columns = this.deviceGridService.getDefaultColumns();
        const nameColumn = find(columns, { name: 'name' });
        nameColumn.externalFilterQuery = {
            names: ['*Temp*']
        };
        nameColumn.sortOrder = 'desc';
        return {
            label: 'Standard columns with saved filtering/sorting',
            columns
        };
    }
    getExampleWithCustomColumnAndPredefinedFiltering() {
        const columns = this.deviceGridService.getDefaultColumns();
        const typeColumn = new CustomDeviceGridColumn();
        typeColumn.name = 'type';
        typeColumn.path = 'type';
        typeColumn.header = gettext('Type');
        typeColumn.externalFilterQuery = {
            equals: ['c8y_MQTTDevice']
        };
        columns.splice(2, 0, typeColumn);
        return {
            label: 'Standard columns with custom one with predefined filtering',
            columns
        };
    }
    onExampleSelect(example) {
        this.columnsInput = example.columns;
    }
    setColumnsOutput(output) {
        const result = cloneDeep(output);
        removeCircular(result);
        this.columnsOutput = result;
        function removeCircular(data) {
            const seen = new WeakSet();
            const recurse = obj => {
                if (obj) {
                    seen.add(obj);
                    for (const [k, v] of Object.entries(obj)) {
                        if (typeof v !== 'object') {
                            continue;
                        }
                        if (seen.has(v)) {
                            delete obj[k];
                        }
                        else {
                            recurse(v);
                        }
                    }
                }
            };
            recurse(data);
        }
    }
}
DeviceGridExampleComponent.ɵfac = function DeviceGridExampleComponent_Factory(t) { return new (t || DeviceGridExampleComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DeviceGridService)); };
DeviceGridExampleComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceGridExampleComponent, selectors: [["c8y-device-grid-example"]], decls: 29, vars: 15, consts: [[1, "content-fullpage"], [3, "title", "columns", "actionControls", "onColumnsChange", "onDeviceQueryStringChange"], [1, "row"], [1, "col-sm-6"], [1, "card"], [1, "card-header", "separator"], [1, "card-title"], [1, "card-block"], [1, "c8y-select-wrapper"], [1, "form-control", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "card-header"], [3, "ngValue"]], template: function DeviceGridExampleComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "c8y-device-grid", 1);
        ɵngcc0.ɵɵlistener("onColumnsChange", function DeviceGridExampleComponent_Template_c8y_device_grid_onColumnsChange_1_listener($event) { return ctx.setColumnsOutput($event); })("onDeviceQueryStringChange", function DeviceGridExampleComponent_Template_c8y_device_grid_onDeviceQueryStringChange_1_listener($event) { return ctx.deviceQueryStringOutput = $event; });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵelementStart(4, "div", 4);
        ɵngcc0.ɵɵelementStart(5, "div", 5);
        ɵngcc0.ɵɵelementStart(6, "h4", 6);
        ɵngcc0.ɵɵtext(7, "Input");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "div", 7);
        ɵngcc0.ɵɵelementStart(9, "div", 8);
        ɵngcc0.ɵɵelementStart(10, "select", 9);
        ɵngcc0.ɵɵlistener("ngModelChange", function DeviceGridExampleComponent_Template_select_ngModelChange_10_listener($event) { return ctx.onExampleSelect($event); });
        ɵngcc0.ɵɵtemplate(11, DeviceGridExampleComponent_option_11_Template, 2, 2, "option", 10);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelement(12, "span");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(13, "pre");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "json");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(16, "div", 3);
        ɵngcc0.ɵɵelementStart(17, "div", 4);
        ɵngcc0.ɵɵelementStart(18, "div", 11);
        ɵngcc0.ɵɵelementStart(19, "span");
        ɵngcc0.ɵɵelementStart(20, "h4", 6);
        ɵngcc0.ɵɵtext(21, "Output");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(22, "div", 7);
        ɵngcc0.ɵɵelementStart(23, "pre");
        ɵngcc0.ɵɵtext(24);
        ɵngcc0.ɵɵpipe(25, "json");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(26, "pre");
        ɵngcc0.ɵɵtext(27);
        ɵngcc0.ɵɵpipe(28, "json");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("title", "Select devices for bulk operation")("columns", ctx.columnsInput)("actionControls", ɵngcc0.ɵɵpureFunction0(14, _c0));
        ɵngcc0.ɵɵadvance(9);
        ɵngcc0.ɵɵproperty("ngModel", ctx.selectedExample);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.examples);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(15, 8, ctx.columnsInput), "\n        ");
        ɵngcc0.ɵɵadvance(10);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(25, 10, ctx.deviceQueryStringOutput), "\n        ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1("", ɵngcc0.ɵɵpipeBind1(28, 12, ctx.columnsOutput), "\n        ");
    } }, directives: [ɵngcc1.DeviceGridComponent, ɵngcc2.SelectControlValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc3.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵNgSelectMultipleOption], pipes: [ɵngcc3.JsonPipe], encapsulation: 2 });
DeviceGridExampleComponent.ctorParameters = () => [
    { type: DeviceGridService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceGridExampleComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-grid-example',
                template: "<div class=\"content-fullpage\">\n  <c8y-device-grid\n    [title]=\"'Select devices for bulk operation'\"\n    [columns]=\"columnsInput\"\n    [actionControls]=\"[]\"\n    (onColumnsChange)=\"setColumnsOutput($event)\"\n    (onDeviceQueryStringChange)=\"deviceQueryStringOutput = $event\"\n  ></c8y-device-grid>\n</div>\n\n<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <div class=\"card \">\n      <div class=\"card-header separator\">\n        <h4 class=\"card-title\">Input</h4>\n      </div>\n      <div class=\"card-block\">\n        <div class=\"c8y-select-wrapper\">\n          <select\n            class=\"form-control\"\n            [ngModel]=\"selectedExample\"\n            (ngModelChange)=\"onExampleSelect($event)\"\n          >\n            <option *ngFor=\"let example of examples\" [ngValue]=\"example\">{{\n              example.label\n            }}</option></select\n          ><span></span>\n        </div>\n        <pre\n          >{{ columnsInput | json }}\n        </pre>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-sm-6\">\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <span>\n          <h4 class=\"card-title\">Output</h4>\n        </span>\n      </div>\n      <div class=\"card-block\">\n        <pre\n          >{{ deviceQueryStringOutput | json }}\n        </pre>\n        <pre\n          >{{ columnsOutput | json }}\n        </pre>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.DeviceGridService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLWdyaWQtZXhhbXBsZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RldmljZS1ncmlkLWV4YW1wbGUvZGV2aWNlLWdyaWQtZXhhbXBsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQ0wsaUJBQWlCLEVBRWpCLHNCQUFzQixFQUN2QixNQUFNLGlDQUFpQyxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUU5QyxPQUFPLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxNQUFNLFdBQVcsQ0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNNUMsTUFBTSxPQUFPLDBCQUEwQjtBQUN2QyxJQU1FLFlBQXNCLGlCQUFvQztBQUM1RCxRQUR3QixzQkFBaUIsR0FBakIsaUJBQWlCLENBQW1CO0FBQUMsUUFDekQsSUFBSSxDQUFDLFFBQVEsR0FBRztBQUNwQixZQUFNLElBQUksQ0FBQyw2QkFBNkIsRUFBRTtBQUMxQyxZQUFNLElBQUksQ0FBQyxxREFBcUQsRUFBRTtBQUNsRSxZQUFNLElBQUksQ0FBQyxnREFBZ0QsRUFBRTtBQUM3RCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSCxJQUNFLDZCQUE2QjtBQUMvQixRQUFJLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQy9ELFFBQUksT0FBTztBQUNYLFlBQU0sS0FBSyxFQUFFLGtCQUFrQjtBQUMvQixZQUFNLE9BQU87QUFDYixTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSCxJQUNFLHFEQUFxRDtBQUN2RCxRQUFJLE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQy9ELFFBQUksTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLE9B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Ozs7O2tGQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIERldmljZUdyaWRTZXJ2aWNlLFxuICBEZXZpY2VHcmlkQ29sdW1uLFxuICBDdXN0b21EZXZpY2VHcmlkQ29sdW1uXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvZGV2aWNlLWdyaWQnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBmaW5kLCBjbG9uZURlZXAgfSBmcm9tICdsb2Rhc2gtZXMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGV2aWNlLWdyaWQtZXhhbXBsZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9kZXZpY2UtZ3JpZC1leGFtcGxlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBEZXZpY2VHcmlkRXhhbXBsZUNvbXBvbmVudCB7XG4gIGV4YW1wbGVzOiBBcnJheTx7IGxhYmVsOiBzdHJpbmc7IGNvbHVtbnM6IERldmljZUdyaWRDb2x1bW5bXSB9PjtcbiAgc2VsZWN0ZWRFeGFtcGxlO1xuICBjb2x1bW5zSW5wdXQ6IERldmljZUdyaWRDb2x1bW5bXTtcbiAgY29sdW1uc091dHB1dDogRGV2aWNlR3JpZENvbHVtbltdO1xuICBkZXZpY2VRdWVyeVN0cmluZ091dHB1dDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBkZXZpY2VHcmlkU2VydmljZTogRGV2aWNlR3JpZFNlcnZpY2UpIHtcbiAgICB0aGlzLmV4YW1wbGVzID0gW1xuICAgICAgdGhpcy5nZXRFeGFtcGxlV2l0aFN0YW5kYXJkQ29sdW1ucygpLFxuICAgICAgdGhpcy5nZXRFeGFtcGxlV2l0aFN0YW5kYXJkQ29sdW1uc0FuZFNhdmVkRmlsdGVyaW5nU29ydGluZygpLFxuICAgICAgdGhpcy5nZXRFeGFtcGxlV2l0aEN1c3RvbUNvbHVtbkFuZFByZWRlZmluZWRGaWx0ZXJpbmcoKVxuICAgIF07XG4gIH1cblxuICBnZXRFeGFtcGxlV2l0aFN0YW5kYXJkQ29sdW1ucygpIHtcbiAgICBjb25zdCBjb2x1bW5zID0gdGhpcy5kZXZpY2VHcmlkU2VydmljZS5nZXREZWZhdWx0Q29sdW1ucygpO1xuICAgIHJldHVybiB7XG4gICAgICBsYWJlbDogJ1N0YW5kYXJkIGNvbHVtbnMnLFxuICAgICAgY29sdW1uc1xuICAgIH07XG4gIH1cblxuICBnZXRFeGFtcGxlV2l0aFN0YW5kYXJkQ29sdW1uc0FuZFNhdmVkRmlsdGVyaW5nU29ydGluZygpIHtcbiAgICBjb25zdCBjb2x1bW5zID0gdGhpcy5kZXZpY2VHcmlkU2VydmljZS5nZXREZWZhdWx0Q29sdW1ucygpO1xuICAgIGNvbnN0IG5hbWVDb2x1bW4gPSBmaW5kKGNvbHVtbnMsIHsgbmFtZTogJ25hbWUnIH0pO1xuICAgIG5hbWVDb2x1bW4uZXh0ZXJuYWxGaWx0ZXJRdWVyeSA9IHtcbiAgICAgIG5hbWVzOiBbJypUZW1wKiddXG4gICAgfTtcbiAgICBuYW1lQ29sdW1uLnNvcnRPcmRlciA9ICdkZXNjJztcbiAgICByZXR1cm4ge1xuICAgICAgbGFiZWw6ICdTdGFuZGFyZCBjb2x1bW5zIHdpdGggc2F2ZWQgZmlsdGVyaW5nL3NvcnRpbmcnLFxuICAgICAgY29sdW1uc1xuICAgIH07XG4gIH1cblxuICBnZXRFeGFtcGxlV2l0aEN1c3RvbUNvbHVtbkFuZFByZWRlZmluZWRGaWx0ZXJpbmcoKSB7XG4gICAgY29uc3QgY29sdW1ucyA9IHRoaXMuZGV2aWNlR3JpZFNlcnZpY2UuZ2V0RGVmYXVsdENvbHVtbnMoKTtcbiAgICBjb25zdCB0eXBlQ29sdW1uID0gbmV3IEN1c3RvbURldmljZUdyaWRDb2x1bW4oKTtcbiAgICB0eXBlQ29sdW1uLm5hbWUgPSAndHlwZSc7XG4gICAgdHlwZUNvbHVtbi5wYXRoID0gJ3R5cGUnO1xuICAgIHR5cGVDb2x1bW4uaGVhZGVyID0gZ2V0dGV4dCgnVHlwZScpO1xuICAgIHR5cGVDb2x1bW4uZXh0ZXJuYWxGaWx0ZXJRdWVyeSA9IHtcbiAgICAgIGVxdWFsczogWydjOHlfTVFUVERldmljZSddXG4gICAgfTtcbiAgICBjb2x1bW5zLnNwbGljZSgyLCAwLCB0eXBlQ29sdW1uKTtcbiAgICByZXR1cm4ge1xuICAgICAgbGFiZWw6ICdTdGFuZGFyZCBjb2x1bW5zIHdpdGggY3VzdG9tIG9uZSB3aXRoIHByZWRlZmluZWQgZmlsdGVyaW5nJyxcbiAgICAgIGNvbHVtbnNcbiAgICB9O1xuICB9XG5cbiAgb25FeGFtcGxlU2VsZWN0KGV4YW1wbGUpIHtcbiAgICB0aGlzLmNvbHVtbnNJbnB1dCA9IGV4YW1wbGUuY29sdW1ucztcbiAgfVxuXG4gIHNldENvbHVtbnNPdXRwdXQob3V0cHV0OiBEZXZpY2VHcmlkQ29sdW1uW10pOiB2b2lkIHtcbiAgICBjb25zdCByZXN1bHQgPSBjbG9uZURlZXAob3V0cHV0KTtcbiAgICByZW1vdmVDaXJjdWxhcihyZXN1bHQpO1xuICAgIHRoaXMuY29sdW1uc091dHB1dCA9IHJlc3VsdDtcblxuICAgIGZ1bmN0aW9uIHJlbW92ZUNpcmN1bGFyKGRhdGEpIHtcbiAgICAgIGNvbnN0IHNlZW4gPSBuZXcgV2Vha1NldCgpO1xuICAgICAgY29uc3QgcmVjdXJzZSA9IG9iaiA9PiB7XG4gICAgICAgIGlmIChvYmopIHtcbiAgICAgICAgICBzZWVuLmFkZChvYmopO1xuICAgICAgICAgIGZvciAoY29uc3QgW2ssIHZdIG9mIE9iamVjdC5lbnRyaWVzKG9iaikpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgdiAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc2Vlbi5oYXModikpIHtcbiAgICAgICAgICAgICAgZGVsZXRlIG9ialtrXTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHJlY3Vyc2Uodik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgcmVjdXJzZShkYXRhKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==