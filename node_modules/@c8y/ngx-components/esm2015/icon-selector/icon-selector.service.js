import { Injectable } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { IconSelectorModalComponent } from './icon-selector-modal/icon-selector-modal.component';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
export class IconSelectorService {
    constructor(modal) {
        this.modal = modal;
    }
    selectIcon(initialState = {}) {
        const modal = this.modal.show(IconSelectorModalComponent, {
            ignoreBackdropClick: true,
            keyboard: false,
            initialState,
            class: 'modal-lg'
        });
        const content = modal.content;
        return content.result;
    }
}
IconSelectorService.ɵfac = function IconSelectorService_Factory(t) { return new (t || IconSelectorService)(ɵngcc0.ɵɵinject(ɵngcc1.BsModalService)); };
IconSelectorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function IconSelectorService_Factory() { return new IconSelectorService(i0.ɵɵinject(i1.BsModalService)); }, token: IconSelectorService, providedIn: "root" });
IconSelectorService.ctorParameters = () => [
    { type: BsModalService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(IconSelectorService, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: ɵngcc1.BsModalService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1zZWxlY3Rvci5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9pY29uLXNlbGVjdG9yL2ljb24tc2VsZWN0b3Iuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUNqRztBQUVBOzs7QUFBQSxNQUFNLE9BQU8sbUJBQW1CO0FBQ2hDLElBQUUsWUFBc0IsS0FBcUI7QUFBSSxRQUF6QixVQUFLLEdBQUwsS0FBSyxDQUFnQjtBQUFDLElBQUUsQ0FBQztBQUNqRCxJQUNFLFVBQVUsQ0FDUixlQVNJLEVBQUU7QUFDUCxRQUNDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLDBCQUEwQixFQUFFO0FBQzlELFlBQU0sbUJBQW1CLEVBQUUsSUFBSTtBQUMvQixZQUFNLFFBQVEsRUFBRSxLQUFLO0FBQ3JCLFlBQU0sWUFBWTtBQUNsQixZQUFNLEtBQUssRUFBRSxVQUFVO0FBQ3ZCLFNBQUssQ0FBQyxDQUFDO0FBQ1AsUUFBSSxNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsT0FBcUMsQ0FBQztBQUNoRSxRQUFJLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUMxQixJQUFFLENBQUM7QUFDSDtzSkFBQztBQUNELDJOQXpCSztBQUFDO0VBREwsVUFBVSxTQUFDLEVBQUUsdkJBRUUsWUFMUCxjQUFjO0FBQUc7Q0FHRixFQUFFLE1BQU0sRUFBRTs7OytFQUhOO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgSWNvblNlbGVjdG9yTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL2ljb24tc2VsZWN0b3ItbW9kYWwvaWNvbi1zZWxlY3Rvci1tb2RhbC5jb21wb25lbnQnO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIEljb25TZWxlY3RvclNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbW9kYWw6IEJzTW9kYWxTZXJ2aWNlKSB7fVxuXG4gIHNlbGVjdEljb24oXG4gICAgaW5pdGlhbFN0YXRlOiBQYXJ0aWFsPFxuICAgICAgUGljazxcbiAgICAgICAgSWNvblNlbGVjdG9yTW9kYWxDb21wb25lbnQsXG4gICAgICAgICdjdXJyZW50U2VsZWN0aW9uJ1xuICAgICAgICB8ICd0aXRsZSdcbiAgICAgICAgfCAnc2F2ZUJ1dHRvbkxhYmVsJ1xuICAgICAgICB8ICdpY29uQ2F0ZWdvcmllc1RvRXhjbHVkZSdcbiAgICAgICAgfCAnc2hvd0ljb25DbGFzcydcbiAgICAgID5cbiAgICA+ID0ge31cbiAgKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgICBjb25zdCBtb2RhbCA9IHRoaXMubW9kYWwuc2hvdyhJY29uU2VsZWN0b3JNb2RhbENvbXBvbmVudCwge1xuICAgICAgaWdub3JlQmFja2Ryb3BDbGljazogdHJ1ZSxcbiAgICAgIGtleWJvYXJkOiBmYWxzZSxcbiAgICAgIGluaXRpYWxTdGF0ZSxcbiAgICAgIGNsYXNzOiAnbW9kYWwtbGcnXG4gICAgfSk7XG4gICAgY29uc3QgY29udGVudCA9IG1vZGFsLmNvbnRlbnQgYXMgSWNvblNlbGVjdG9yTW9kYWxDb21wb25lbnQ7XG4gICAgcmV0dXJuIGNvbnRlbnQucmVzdWx0O1xuICB9XG59XG4iXX0=