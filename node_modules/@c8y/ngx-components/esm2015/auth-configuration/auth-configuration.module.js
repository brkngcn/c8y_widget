import { NgModule } from '@angular/core';
import { CoreModule, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, HOOK_TABS } from '@c8y/ngx-components';
import { BasicAuthSettingsComponent } from './basic-auth-settings.component';
import { TabsFactory } from './factories/tabs.factory';
import { NavigationFactory } from './factories/navigation.factory';
import { AuthConfigurationGuard } from './auth-configuration.guard';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { AuthConfigurationService } from './auth-configuration.service';
import { AuthConfigurationComponent } from './auth-configuration.component';
import { TfaSettingsComponent } from './tfa-settings.component';
import { SessionConfigurationComponent } from './session-configuration.component';
import { LoginSettingsComponent } from './login-settings.component';
import { SsoConfigurationGuard } from './sso-configuration.guard';
import { SsoConfigurationService } from './sso-configuration.service';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = [
    {
        path: 'auth-configuration',
        redirectTo: 'auth-configuration/basic_settings',
        pathMatch: 'full'
    },
    {
        path: 'auth-configuration/basic_settings',
        component: AuthConfigurationComponent,
        canActivate: [AuthConfigurationGuard]
    },
    {
        path: 'auth-configuration/single_sign-on',
        canActivate: [AuthConfigurationGuard, SsoConfigurationGuard],
        children: [] // This route exists to secure path by guards. Sso component exists only in Angular Js, so here children is used to avoid compilation error.
    }
];
export class AuthConfigurationModule {
}
AuthConfigurationModule.ɵfac = function AuthConfigurationModule_Factory(t) { return new (t || AuthConfigurationModule)(); };
AuthConfigurationModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: AuthConfigurationModule });
AuthConfigurationModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        AuthConfigurationService,
        AuthConfigurationGuard,
        SsoConfigurationService,
        SsoConfigurationGuard,
        { provide: HOOK_TABS, useClass: TabsFactory, multi: true },
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: NavigationFactory,
            multi: true
        },
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[CoreModule, PopoverModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AuthConfigurationModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    SessionConfigurationComponent,
                    LoginSettingsComponent,
                    BasicAuthSettingsComponent,
                    AuthConfigurationComponent,
                    TfaSettingsComponent
                ],
                exports: [],
                imports: [CoreModule, PopoverModule],
                providers: [
                    AuthConfigurationService,
                    AuthConfigurationGuard,
                    SsoConfigurationService,
                    SsoConfigurationGuard,
                    { provide: HOOK_TABS, useClass: TabsFactory, multi: true },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: NavigationFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AuthConfigurationModule, { declarations: function () { return [SessionConfigurationComponent,
        LoginSettingsComponent,
        BasicAuthSettingsComponent,
        AuthConfigurationComponent,
        TfaSettingsComponent]; }, imports: function () { return [CoreModule, PopoverModule]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aC1jb25maWd1cmF0aW9uLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vYXV0aC1jb25maWd1cmF0aW9uL2F1dGgtY29uZmlndXJhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQ0wsVUFBVSxFQUNWLG9CQUFvQixFQUNwQixVQUFVLEVBQ1YsU0FBUyxFQUVWLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDN0UsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN4RSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUM1RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUNsRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQzs7QUFDdEUsV0F3QmdCO0FBQ2hCLElBQVE7QUFDUixRQUFVLElBQUksRUFBRSxvQkFBb0I7QUFDcEMsUUFBVSxVQUFVLEVBQUUsbUNBQW1DO0FBQ3pELFFBQVUsU0FBUyxFQUFFLE1BQU07QUFDM0IsS0FBUztBQUNULElBQVE7QUFDUixRQUFVLElBQUksRUFBRSxtQ0FBbUM7QUFDbkQsUUFBVSxTQUFTLEVBQUUsMEJBQTBCO0FBQy9DLFFBQVUsV0FBVyxFQUFFLENBQUMsc0JBQXNCLENBQUM7QUFDL0MsS0FBUztBQUNULElBQVE7QUFDUixRQUFVLElBQUksRUFBRSxtQ0FBbUM7QUFDbkQsUUFBVSxXQUFXLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSxxQkFBcUIsQ0FBQztBQUN0RSxRQUFVLFFBQVEsRUFBRSxFQUFFLENBQUMsNElBQTRJO0FBQ25LLEtBQVM7QUFDVCxDQUFrQjtBQUtsQixNQUFNLE9BQU8sdUJBQXVCO0FBQUc7bURBNUN0QyxRQUFRLFNBQUMsa0JBQ1IsWUFBWSxFQUFFLHNCQUNaOzBCQUE2QixzQkFDN0Isc0JBQXNCLHNCQUN0QjthQUEwQixzQkFDMUIsMEJBQTBCLHNCQUMxQjttQkFBb0I7R0FDckIsa0JBQ0QsT0FBTyxFQUFFO0FBQUUsa0JBQ1gsT0FBTyxFQUFFLENBQUM7S0FBVSxFQUFFLGFBQWEsQ0FBQztRQUNwQyxTQUFTLEVBQUUsc0JBQ1Qsd0JBQXdCOztTQUN4QixzQkFBc0I7VUFDdEIsdUJBQXVCO2NBQ3ZCOztBQUFxQjtZQUNyQixFQUFFLE9BQU8sRUFBRSxTQUFTO0NBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRTtHQUFLLEVBQUUsSUFBSSxFQUFFO1NBQzFEO3lCQUNFLE9BQU8sRUFBRTtJQUFvQiwwQkFDN0IsUUFBUSxFQUFFLGlCQUFpQiwwQkFDM0IsS0FBSyxFQUFFLElBQUksc0JBQ1o7bUJBQ0Q7O0lBQ0UsT0FBTyxFQUFFLFVBQVU7aUJBQ25CLFFBQVEsSUFnQkk7SUFDWixLQUFLLEVBQUUsSUFBSSxzQkFDWjtXQUNGLGNBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dHQUNJO0FBQUM7QUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb3JlTW9kdWxlLFxuICBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgSE9PS19ST1VURSxcbiAgSE9PS19UQUJTLFxuICBSb3V0ZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IEJhc2ljQXV0aFNldHRpbmdzQ29tcG9uZW50IH0gZnJvbSAnLi9iYXNpYy1hdXRoLXNldHRpbmdzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUYWJzRmFjdG9yeSB9IGZyb20gJy4vZmFjdG9yaWVzL3RhYnMuZmFjdG9yeSc7XG5pbXBvcnQgeyBOYXZpZ2F0aW9uRmFjdG9yeSB9IGZyb20gJy4vZmFjdG9yaWVzL25hdmlnYXRpb24uZmFjdG9yeSc7XG5pbXBvcnQgeyBBdXRoQ29uZmlndXJhdGlvbkd1YXJkIH0gZnJvbSAnLi9hdXRoLWNvbmZpZ3VyYXRpb24uZ3VhcmQnO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBBdXRoQ29uZmlndXJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2F1dGgtY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEF1dGhDb25maWd1cmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9hdXRoLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IFRmYVNldHRpbmdzQ29tcG9uZW50IH0gZnJvbSAnLi90ZmEtc2V0dGluZ3MuY29tcG9uZW50JztcbmltcG9ydCB7IFNlc3Npb25Db25maWd1cmF0aW9uQ29tcG9uZW50IH0gZnJvbSAnLi9zZXNzaW9uLWNvbmZpZ3VyYXRpb24uY29tcG9uZW50JztcbmltcG9ydCB7IExvZ2luU2V0dGluZ3NDb21wb25lbnQgfSBmcm9tICcuL2xvZ2luLXNldHRpbmdzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTc29Db25maWd1cmF0aW9uR3VhcmQgfSBmcm9tICcuL3Nzby1jb25maWd1cmF0aW9uLmd1YXJkJztcbmltcG9ydCB7IFNzb0NvbmZpZ3VyYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9zc28tY29uZmlndXJhdGlvbi5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU2Vzc2lvbkNvbmZpZ3VyYXRpb25Db21wb25lbnQsXG4gICAgTG9naW5TZXR0aW5nc0NvbXBvbmVudCxcbiAgICBCYXNpY0F1dGhTZXR0aW5nc0NvbXBvbmVudCxcbiAgICBBdXRoQ29uZmlndXJhdGlvbkNvbXBvbmVudCxcbiAgICBUZmFTZXR0aW5nc0NvbXBvbmVudFxuICBdLFxuICBleHBvcnRzOiBbXSxcbiAgaW1wb3J0czogW0NvcmVNb2R1bGUsIFBvcG92ZXJNb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICBBdXRoQ29uZmlndXJhdGlvblNlcnZpY2UsXG4gICAgQXV0aENvbmZpZ3VyYXRpb25HdWFyZCxcbiAgICBTc29Db25maWd1cmF0aW9uU2VydmljZSxcbiAgICBTc29Db25maWd1cmF0aW9uR3VhcmQsXG4gICAgeyBwcm92aWRlOiBIT09LX1RBQlMsIHVzZUNsYXNzOiBUYWJzRmFjdG9yeSwgbXVsdGk6IHRydWUgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBOYXZpZ2F0aW9uRmFjdG9yeSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX1JPVVRFLFxuICAgICAgdXNlVmFsdWU6IFtcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdhdXRoLWNvbmZpZ3VyYXRpb24nLFxuICAgICAgICAgIHJlZGlyZWN0VG86ICdhdXRoLWNvbmZpZ3VyYXRpb24vYmFzaWNfc2V0dGluZ3MnLFxuICAgICAgICAgIHBhdGhNYXRjaDogJ2Z1bGwnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoOiAnYXV0aC1jb25maWd1cmF0aW9uL2Jhc2ljX3NldHRpbmdzJyxcbiAgICAgICAgICBjb21wb25lbnQ6IEF1dGhDb25maWd1cmF0aW9uQ29tcG9uZW50LFxuICAgICAgICAgIGNhbkFjdGl2YXRlOiBbQXV0aENvbmZpZ3VyYXRpb25HdWFyZF1cbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdhdXRoLWNvbmZpZ3VyYXRpb24vc2luZ2xlX3NpZ24tb24nLFxuICAgICAgICAgIGNhbkFjdGl2YXRlOiBbQXV0aENvbmZpZ3VyYXRpb25HdWFyZCwgU3NvQ29uZmlndXJhdGlvbkd1YXJkXSxcbiAgICAgICAgICBjaGlsZHJlbjogW10gLy8gVGhpcyByb3V0ZSBleGlzdHMgdG8gc2VjdXJlIHBhdGggYnkgZ3VhcmRzLiBTc28gY29tcG9uZW50IGV4aXN0cyBvbmx5IGluIEFuZ3VsYXIgSnMsIHNvIGhlcmUgY2hpbGRyZW4gaXMgdXNlZCB0byBhdm9pZCBjb21waWxhdGlvbiBlcnJvci5cbiAgICAgICAgfVxuICAgICAgXSBhcyBSb3V0ZVtdLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgQXV0aENvbmZpZ3VyYXRpb25Nb2R1bGUge31cbiJdfQ==