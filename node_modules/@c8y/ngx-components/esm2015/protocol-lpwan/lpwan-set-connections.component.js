import { __awaiter } from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { LpwanSetDeviceProtocolService } from './lpwan-set-device-protocol.service';
import { AlertService, gettext, PopoverConfirmComponent } from '@c8y/ngx-components';
import { pipe } from 'rxjs';
import { map } from 'rxjs/operators';
import { find } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './lpwan-set-device-protocol.service';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@angular/common';
import * as ɵngcc4 from '@angular/forms';

function LpwanAssignLnsConnectionsComponent_p_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 8);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 1, "Connection is not set. Select connection for this device"), " ");
} }
function LpwanAssignLnsConnectionsComponent_p_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 9);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ctx_r1.currentConnection.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ctx_r1.currentConnection.name, " ");
} }
function LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_c8y_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 12);
    ɵngcc0.ɵɵlistener("click", function LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_c8y_li_2_Template_c8y_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r6); const ctx_r5 = ɵngcc0.ɵɵnextContext(2); return ctx_r5.togglePopover(ctx_r5.popoverConfirm); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 13);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const connection_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", connection_r4.name)("pattern", ctx_r3.pattern);
} }
function LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-typeahead", 10);
    ɵngcc0.ɵɵlistener("ngModelChange", function LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_Template_c8y_typeahead_ngModelChange_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.newConnection = $event; })("onSearch", function LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_Template_c8y_typeahead_onSearch_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.setConnectionPipe($event); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_c8y_li_2_Template, 2, 2, "c8y-li", 11);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(1, 6, "Select new connection"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r2.newConnection)("allowFreeEntries", false);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yForOf", ctx_r2.availableConnections)("c8yForLoadMore", "hidden")("c8yForPipe", ctx_r2.filterConnection);
} }
export class LpwanAssignLnsConnectionsComponent {
    constructor(lpwanService, alertService) {
        this.lpwanService = lpwanService;
        this.alertService = alertService;
        this.buttons = [
            { label: gettext('Cancel'), action: () => Promise.reject() },
            { label: gettext('Re-register'), action: () => this.deviceReregister(), status: 'default' }
        ];
        this.reRegisterMsg = gettext('To change provider connection, you need to re-register device first.');
        this.filterConnection = pipe();
        this.pattern = '';
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.reload();
            this.setConnectionPipe('');
        });
    }
    setConnectionPipe(filterStr) {
        this.pattern = filterStr;
        this.filterConnection = pipe(map((connections) => connections.filter(connection => (!this.currentConnection || this.currentConnection.name !== connection.name) &&
            (!filterStr || connection.name.toLowerCase().indexOf(filterStr.toLowerCase()) > -1))));
    }
    reload() {
        return __awaiter(this, void 0, void 0, function* () {
            this.loading = true;
            this.newConnection = null;
            try {
                this.availableConnections = yield this.lpwanService.getAvailableConnections(this.device);
                this.currentConnection = find(this.availableConnections.data, {
                    name: this.device.c8y_LpwanDevice.lnsConnectionName
                });
            }
            catch (ex) {
                this.alertService.addServerFailure(ex);
            }
            finally {
                this.loading = false;
            }
        });
    }
    togglePopover(popoverCfrm) {
        popoverCfrm.show();
        this.setConnectionPipe('');
    }
    deviceReregister() {
        return new Promise((resolve, reject) => {
            window.location.href = `#/deviceregistration`;
            resolve(true);
        });
    }
}
LpwanAssignLnsConnectionsComponent.ɵfac = function LpwanAssignLnsConnectionsComponent_Factory(t) { return new (t || LpwanAssignLnsConnectionsComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.LpwanSetDeviceProtocolService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AlertService)); };
LpwanAssignLnsConnectionsComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: LpwanAssignLnsConnectionsComponent, selectors: [["set-lns-connections"]], viewQuery: function LpwanAssignLnsConnectionsComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(PopoverConfirmComponent, 7);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.popoverConfirm = _t.first);
    } }, inputs: { device: "device" }, decls: 12, vars: 9, consts: [[1, "col-md-6"], [1, "form-group"], ["translate", ""], ["class", "form-control-static", 4, "ngIf"], ["class", "form-control-static  text-truncate", 3, "title", 4, "ngIf"], ["outsideClick", "true", "containerClass", "lns-connection-popover", 3, "message", "buttons", "placement"], ["name", "newConnection", 3, "ngModel", "placeholder", "allowFreeEntries", "ngModelChange", "onSearch", 4, "ngIf"], ["name", "notExisting", 3, "text"], [1, "form-control-static"], [1, "form-control-static", "text-truncate", 3, "title"], ["name", "newConnection", 3, "ngModel", "placeholder", "allowFreeEntries", "ngModelChange", "onSearch"], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "click", 4, "c8yFor", "c8yForOf", "c8yForLoadMore", "c8yForPipe"], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "click"], [3, "text", "pattern"]], template: function LpwanAssignLnsConnectionsComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "label", 2);
        ɵngcc0.ɵɵtext(3, "Current connection");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(4, LpwanAssignLnsConnectionsComponent_p_4_Template, 3, 3, "p", 3);
        ɵngcc0.ɵɵtemplate(5, LpwanAssignLnsConnectionsComponent_p_5_Template, 2, 2, "p", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(6, "c8y-form-group");
        ɵngcc0.ɵɵelement(7, "c8y-popover-confirm", 5);
        ɵngcc0.ɵɵtemplate(8, LpwanAssignLnsConnectionsComponent_c8y_typeahead_8_Template, 3, 8, "c8y-typeahead", 6);
        ɵngcc0.ɵɵelementStart(9, "c8y-messages");
        ɵngcc0.ɵɵelement(10, "c8y-message", 7);
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.currentConnection);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.currentConnection);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("message", ctx.reRegisterMsg)("buttons", ctx.buttons)("placement", "bottom");
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.loading);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("text", ɵngcc0.ɵɵpipeBind1(11, 7, "Select one of the connections."));
    } }, directives: [ɵngcc2.C8yTranslateDirective, ɵngcc3.NgIf, ɵngcc2.FormGroupComponent, ɵngcc2.PopoverConfirmComponent, ɵngcc2.MessagesComponent, ɵngcc2.MessageDirective, ɵngcc2.TypeaheadComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc2.ForOfDirective, ɵngcc2.ListItemComponent, ɵngcc2.HighlightComponent], pipes: [ɵngcc2.C8yTranslatePipe], encapsulation: 2 });
LpwanAssignLnsConnectionsComponent.ctorParameters = () => [
    { type: LpwanSetDeviceProtocolService },
    { type: AlertService }
];
LpwanAssignLnsConnectionsComponent.propDecorators = {
    device: [{ type: Input }],
    popoverConfirm: [{ type: ViewChild, args: [PopoverConfirmComponent, { static: true },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LpwanAssignLnsConnectionsComponent, [{
        type: Component,
        args: [{
                selector: 'set-lns-connections',
                template: "<div class=\"col-md-6\">\n  <div class=\"form-group\">\n    <label translate>Current connection</label>\n    <p class=\"form-control-static\" *ngIf=\"!currentConnection\">\n      {{ 'Connection is not set. Select connection for this device' | translate }}\n    </p>\n    <p class=\"form-control-static  text-truncate\" *ngIf=\"currentConnection\" title=\"{{ currentConnection.name }}\">\n      {{ currentConnection.name }}\n    </p>\n  </div>\n\n  <c8y-form-group>\n    <c8y-popover-confirm\n      outsideClick=\"true\"\n      containerClass=\"lns-connection-popover\"\n      [message]=\"reRegisterMsg\"\n      [buttons]=\"buttons\"\n      [placement]=\"'bottom'\"\n    ></c8y-popover-confirm>\n    <c8y-typeahead\n      *ngIf=\"!loading\"\n      [(ngModel)]=\"newConnection\"\n      placeholder=\"{{ 'Select new connection' | translate }}\"\n      name=\"newConnection\"\n      (onSearch)=\"setConnectionPipe($event)\"\n      [allowFreeEntries]=\"false\"\n    >\n      <c8y-li\n        *c8yFor=\"let connection of availableConnections; loadMore: 'hidden'; pipe: filterConnection\"\n        class=\"p-l-8 p-r-8 c8y-list__item--link\"\n        (click)=\"togglePopover(popoverConfirm)\"\n      >\n        <c8y-highlight [text]=\"connection.name\" [pattern]=\"pattern\"></c8y-highlight>\n      </c8y-li>\n    </c8y-typeahead>\n    <c8y-messages\n      ><c8y-message\n        name=\"notExisting\"\n        [text]=\"'Select one of the connections.' | translate\"\n      ></c8y-message>\n    </c8y-messages>\n  </c8y-form-group>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.LpwanSetDeviceProtocolService }, { type: ɵngcc2.AlertService }]; }, { device: [{
            type: Input
        }], popoverConfirm: [{
            type: ViewChild,
            args: [PopoverConfirmComponent, { static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibHB3YW4tc2V0LWNvbm5lY3Rpb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vcHJvdG9jb2wtbHB3YW4vbHB3YW4tc2V0LWNvbm5lY3Rpb25zLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3BFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3BGLE9BQU8sRUFBRSxZQUFZLEVBQUUsT0FBTyxFQUF5Qix1QkFBdUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRTVHLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDNUIsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxJQUFJLEVBQUUsTUFBTSxXQUFXLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPakMsTUFBTSxPQUFPLGtDQUFrQztBQUFHLElBZ0JoRCxZQUNVLFlBQTJDLEVBQzNDLFlBQTBCO0FBQ25DLFFBRlMsaUJBQVksR0FBWixZQUFZLENBQStCO0FBQUMsUUFDNUMsaUJBQVksR0FBWixZQUFZLENBQWM7QUFDdEMsUUFoQkUsWUFBTyxHQUE0QjtBQUNyQyxZQUFJLEVBQUUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsR0FBRyxFQUFFLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRSxFQUFFO0FBQ2hFLFlBQUksRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLGFBQWEsQ0FBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFO0FBQy9GLFNBQUcsQ0FBQztBQUNKLFFBQUUsa0JB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SUFBSSxFQUFDO0FBQU07Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExwd2FuU2V0RGV2aWNlUHJvdG9jb2xTZXJ2aWNlIH0gZnJvbSAnLi9scHdhbi1zZXQtZGV2aWNlLXByb3RvY29sLnNlcnZpY2UnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0LCBQb3BvdmVyQ29uZmlybUJ1dHRvbnMsIFBvcG92ZXJDb25maXJtQ29tcG9uZW50IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCwgSVJlc3VsdExpc3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBwaXBlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBmaW5kIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEFjdGlsaXR5Q29ubmVjdGlvbiwgU2lnZm94Q29ubmVjdGlvbiB9IGZyb20gJy4vbXVsdGlwbGUtbG5zLWNvbm5lY3RvcnMvbXVsdGlwbGUtbG5zLWNvbm5lY3Rvci5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3NldC1sbnMtY29ubmVjdGlvbnMnLFxuICB0ZW1wbGF0ZVVybDogJy4vbHB3YW4tc2V0LWNvbm5lY3Rpb25zLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBMcHdhbkFzc2lnbkxuc0Nvbm5lY3Rpb25zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgbG9hZGluZzogYm9vbGVhbjtcbiAgQElucHV0KCkgZGV2aWNlOiBJTWFuYWdlZE9iamVjdDtcbiAgYnV0dG9uczogUG9wb3ZlckNvbmZpcm1CdXR0b25zW10gPSBbXG4gICAgeyBsYWJlbDogZ2V0dGV4dCgnQ2FuY2VsJyksIGFjdGlvbjogKCkgPT4gUHJvbWlzZS5yZWplY3QoKSB9LFxuICAgIHsgbGFiZWw6IGdldHRleHQoJ1JlLXJlZ2lzdGVyJyksIGFjdGlvbjogKCkgPT4gdGhpcy5kZXZpY2VSZXJlZ2lzdGVyKCksIHN0YXR1czogJ2RlZmF1bHQnIH1cbiAgXTtcbiAgcmVSZWdpc3Rlck1zZyA9IGdldHRleHQoJ1RvIGNoYW5nZSBwcm92aWRlciBjb25uZWN0aW9uLCB5b3UgbmVlZCB0byByZS1yZWdpc3RlciBkZXZpY2UgZmlyc3QuJyk7XG4gIGZpbHRlckNvbm5lY3Rpb24gPSBwaXBlKCk7XG4gIHBhdHRlcm4gPSAnJztcbiAgQFZpZXdDaGlsZChQb3BvdmVyQ29uZmlybUNvbXBvbmVudCwge3N0YXRpYzogdHJ1ZX0pIHBvcG92ZXJDb25maXJtOiBQb3BvdmVyQ29uZmlybUNvbXBvbmVudDtcblxuICBuZXdDb25uZWN0aW9uOiBBY3RpbGl0eUNvbm5lY3Rpb24gfCBTaWdmb3hDb25uZWN0aW9uO1xuICBhdmFpbGFibGVDb25uZWN0aW9uczogSVJlc3VsdExpc3Q8QWN0aWxpdHlDb25uZWN0aW9uIHwgU2lnZm94Q29ubmVjdGlvbj47XG4gIGN1cnJlbnRDb25uZWN0aW9uOiBBY3RpbGl0eUNvbm5lY3Rpb24gfCBTaWdmb3hDb25uZWN0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgbHB3YW5TZXJ2aWNlOiBMcHdhblNldERldmljZVByb3RvY29sU2VydmljZSxcbiAgICBwcml2YXRlIGFsZXJ0U2VydmljZTogQWxlcnRTZXJ2aWNlXG4gICkge31cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgYXdhaXQgdGhpcy5yZWxvYWQoKTtcbiAgICB0aGlzLnNldENvbm5lY3Rpb25QaXBlKCcnKTtcbiAgfVxuXG4gIHNldENvbm5lY3Rpb25QaXBlKGZpbHRlclN0cjogc3RyaW5nKSB7XG4gICAgdGhpcy5wYXR0ZXJuID0gZmlsdGVyU3RyO1xuICAgIHRoaXMuZmlsdGVyQ29ubmVjdGlvbiA9IHBpcGUoXG4gICAgICBtYXAoKGNvbm5lY3Rpb25zOiBJTWFuYWdlZE9iamVjdFtdKSA9PlxuICAgICAgICBjb25uZWN0aW9ucy5maWx0ZXIoXG4gICAgICAgICAgY29ubmVjdGlvbiA9PlxuICAgICAgICAgICAgKCF0aGlzLmN1cnJlbnRDb25uZWN0aW9uIHx8IHRoaXMuY3VycmVudENvbm5lY3Rpb24ubmFtZSAhPT0gY29ubmVjdGlvbi5uYW1lKSAmJlxuICAgICAgICAgICAgKCFmaWx0ZXJTdHIgfHwgY29ubmVjdGlvbi5uYW1lLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihmaWx0ZXJTdHIudG9Mb3dlckNhc2UoKSkgPiAtMSlcbiAgICAgICAgKVxuICAgICAgKVxuICAgICk7XG4gIH1cblxuICBhc3luYyByZWxvYWQoKSB7XG4gICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcbiAgICB0aGlzLm5ld0Nvbm5lY3Rpb24gPSBudWxsO1xuICAgIHRyeSB7XG4gICAgICAgIHRoaXMuYXZhaWxhYmxlQ29ubmVjdGlvbnMgPSBhd2FpdCB0aGlzLmxwd2FuU2VydmljZS5nZXRBdmFpbGFibGVDb25uZWN0aW9ucyh0aGlzLmRldmljZSk7XG4gICAgICAgIHRoaXMuY3VycmVudENvbm5lY3Rpb24gPSBmaW5kKHRoaXMuYXZhaWxhYmxlQ29ubmVjdGlvbnMuZGF0YSwge1xuICAgICAgICAgIG5hbWU6IHRoaXMuZGV2aWNlLmM4eV9McHdhbkRldmljZS5sbnNDb25uZWN0aW9uTmFtZVxuICAgICAgICB9KTtcbiAgICB9IGNhdGNoIChleCkge1xuICAgICAgdGhpcy5hbGVydFNlcnZpY2UuYWRkU2VydmVyRmFpbHVyZShleCk7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHRvZ2dsZVBvcG92ZXIocG9wb3ZlckNmcm0pIHtcbiAgICBwb3BvdmVyQ2ZybS5zaG93KCk7XG4gICAgdGhpcy5zZXRDb25uZWN0aW9uUGlwZSgnJyk7XG4gIH1cblxuICBkZXZpY2VSZXJlZ2lzdGVyKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICB3aW5kb3cubG9jYXRpb24uaHJlZiA9IGAjL2RldmljZXJlZ2lzdHJhdGlvbmA7XG4gICAgICByZXNvbHZlKHRydWUpO1xuICAgIH0pO1xuICB9XG59XG4iXX0=