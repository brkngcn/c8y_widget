import { NgModule } from '@angular/core';
import { CommonModule, CoreModule, FormsModule } from '@c8y/ngx-components';
import { NoConnectionsFoundComponent } from './no-connections-found.component';
import { RouterModule } from '@angular/router';
import { SigfoxMultipleLnsConnectorComponent } from './sigfox-multiple-lns-connector.component';
import { ActilityMultipleLnsConnectorComponent } from './actility-multiple-lns-connector.component';
import { MultipleLnsConnectorService } from './multiple-lns-connector.service';
import { ConnectionInfoWithDownloadCsvComponent } from './connection-info-with-download-csv.component';
const settingsRoutes = [
    {
        path: 'connectivitySettings/multiple_lns_connectors_sigfox',
        component: SigfoxMultipleLnsConnectorComponent
    },
    {
        path: 'connectivitySettings/multiple_lns_connectors_actility',
        component: ActilityMultipleLnsConnectorComponent
    }
];
export class MultipleLnsConnectorsModule {
}
MultipleLnsConnectorsModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    SigfoxMultipleLnsConnectorComponent,
                    NoConnectionsFoundComponent,
                    ActilityMultipleLnsConnectorComponent,
                    ConnectionInfoWithDownloadCsvComponent
                ],
                imports: [
                    CoreModule,
                    CommonModule,
                    FormsModule,
                    RouterModule.forChild(settingsRoutes)
                ],
                providers: [
                    MultipleLnsConnectorService
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGlwbGUtbG5zLWNvbm5lY3RvcnMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvdG9jb2wtbHB3YW4vbXVsdGlwbGUtbG5zLWNvbm5lY3RvcnMvbXVsdGlwbGUtbG5zLWNvbm5lY3RvcnMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFTLE1BQU0scUJBQXFCLENBQUM7QUFDbkYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0UsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3BHLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxzQ0FBc0MsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBRXZHLE1BQU0sY0FBYyxHQUFZO0lBQzlCO1FBQ0UsSUFBSSxFQUFFLHFEQUFxRDtRQUMzRCxTQUFTLEVBQUUsbUNBQW1DO0tBQy9DO0lBQ0Q7UUFDRSxJQUFJLEVBQUUsdURBQXVEO1FBQzdELFNBQVMsRUFBRSxxQ0FBcUM7S0FDakQ7Q0FDRixDQUFDO0FBa0JGLE1BQU0sT0FBTywyQkFBMkI7OztZQWpCdkMsUUFBUSxTQUFDO2dCQUNSLFlBQVksRUFBRTtvQkFDWixtQ0FBbUM7b0JBQ25DLDJCQUEyQjtvQkFDM0IscUNBQXFDO29CQUNyQyxzQ0FBc0M7aUJBQ3ZDO2dCQUNELE9BQU8sRUFBRTtvQkFDUCxVQUFVO29CQUNWLFlBQVk7b0JBQ1osV0FBVztvQkFDWCxZQUFZLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQztpQkFDdEM7Z0JBQ0QsU0FBUyxFQUFFO29CQUNULDJCQUEyQjtpQkFDNUI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUsIENvcmVNb2R1bGUsIEZvcm1zTW9kdWxlLCBSb3V0ZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgTm9Db25uZWN0aW9uc0ZvdW5kQ29tcG9uZW50IH0gZnJvbSAnLi9uby1jb25uZWN0aW9ucy1mb3VuZC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFNpZ2ZveE11bHRpcGxlTG5zQ29ubmVjdG9yQ29tcG9uZW50IH0gZnJvbSAnLi9zaWdmb3gtbXVsdGlwbGUtbG5zLWNvbm5lY3Rvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQWN0aWxpdHlNdWx0aXBsZUxuc0Nvbm5lY3RvckNvbXBvbmVudCB9IGZyb20gJy4vYWN0aWxpdHktbXVsdGlwbGUtbG5zLWNvbm5lY3Rvci5jb21wb25lbnQnO1xuaW1wb3J0IHsgTXVsdGlwbGVMbnNDb25uZWN0b3JTZXJ2aWNlIH0gZnJvbSAnLi9tdWx0aXBsZS1sbnMtY29ubmVjdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29ubmVjdGlvbkluZm9XaXRoRG93bmxvYWRDc3ZDb21wb25lbnQgfSBmcm9tICcuL2Nvbm5lY3Rpb24taW5mby13aXRoLWRvd25sb2FkLWNzdi5jb21wb25lbnQnO1xuXG5jb25zdCBzZXR0aW5nc1JvdXRlczogUm91dGVbXSA9IFtcbiAge1xuICAgIHBhdGg6ICdjb25uZWN0aXZpdHlTZXR0aW5ncy9tdWx0aXBsZV9sbnNfY29ubmVjdG9yc19zaWdmb3gnLFxuICAgIGNvbXBvbmVudDogU2lnZm94TXVsdGlwbGVMbnNDb25uZWN0b3JDb21wb25lbnRcbiAgfSxcbiAge1xuICAgIHBhdGg6ICdjb25uZWN0aXZpdHlTZXR0aW5ncy9tdWx0aXBsZV9sbnNfY29ubmVjdG9yc19hY3RpbGl0eScsXG4gICAgY29tcG9uZW50OiBBY3RpbGl0eU11bHRpcGxlTG5zQ29ubmVjdG9yQ29tcG9uZW50XG4gIH1cbl07XG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBTaWdmb3hNdWx0aXBsZUxuc0Nvbm5lY3RvckNvbXBvbmVudCxcbiAgICBOb0Nvbm5lY3Rpb25zRm91bmRDb21wb25lbnQsXG4gICAgQWN0aWxpdHlNdWx0aXBsZUxuc0Nvbm5lY3RvckNvbXBvbmVudCxcbiAgICBDb25uZWN0aW9uSW5mb1dpdGhEb3dubG9hZENzdkNvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29yZU1vZHVsZSxcbiAgICBDb21tb25Nb2R1bGUsXG4gICAgRm9ybXNNb2R1bGUsXG4gICAgUm91dGVyTW9kdWxlLmZvckNoaWxkKHNldHRpbmdzUm91dGVzKVxuICBdLFxuICBwcm92aWRlcnM6IFtcbiAgICBNdWx0aXBsZUxuc0Nvbm5lY3RvclNlcnZpY2VcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBNdWx0aXBsZUxuc0Nvbm5lY3RvcnNNb2R1bGUge31cbiJdfQ==