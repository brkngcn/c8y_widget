import { __awaiter } from "tslib";
import { Component, Input } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { MultipleLnsConnectorService } from './multiple-lns-connector.service';
import { saveAs } from 'file-saver';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
import * as ɵngcc2 from './multiple-lns-connector.service';
import * as ɵngcc3 from '@c8y/ngx-components';
export class ConnectionInfoWithDownloadCsvComponent {
    constructor(modal, connectorService) {
        this.modal = modal;
        this.connectorService = connectorService;
    }
    dismiss() {
        this.modal.hide();
    }
    download() {
        return __awaiter(this, void 0, void 0, function* () {
            const url = `/service/${this.appData.contextPath}${this.messageData.URL}`;
            const res = yield this.connectorService.download(url);
            const streamData = yield res.blob();
            saveAs(streamData, 'DeviceList.csv');
        });
    }
}
ConnectionInfoWithDownloadCsvComponent.ɵfac = function ConnectionInfoWithDownloadCsvComponent_Factory(t) { return new (t || ConnectionInfoWithDownloadCsvComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.MultipleLnsConnectorService)); };
ConnectionInfoWithDownloadCsvComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ConnectionInfoWithDownloadCsvComponent, selectors: [["connection-info-with-download-csv"]], inputs: { messageData: "messageData", appData: "appData", modalTitle: "modalTitle" }, decls: 19, vars: 15, consts: [[1, "modal-dialog"], [1, "modal-content"], [1, "c8y-prompt", "alert", "alert-danger"], [1, "m-b-16"], [1, "dlt-c8y-icon-exclamation-circle"], [1, "text-break-word"], [1, "btn-default", 3, "click"], [1, "alert-footer"], [1, "btn", "btn-default", 3, "title", "click"]], template: function ConnectionInfoWithDownloadCsvComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "div", 1);
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "h3", 3);
        ɵngcc0.ɵɵelement(4, "i", 4);
        ɵngcc0.ɵɵelementStart(5, "span");
        ɵngcc0.ɵɵtext(6);
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "p", 5);
        ɵngcc0.ɵɵtext(9);
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "span", 6);
        ɵngcc0.ɵɵlistener("click", function ConnectionInfoWithDownloadCsvComponent_Template_span_click_11_listener() { return ctx.download(); });
        ɵngcc0.ɵɵtext(12);
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 7);
        ɵngcc0.ɵɵelementStart(15, "button", 8);
        ɵngcc0.ɵɵlistener("click", function ConnectionInfoWithDownloadCsvComponent_Template_button_click_15_listener() { return ctx.dismiss(); });
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵtext(17);
        ɵngcc0.ɵɵpipe(18, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 5, ctx.modalTitle));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(10, 7, ctx.messageData.message), " ");
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 9, "Click to download link with affected devices"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 11, "Cancel"));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(18, 13, "Cancel"), " ");
    } }, pipes: [ɵngcc3.C8yTranslatePipe], encapsulation: 2 });
ConnectionInfoWithDownloadCsvComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: MultipleLnsConnectorService }
];
ConnectionInfoWithDownloadCsvComponent.propDecorators = {
    messageData: [{ type: Input }],
    appData: [{ type: Input }],
    modalTitle: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConnectionInfoWithDownloadCsvComponent, [{
        type: Component,
        args: [{
                selector: 'connection-info-with-download-csv',
                template: "<div class=\"modal-dialog\">\n  <div class=\"modal-content\">\n    <div class=\"c8y-prompt alert alert-danger\">\n      <h3 class=\"m-b-16\">\n        <i class=\"dlt-c8y-icon-exclamation-circle\"></i>\n        <span>{{ modalTitle | translate }}</span>\n      </h3>\n      <p class=\"text-break-word\">\n        {{ messageData.message | translate }}\n      </p>\n      \n      <span class=\"btn-default\" (click)=\"download()\">{{\n        'Click to download link with affected devices' | translate\n      }}</span>\n      <div class=\"alert-footer\">\n        <button title=\"{{ 'Cancel' | translate }}\" class=\"btn btn-default\" (click)=\"dismiss()\">\n          {{ 'Cancel' | translate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }, { type: ɵngcc2.MultipleLnsConnectorService }]; }, { messageData: [{
            type: Input
        }], appData: [{
            type: Input
        }], modalTitle: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ubmVjdGlvbi1pbmZvLXdpdGgtZG93bmxvYWQtY3N2LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvdG9jb2wtbHB3YW4vbXVsdGlwbGUtbG5zLWNvbm5lY3RvcnMvY29ubmVjdGlvbi1pbmZvLXdpdGgtZG93bmxvYWQtY3N2LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQy9FLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxZQUFZLENBQUM7Ozs7O0FBT3BDLE1BQU0sT0FBTyxzQ0FBc0M7QUFDbkQsSUFHRSxZQUFvQixLQUFpQixFQUFVLGdCQUE2QztBQUFJLFFBQTVFLFVBQUssR0FBTCxLQUFLLENBQVk7QUFBQyxRQUFTLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBNkI7QUFBQyxJQUFFLENBQUM7QUFDbEcsSUFDRSxPQUFPO0FBQ1QsUUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQ3RCLElBQUUsQ0FBQztBQUNILElBQ1EsUUFBUTtBQUNoQjtBQUE4RCxZQUExRCxNQUFNLEdBQUcsR0FBRyxZQUFZLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxHQUFHLElBQUksQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLENBQUM7QUFDOUUsWUFBSSxNQUFNLEdBQUcsR0FBRyxNQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDMUQsWUFBSSxNQUFNLFVBQVUsR0FBRyxNQUFNLEdBQUcsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN4QyxZQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztBQUN6QyxRQUFFLENBQUM7QUFFSCxLQUZHO0FBQ0g7a0VBcEJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsbUNBQW1DLGtCQUM3QztrcEJBQWlFO1dBQ2xFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsrREFDSTtBQUFDO0FBQ1UsWUFWUCxVQUFVO0FBQUksWUFDZCwyQkFBMkI7QUFBRztBQUFHO0FBQ3RCLDBCQVFqQixLQUFLO0FBQUssc0JBQ1YsS0FBSztBQUFLLHlCQUNWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgTXVsdGlwbGVMbnNDb25uZWN0b3JTZXJ2aWNlIH0gZnJvbSAnLi9tdWx0aXBsZS1sbnMtY29ubmVjdG9yLnNlcnZpY2UnO1xuaW1wb3J0IHsgc2F2ZUFzIH0gZnJvbSAnZmlsZS1zYXZlcic7XG5pbXBvcnQgeyBJQXBwbGljYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nvbm5lY3Rpb24taW5mby13aXRoLWRvd25sb2FkLWNzdicsXG4gIHRlbXBsYXRlVXJsOiAnLi9jb25uZWN0aW9uLWluZm8td2l0aC1kb3dubG9hZC1jc3YuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIENvbm5lY3Rpb25JbmZvV2l0aERvd25sb2FkQ3N2Q29tcG9uZW50IHtcbiAgQElucHV0KCkgbWVzc2FnZURhdGE6IGFueTtcbiAgQElucHV0KCkgYXBwRGF0YTogSUFwcGxpY2F0aW9uO1xuICBASW5wdXQoKSBtb2RhbFRpdGxlOiBzdHJpbmc7XG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbW9kYWw6IEJzTW9kYWxSZWYsIHByaXZhdGUgY29ubmVjdG9yU2VydmljZTogTXVsdGlwbGVMbnNDb25uZWN0b3JTZXJ2aWNlKSB7fVxuXG4gIGRpc21pc3MoKSB7XG4gICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gIH1cblxuICBhc3luYyBkb3dubG9hZCgpIHtcbiAgICBjb25zdCB1cmwgPSBgL3NlcnZpY2UvJHt0aGlzLmFwcERhdGEuY29udGV4dFBhdGh9JHt0aGlzLm1lc3NhZ2VEYXRhLlVSTH1gO1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRoaXMuY29ubmVjdG9yU2VydmljZS5kb3dubG9hZCh1cmwpO1xuICAgIGNvbnN0IHN0cmVhbURhdGEgPSBhd2FpdCByZXMuYmxvYigpO1xuICAgIHNhdmVBcyhzdHJlYW1EYXRhLCAnRGV2aWNlTGlzdC5jc3YnKTtcbiAgfVxufVxuIl19