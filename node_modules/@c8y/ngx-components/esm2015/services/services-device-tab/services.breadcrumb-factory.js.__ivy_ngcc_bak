import { __awaiter } from "tslib";
import { Injectable } from '@angular/core';
import { InventoryService } from '@c8y/client';
import { gettext, ViewContext } from '@c8y/ngx-components';
export class ServicesBreadcrumbFactory {
    constructor(inventoryService) {
        this.inventoryService = inventoryService;
    }
    get(route) {
        var _a, _b, _c, _d;
        return __awaiter(this, void 0, void 0, function* () {
            const { context, contextData } = route.snapshot.data;
            const { routeConfig } = route.snapshot;
            this.contextData = contextData || this.contextData;
            if ((context === ViewContext.Service || ((_a = routeConfig) === null || _a === void 0 ? void 0 : _a.context) === ViewContext.Service) &&
                !!this.contextData) {
                const serviceMO = (_b = (yield this.inventoryService.detail(this.contextData, { withParents: true }))) === null || _b === void 0 ? void 0 : _b.data;
                const breadcrumb = { items: [] };
                const breadcrumbItems = [];
                const device = (_d = (_c = serviceMO === null || serviceMO === void 0 ? void 0 : serviceMO.additionParents) === null || _c === void 0 ? void 0 : _c.references[0]) === null || _d === void 0 ? void 0 : _d.managedObject;
                if (device) {
                    breadcrumbItems.push({
                        label: device.name,
                        path: `/device/${device.id}`
                    });
                    breadcrumbItems.push({
                        label: gettext('Services'),
                        path: `/device/${device.id}/services`
                    });
                    breadcrumbItems.push({
                        label: serviceMO.name
                    });
                }
                breadcrumb.items = breadcrumbItems;
                return breadcrumb;
            }
        });
    }
}
ServicesBreadcrumbFactory.decorators = [
    { type: Injectable }
];
ServicesBreadcrumbFactory.ctorParameters = () => [
    { type: InventoryService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VydmljZXMuYnJlYWRjcnVtYi1mYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc2VydmljZXMvc2VydmljZXMtZGV2aWNlLXRhYi9zZXJ2aWNlcy5icmVhZGNydW1iLWZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFM0MsT0FBTyxFQUFFLGdCQUFnQixFQUFXLE1BQU0sYUFBYSxDQUFDO0FBQ3hELE9BQU8sRUFJTCxPQUFPLEVBQ1AsV0FBVyxFQUNaLE1BQU0scUJBQXFCLENBQUM7QUFHN0IsTUFBTSxPQUFPLHlCQUF5QjtJQUdwQyxZQUFvQixnQkFBa0M7UUFBbEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtJQUFHLENBQUM7SUFFcEQsR0FBRyxDQUFDLEtBQXFCOzs7WUFDN0IsTUFBTSxFQUFFLE9BQU8sRUFBRSxXQUFXLEVBQUUsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQztZQUNyRCxNQUFNLEVBQUUsV0FBVyxFQUFFLEdBQUcsS0FBSyxDQUFDLFFBQVEsQ0FBQztZQUV2QyxJQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDO1lBRW5ELElBQ0UsQ0FBQyxPQUFPLEtBQUssV0FBVyxDQUFDLE9BQU8sSUFBSSxDQUFBLE1BQUMsV0FBbUIsMENBQUUsT0FBTyxNQUFLLFdBQVcsQ0FBQyxPQUFPLENBQUM7Z0JBQzFGLENBQUMsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUNsQjtnQkFDQSxNQUFNLFNBQVMsR0FBRyxNQUFBLENBQUMsTUFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQywwQ0FBRSxJQUFJLENBQUM7Z0JBQ3RHLE1BQU0sVUFBVSxHQUFlLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxDQUFDO2dCQUM3QyxNQUFNLGVBQWUsR0FBcUIsRUFBRSxDQUFDO2dCQUM3QyxNQUFNLE1BQU0sR0FBWSxNQUFBLE1BQUEsU0FBUyxhQUFULFNBQVMsdUJBQVQsU0FBUyxDQUFFLGVBQWUsMENBQUUsVUFBVSxDQUFDLENBQUMsQ0FBQywwQ0FBRSxhQUFhLENBQUM7Z0JBRWpGLElBQUksTUFBTSxFQUFFO29CQUNWLGVBQWUsQ0FBQyxJQUFJLENBQUM7d0JBQ25CLEtBQUssRUFBRSxNQUFNLENBQUMsSUFBSTt3QkFDbEIsSUFBSSxFQUFFLFdBQVcsTUFBTSxDQUFDLEVBQUUsRUFBRTtxQkFDN0IsQ0FBQyxDQUFDO29CQUNILGVBQWUsQ0FBQyxJQUFJLENBQUM7d0JBQ25CLEtBQUssRUFBRSxPQUFPLENBQUMsVUFBVSxDQUFDO3dCQUMxQixJQUFJLEVBQUUsV0FBVyxNQUFNLENBQUMsRUFBRSxXQUFXO3FCQUN0QyxDQUFDLENBQUM7b0JBQ0gsZUFBZSxDQUFDLElBQUksQ0FBQzt3QkFDbkIsS0FBSyxFQUFFLFNBQVMsQ0FBQyxJQUFJO3FCQUNKLENBQUMsQ0FBQztpQkFDdEI7Z0JBRUQsVUFBVSxDQUFDLEtBQUssR0FBRyxlQUFlLENBQUM7Z0JBQ25DLE9BQU8sVUFBVSxDQUFDO2FBQ25COztLQUNGOzs7WUF0Q0YsVUFBVTs7O1lBVEYsZ0JBQWdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aXZhdGVkUm91dGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgSW52ZW50b3J5U2VydmljZSwgSVNvdXJjZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7XG4gIEJyZWFkY3J1bWIsXG4gIEJyZWFkY3J1bWJGYWN0b3J5LFxuICBCcmVhZGNydW1iSXRlbSxcbiAgZ2V0dGV4dCxcbiAgVmlld0NvbnRleHRcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTZXJ2aWNlc0JyZWFkY3J1bWJGYWN0b3J5IGltcGxlbWVudHMgQnJlYWRjcnVtYkZhY3Rvcnkge1xuICBwcml2YXRlIGNvbnRleHREYXRhO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgaW52ZW50b3J5U2VydmljZTogSW52ZW50b3J5U2VydmljZSkge31cblxuICBhc3luYyBnZXQocm91dGU6IEFjdGl2YXRlZFJvdXRlKSB7XG4gICAgY29uc3QgeyBjb250ZXh0LCBjb250ZXh0RGF0YSB9ID0gcm91dGUuc25hcHNob3QuZGF0YTtcbiAgICBjb25zdCB7IHJvdXRlQ29uZmlnIH0gPSByb3V0ZS5zbmFwc2hvdDtcblxuICAgIHRoaXMuY29udGV4dERhdGEgPSBjb250ZXh0RGF0YSB8fCB0aGlzLmNvbnRleHREYXRhO1xuXG4gICAgaWYgKFxuICAgICAgKGNvbnRleHQgPT09IFZpZXdDb250ZXh0LlNlcnZpY2UgfHwgKHJvdXRlQ29uZmlnIGFzIGFueSk/LmNvbnRleHQgPT09IFZpZXdDb250ZXh0LlNlcnZpY2UpICYmXG4gICAgICAhIXRoaXMuY29udGV4dERhdGFcbiAgICApIHtcbiAgICAgIGNvbnN0IHNlcnZpY2VNTyA9IChhd2FpdCB0aGlzLmludmVudG9yeVNlcnZpY2UuZGV0YWlsKHRoaXMuY29udGV4dERhdGEsIHsgd2l0aFBhcmVudHM6IHRydWUgfSkpPy5kYXRhO1xuICAgICAgY29uc3QgYnJlYWRjcnVtYjogQnJlYWRjcnVtYiA9IHsgaXRlbXM6IFtdIH07XG4gICAgICBjb25zdCBicmVhZGNydW1iSXRlbXM6IEJyZWFkY3J1bWJJdGVtW10gPSBbXTtcbiAgICAgIGNvbnN0IGRldmljZTogSVNvdXJjZSA9IHNlcnZpY2VNTz8uYWRkaXRpb25QYXJlbnRzPy5yZWZlcmVuY2VzWzBdPy5tYW5hZ2VkT2JqZWN0O1xuXG4gICAgICBpZiAoZGV2aWNlKSB7XG4gICAgICAgIGJyZWFkY3J1bWJJdGVtcy5wdXNoKHtcbiAgICAgICAgICBsYWJlbDogZGV2aWNlLm5hbWUsXG4gICAgICAgICAgcGF0aDogYC9kZXZpY2UvJHtkZXZpY2UuaWR9YFxuICAgICAgICB9KTtcbiAgICAgICAgYnJlYWRjcnVtYkl0ZW1zLnB1c2goe1xuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdTZXJ2aWNlcycpLFxuICAgICAgICAgIHBhdGg6IGAvZGV2aWNlLyR7ZGV2aWNlLmlkfS9zZXJ2aWNlc2BcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFkY3J1bWJJdGVtcy5wdXNoKHtcbiAgICAgICAgICBsYWJlbDogc2VydmljZU1PLm5hbWVcbiAgICAgICAgfSBhcyBCcmVhZGNydW1iSXRlbSk7XG4gICAgICB9XG5cbiAgICAgIGJyZWFkY3J1bWIuaXRlbXMgPSBicmVhZGNydW1iSXRlbXM7XG4gICAgICByZXR1cm4gYnJlYWRjcnVtYjtcbiAgICB9XG4gIH1cbn1cbiJdfQ==