import { bridgeServiceProvider } from './bridge.service';
import { HOOK_ACTION, HOOK_ACTION_BAR, HOOK_BREADCRUMB, HOOK_NAVIGATOR_NODES, HOOK_TABS, HOOK_DOCS, RouterModule } from '@c8y/ngx-components';
import { Ng1ActionBarFactoryService } from './action-bar.factory';
import { Ng1ActionFactoryService } from './action.factory';
import { Ng1BreadcrumbFactoryService } from './breadcrumb.factory';
import { Ng1NodesFactoryService } from './nodes.factory';
import { Ng1TabsFactoryService } from './tabs.factory';
import { NgModule } from '@angular/core';
import { Ng1DocsFactoryService } from './docs.factory';
import { authBridgeServiceProvider } from './auth-bridge.service';
import { absoluteDateServiceProvider } from './absolute-date.service';
import { smartRulesServiceProvider } from './smart-rules.service';
import * as angular from 'angular';
import { setAngularJSGlobal } from '@angular/upgrade/static';
setAngularJSGlobal(angular);
export class UpgradeModule {
}
UpgradeModule.decorators = [
    { type: NgModule, args: [{
                imports: [RouterModule],
                exports: [],
                providers: [
                    absoluteDateServiceProvider,
                    bridgeServiceProvider,
                    authBridgeServiceProvider,
                    smartRulesServiceProvider,
                    { provide: HOOK_NAVIGATOR_NODES, useClass: Ng1NodesFactoryService, multi: true },
                    { provide: HOOK_TABS, useClass: Ng1TabsFactoryService, multi: true },
                    { provide: HOOK_ACTION_BAR, useClass: Ng1ActionBarFactoryService, multi: true },
                    { provide: HOOK_ACTION, useClass: Ng1ActionFactoryService, multi: true },
                    { provide: HOOK_BREADCRUMB, useClass: Ng1BreadcrumbFactoryService, multi: true },
                    { provide: HOOK_DOCS, useClass: Ng1DocsFactoryService, multi: true }
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBncmFkZS5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi91cGdyYWRlL3VwZ3JhZGUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3pELE9BQU8sRUFDTCxXQUFXLEVBQ1gsZUFBZSxFQUNmLGVBQWUsRUFDZixvQkFBb0IsRUFDcEIsU0FBUyxFQUNULFNBQVMsRUFDVCxZQUFZLEVBQ2IsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNsRSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMzRCxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNuRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ2xFLE9BQU8sS0FBSyxPQUFPLE1BQU0sU0FBUyxDQUFDO0FBQ25DLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBRTdELGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBa0I1QixNQUFNLE9BQU8sYUFBYTs7O1lBaEJ6QixRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDO2dCQUN2QixPQUFPLEVBQUUsRUFBRTtnQkFDWCxTQUFTLEVBQUU7b0JBQ1QsMkJBQTJCO29CQUMzQixxQkFBcUI7b0JBQ3JCLHlCQUF5QjtvQkFDekIseUJBQXlCO29CQUN6QixFQUFFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxRQUFRLEVBQUUsc0JBQXNCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtvQkFDaEYsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxxQkFBcUIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO29CQUNwRSxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7b0JBQy9FLEVBQUUsT0FBTyxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtvQkFDeEUsRUFBRSxPQUFPLEVBQUUsZUFBZSxFQUFFLFFBQVEsRUFBRSwyQkFBMkIsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO29CQUNoRixFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLHFCQUFxQixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7aUJBQ3JFO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBicmlkZ2VTZXJ2aWNlUHJvdmlkZXIgfSBmcm9tICcuL2JyaWRnZS5zZXJ2aWNlJztcbmltcG9ydCB7XG4gIEhPT0tfQUNUSU9OLFxuICBIT09LX0FDVElPTl9CQVIsXG4gIEhPT0tfQlJFQURDUlVNQixcbiAgSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gIEhPT0tfVEFCUyxcbiAgSE9PS19ET0NTLFxuICBSb3V0ZXJNb2R1bGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBOZzFBY3Rpb25CYXJGYWN0b3J5U2VydmljZSB9IGZyb20gJy4vYWN0aW9uLWJhci5mYWN0b3J5JztcbmltcG9ydCB7IE5nMUFjdGlvbkZhY3RvcnlTZXJ2aWNlIH0gZnJvbSAnLi9hY3Rpb24uZmFjdG9yeSc7XG5pbXBvcnQgeyBOZzFCcmVhZGNydW1iRmFjdG9yeVNlcnZpY2UgfSBmcm9tICcuL2JyZWFkY3J1bWIuZmFjdG9yeSc7XG5pbXBvcnQgeyBOZzFOb2Rlc0ZhY3RvcnlTZXJ2aWNlIH0gZnJvbSAnLi9ub2Rlcy5mYWN0b3J5JztcbmltcG9ydCB7IE5nMVRhYnNGYWN0b3J5U2VydmljZSB9IGZyb20gJy4vdGFicy5mYWN0b3J5JztcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOZzFEb2NzRmFjdG9yeVNlcnZpY2UgfSBmcm9tICcuL2RvY3MuZmFjdG9yeSc7XG5pbXBvcnQgeyBhdXRoQnJpZGdlU2VydmljZVByb3ZpZGVyIH0gZnJvbSAnLi9hdXRoLWJyaWRnZS5zZXJ2aWNlJztcbmltcG9ydCB7IGFic29sdXRlRGF0ZVNlcnZpY2VQcm92aWRlciB9IGZyb20gJy4vYWJzb2x1dGUtZGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IHNtYXJ0UnVsZXNTZXJ2aWNlUHJvdmlkZXIgfSBmcm9tICcuL3NtYXJ0LXJ1bGVzLnNlcnZpY2UnO1xuaW1wb3J0ICogYXMgYW5ndWxhciBmcm9tICdhbmd1bGFyJztcbmltcG9ydCB7IHNldEFuZ3VsYXJKU0dsb2JhbCB9IGZyb20gJ0Bhbmd1bGFyL3VwZ3JhZGUvc3RhdGljJztcblxuc2V0QW5ndWxhckpTR2xvYmFsKGFuZ3VsYXIpO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbUm91dGVyTW9kdWxlXSxcbiAgZXhwb3J0czogW10sXG4gIHByb3ZpZGVyczogW1xuICAgIGFic29sdXRlRGF0ZVNlcnZpY2VQcm92aWRlcixcbiAgICBicmlkZ2VTZXJ2aWNlUHJvdmlkZXIsXG4gICAgYXV0aEJyaWRnZVNlcnZpY2VQcm92aWRlcixcbiAgICBzbWFydFJ1bGVzU2VydmljZVByb3ZpZGVyLFxuICAgIHsgcHJvdmlkZTogSE9PS19OQVZJR0FUT1JfTk9ERVMsIHVzZUNsYXNzOiBOZzFOb2Rlc0ZhY3RvcnlTZXJ2aWNlLCBtdWx0aTogdHJ1ZSB9LFxuICAgIHsgcHJvdmlkZTogSE9PS19UQUJTLCB1c2VDbGFzczogTmcxVGFic0ZhY3RvcnlTZXJ2aWNlLCBtdWx0aTogdHJ1ZSB9LFxuICAgIHsgcHJvdmlkZTogSE9PS19BQ1RJT05fQkFSLCB1c2VDbGFzczogTmcxQWN0aW9uQmFyRmFjdG9yeVNlcnZpY2UsIG11bHRpOiB0cnVlIH0sXG4gICAgeyBwcm92aWRlOiBIT09LX0FDVElPTiwgdXNlQ2xhc3M6IE5nMUFjdGlvbkZhY3RvcnlTZXJ2aWNlLCBtdWx0aTogdHJ1ZSB9LFxuICAgIHsgcHJvdmlkZTogSE9PS19CUkVBRENSVU1CLCB1c2VDbGFzczogTmcxQnJlYWRjcnVtYkZhY3RvcnlTZXJ2aWNlLCBtdWx0aTogdHJ1ZSB9LFxuICAgIHsgcHJvdmlkZTogSE9PS19ET0NTLCB1c2VDbGFzczogTmcxRG9jc0ZhY3RvcnlTZXJ2aWNlLCBtdWx0aTogdHJ1ZSB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgVXBncmFkZU1vZHVsZSB7fVxuIl19