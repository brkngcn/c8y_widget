import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/ngx-components';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@c8y/ngx-components/assets-navigator';
import * as ɵngcc4 from '@angular/forms';

function RootNodeConfigComponent_c8y_li_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelementStart(1, "div", 7);
    ɵngcc0.ɵɵelement(2, "h1", 8);
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵelementStart(4, "strong");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 1, "No top level nodes set"));
} }
function RootNodeConfigComponent_c8y_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r5 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li");
    ɵngcc0.ɵɵelement(1, "c8y-li-icon", 9);
    ɵngcc0.ɵɵelementStart(2, "div", 10);
    ɵngcc0.ɵɵelementStart(3, "div", 11);
    ɵngcc0.ɵɵelementStart(4, "div", 12);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 13);
    ɵngcc0.ɵɵelementStart(7, "label", 14);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementStart(9, "input", 15);
    ɵngcc0.ɵɵlistener("ngModelChange", function RootNodeConfigComponent_c8y_li_6_Template_input_ngModelChange_9_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const node_r2 = restoredCtx.$implicit; return node_r2.hideDevices = $event; })("change", function RootNodeConfigComponent_c8y_li_6_Template_input_change_9_listener() { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onUpdate.emit(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(10, "span");
    ɵngcc0.ɵɵelementStart(11, "small");
    ɵngcc0.ɵɵtext(12);
    ɵngcc0.ɵɵpipe(13, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(14, "div", 16);
    ɵngcc0.ɵɵelementStart(15, "button", 17);
    ɵngcc0.ɵɵlistener("click", function RootNodeConfigComponent_c8y_li_6_Template_button_click_15_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const node_r2 = restoredCtx.$implicit; const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.removeNavigatorNode(node_r2); });
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelement(17, "i", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const node_r2 = ctx.$implicit;
    const index_r3 = ctx.index;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵpropertyInterpolate("title", node_r2.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", node_r2.name, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 7, "Hide devices"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate1("name", "node.", index_r3, ".hideDevices");
    ɵngcc0.ɵɵproperty("ngModel", node_r2.hideDevices);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(13, 9, "Hide devices"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 11, "Remove"));
} }
const _c0 = function () { return { groupsOnly: true, multi: true, groupsSelectable: true }; };
export class RootNodeConfigComponent {
    constructor() {
        this.onUpdate = new EventEmitter();
    }
    /**
     * Removes one of the root nodes.
     * @param node The node to remove.
     */
    removeNavigatorNode(node) {
        const index = this.config.rootNodes.indexOf(node);
        if (index > -1) {
            this.config.rootNodes.splice(index, 1);
            this.onUpdate.emit();
        }
    }
}
RootNodeConfigComponent.ɵfac = function RootNodeConfigComponent_Factory(t) { return new (t || RootNodeConfigComponent)(); };
RootNodeConfigComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: RootNodeConfigComponent, selectors: [["c8y-root-node-config"]], inputs: { config: "config" }, outputs: { onUpdate: "onUpdate" }, decls: 12, vars: 11, consts: [[1, "col-sm-6"], ["translate", "", 3, "title"], [1, "separator-top"], [4, "ngIf"], [4, "ngFor", "ngForOf"], [1, "col-sm-6", "col-md-5", "col-md-offset-1"], ["name", "rootNodes", 3, "config", "ngModel", "ngModelChange", "onSelected"], [1, "c8y-empty-state", "text-left"], ["c8yIcon", "folder-open"], ["icon", "c8y-group"], [1, "content-flex-30"], [1, "col-6"], [1, "text-truncate", 3, "title"], [1, "col-4"], [1, "c8y-switch", "c8y-switch--inline", 3, "title"], ["type", "checkbox", 3, "ngModel", "name", "ngModelChange", "change"], [1, "col-2", "text-right"], [1, "btn-clean", 3, "title", "click"], ["c8yIcon", "minus-circle", 1, "text-danger"]], template: function RootNodeConfigComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "label", 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵtext(3, " Current top level nodes ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(4, "c8y-list-group", 2);
        ɵngcc0.ɵɵtemplate(5, RootNodeConfigComponent_c8y_li_5_Template, 7, 3, "c8y-li", 3);
        ɵngcc0.ɵɵtemplate(6, RootNodeConfigComponent_c8y_li_6_Template, 18, 13, "c8y-li", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(7, "div", 5);
        ɵngcc0.ɵɵelementStart(8, "label", 1);
        ɵngcc0.ɵɵpipe(9, "translate");
        ɵngcc0.ɵɵtext(10, "Select top level nodes");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "c8y-asset-selector", 6);
        ɵngcc0.ɵɵlistener("ngModelChange", function RootNodeConfigComponent_Template_c8y_asset_selector_ngModelChange_11_listener($event) { return ctx.config.rootNodes = $event; })("onSelected", function RootNodeConfigComponent_Template_c8y_asset_selector_onSelected_11_listener() { return ctx.onUpdate.emit(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 6, "Current top level nodes"));
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngIf", ctx.config.rootNodes.length === 0);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.config.rootNodes);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(9, 8, "Select top level nodes"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("config", ɵngcc0.ɵɵpureFunction0(10, _c0))("ngModel", ctx.config.rootNodes);
    } }, directives: [ɵngcc1.C8yTranslateDirective, ɵngcc1.ListGroupComponent, ɵngcc2.NgIf, ɵngcc2.NgForOf, ɵngcc3.AssetSelectorComponent, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc1.ListItemComponent, ɵngcc1.IconDirective, ɵngcc1.ListItemIconComponent, ɵngcc4.CheckboxControlValueAccessor], pipes: [ɵngcc1.C8yTranslatePipe], encapsulation: 2 });
RootNodeConfigComponent.propDecorators = {
    config: [{ type: Input }],
    onUpdate: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RootNodeConfigComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-root-node-config',
                template: "<div class=\"col-sm-6\">\n  <label title=\"{{ 'Current top level nodes' | translate }}\" translate>\n    Current top level nodes\n  </label>\n  <c8y-list-group class=\"separator-top\">\n    <c8y-li *ngIf=\"config.rootNodes.length === 0\">\n      <div class=\"c8y-empty-state text-left\">\n        <h1 c8yIcon=\"folder-open\"></h1>\n        <p>\n          <strong>{{ 'No top level nodes set' | translate }}</strong>\n        </p>\n      </div>\n    </c8y-li>\n    <c8y-li *ngFor=\"let node of config.rootNodes; let index = index\">\n      <c8y-li-icon icon=\"c8y-group\"></c8y-li-icon>\n      <div class=\"content-flex-30\">\n        <div class=\"col-6\">\n          <div class=\"text-truncate\" title=\"{{ node.name }}\">\n            {{ node.name }}\n          </div>\n        </div>\n        <div class=\"col-4\">\n          <label class=\"c8y-switch c8y-switch--inline\" title=\"{{ 'Hide devices' | translate }}\">\n            <input\n              type=\"checkbox\"\n              [(ngModel)]=\"node.hideDevices\"\n              name=\"node.{{ index }}.hideDevices\"\n              (change)=\"onUpdate.emit()\"\n            />\n            <span></span>\n            <small>{{ 'Hide devices' | translate }}</small>\n          </label>\n        </div>\n        <div class=\"col-2 text-right\">\n          <button\n            class=\"btn-clean\"\n            title=\"{{ 'Remove' | translate }}\"\n            (click)=\"removeNavigatorNode(node)\"\n          >\n            <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n          </button>\n        </div>\n      </div>\n    </c8y-li>\n  </c8y-list-group>\n</div>\n\n<div class=\"col-sm-6 col-md-5 col-md-offset-1\">\n  <label title=\"{{ 'Select top level nodes' | translate }}\" translate>Select top level nodes</label>\n  <c8y-asset-selector\n    [config]=\"{ groupsOnly: true, multi: true, groupsSelectable: true }\"\n    [(ngModel)]=\"config.rootNodes\"\n    (onSelected)=\"onUpdate.emit()\"\n    name=\"rootNodes\"\n  ></c8y-asset-selector>\n</div>\n"
            }]
    }], function () { return []; }, { onUpdate: [{
            type: Output
        }], config: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm9vdC1ub2RlLWNvbmZpZy5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvY2twaXQtY29uZmlnL3Jvb3Qtbm9kZS1jb25maWcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFPdkUsTUFBTSxPQUFPLHVCQUF1QjtBQUNwQyxJQUxBO0FBQ0csUUFRRCxhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQVEsQ0FBQztBQUN0QyxJQVlBLENBQUM7QUFDRCxJQVpFO0FBQ0Y7QUFDRTtBQUNFLE9BQUM7QUFDTCxJQUFHLG1CQUFtQixDQUFDLElBQTJCO0FBQ2xELFFBQUksTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ3RELFFBQUksSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLEVBQUU7QUFDcEIsWUFBTSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO0FBQzdDLFlBQU0sSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMzQixTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0g7bURBdEJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsc0JBQXNCO1lBQ2hDOzs7Ozs7Ozs7Ozs7Ozs7OztrU0FBZ0QsY0FDakQ7Ozs7Ozs7Ozs7Ozs7OzZWQUNJO0FBQUM7QUFDSSxxQkFBUCxLQUFLO0FBQ04sdUJBRUMsTUFBTTtBQUNSOzs7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFdmVudEVtaXR0ZXIsIElucHV0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvY2twaXRDb25maWcsIENvY2twaXRDb25maWdSb290Tm9kZSB9IGZyb20gJy4vY29ja3BpdC1jb25maWcubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktcm9vdC1ub2RlLWNvbmZpZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9yb290LW5vZGUtY29uZmlnLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBSb290Tm9kZUNvbmZpZ0NvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIGNvbmZpZzogQ29ja3BpdENvbmZpZztcblxuICBAT3V0cHV0KClcbiAgb25VcGRhdGUgPSBuZXcgRXZlbnRFbWl0dGVyPHZvaWQ+KCk7XG5cbiAgLyoqXG4gICAqIFJlbW92ZXMgb25lIG9mIHRoZSByb290IG5vZGVzLlxuICAgKiBAcGFyYW0gbm9kZSBUaGUgbm9kZSB0byByZW1vdmUuXG4gICAqL1xuICAgcmVtb3ZlTmF2aWdhdG9yTm9kZShub2RlOiBDb2NrcGl0Q29uZmlnUm9vdE5vZGUpIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuY29uZmlnLnJvb3ROb2Rlcy5pbmRleE9mKG5vZGUpO1xuICAgIGlmIChpbmRleCA+IC0xKSB7XG4gICAgICB0aGlzLmNvbmZpZy5yb290Tm9kZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHRoaXMub25VcGRhdGUuZW1pdCgpO1xuICAgIH1cbiAgfVxufVxuIl19