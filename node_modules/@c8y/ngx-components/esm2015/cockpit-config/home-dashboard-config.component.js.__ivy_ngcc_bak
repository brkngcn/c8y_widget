import { Component, Input } from '@angular/core';
import { DEFAULT_HOME_DASHBOARD_NAME, HomeDashboardType, USER_HOME_DASHBOARD_NAME } from './cockpit-config.model';
import { CockpitConfigService } from './cockpit-config.service';
export class HomeDashboardConfigComponent {
    /**
     * @ignore
     */
    constructor(cockpitConfigService) {
        this.cockpitConfigService = cockpitConfigService;
        /**
         * The types of dashboard that can be configured.
         */
        this.homeDashboardTypes = HomeDashboardType;
    }
    /**
     * @ignore
     */
    dashboardChange(selected, type) {
        if (!selected) {
            return;
        }
        switch (type) {
            case this.homeDashboardTypes.DEFAULT: {
                this.config.homeDashboardName = DEFAULT_HOME_DASHBOARD_NAME;
                this.config.userSpecificHomeDashboard = false;
                break;
            }
            case this.homeDashboardTypes.APP: {
                this.config.homeDashboardName = this.cockpitConfigService.getAppDashboardName();
                this.config.userSpecificHomeDashboard = false;
                break;
            }
            case this.homeDashboardTypes.USER: {
                this.config.homeDashboardName = USER_HOME_DASHBOARD_NAME;
                this.config.userSpecificHomeDashboard = true;
                break;
            }
        }
    }
    /**
     * @ignore
     */
    verifySelected(type) {
        if (type === this.homeDashboardTypes.USER) {
            return this.config.userSpecificHomeDashboard;
        }
        if (type === this.homeDashboardTypes.DEFAULT) {
            return this.config.homeDashboardName === DEFAULT_HOME_DASHBOARD_NAME;
        }
        return this.config.homeDashboardName === this.cockpitConfigService.getAppDashboardName();
    }
}
HomeDashboardConfigComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-home-dashboard-config',
                template: "<c8y-list-group class=\"separator-top\">\n  <c8y-li>\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.DEFAULT)\"\n      [selected]=\"verifySelected(homeDashboardTypes.DEFAULT)\"\n    >\n    </c8y-li-radio>\n    <p translate>Default home dashboard</p>\n    <small translate>Changes done in the home dashboard are reflected across the platform.</small>\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.APP)\"\n      [selected]=\"verifySelected(homeDashboardTypes.APP)\"\n    >\n    </c8y-li-radio>\n    <p translate>Custom home dashboard</p>\n    <small translate\n      >Changes done to the home dashboard are reflected only in the current application.</small\n    >\n  </c8y-li>\n  <c8y-li>\n    <c8y-li-radio\n      (onSelect)=\"dashboardChange($event, homeDashboardTypes.USER)\"\n      [selected]=\"verifySelected(homeDashboardTypes.USER)\"\n    >\n    </c8y-li-radio>\n    <p translate>User home dashboard</p>\n    <small translate\n      >Changes done to the home dashboard are reflected only for the current user. NOTE: This user\n      needs to have inventory write permission.</small\n    >\n  </c8y-li>\n</c8y-list-group>\n"
            },] }
];
HomeDashboardConfigComponent.ctorParameters = () => [
    { type: CockpitConfigService }
];
HomeDashboardConfigComponent.propDecorators = {
    config: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9tZS1kYXNoYm9hcmQtY29uZmlnLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2NvY2twaXQtY29uZmlnL2hvbWUtZGFzaGJvYXJkLWNvbmZpZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUVMLDJCQUEyQixFQUMzQixpQkFBaUIsRUFDakIsd0JBQXdCLEVBQ3pCLE1BQU0sd0JBQXdCLENBQUM7QUFDaEMsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFNaEUsTUFBTSxPQUFPLDRCQUE0QjtJQVN2Qzs7T0FFRztJQUNILFlBQW9CLG9CQUEwQztRQUExQyx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXNCO1FBUjlEOztXQUVHO1FBQ00sdUJBQWtCLEdBQUcsaUJBQWlCLENBQUM7SUFLaUIsQ0FBQztJQUVsRTs7T0FFRztJQUNILGVBQWUsQ0FBQyxRQUFpQixFQUFFLElBQXVCO1FBQ3hELElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDYixPQUFPO1NBQ1I7UUFFRCxRQUFRLElBQUksRUFBRTtZQUNaLEtBQUssSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNwQyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixHQUFHLDJCQUEyQixDQUFDO2dCQUM1RCxJQUFJLENBQUMsTUFBTSxDQUFDLHlCQUF5QixHQUFHLEtBQUssQ0FBQztnQkFDOUMsTUFBTTthQUNQO1lBQ0QsS0FBSyxJQUFJLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2hDLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLG9CQUFvQixDQUFDLG1CQUFtQixFQUFFLENBQUM7Z0JBQ2hGLElBQUksQ0FBQyxNQUFNLENBQUMseUJBQXlCLEdBQUcsS0FBSyxDQUFDO2dCQUM5QyxNQUFNO2FBQ1A7WUFDRCxLQUFLLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztnQkFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxpQkFBaUIsR0FBRyx3QkFBd0IsQ0FBQztnQkFDekQsSUFBSSxDQUFDLE1BQU0sQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUM7Z0JBQzdDLE1BQU07YUFDUDtTQUNGO0lBQ0gsQ0FBQztJQUVEOztPQUVHO0lBQ0gsY0FBYyxDQUFDLElBQXVCO1FBQ3BDLElBQUksSUFBSSxLQUFLLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLEVBQUU7WUFDekMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLHlCQUF5QixDQUFDO1NBQzlDO1FBQ0QsSUFBSSxJQUFJLEtBQUssSUFBSSxDQUFDLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtZQUM1QyxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEtBQUssMkJBQTJCLENBQUM7U0FDdEU7UUFDRCxPQUFPLElBQUksQ0FBQyxNQUFNLENBQUMsaUJBQWlCLEtBQUssSUFBSSxDQUFDLG9CQUFvQixDQUFDLG1CQUFtQixFQUFFLENBQUM7SUFDM0YsQ0FBQzs7O1lBeERGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsMkJBQTJCO2dCQUNyQyxrdENBQXFEO2FBQ3REOzs7WUFMUSxvQkFBb0I7OztxQkFPMUIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENvY2twaXRDb25maWcsXG4gIERFRkFVTFRfSE9NRV9EQVNIQk9BUkRfTkFNRSxcbiAgSG9tZURhc2hib2FyZFR5cGUsXG4gIFVTRVJfSE9NRV9EQVNIQk9BUkRfTkFNRVxufSBmcm9tICcuL2NvY2twaXQtY29uZmlnLm1vZGVsJztcbmltcG9ydCB7IENvY2twaXRDb25maWdTZXJ2aWNlIH0gZnJvbSAnLi9jb2NrcGl0LWNvbmZpZy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWhvbWUtZGFzaGJvYXJkLWNvbmZpZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9ob21lLWRhc2hib2FyZC1jb25maWcuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEhvbWVEYXNoYm9hcmRDb25maWdDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBjb25maWc6IENvY2twaXRDb25maWc7XG5cbiAgLyoqXG4gICAqIFRoZSB0eXBlcyBvZiBkYXNoYm9hcmQgdGhhdCBjYW4gYmUgY29uZmlndXJlZC5cbiAgICovXG4gIHJlYWRvbmx5IGhvbWVEYXNoYm9hcmRUeXBlcyA9IEhvbWVEYXNoYm9hcmRUeXBlO1xuXG4gIC8qKlxuICAgKiBAaWdub3JlXG4gICAqL1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNvY2twaXRDb25maWdTZXJ2aWNlOiBDb2NrcGl0Q29uZmlnU2VydmljZSkge31cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZGFzaGJvYXJkQ2hhbmdlKHNlbGVjdGVkOiBib29sZWFuLCB0eXBlOiBIb21lRGFzaGJvYXJkVHlwZSkge1xuICAgIGlmICghc2VsZWN0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgIGNhc2UgdGhpcy5ob21lRGFzaGJvYXJkVHlwZXMuREVGQVVMVDoge1xuICAgICAgICB0aGlzLmNvbmZpZy5ob21lRGFzaGJvYXJkTmFtZSA9IERFRkFVTFRfSE9NRV9EQVNIQk9BUkRfTkFNRTtcbiAgICAgICAgdGhpcy5jb25maWcudXNlclNwZWNpZmljSG9tZURhc2hib2FyZCA9IGZhbHNlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICAgIGNhc2UgdGhpcy5ob21lRGFzaGJvYXJkVHlwZXMuQVBQOiB7XG4gICAgICAgIHRoaXMuY29uZmlnLmhvbWVEYXNoYm9hcmROYW1lID0gdGhpcy5jb2NrcGl0Q29uZmlnU2VydmljZS5nZXRBcHBEYXNoYm9hcmROYW1lKCk7XG4gICAgICAgIHRoaXMuY29uZmlnLnVzZXJTcGVjaWZpY0hvbWVEYXNoYm9hcmQgPSBmYWxzZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgICBjYXNlIHRoaXMuaG9tZURhc2hib2FyZFR5cGVzLlVTRVI6IHtcbiAgICAgICAgdGhpcy5jb25maWcuaG9tZURhc2hib2FyZE5hbWUgPSBVU0VSX0hPTUVfREFTSEJPQVJEX05BTUU7XG4gICAgICAgIHRoaXMuY29uZmlnLnVzZXJTcGVjaWZpY0hvbWVEYXNoYm9hcmQgPSB0cnVlO1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQGlnbm9yZVxuICAgKi9cbiAgdmVyaWZ5U2VsZWN0ZWQodHlwZTogSG9tZURhc2hib2FyZFR5cGUpIHtcbiAgICBpZiAodHlwZSA9PT0gdGhpcy5ob21lRGFzaGJvYXJkVHlwZXMuVVNFUikge1xuICAgICAgcmV0dXJuIHRoaXMuY29uZmlnLnVzZXJTcGVjaWZpY0hvbWVEYXNoYm9hcmQ7XG4gICAgfVxuICAgIGlmICh0eXBlID09PSB0aGlzLmhvbWVEYXNoYm9hcmRUeXBlcy5ERUZBVUxUKSB7XG4gICAgICByZXR1cm4gdGhpcy5jb25maWcuaG9tZURhc2hib2FyZE5hbWUgPT09IERFRkFVTFRfSE9NRV9EQVNIQk9BUkRfTkFNRTtcbiAgICB9XG4gICAgcmV0dXJuIHRoaXMuY29uZmlnLmhvbWVEYXNoYm9hcmROYW1lID09PSB0aGlzLmNvY2twaXRDb25maWdTZXJ2aWNlLmdldEFwcERhc2hib2FyZE5hbWUoKTtcbiAgfVxufVxuIl19