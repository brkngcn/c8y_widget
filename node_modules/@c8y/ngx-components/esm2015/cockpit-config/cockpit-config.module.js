import { NgModule } from '@angular/core';
import { CoreModule, gettext, HOOK_NAVIGATOR_NODES, HOOK_ROUTE, HOOK_STEPPER, Steppers } from '@c8y/ngx-components';
import { AssetSelectorModule } from '@c8y/ngx-components/assets-navigator';
import { EcosystemModule } from '@c8y/ngx-components/ecosystem';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { CockpitConfigGuard } from './cockpit-config.guard';
import { COCKPIT_CONFIG_PATH } from './cockpit-config.model';
import { CockpitConfigService } from './cockpit-config.service';
import { CockpitConfigurationComponent } from './cockpit-configuration.component';
import { FeatureConfigComponent } from './feature-config.component';
import { HomeDashboardConfigComponent } from './home-dashboard-config.component';
import { MiscConfigComponent } from './misc-config.component';
import { RootNodeConfigComponent } from './root-node-config.component';
import { CockpitSetupStep1Component } from './setup/cockpit-setup-step1.component';
import { CockpitSetupStep2Component } from './setup/cockpit-setup-step2.component';
import { CockpitSetupStep3Component } from './setup/cockpit-setup-step3.component';
import { CockpitSetupStep4Component } from './setup/cockpit-setup-step4.component';
import { CockpitSetupStepperButtonsComponent } from './setup/cockpit-setup-stepper-buttons.component';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './cockpit-config.service';
const ɵ0 = [
    {
        path: COCKPIT_CONFIG_PATH,
        component: CockpitConfigurationComponent,
        canActivate: [CockpitConfigGuard]
    }
], ɵ1 = [
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep1Component,
        label: gettext('Features'),
        setupId: 'cockpitFeatures',
        priority: 0
    },
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep2Component,
        label: gettext('Top level nodes'),
        setupId: 'cockpitTopLevelNodes',
        priority: 10
    },
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep3Component,
        label: gettext('Home Dashboard'),
        setupId: 'cockpitHomeDashboard',
        priority: 20
    },
    {
        stepperId: Steppers.SETUP,
        component: CockpitSetupStep4Component,
        label: gettext('Misc'),
        setupId: 'cockpitMisc',
        priority: 30
    }
];
export class CockpitConfigModule {
    constructor(service) {
        // only for DI, not used but needed.
    }
}
CockpitConfigModule.ɵfac = function CockpitConfigModule_Factory(t) { return new (t || CockpitConfigModule)(ɵngcc0.ɵɵinject(ɵngcc1.CockpitConfigService)); };
CockpitConfigModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CockpitConfigModule });
CockpitConfigModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        CockpitConfigGuard,
        {
            provide: HOOK_ROUTE,
            useValue: ɵ0,
            multi: true
        },
        {
            provide: HOOK_NAVIGATOR_NODES,
            useClass: CockpitConfigGuard,
            multi: true
        },
        {
            provide: HOOK_STEPPER,
            useValue: ɵ1,
            multi: true
        }
    ], imports: [[CoreModule, AssetSelectorModule, PopoverModule, EcosystemModule]] });
CockpitConfigModule.ctorParameters = () => [
    { type: CockpitConfigService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CockpitConfigModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    CockpitConfigurationComponent,
                    CockpitSetupStep1Component,
                    CockpitSetupStep2Component,
                    CockpitSetupStep3Component,
                    CockpitSetupStep4Component,
                    FeatureConfigComponent,
                    RootNodeConfigComponent,
                    HomeDashboardConfigComponent,
                    MiscConfigComponent,
                    CockpitSetupStepperButtonsComponent
                ],
                imports: [CoreModule, AssetSelectorModule, PopoverModule, EcosystemModule],
                providers: [
                    CockpitConfigGuard,
                    {
                        provide: HOOK_ROUTE,
                        useValue: ɵ0,
                        multi: true
                    },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: CockpitConfigGuard,
                        multi: true
                    },
                    {
                        provide: HOOK_STEPPER,
                        useValue: ɵ1,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.CockpitConfigService }]; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CockpitConfigModule, { declarations: function () { return [CockpitConfigurationComponent,
        CockpitSetupStep1Component,
        CockpitSetupStep2Component,
        CockpitSetupStep3Component,
        CockpitSetupStep4Component,
        FeatureConfigComponent,
        RootNodeConfigComponent,
        HomeDashboardConfigComponent,
        MiscConfigComponent,
        CockpitSetupStepperButtonsComponent]; }, imports: function () { return [CoreModule, AssetSelectorModule, PopoverModule, EcosystemModule]; } }); })();
export { ɵ0, ɵ1 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ja3BpdC1jb25maWcubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9jb2NrcGl0LWNvbmZpZy9jb2NrcGl0LWNvbmZpZy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQ0wsVUFBVSxFQUNWLE9BQU8sRUFDUCxvQkFBb0IsRUFDcEIsVUFBVSxFQUNWLFlBQVksRUFFWixRQUFRLEVBQ1QsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzdELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBQ2hFLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQ2pGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLGlEQUFpRCxDQUFDOzs7QUFDdEcsV0FtQmdCO0FBQ2hCLElBQVE7QUFDUixRQUFVLElBQUksRUFBRSxtQkFBbUI7QUFDbkMsUUFBVSxTQUFTLEVBQUUsNkJBQTZCO0FBQ2xELFFBQVUsV0FBVyxFQUFFLENBQUMsa0JBQWtCLENBQUM7QUFDM0MsS0FBUztBQUNULENBQU8sT0FVUztBQUNoQixJQUFRO0FBQ1IsUUFBVSxTQUFTLEVBQUUsUUFBUSxDQUFDLEtBQUs7QUFDbkMsUUFBVSxTQUFTLEVBQUUsMEJBQTBCO0FBQy9DLFFBQVUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxVQUFVLENBQUM7QUFDcEMsUUFBVSxPQUFPLEVBQUUsaUJBQWlCO0FBQ3BDLFFBQVUsUUFBUSxFQUFFLENBQUM7QUFDckIsS0FBUztBQUNULElBQVE7QUFDUixRQUFVLFNBQVMsRUFBRSxRQUFRLENBQUMsS0FBSztBQUNuQyxRQUFVLFNBQVMsRUFBRSwwQkFBMEI7QUFDL0MsUUFBVSxLQUFLLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0FBQzNDLFFBQVUsT0FBTyxFQUFFLHNCQUFzQjtBQUN6QyxRQUFVLFFBQVEsRUFBRSxFQUFFO0FBQ3RCLEtBQVM7QUFDVCxJQUFRO0FBQ1IsUUFBVSxTQUFTLEVBQUUsUUFBUSxDQUFDLEtBQUs7QUFDbkMsUUFBVSxTQUFTLEVBQUUsMEJBQTBCO0FBQy9DLFFBQVUsS0FBSyxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztBQUMxQyxRQUFVLE9BQU8sRUFBRSxzQkFBc0I7QUFDekMsUUFBVSxRQUFRLEVBQUUsRUFBRTtBQUN0QixLQUFTO0FBQ1QsSUFBUTtBQUNSLFFBQVUsU0FBUyxFQUFFLFFBQVEsQ0FBQyxLQUFLO0FBQ25DLFFBQVUsU0FBUyxFQUFFLDBCQUEwQjtBQUMvQyxRQUFVLEtBQUssRUFBRSxPQUFPLENBQUMsTUFBTSxDQUFDO0FBQ2hDLFFBQVUsT0FBTyxFQUFFLGFBQWE7QUFDaEMsUUFBVSxRQUFRLEVBQUUsRUFBRTtBQUN0QixLQUFTO0FBQ1QsQ0FBc0I7QUFLdEIsTUFBTSxPQUFPLG1CQUFtQjtBQUNoQyxJQUFFLFlBQVksT0FBNkI7QUFDM0MsUUFBSSxvQ0FBb0M7QUFDeEMsSUFBRSxDQUFDO0FBQ0g7K0NBeEVDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsc0JBQ1osNkJBQTZCO1lBQzdCLDBCQUEwQixzQkFDMUIsMEJBQTBCO1dBQzFCLDBCQUEwQixzQkFDMUI7S0FBMEIsc0JBQzFCOztXQUFzQjtBQUN0Qix1QkFBdUI7bUJBQ3ZCOzs7RUFBNEIsc0JBQzVCO0FBQW1CLHNCQUNuQjtlQUFtQztTQUNwQzs7TUFDRCxPQUFPLEVBQUUsQ0FBQyxVQUFVLEVBQUU7WUFBbUIsRUFBRTtDQUFhLEVBQUUsZUFBZSxDQUFDOztHQUMxRSxTQUFTLEVBQUUsc0JBQ1Qsa0JBQWtCLHNCQUNsQixXQW9EQztjQW5EQyxPQUFPLEVBQUUsVUFBVSxqQ0FtRG5CO2NBbERBLFFBQVEsSUFNUCwxQkE2Q1MsWUFqRlAsb0JBQW9CO0FBQUc7Y0FxQzFCLEtBQUssRUFBRSxJQUFJLHNCQUNaLHNCQUNELDBCQUNFLE9BQU8sRUFBRTtTQUFvQjtXQUM3QjtFQUFRLEVBQUUsa0JBQWtCO2dCQUM1QixLQUFLLEVBQUUsSUFBSSxzQkFDWjtvQkFDRCwwQkFDRTtLQUFPLEVBQUUsWUFBWSwwQkFDckI7S0FBUSxJQTZCUSwwQkFDaEIsS0FBSyxFQUFFLElBQUk7b0JBQ1osa0JBQ0Y7SUFDRjs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzZKQS9FaUM7QUFBQztBQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb3JlTW9kdWxlLFxuICBnZXR0ZXh0LFxuICBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgSE9PS19ST1VURSxcbiAgSE9PS19TVEVQUEVSLFxuICBTZXR1cFN0ZXAsXG4gIFN0ZXBwZXJzXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgQXNzZXRTZWxlY3Rvck1vZHVsZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvYXNzZXRzLW5hdmlnYXRvcic7XG5pbXBvcnQgeyBFY29zeXN0ZW1Nb2R1bGUgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL2Vjb3N5c3RlbSc7XG5pbXBvcnQgeyBQb3BvdmVyTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wb3BvdmVyJztcbmltcG9ydCB7IENvY2twaXRDb25maWdHdWFyZCB9IGZyb20gJy4vY29ja3BpdC1jb25maWcuZ3VhcmQnO1xuaW1wb3J0IHsgQ09DS1BJVF9DT05GSUdfUEFUSCB9IGZyb20gJy4vY29ja3BpdC1jb25maWcubW9kZWwnO1xuaW1wb3J0IHsgQ29ja3BpdENvbmZpZ1NlcnZpY2UgfSBmcm9tICcuL2NvY2twaXQtY29uZmlnLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ29ja3BpdENvbmZpZ3VyYXRpb25Db21wb25lbnQgfSBmcm9tICcuL2NvY2twaXQtY29uZmlndXJhdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgRmVhdHVyZUNvbmZpZ0NvbXBvbmVudCB9IGZyb20gJy4vZmVhdHVyZS1jb25maWcuY29tcG9uZW50JztcbmltcG9ydCB7IEhvbWVEYXNoYm9hcmRDb25maWdDb21wb25lbnQgfSBmcm9tICcuL2hvbWUtZGFzaGJvYXJkLWNvbmZpZy5jb21wb25lbnQnO1xuaW1wb3J0IHsgTWlzY0NvbmZpZ0NvbXBvbmVudCB9IGZyb20gJy4vbWlzYy1jb25maWcuY29tcG9uZW50JztcbmltcG9ydCB7IFJvb3ROb2RlQ29uZmlnQ29tcG9uZW50IH0gZnJvbSAnLi9yb290LW5vZGUtY29uZmlnLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb2NrcGl0U2V0dXBTdGVwMUNvbXBvbmVudCB9IGZyb20gJy4vc2V0dXAvY29ja3BpdC1zZXR1cC1zdGVwMS5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29ja3BpdFNldHVwU3RlcDJDb21wb25lbnQgfSBmcm9tICcuL3NldHVwL2NvY2twaXQtc2V0dXAtc3RlcDIuY29tcG9uZW50JztcbmltcG9ydCB7IENvY2twaXRTZXR1cFN0ZXAzQ29tcG9uZW50IH0gZnJvbSAnLi9zZXR1cC9jb2NrcGl0LXNldHVwLXN0ZXAzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb2NrcGl0U2V0dXBTdGVwNENvbXBvbmVudCB9IGZyb20gJy4vc2V0dXAvY29ja3BpdC1zZXR1cC1zdGVwNC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29ja3BpdFNldHVwU3RlcHBlckJ1dHRvbnNDb21wb25lbnQgfSBmcm9tICcuL3NldHVwL2NvY2twaXQtc2V0dXAtc3RlcHBlci1idXR0b25zLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIENvY2twaXRDb25maWd1cmF0aW9uQ29tcG9uZW50LFxuICAgIENvY2twaXRTZXR1cFN0ZXAxQ29tcG9uZW50LFxuICAgIENvY2twaXRTZXR1cFN0ZXAyQ29tcG9uZW50LFxuICAgIENvY2twaXRTZXR1cFN0ZXAzQ29tcG9uZW50LFxuICAgIENvY2twaXRTZXR1cFN0ZXA0Q29tcG9uZW50LFxuICAgIEZlYXR1cmVDb25maWdDb21wb25lbnQsXG4gICAgUm9vdE5vZGVDb25maWdDb21wb25lbnQsXG4gICAgSG9tZURhc2hib2FyZENvbmZpZ0NvbXBvbmVudCxcbiAgICBNaXNjQ29uZmlnQ29tcG9uZW50LFxuICAgIENvY2twaXRTZXR1cFN0ZXBwZXJCdXR0b25zQ29tcG9uZW50XG4gIF0sXG4gIGltcG9ydHM6IFtDb3JlTW9kdWxlLCBBc3NldFNlbGVjdG9yTW9kdWxlLCBQb3BvdmVyTW9kdWxlLCBFY29zeXN0ZW1Nb2R1bGVdLFxuICBwcm92aWRlcnM6IFtcbiAgICBDb2NrcGl0Q29uZmlnR3VhcmQsXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19ST1VURSxcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBwYXRoOiBDT0NLUElUX0NPTkZJR19QQVRILFxuICAgICAgICAgIGNvbXBvbmVudDogQ29ja3BpdENvbmZpZ3VyYXRpb25Db21wb25lbnQsXG4gICAgICAgICAgY2FuQWN0aXZhdGU6IFtDb2NrcGl0Q29uZmlnR3VhcmRdXG4gICAgICAgIH1cbiAgICAgIF0sXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gICAgICB1c2VDbGFzczogQ29ja3BpdENvbmZpZ0d1YXJkLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEhPT0tfU1RFUFBFUixcbiAgICAgIHVzZVZhbHVlOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBzdGVwcGVySWQ6IFN0ZXBwZXJzLlNFVFVQLFxuICAgICAgICAgIGNvbXBvbmVudDogQ29ja3BpdFNldHVwU3RlcDFDb21wb25lbnQsXG4gICAgICAgICAgbGFiZWw6IGdldHRleHQoJ0ZlYXR1cmVzJyksXG4gICAgICAgICAgc2V0dXBJZDogJ2NvY2twaXRGZWF0dXJlcycsXG4gICAgICAgICAgcHJpb3JpdHk6IDBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHN0ZXBwZXJJZDogU3RlcHBlcnMuU0VUVVAsXG4gICAgICAgICAgY29tcG9uZW50OiBDb2NrcGl0U2V0dXBTdGVwMkNvbXBvbmVudCxcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnVG9wIGxldmVsIG5vZGVzJyksXG4gICAgICAgICAgc2V0dXBJZDogJ2NvY2twaXRUb3BMZXZlbE5vZGVzJyxcbiAgICAgICAgICBwcmlvcml0eTogMTBcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHN0ZXBwZXJJZDogU3RlcHBlcnMuU0VUVVAsXG4gICAgICAgICAgY29tcG9uZW50OiBDb2NrcGl0U2V0dXBTdGVwM0NvbXBvbmVudCxcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnSG9tZSBEYXNoYm9hcmQnKSxcbiAgICAgICAgICBzZXR1cElkOiAnY29ja3BpdEhvbWVEYXNoYm9hcmQnLFxuICAgICAgICAgIHByaW9yaXR5OiAyMFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgc3RlcHBlcklkOiBTdGVwcGVycy5TRVRVUCxcbiAgICAgICAgICBjb21wb25lbnQ6IENvY2twaXRTZXR1cFN0ZXA0Q29tcG9uZW50LFxuICAgICAgICAgIGxhYmVsOiBnZXR0ZXh0KCdNaXNjJyksXG4gICAgICAgICAgc2V0dXBJZDogJ2NvY2twaXRNaXNjJyxcbiAgICAgICAgICBwcmlvcml0eTogMzBcbiAgICAgICAgfVxuICAgICAgXSBhcyBTZXR1cFN0ZXBbXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIENvY2twaXRDb25maWdNb2R1bGUge1xuICBjb25zdHJ1Y3RvcihzZXJ2aWNlOiBDb2NrcGl0Q29uZmlnU2VydmljZSkge1xuICAgIC8vIG9ubHkgZm9yIERJLCBub3QgdXNlZCBidXQgbmVlZGVkLlxuICB9XG59XG4iXX0=