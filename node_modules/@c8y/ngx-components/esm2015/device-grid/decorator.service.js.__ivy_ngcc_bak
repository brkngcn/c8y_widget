import { Injectable } from '@angular/core';
import { DeviceGridConfigMapperService } from './device-grid-config-mapper.service';
import * as i0 from "@angular/core";
import * as i1 from "./device-grid-config-mapper.service";
export class DecoratorService {
    constructor(service) {
        DecoratorService.mapperService = service;
    }
    static getMapperService() {
        if (!DecoratorService.mapperService) {
            throw new Error('DecoratorService not initialized');
        }
        return DecoratorService.mapperService;
    }
}
DecoratorService.mapperService = undefined;
DecoratorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DecoratorService_Factory() { return new DecoratorService(i0.ɵɵinject(i1.DeviceGridConfigMapperService)); }, token: DecoratorService, providedIn: "root" });
DecoratorService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
DecoratorService.ctorParameters = () => [
    { type: DeviceGridConfigMapperService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVjb3JhdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kZXZpY2UtZ3JpZC9kZWNvcmF0b3Iuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSw2QkFBNkIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDOzs7QUFLcEYsTUFBTSxPQUFPLGdCQUFnQjtJQVUzQixZQUFZLE9BQXNDO1FBQ2hELGdCQUFnQixDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUM7SUFDM0MsQ0FBQztJQVhELE1BQU0sQ0FBQyxnQkFBZ0I7UUFDckIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGFBQWEsRUFBRTtZQUNuQyxNQUFNLElBQUksS0FBSyxDQUFDLGtDQUFrQyxDQUFDLENBQUM7U0FDckQ7UUFDRCxPQUFPLGdCQUFnQixDQUFDLGFBQWEsQ0FBQztJQUN4QyxDQUFDOztBQUVjLDhCQUFhLEdBQThDLFNBQVMsQ0FBQzs7O1lBWHJGLFVBQVUsU0FBQztnQkFDVixVQUFVLEVBQUUsTUFBTTthQUNuQjs7O1lBSlEsNkJBQTZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRGV2aWNlR3JpZENvbmZpZ01hcHBlclNlcnZpY2UgfSBmcm9tICcuL2RldmljZS1ncmlkLWNvbmZpZy1tYXBwZXIuc2VydmljZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIERlY29yYXRvclNlcnZpY2Uge1xuICBzdGF0aWMgZ2V0TWFwcGVyU2VydmljZSgpOiBEZXZpY2VHcmlkQ29uZmlnTWFwcGVyU2VydmljZSB7XG4gICAgaWYgKCFEZWNvcmF0b3JTZXJ2aWNlLm1hcHBlclNlcnZpY2UpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRGVjb3JhdG9yU2VydmljZSBub3QgaW5pdGlhbGl6ZWQnKTtcbiAgICB9XG4gICAgcmV0dXJuIERlY29yYXRvclNlcnZpY2UubWFwcGVyU2VydmljZTtcbiAgfVxuXG4gIHByaXZhdGUgc3RhdGljIG1hcHBlclNlcnZpY2U6IERldmljZUdyaWRDb25maWdNYXBwZXJTZXJ2aWNlIHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHNlcnZpY2U6IERldmljZUdyaWRDb25maWdNYXBwZXJTZXJ2aWNlKSB7XG4gICAgRGVjb3JhdG9yU2VydmljZS5tYXBwZXJTZXJ2aWNlID0gc2VydmljZTtcbiAgfVxufVxuIl19