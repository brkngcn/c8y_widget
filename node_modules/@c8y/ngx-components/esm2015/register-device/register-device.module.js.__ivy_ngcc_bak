import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, DeviceBootstrapRealtimeService, DynamicFormsModule, HOOK_NAVIGATOR_NODES, StepperModule } from '@c8y/ngx-components';
import { DeviceRegistrationViewComponent } from './device-registration-view.component';
import { GeneralDeviceRegistrationComponent } from './general/general-device-registration.component';
import { GeneralDeviceRegistrationButtonComponent } from './general/general-device-registration-button.component';
import { RegisterDeviceNavigationFactory } from './register-device-navigation.factory';
import { RegisterDeviceService } from './register-device.service';
import { ExtensibleDeviceRegistrationButtonComponent } from './extensible/single/extensible-device-registration-button.component';
import { ExtensibleDeviceRegistrationModalComponent } from './extensible/single/extensible-device-registration-modal.component';
import { ExtensibleDeviceRegistrationService } from './extensible/single/extensible-device-registration.service';
import { ExtensibleDeviceRegistrationStepperComponent } from './extensible/single/extensible-device-registration-stepper.component';
import { ExtensibleBulkDeviceRegistrationModalComponent } from './extensible/bulk/extensible-bulk-device-registration-modal.component';
import { BulkExtensibleDeviceRegistrationService } from './extensible/bulk/extensible-bulk-device-registration.service';
import { BulkDeviceRegistrationModalComponent } from './bulk/bulk-device-registration-modal.component';
import { ExtensibleBulkDeviceRegistrationButtonComponent } from './extensible/bulk/extensible-bulk-device-registration-button.component';
import { BulkDeviceRegistrationButtonComponent } from './bulk/bulk-device-registration-button.component';
import { RegisterDeviceDropdownComponent } from './dropdown/register-device-dropdown.component';
import { HOOK_DEVICE_REGISTRATION } from './dropdown/register-device-extension.service';
import { DeviceRegistrationFactory } from './register-device.factory';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { PopoverModule } from 'ngx-bootstrap/popover';
const routes = [
    {
        path: 'deviceregistration',
        component: DeviceRegistrationViewComponent,
    }
];
export class RegisterDeviceModule {
}
RegisterDeviceModule.decorators = [
    { type: NgModule, args: [{
                imports: [BsDropdownModule, PopoverModule, CommonModule, CoreModule, StepperModule, DynamicFormsModule, RouterModule.forChild(routes)],
                declarations: [
                    DeviceRegistrationViewComponent,
                    GeneralDeviceRegistrationComponent,
                    GeneralDeviceRegistrationButtonComponent,
                    BulkDeviceRegistrationModalComponent,
                    BulkDeviceRegistrationButtonComponent,
                    ExtensibleDeviceRegistrationButtonComponent,
                    ExtensibleDeviceRegistrationModalComponent,
                    ExtensibleDeviceRegistrationStepperComponent,
                    ExtensibleBulkDeviceRegistrationModalComponent,
                    ExtensibleBulkDeviceRegistrationButtonComponent,
                    RegisterDeviceDropdownComponent
                ],
                providers: [{
                        provide: HOOK_DEVICE_REGISTRATION,
                        useClass: DeviceRegistrationFactory,
                        multi: true
                    },
                    {
                        provide: HOOK_NAVIGATOR_NODES,
                        useClass: RegisterDeviceNavigationFactory,
                        multi: true
                    },
                    DeviceBootstrapRealtimeService,
                    RegisterDeviceService,
                    ExtensibleDeviceRegistrationService,
                    BulkExtensibleDeviceRegistrationService,
                ],
                entryComponents: [
                    GeneralDeviceRegistrationComponent,
                    ExtensibleBulkDeviceRegistrationButtonComponent,
                    BulkDeviceRegistrationModalComponent,
                    ExtensibleDeviceRegistrationModalComponent,
                    RegisterDeviceDropdownComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVnaXN0ZXItZGV2aWNlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3JlZ2lzdGVyLWRldmljZS9yZWdpc3Rlci1kZXZpY2UubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBVSxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZELE9BQU8sRUFDTCxZQUFZLEVBQ1osVUFBVSxFQUNWLDhCQUE4QixFQUM5QixrQkFBa0IsRUFDbEIsb0JBQW9CLEVBQ3BCLGFBQWEsRUFDZCxNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxrQ0FBa0MsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ3JHLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQ2xILE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSwyQ0FBMkMsRUFBRSxNQUFNLHFFQUFxRSxDQUFDO0FBQ2xJLE9BQU8sRUFBRSwwQ0FBMEMsRUFBRSxNQUFNLG9FQUFvRSxDQUFDO0FBQ2hJLE9BQU8sRUFBRSxtQ0FBbUMsRUFBRSxNQUFNLDREQUE0RCxDQUFDO0FBQ2pILE9BQU8sRUFBRSw0Q0FBNEMsRUFBRSxNQUFNLHNFQUFzRSxDQUFDO0FBQ3BJLE9BQU8sRUFBRSw4Q0FBOEMsRUFBRSxNQUFNLHVFQUF1RSxDQUFDO0FBQ3ZJLE9BQU8sRUFBRSx1Q0FBdUMsRUFBRSxNQUFNLCtEQUErRCxDQUFDO0FBQ3hILE9BQU8sRUFBRSxvQ0FBb0MsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ3ZHLE9BQU8sRUFBRSwrQ0FBK0MsRUFBRSxNQUFNLHdFQUF3RSxDQUFDO0FBQ3pJLE9BQU8sRUFBRSxxQ0FBcUMsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3pHLE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLCtDQUErQyxDQUFDO0FBQ2hHLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUV0RCxNQUFNLE1BQU0sR0FBVztJQUNyQjtRQUNFLElBQUksRUFBRSxvQkFBb0I7UUFDMUIsU0FBUyxFQUFFLCtCQUErQjtLQUMzQztDQUNGLENBQUM7QUF3Q0YsTUFBTSxPQUFPLG9CQUFvQjs7O1lBdENoQyxRQUFRLFNBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsZ0JBQWdCLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLGtCQUFrQixFQUFFLFlBQVksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3RJLFlBQVksRUFBRTtvQkFDWiwrQkFBK0I7b0JBQy9CLGtDQUFrQztvQkFDbEMsd0NBQXdDO29CQUN4QyxvQ0FBb0M7b0JBQ3BDLHFDQUFxQztvQkFDckMsMkNBQTJDO29CQUMzQywwQ0FBMEM7b0JBQzFDLDRDQUE0QztvQkFDNUMsOENBQThDO29CQUM5QywrQ0FBK0M7b0JBQy9DLCtCQUErQjtpQkFDaEM7Z0JBQ0QsU0FBUyxFQUFFLENBQUM7d0JBQ1YsT0FBTyxFQUFFLHdCQUF3Qjt3QkFDakMsUUFBUSxFQUFFLHlCQUF5Qjt3QkFDbkMsS0FBSyxFQUFFLElBQUk7cUJBQ1o7b0JBQ0Q7d0JBQ0UsT0FBTyxFQUFFLG9CQUFvQjt3QkFDN0IsUUFBUSxFQUFFLCtCQUErQjt3QkFDekMsS0FBSyxFQUFFLElBQUk7cUJBQ1o7b0JBQ0MsOEJBQThCO29CQUM5QixxQkFBcUI7b0JBQ3JCLG1DQUFtQztvQkFDbkMsdUNBQXVDO2lCQUN4QztnQkFDRCxlQUFlLEVBQUU7b0JBQ2Ysa0NBQWtDO29CQUNsQywrQ0FBK0M7b0JBQy9DLG9DQUFvQztvQkFDcEMsMENBQTBDO29CQUMxQywrQkFBK0I7aUJBQ2hDO2FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlLCBSb3V0ZXMgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHtcbiAgQ29tbW9uTW9kdWxlLFxuICBDb3JlTW9kdWxlLFxuICBEZXZpY2VCb290c3RyYXBSZWFsdGltZVNlcnZpY2UsXG4gIER5bmFtaWNGb3Jtc01vZHVsZSxcbiAgSE9PS19OQVZJR0FUT1JfTk9ERVMsXG4gIFN0ZXBwZXJNb2R1bGVcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VSZWdpc3RyYXRpb25WaWV3Q29tcG9uZW50IH0gZnJvbSAnLi9kZXZpY2UtcmVnaXN0cmF0aW9uLXZpZXcuY29tcG9uZW50JztcbmltcG9ydCB7IEdlbmVyYWxEZXZpY2VSZWdpc3RyYXRpb25Db21wb25lbnQgfSBmcm9tICcuL2dlbmVyYWwvZ2VuZXJhbC1kZXZpY2UtcmVnaXN0cmF0aW9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHZW5lcmFsRGV2aWNlUmVnaXN0cmF0aW9uQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9nZW5lcmFsL2dlbmVyYWwtZGV2aWNlLXJlZ2lzdHJhdGlvbi1idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IFJlZ2lzdGVyRGV2aWNlTmF2aWdhdGlvbkZhY3RvcnkgfSBmcm9tICcuL3JlZ2lzdGVyLWRldmljZS1uYXZpZ2F0aW9uLmZhY3RvcnknO1xuaW1wb3J0IHsgUmVnaXN0ZXJEZXZpY2VTZXJ2aWNlIH0gZnJvbSAnLi9yZWdpc3Rlci1kZXZpY2Uuc2VydmljZSc7XG5pbXBvcnQgeyBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9leHRlbnNpYmxlL3NpbmdsZS9leHRlbnNpYmxlLWRldmljZS1yZWdpc3RyYXRpb24tYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL2V4dGVuc2libGUvc2luZ2xlL2V4dGVuc2libGUtZGV2aWNlLXJlZ2lzdHJhdGlvbi1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2V4dGVuc2libGUvc2luZ2xlL2V4dGVuc2libGUtZGV2aWNlLXJlZ2lzdHJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25TdGVwcGVyQ29tcG9uZW50IH0gZnJvbSAnLi9leHRlbnNpYmxlL3NpbmdsZS9leHRlbnNpYmxlLWRldmljZS1yZWdpc3RyYXRpb24tc3RlcHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRXh0ZW5zaWJsZUJ1bGtEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vZXh0ZW5zaWJsZS9idWxrL2V4dGVuc2libGUtYnVsay1kZXZpY2UtcmVnaXN0cmF0aW9uLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCdWxrRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2V4dGVuc2libGUvYnVsay9leHRlbnNpYmxlLWJ1bGstZGV2aWNlLXJlZ2lzdHJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEJ1bGtEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vYnVsay9idWxrLWRldmljZS1yZWdpc3RyYXRpb24tbW9kYWwuY29tcG9uZW50JztcbmltcG9ydCB7IEV4dGVuc2libGVCdWxrRGV2aWNlUmVnaXN0cmF0aW9uQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9leHRlbnNpYmxlL2J1bGsvZXh0ZW5zaWJsZS1idWxrLWRldmljZS1yZWdpc3RyYXRpb24tYnV0dG9uLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBCdWxrRGV2aWNlUmVnaXN0cmF0aW9uQnV0dG9uQ29tcG9uZW50IH0gZnJvbSAnLi9idWxrL2J1bGstZGV2aWNlLXJlZ2lzdHJhdGlvbi1idXR0b24uY29tcG9uZW50JztcbmltcG9ydCB7IFJlZ2lzdGVyRGV2aWNlRHJvcGRvd25Db21wb25lbnQgfSBmcm9tICcuL2Ryb3Bkb3duL3JlZ2lzdGVyLWRldmljZS1kcm9wZG93bi5jb21wb25lbnQnO1xuaW1wb3J0IHsgSE9PS19ERVZJQ0VfUkVHSVNUUkFUSU9OIH0gZnJvbSAnLi9kcm9wZG93bi9yZWdpc3Rlci1kZXZpY2UtZXh0ZW5zaW9uLnNlcnZpY2UnO1xuaW1wb3J0IHsgRGV2aWNlUmVnaXN0cmF0aW9uRmFjdG9yeSB9IGZyb20gJy4vcmVnaXN0ZXItZGV2aWNlLmZhY3RvcnknO1xuaW1wb3J0IHsgQnNEcm9wZG93bk1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvZHJvcGRvd24nO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5cbmNvbnN0IHJvdXRlczogUm91dGVzID0gW1xuICB7XG4gICAgcGF0aDogJ2RldmljZXJlZ2lzdHJhdGlvbicsXG4gICAgY29tcG9uZW50OiBEZXZpY2VSZWdpc3RyYXRpb25WaWV3Q29tcG9uZW50LFxuICB9XG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQnNEcm9wZG93bk1vZHVsZSwgUG9wb3Zlck1vZHVsZSwgQ29tbW9uTW9kdWxlLCBDb3JlTW9kdWxlLCBTdGVwcGVyTW9kdWxlLCBEeW5hbWljRm9ybXNNb2R1bGUsIFJvdXRlck1vZHVsZS5mb3JDaGlsZChyb3V0ZXMpXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgRGV2aWNlUmVnaXN0cmF0aW9uVmlld0NvbXBvbmVudCxcbiAgICBHZW5lcmFsRGV2aWNlUmVnaXN0cmF0aW9uQ29tcG9uZW50LFxuICAgIEdlbmVyYWxEZXZpY2VSZWdpc3RyYXRpb25CdXR0b25Db21wb25lbnQsXG4gICAgQnVsa0RldmljZVJlZ2lzdHJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIEJ1bGtEZXZpY2VSZWdpc3RyYXRpb25CdXR0b25Db21wb25lbnQsXG4gICAgRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvbkJ1dHRvbkNvbXBvbmVudCxcbiAgICBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uTW9kYWxDb21wb25lbnQsXG4gICAgRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblN0ZXBwZXJDb21wb25lbnQsXG4gICAgRXh0ZW5zaWJsZUJ1bGtEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCxcbiAgICBFeHRlbnNpYmxlQnVsa0RldmljZVJlZ2lzdHJhdGlvbkJ1dHRvbkNvbXBvbmVudCxcbiAgICBSZWdpc3RlckRldmljZURyb3Bkb3duQ29tcG9uZW50XG4gIF0sXG4gIHByb3ZpZGVyczogW3tcbiAgICBwcm92aWRlOiBIT09LX0RFVklDRV9SRUdJU1RSQVRJT04sXG4gICAgdXNlQ2xhc3M6IERldmljZVJlZ2lzdHJhdGlvbkZhY3RvcnksXG4gICAgbXVsdGk6IHRydWVcbiAgfSxcbiAge1xuICAgIHByb3ZpZGU6IEhPT0tfTkFWSUdBVE9SX05PREVTLFxuICAgIHVzZUNsYXNzOiBSZWdpc3RlckRldmljZU5hdmlnYXRpb25GYWN0b3J5LFxuICAgIG11bHRpOiB0cnVlXG4gIH0sXG4gICAgRGV2aWNlQm9vdHN0cmFwUmVhbHRpbWVTZXJ2aWNlLFxuICAgIFJlZ2lzdGVyRGV2aWNlU2VydmljZSxcbiAgICBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZSxcbiAgICBCdWxrRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UsXG4gIF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1xuICAgIEdlbmVyYWxEZXZpY2VSZWdpc3RyYXRpb25Db21wb25lbnQsXG4gICAgRXh0ZW5zaWJsZUJ1bGtEZXZpY2VSZWdpc3RyYXRpb25CdXR0b25Db21wb25lbnQsXG4gICAgQnVsa0RldmljZVJlZ2lzdHJhdGlvbk1vZGFsQ29tcG9uZW50LFxuICAgIEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCxcbiAgICBSZWdpc3RlckRldmljZURyb3Bkb3duQ29tcG9uZW50XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgUmVnaXN0ZXJEZXZpY2VNb2R1bGUge1xufVxuIl19