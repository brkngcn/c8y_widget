import { Component } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { ExtensibleDeviceRegistrationService } from './extensible-device-registration.service';
import { ExtensibleDeviceRegistrationModalComponent } from './extensible-device-registration-modal.component';
export class ExtensibleDeviceRegistrationButtonComponent {
    constructor(deviceRegistrationService, modalService) {
        this.deviceRegistrationService = deviceRegistrationService;
        this.modalService = modalService;
    }
    ngOnInit() {
        this.providersMetaData = this.deviceRegistrationService.getDeviceRegistrationProviders();
    }
    click(providerMetaData) {
        const { name, contextPath } = providerMetaData;
        this.modalService.show(ExtensibleDeviceRegistrationModalComponent, {
            initialState: { name, contextPath },
            class: 'modal-sm',
            ignoreBackdropClick: true
        });
    }
}
ExtensibleDeviceRegistrationButtonComponent.decorators = [
    { type: Component, args: [{
                selector: 'extensible-device-registration-provider',
                template: "<div *ngFor=\"let provider of providersMetaData | async\">\n  <button title=\"{{ provider.name | translate }}\" type=\"button\" (click)=\"click(provider)\">\n    <i c8yIcon=\"c8y-device-connect\"></i>\n    {{ provider.name | translate }}\n  </button>\n</div>\n"
            },] }
];
ExtensibleDeviceRegistrationButtonComponent.ctorParameters = () => [
    { type: ExtensibleDeviceRegistrationService },
    { type: BsModalService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLWJ1dHRvbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9yZWdpc3Rlci1kZXZpY2UvZXh0ZW5zaWJsZS9zaW5nbGUvZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLWJ1dHRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLG1DQUFtQyxFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDL0YsT0FBTyxFQUFFLDBDQUEwQyxFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFPOUcsTUFBTSxPQUFPLDJDQUEyQztJQUd0RCxZQUFvQix5QkFBOEQsRUFDOUQsWUFBNEI7UUFENUIsOEJBQXlCLEdBQXpCLHlCQUF5QixDQUFxQztRQUM5RCxpQkFBWSxHQUFaLFlBQVksQ0FBZ0I7SUFDaEQsQ0FBQztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsaUJBQWlCLEdBQUcsSUFBSSxDQUFDLHlCQUF5QixDQUFDLDhCQUE4QixFQUFFLENBQUM7SUFDM0YsQ0FBQztJQUVELEtBQUssQ0FBQyxnQkFBc0Q7UUFDMUQsTUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsR0FBRyxnQkFBZ0IsQ0FBQztRQUMvQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQywwQ0FBMEMsRUFBRTtZQUNqRSxZQUFZLEVBQUUsRUFBRSxJQUFJLEVBQUUsV0FBVyxFQUF5RDtZQUMxRixLQUFLLEVBQUUsVUFBVTtZQUNqQixtQkFBbUIsRUFBRSxJQUFJO1NBQzFCLENBQUMsQ0FBQztJQUNMLENBQUM7OztZQXRCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlDQUF5QztnQkFDbkQsZ1JBQW1FO2FBQ3BFOzs7WUFQUSxtQ0FBbUM7WUFEbkMsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblNlcnZpY2UgfSBmcm9tICcuL2V4dGVuc2libGUtZGV2aWNlLXJlZ2lzdHJhdGlvbi5zZXJ2aWNlJztcbmltcG9ydCB7IEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCB9IGZyb20gJy4vZXh0ZW5zaWJsZS1kZXZpY2UtcmVnaXN0cmF0aW9uLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uUHJvdmlkZXIgfSBmcm9tICcuLi9iYXNlLWRldmljZS1yZWdpc3RyYXRpb24ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdleHRlbnNpYmxlLWRldmljZS1yZWdpc3RyYXRpb24tcHJvdmlkZXInLFxuICB0ZW1wbGF0ZVVybDogJ2V4dGVuc2libGUtZGV2aWNlLXJlZ2lzdHJhdGlvbi1idXR0b24uY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25CdXR0b25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBwcm92aWRlcnNNZXRhRGF0YTogUHJvbWlzZTxFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uUHJvdmlkZXJbXT47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBkZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlOiBFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uU2VydmljZSxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBtb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlKSB7XG4gIH1cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnByb3ZpZGVyc01ldGFEYXRhID0gdGhpcy5kZXZpY2VSZWdpc3RyYXRpb25TZXJ2aWNlLmdldERldmljZVJlZ2lzdHJhdGlvblByb3ZpZGVycygpO1xuICB9XG5cbiAgY2xpY2socHJvdmlkZXJNZXRhRGF0YTogRXh0ZW5zaWJsZURldmljZVJlZ2lzdHJhdGlvblByb3ZpZGVyKSB7XG4gICAgY29uc3QgeyBuYW1lLCBjb250ZXh0UGF0aCB9ID0gcHJvdmlkZXJNZXRhRGF0YTtcbiAgICB0aGlzLm1vZGFsU2VydmljZS5zaG93KEV4dGVuc2libGVEZXZpY2VSZWdpc3RyYXRpb25Nb2RhbENvbXBvbmVudCwge1xuICAgICAgaW5pdGlhbFN0YXRlOiB7IG5hbWUsIGNvbnRleHRQYXRoIH0gYXMgUGFydGlhbDxFeHRlbnNpYmxlRGV2aWNlUmVnaXN0cmF0aW9uTW9kYWxDb21wb25lbnQ+LFxuICAgICAgY2xhc3M6ICdtb2RhbC1zbScsXG4gICAgICBpZ25vcmVCYWNrZHJvcENsaWNrOiB0cnVlXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==