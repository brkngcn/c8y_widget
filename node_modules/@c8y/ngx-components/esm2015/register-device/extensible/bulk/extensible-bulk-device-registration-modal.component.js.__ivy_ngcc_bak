import { __awaiter } from "tslib";
import { Component, ViewChild } from '@angular/core';
import { C8yJSONSchema, C8yStepper, gettext } from '@c8y/ngx-components';
import { FormGroup } from '@angular/forms';
import { BulkExtensibleDeviceRegistrationService } from './extensible-bulk-device-registration.service';
import { RegisterDeviceService } from '../../register-device.service';
import { BsModalRef } from 'ngx-bootstrap/modal';
const bulkSchema = {
    $schema: 'https://json-schema.org/draft/2019-09/schema',
    type: 'object',
    properties: {
        csvBulkFile: {
            type: 'string',
            title: gettext('CSV file upload'),
            description: gettext('You can use file upload component to let users send files. This input accepts only a single CSV file.'),
            contentEncoding: 'base64',
            contentMediaType: 'csv'
        }
    },
    required: ['csvBulkFile'],
    additionalProperties: false
};
export class ExtensibleBulkDeviceRegistrationModalComponent {
    constructor(jsonschema, bulkExtensibleDeviceRegistrationService, registerDeviceService, bsModalRef) {
        this.jsonschema = jsonschema;
        this.bulkExtensibleDeviceRegistrationService = bulkExtensibleDeviceRegistrationService;
        this.registerDeviceService = registerDeviceService;
        this.bsModalRef = bsModalRef;
        this.loadingError = false;
        this.pending = false;
        this.form = new FormGroup({});
        this.model = {};
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const { title, exampleFileUrls } = yield this.bulkExtensibleDeviceRegistrationService
                .getBulkDescription(this.contextPath)
                .catch(error => {
                this.message = error.message;
                this.loadingError = true;
                return {
                    title: gettext('Error'),
                    exampleFileUrls: []
                };
            });
            this.title = title;
            this.template = [this.jsonschema.toFieldConfig(bulkSchema)];
            this.examples = exampleFileUrls;
        });
    }
    upload() {
        return __awaiter(this, void 0, void 0, function* () {
            this.pending = true;
            const { res, data } = yield this.bulkExtensibleDeviceRegistrationService
                .upload(this.getFile(this.model), this.contextPath)
                .catch(err => {
                return {
                    res: undefined,
                    data: undefined
                };
            })
                .finally(() => {
                this.pending = false;
                this.stepper.next();
            });
            this.result = data;
            this.success = (res === null || res === void 0 ? void 0 : res.status) < 400;
            if (this.success) {
                this.message = gettext('Device registration created.');
                this.model = {};
            }
            if (res) {
                if (res.status >= 400 && res.status < 500) {
                    this.message = gettext('Device registration failed.');
                }
                else if (res.status >= 500) {
                    this.message = gettext('Error occurred while processing the uploaded file.');
                }
            }
            else {
                this.message = gettext('No internet connection. Unable to reach the microservice.');
            }
        });
    }
    getFile(model) {
        var _a, _b;
        const csvBulkFile = (_a = model) === null || _a === void 0 ? void 0 : _a.csvBulkFile;
        return csvBulkFile ? (_b = csvBulkFile[0]) === null || _b === void 0 ? void 0 : _b.file : undefined;
    }
    complete() {
        this.registerDeviceService.list();
        this.bsModalRef.hide();
    }
    cancel() {
        this.bsModalRef.hide();
    }
}
ExtensibleBulkDeviceRegistrationModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'extensible-device-registration-modal-component',
                template: "<c8y-modal [headerClasses]=\"'dialog-header'\" [customFooter]=\"true\">\n  <ng-container c8y-modal-title>\n    <span class=\"c8y-icon c8y-icon-device-connect\"></span>\n    <h4>{{ title | translate }}</h4>\n  </ng-container>\n  <c8y-stepper [hideStepProgress]=\"true\" linear class=\"p-t-16\">\n    <ng-container *ngIf=\"!loadingError\">\n      <cdk-step [stepControl]=\"form\">\n        <div class=\"sticky-top bg-component separator-bottom\">\n          <p\n            class=\"\n              p-l-24 p-r-24 p-t-16 p-b-16\n              m-b-0\n              separator-bottom\n              text-16 text-medium text-center\n              bg-component\n            \"\n            translate\n          >\n            Register devices in bulk\n          </p>\n          <c8y-form-group class=\"p-24 p-t-16 p-b-8 m-b-0\">\n            <formly-form [form]=\"form\" [fields]=\"template\" [model]=\"model\"></formly-form>\n          </c8y-form-group>\n        </div>\n        <div\n          *ngFor=\"let example of examples\"\n          class=\"bg-gray-white separator-bottom p-t-16 p-b-16 p-l-24 p-r-24\"\n        >\n          <p class=\"m-b-8 text-medium\">\n            {{ example.title | translate }}\n          </p>\n          <p class=\"small m-b-8\">{{ example.description | translate }}</p>\n          <a\n            title=\"{{ 'Download template' | translate }}\"\n            class=\"btn btn-default btn-sm\"\n            target=\"_self\"\n            [href]=\"example.url\"\n            download=\"{{ 'Example bulk registration - template.csv' | translate }}\"\n          >\n            <i c8yIcon=\"download\"></i>\n            <span translate>Download template</span>\n          </a>\n        </div>\n        <c8y-stepper-buttons\n          class=\"sticky-bottom d-block p-t-16 p-b-16 separator-top bg-white\"\n          [showButtons]=\"{ cancel: true, next: true }\"\n          [disabled]=\"form.invalid\"\n          [pending]=\"pending\"\n          (onCancel)=\"cancel()\"\n          (onNext)=\"upload()\"\n          [labels]=\"{ next: 'Upload' }\"\n        ></c8y-stepper-buttons>\n      </cdk-step>\n    </ng-container>\n    <cdk-step state=\"final\">\n      <div class=\"p-24\">\n        <div *ngIf=\"success; else fail\">\n          <c8y-operation-result\n            text=\"{{ message | translate }}\"\n            [size]=\"84\"\n            [vertical]=\"true\"\n            type=\"success\"\n            class=\"lead\"\n          ></c8y-operation-result>\n          <c8y-list-group class=\"separator-top m-t-16\">\n            <c8y-li>\n              <c8y-li-icon class=\"text-success\" [icon]=\"'check-circle'\"></c8y-li-icon>\n              <p translate>File successfully uploaded.</p>\n              <c8y-li-collapse>\n                <pre><code>{{ result | json }}</code></pre>\n              </c8y-li-collapse>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n        <ng-template #fail>\n          <c8y-operation-result\n            text=\"{{ message | translate }}\"\n            [size]=\"84\"\n            [vertical]=\"true\"\n            type=\"error\"\n            class=\"lead\"\n          ></c8y-operation-result>\n          <c8y-list-group *ngIf=\"result\" class=\"separator-top m-t-16\">\n            <c8y-li>\n              <c8y-li-icon class=\"text-danger\" [icon]=\"'ban'\"></c8y-li-icon>\n              <p translate>Bulk operation failed.</p>\n              <c8y-li-collapse>\n                <pre><code>{{ result | json }}</code></pre>\n              </c8y-li-collapse>\n            </c8y-li>\n          </c8y-list-group>\n        </ng-template>\n      </div>\n      <c8y-stepper-buttons\n        class=\"sticky-bottom d-block p-t-16 p-b-16 separator-top bg-white\"\n        [showButtons]=\"{ next: true }\"\n        (onNext)=\"complete()\"\n        [labels]=\"{ next: success ? 'Complete' : 'Cancel' }\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</c8y-modal>\n"
            },] }
];
ExtensibleBulkDeviceRegistrationModalComponent.ctorParameters = () => [
    { type: C8yJSONSchema },
    { type: BulkExtensibleDeviceRegistrationService },
    { type: RegisterDeviceService },
    { type: BsModalRef }
];
ExtensibleBulkDeviceRegistrationModalComponent.propDecorators = {
    stepper: [{ type: ViewChild, args: [C8yStepper, { static: true },] }]
};
//# sourceMappingURL=data:application/json;base64,