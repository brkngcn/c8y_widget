import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { DeviceRegistrationSecurityMode, DeviceRegistrationStatus } from '@c8y/client';
import { BehaviorSubject, Subject } from 'rxjs';
import { filter, map, switchMap, takeUntil } from 'rxjs/operators';
import { DeviceBootstrapRealtimeService, TenantUiService, ModalService, Status, gettext, OptionsService } from '@c8y/ngx-components';
import { RegisterDeviceService } from './register-device.service';
import { sortBy } from 'lodash-es';
import { TranslateService } from '@ngx-translate/core';
export class DeviceRegistrationViewComponent {
    constructor(registerDeviceService, bootstrapRealtimeService, tenantUiService, modalService, translateService, optionsService) {
        this.registerDeviceService = registerDeviceService;
        this.bootstrapRealtimeService = bootstrapRealtimeService;
        this.tenantUiService = tenantUiService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.optionsService = optionsService;
        this.requireSecurityToken = false;
        this.isManagementTenant = false;
        this.isLoading = false;
        this.gridOrList = 'interact-grid';
        this.status = DeviceRegistrationStatus;
        this.statusProps = {
            [DeviceRegistrationStatus.WAITING_FOR_CONNECTION]: {
                label: gettext('Waiting for connection'),
                icon: 'unlink',
                cls: 'text-danger'
            },
            [DeviceRegistrationStatus.PENDING_ACCEPTANCE]: {
                label: gettext('Pending acceptance'),
                icon: 'circle',
                cls: 'text-info'
            },
            [DeviceRegistrationStatus.ACCEPTED]: {
                label: gettext('Accepted'),
                icon: 'check-circle',
                cls: 'text-success'
            },
            [DeviceRegistrationStatus.BLOCKED]: {
                label: gettext('Blocked'),
                icon: 'remove',
                cls: 'text-danger'
            }
        };
        this.unsubscribe$ = new Subject();
        this._securityTokenPolicy = new BehaviorSubject(DeviceRegistrationSecurityMode.OPTIONAL);
    }
    ngOnInit() {
        this.loadAll();
        this.setIsManagementTenant();
        this.setRequireSecurityToken();
        this.deviceRequests$ = this.registerDeviceService.deviceRegistrationRequests$.pipe(map(req => ({
            data: sortBy(req.data, [
                ({ status }) => (status === DeviceRegistrationStatus.PENDING_ACCEPTANCE ? 0 : 1),
                '-creationTime'
            ]),
            paging: req.paging
        })));
        this.limit$ = this.registerDeviceService.limit$;
        this.limitReachedInfo$ = this.limit$.pipe(filter(deviceRegistrationLimit => deviceRegistrationLimit.isReached), switchMap(({ limit }) => this.translateService.stream(gettext('You reached the limit of {{ maxDevices }} devices. No more devices can be registered.'), { maxDevices: limit })));
        this.registerDeviceService.loading$
            .pipe(takeUntil(this.unsubscribe$))
            .subscribe(value => (this.isLoading = value));
        this.bootstrapRealtimeService
            .onUpdate$()
            .pipe(takeUntil(this.unsubscribe$))
            .subscribe((bootstrap) => {
            this.registerDeviceService.onDeviceBootstrap(bootstrap);
        });
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
    updateList(data) {
        this.registerDeviceService.internalListUpdate(data);
    }
    delete(id) {
        return __awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.modalService.confirm(gettext('Cancel device registration'), this.translateService.instant(gettext('You are about to cancel device registration for ID "{{id}}". Do you want to proceed?'), { id }), Status.DANGER, {
                ok: gettext('Cancel registration'),
                cancel: gettext('Close')
            });
            if (confirmed) {
                this.registerDeviceService.remove(id);
            }
        });
    }
    accept(request) {
        this.registerDeviceService.accept(request);
    }
    acceptAll() {
        this.registerDeviceService.acceptAll();
    }
    canAcceptAll() {
        const pendingRequests = this.registerDeviceService.getRequestByStatus(DeviceRegistrationStatus.PENDING_ACCEPTANCE);
        return !(pendingRequests.length > 0 && !this.requireSecurityToken);
    }
    loadAll() {
        this.registerDeviceService.list();
    }
    displayMode(listClass) {
        this.gridOrList = listClass;
    }
    setRequireSecurityToken() {
        return __awaiter(this, void 0, void 0, function* () {
            const mode = yield this.optionsService.getTenantOption('device-registration', 'security-token.policy', DeviceRegistrationSecurityMode.OPTIONAL);
            this._securityTokenPolicy.next(mode);
            this.requireSecurityToken = mode === DeviceRegistrationSecurityMode.REQUIRED;
        });
    }
    setIsManagementTenant() {
        return __awaiter(this, void 0, void 0, function* () {
            this.isManagementTenant = yield this.tenantUiService.isManagementTenant();
        });
    }
    shouldShowSecurityTokenInput(data) {
        return (data &&
            data.status === DeviceRegistrationStatus.PENDING_ACCEPTANCE &&
            this.showTokenInputBasedOnSecurityMode());
    }
    showTokenInputBasedOnSecurityMode() {
        return this._securityTokenPolicy.getValue() !== DeviceRegistrationSecurityMode.IGNORED;
    }
}
DeviceRegistrationViewComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-device-registration-view',
                template: "<ng-container *ngIf=\"deviceRequests$ | async as deviceRequestList\">\n  <c8y-title>\n    {{ 'Device registration' | translate }}\n    <small *ngIf=\"deviceRequestList.data.length === 1\">1 {{ 'new device' | translate }}</small>\n    <small *ngIf=\"deviceRequestList.data.length > 1\">\n      {{ deviceRequestList.data.length }} {{ 'new devices' | translate }}\n    </small>\n  </c8y-title>\n\n  <c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n    <c8y-list-display-switch (onListClassChange)=\"displayMode($event)\"></c8y-list-display-switch>\n  </c8y-action-bar-item>\n\n  <ng-container *ngIf=\"limit$ | async as limitStatus\">\n    <c8y-action-bar-item [placement]=\"'right'\" [priority]=\"10\">\n      <button\n        *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\"\n        class=\"btn btn-link\"\n        title=\"{{ 'Accept all' | translate }}\"\n        (click)=\"acceptAll()\"\n        [disabled]=\"canAcceptAll() || limitStatus?.isReached\"\n      >\n        <i [c8yIcon]=\"'check'\"></i>\n        {{ 'Accept all' | translate }}\n      </button>\n    </c8y-action-bar-item>\n\n    <c8y-action-bar-item [placement]=\"'right'\" [priority]=\"9\">\n      <button\n        class=\"btn btn-link\"\n        title=\"{{ 'Reload' | translate }}\"\n        (click)=\"loadAll()\"\n        [disabled]=\"isLoading\"\n      >\n        <i [c8yIcon]=\"'refresh'\" [ngClass]=\"{ 'icon-spin': isLoading }\"></i>\n        {{ 'Reload' | translate }}\n      </button>\n    </c8y-action-bar-item>\n\n    <c8y-action-bar-item [placement]=\"'right'\" *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\">\n      <c8y-register-device-dropdown></c8y-register-device-dropdown>\n    </c8y-action-bar-item>\n\n    <c8y-help src=\"/users-guide/device-management/#connecting-devices\"></c8y-help>\n\n    <ng-container *ngIf=\"deviceRequestList.data.length > 0; else noData\">\n      <div class=\"card-group\" [ngClass]=\"gridOrList\">\n        <!-- START interact-list sticky header START -->\n        <div *ngIf=\"gridOrList === 'interact-list'\" class=\"page-sticky-header hidden-xs\">\n          <div class=\"flex-row\">\n            <div class=\"card-header p-l-40\">\n              <p translate>Device</p>\n            </div>\n            <div class=\"card-block card-column-30 p-l-0 m-l-8\">\n              <p translate>Status</p>\n            </div>\n            <div class=\"card-block card-column-40 p-0\" *ngIf=\"showTokenInputBasedOnSecurityMode()\">\n              <p translate>Security token</p>\n              <button\n                class=\"btn btn-clean\"\n                popover=\"{{\n                  'Security token is required if the connected device uses it.' | translate\n                }}\"\n                placement=\"right\"\n                container=\"body\"\n                triggers=\"click focus\"\n                [outsideClick]=\"true\"\n              >\n                <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n              </button>\n            </div>\n            <div class=\"card-footer card-column-40\">\n              <div class=\"d-contents\" *ngIf=\"isManagementTenant; else noManagement\">\n                <div class=\"card-column-50\">\n                  {{ 'Created' | translate }}\n                </div>\n                <div class=\"card-column-30\">\n                  {{ 'By`user`' | translate }}\n                </div>\n                <div class=\"card-column-20\">\n                  {{ 'Tenant ID' | translate }}\n                </div>\n              </div>\n              <ng-template #noManagement>\n                <div class=\"d-contents\">\n                  <div class=\"card-column-50\">\n                    {{ 'Created' | translate }}\n                  </div>\n                  <div class=\"card-column-50\">\n                    {{ 'By`user`' | translate }}\n                  </div>\n                </div>\n              </ng-template>\n            </div>\n            <div class=\"card-actions-group\" style=\"min-width: 176px\">\n              <div class=\"btn btn-xs invisible\">\n                <!--EMPTY by design-->\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- END interact-list sticky header END -->\n\n        <div *ngIf=\"limitStatus?.isReached\" class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n          <p class=\"alert alert-warning center-block\" role=\"alert\">\n            <strong>\n              {{ limitReachedInfo$ | async }}\n            </strong>\n            <br />\n            <span translate>Please contact your platform administrator.</span>\n          </p>\n        </div>\n\n        <ng-container *ngFor=\"let singleRequest of deviceRequestList.data\">\n          <div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n            <div class=\"card\">\n              <div class=\"card-header separator\">\n                <div class=\"card-icon\">\n                  <i\n                    [c8yIcon]=\"statusProps[singleRequest.status].icon\"\n                    [class]=\"statusProps[singleRequest.status].cls\"\n                  ></i>\n                </div>\n                <p class=\"card-title text-truncate\">{{ singleRequest.id }}</p>\n              </div>\n\n              <div class=\"card-block text-center card-column-30\">\n                <span class=\"text-label-small\" translate>Status</span>\n                <p>\n                  <i\n                    *ngIf=\"singleRequest.status === status.WAITING_FOR_CONNECTION\"\n                    c8yIcon=\"refresh\"\n                    class=\"icon-spin text-primary\"\n                  ></i>\n                  {{ statusProps[singleRequest.status].label | translate }}\n                </p>\n              </div>\n\n              <ng-container *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\">\n                <div\n                  class=\"card-block text-center card-column-40 p-t-0 p-b-0\"\n                  *ngIf=\"showTokenInputBasedOnSecurityMode()\"\n                >\n                  <ng-container *ngIf=\"shouldShowSecurityTokenInput(singleRequest)\">\n                    <span *ngIf=\"gridOrList !== 'interact-list'\" class=\"text-label-small\" translate>\n                      Security token\n                    </span>\n                    <input\n                      [(ngModel)]=\"singleRequest.securityToken\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'A1e3gh5ds' }\"\n                      [required]=\"requireSecurityToken\"\n                    />\n                  </ng-container>\n                </div>\n\n                <div class=\"card-actions-group flex-item-v-center\" style=\"min-width: 176px\">\n                  <button\n                    class=\"btn btn-danger btn-xs\"\n                    title=\"{{ 'Remove' | translate }}\"\n                    (click)=\"delete(singleRequest.id)\"\n                    [disabled]=\"isLoading\"\n                  >\n                    {{ 'Remove' | translate }}\n                  </button>\n                  <button\n                    class=\"btn btn-primary btn-xs\"\n                    title=\"{{ 'Accept' | translate }}\"\n                    (click)=\"accept(singleRequest)\"\n                    *ngIf=\"singleRequest.status === status.PENDING_ACCEPTANCE\"\n                    [disabled]=\"\n                      isLoading ||\n                      limitStatus?.isReached ||\n                      (!singleRequest.securityToken && requireSecurityToken)\n                    \"\n                  >\n                    {{ 'Accept' | translate }}\n                  </button>\n                </div>\n              </ng-container>\n\n              <div class=\"card-footer separator text-center card-column-40\">\n                <small *ngIf=\"isManagementTenant; else noManagement\" class=\"d-contents\">\n                  <div class=\"d-contents\" *ngIf=\"singleRequest.creationTime && singleRequest.owner\">\n                    <span class=\"text-label-small\" translate>Created on`date`</span>\n                    <span class=\"card-column-50\">\n                      {{ singleRequest.creationTime | c8yDate }}\n                    </span>\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>by`user`</span>\n                    <span class=\"card-column-30\">{{ singleRequest.owner }}</span>\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>in`tenant`</span>\n                    <span class=\"card-column-20\">{{ singleRequest.tenantId }}</span>\n                  </div>\n                  <div\n                    class=\"d-contents\"\n                    *ngIf=\"!singleRequest.creationTime || !singleRequest.owner\"\n                  >\n                    <div class=\"card-column-50\"></div>\n                    <div class=\"card-column-30\"></div>\n                    <span class=\"text-label-small\" translate>Created in`tenant`</span>\n                    <div class=\"card-column-20\">\n                      <span>\n                        {{ singleRequest.tenantId }}\n                      </span>\n                    </div>\n                  </div>\n                </small>\n                <ng-template #noManagement>\n                  <small class=\"d-contents\">\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>Created on`date`</span>\n                    <span class=\"card-column-50\">\n                      {{ singleRequest.creationTime | c8yDate }}\n                    </span>\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>by`user`</span>\n                    <span class=\"card-column-50\">{{ singleRequest.owner }}</span>\n                  </small>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <c8y-load-more\n        [paging]=\"deviceRequestList.paging\"\n        [hidden]=\"true\"\n        (onLoad)=\"updateList($event)\"\n      ></c8y-load-more>\n    </ng-container>\n\n    <ng-template #noData>\n      <div class=\"c8y-empty-state m-t-40 text-center\">\n        <h1 class=\"c8y-icon c8y-icon-device-connect c8y-icon-duocolor\"></h1>\n        <ng-container *ngIf=\"limitStatus?.isReached; else limitNotReached\">\n          <h3>\n            {{ limitReachedInfo$ | async }}\n          </h3>\n          <p translate>Please contact your platform administrator.</p>\n        </ng-container>\n        <ng-template #limitNotReached>\n          <h3 translate>No pending registrations to display.</h3>\n          <p *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\" translate>\n            Use the \"Register device\" dropdown in the top right corner.\n          </p>\n        </ng-template>\n      </div>\n    </ng-template>\n  </ng-container>\n</ng-container>\n"
            },] }
];
DeviceRegistrationViewComponent.ctorParameters = () => [
    { type: RegisterDeviceService },
    { type: DeviceBootstrapRealtimeService },
    { type: TenantUiService },
    { type: ModalService },
    { type: TranslateService },
    { type: OptionsService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV2aWNlLXJlZ2lzdHJhdGlvbi12aWV3LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3JlZ2lzdGVyLWRldmljZS9kZXZpY2UtcmVnaXN0cmF0aW9uLXZpZXcuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFxQixNQUFNLGVBQWUsQ0FBQztBQUM3RCxPQUFPLEVBQ0wsOEJBQThCLEVBQzlCLHdCQUF3QixFQUl6QixNQUFNLGFBQWEsQ0FBQztBQUNyQixPQUFPLEVBQUUsZUFBZSxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUM1RCxPQUFPLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxTQUFTLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbkUsT0FBTyxFQUNMLDhCQUE4QixFQUU5QixlQUFlLEVBQ2YsWUFBWSxFQUNaLE1BQU0sRUFDTixPQUFPLEVBQ1AsY0FBYyxFQUNmLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNuQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQU12RCxNQUFNLE9BQU8sK0JBQStCO0lBd0MxQyxZQUNVLHFCQUE0QyxFQUM1Qyx3QkFBd0QsRUFDeEQsZUFBZ0MsRUFDaEMsWUFBMEIsRUFDMUIsZ0JBQWtDLEVBQ2xDLGNBQThCO1FBTDlCLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFDNUMsNkJBQXdCLEdBQXhCLHdCQUF3QixDQUFnQztRQUN4RCxvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7UUFDaEMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFDMUIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxtQkFBYyxHQUFkLGNB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Q1QsUUFBUSxFQUFFLDhCQUE4QjtnQkFDeEMseXVWQUFzRDthQUN2RDs7O1lBUFEscUJBQXFCO1lBUjVCLDhCQUE4QjtZQUU5QixlQUFlO1lBQ2YsWUFBWTtZQU9MLGdCQUFnQjtZQUp2QixjQUFjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3ksIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgRGV2aWNlUmVnaXN0cmF0aW9uU2VjdXJpdHlNb2RlLFxuICBEZXZpY2VSZWdpc3RyYXRpb25TdGF0dXMsXG4gIElEZXZpY2VSZWdpc3RyYXRpb24sXG4gIElEZXZpY2VSZWdpc3RyYXRpb25MaW1pdCxcbiAgUGFnaW5nXG59IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZmlsdGVyLCBtYXAsIHN3aXRjaE1hcCwgdGFrZVVudGlsIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHtcbiAgRGV2aWNlQm9vdHN0cmFwUmVhbHRpbWVTZXJ2aWNlLFxuICBJUmVhbHRpbWVEZXZpY2VCb290c3RyYXAsXG4gIFRlbmFudFVpU2VydmljZSxcbiAgTW9kYWxTZXJ2aWNlLFxuICBTdGF0dXMsXG4gIGdldHRleHQsXG4gIE9wdGlvbnNTZXJ2aWNlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgUmVnaXN0ZXJEZXZpY2VTZXJ2aWNlIH0gZnJvbSAnLi9yZWdpc3Rlci1kZXZpY2Uuc2VydmljZSc7XG5pbXBvcnQgeyBzb3J0QnkgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGV2aWNlLXJlZ2lzdHJhdGlvbi12aWV3JyxcbiAgdGVtcGxhdGVVcmw6ICdkZXZpY2UtcmVnaXN0cmF0aW9uLXZpZXcuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERldmljZVJlZ2lzdHJhdGlvblZpZXdDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uRGVzdHJveSB7XG4gIGRldmljZVJlcXVlc3RzJDogT2JzZXJ2YWJsZTx7XG4gICAgZGF0YTogSURldmljZVJlZ2lzdHJhdGlvbltdO1xuICAgIHBhZ2luZz86IFBhZ2luZzxJRGV2aWNlUmVnaXN0cmF0aW9uPjtcbiAgfT47XG4gIGxpbWl0JDogT2JzZXJ2YWJsZTxJRGV2aWNlUmVnaXN0cmF0aW9uTGltaXQ+O1xuICBsaW1pdFJlYWNoZWRJbmZvJDogT2JzZXJ2YWJsZTxzdHJpbmc+O1xuICByZXF1aXJlU2VjdXJpdHlUb2tlbjogYm9vbGVhbiA9IGZhbHNlO1xuICBpc01hbmFnZW1lbnRUZW5hbnQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgaXNMb2FkaW5nOiBib29sZWFuID0gZmFsc2U7XG4gIGdyaWRPckxpc3Q6ICdpbnRlcmFjdC1saXN0JyB8ICdpbnRlcmFjdC1ncmlkJyA9ICdpbnRlcmFjdC1ncmlkJztcbiAgc3RhdHVzID0gRGV2aWNlUmVnaXN0cmF0aW9uU3RhdHVzO1xuXG4gIHJlYWRvbmx5IHN0YXR1c1Byb3BzID0ge1xuICAgIFtEZXZpY2VSZWdpc3RyYXRpb25TdGF0dXMuV0FJVElOR19GT1JfQ09OTkVDVElPTl06IHtcbiAgICAgIGxhYmVsOiBnZXR0ZXh0KCdXYWl0aW5nIGZvciBjb25uZWN0aW9uJyksXG4gICAgICBpY29uOiAndW5saW5rJyxcbiAgICAgIGNsczogJ3RleHQtZGFuZ2VyJ1xuICAgIH0sXG4gICAgW0RldmljZVJlZ2lzdHJhdGlvblN0YXR1cy5QRU5ESU5HX0FDQ0VQVEFOQ0VdOiB7XG4gICAgICBsYWJlbDogZ2V0dGV4dCgnUGVuZGluZyBhY2NlcHRhbmNlJyksXG4gICAgICBpY29uOiAnY2lyY2xlJyxcbiAgICAgIGNsczogJ3RleHQtaW5mbydcbiAgICB9LFxuICAgIFtEZXZpY2VSZWdpc3RyYXRpb25TdGF0dXMuQUNDRVBURURdOiB7XG4gICAgICBsYWJlbDogZ2V0dGV4dCgnQWNjZXB0ZWQnKSxcbiAgICAgIGljb246ICdjaGVjay1jaXJjbGUnLFxuICAgICAgY2xzOiAndGV4dC1zdWNjZXNzJ1xuICAgIH0sXG4gICAgW0RldmljZVJlZ2lzdHJhdGlvblN0YXR1cy5CTE9DS0VEXToge1xuICAgICAgbGFiZWw6IGdldHRleHQoJ0Jsb2NrZWQnKSxcbiAgICAgIGljb246ICdyZW1vdmUnLFxuICAgICAgY2xzOiAndGV4dC1kYW5nZXInXG4gICAgfVxuICB9O1xuXG4gIHByaXZhdGUgdW5zdWJzY3JpYmUkOiBTdWJqZWN0PGFueT4gPSBuZXcgU3ViamVjdCgpO1xuICBwcml2YXRlIHJlYWRvbmx5IF9zZWN1cml0eVRva2VuUG9saWN5OiBCZWhhdmlvclN1YmplY3Q8RGV2aWNlUmVnaXN0cmF0aW9uU2VjdXJpdHlNb2RlPiA9XG4gICAgbmV3IEJlaGF2aW9yU3ViamVjdChEZXZpY2VSZWdpc3RyYXRpb25TZWN1cml0eU1vZGUuT1BUSU9OQUwpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgcmVnaXN0ZXJEZXZpY2VTZXJ2aWNlOiBSZWdpc3RlckRldmljZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBib290c3RyYXBSZWFsdGltZVNlcnZpY2U6IERldmljZUJvb3RzdHJhcFJlYWx0aW1lU2VydmljZSxcbiAgICBwcml2YXRlIHRlbmFudFVpU2VydmljZTogVGVuYW50VWlTZXJ2aWNlLFxuICAgIHByaXZhdGUgbW9kYWxTZXJ2aWNlOiBNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSB0cmFuc2xhdGVTZXJ2aWNlOiBUcmFuc2xhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgb3B0aW9uc1NlcnZpY2U6IE9wdGlvbnNTZXJ2aWNlXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmxvYWRBbGwoKTtcbiAgICB0aGlzLnNldElzTWFuYWdlbWVudFRlbmFudCgpO1xuICAgIHRoaXMuc2V0UmVxdWlyZVNlY3VyaXR5VG9rZW4oKTtcblxuICAgIHRoaXMuZGV2aWNlUmVxdWVzdHMkID0gdGhpcy5yZWdpc3RlckRldmljZVNlcnZpY2UuZGV2aWNlUmVnaXN0cmF0aW9uUmVxdWVzdHMkLnBpcGUoXG4gICAgICBtYXAocmVxID0+ICh7XG4gICAgICAgIGRhdGE6IHNvcnRCeShyZXEuZGF0YSwgW1xuICAgICAgICAgICh7IHN0YXR1cyB9KSA9PiAoc3RhdHVzID09PSBEZXZpY2VSZWdpc3RyYXRpb25TdGF0dXMuUEVORElOR19BQ0NFUFRBTkNFID8gMCA6IDEpLFxuICAgICAgICAgICctY3JlYXRpb25UaW1lJ1xuICAgICAgICBdKSxcbiAgICAgICAgcGFnaW5nOiByZXEucGFnaW5nXG4gICAgICB9KSlcbiAgICApO1xuICAgIHRoaXMubGltaXQkID0gdGhpcy5yZWdpc3RlckRldmljZVNlcnZpY2UubGltaXQkO1xuICAgIHRoaXMubGltaXRSZWFjaGVkSW5mbyQgPSB0aGlzLmxpbWl0JC5waXBlKFxuICAgICAgZmlsdGVyKGRldmljZVJlZ2lzdHJhdGlvbkxpbWl0ID0+IGRldmljZVJlZ2lzdHJhdGlvbkxpbWl0LmlzUmVhY2hlZCksXG4gICAgICBzd2l0Y2hNYXAoKHsgbGltaXQgfSkgPT5cbiAgICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLnN0cmVhbShcbiAgICAgICAgICBnZXR0ZXh0KFxuICAgICAgICAgICAgJ1lvdSByZWFjaGVkIHRoZSBsaW1pdCBvZiB7eyBtYXhEZXZpY2VzIH19IGRldmljZXMuIE5vIG1vcmUgZGV2aWNlcyBjYW4gYmUgcmVnaXN0ZXJlZC4nXG4gICAgICAgICAgKSxcbiAgICAgICAgICB7IG1heERldmljZXM6IGxpbWl0IH1cbiAgICAgICAgKVxuICAgICAgKVxuICAgICk7XG4gICAgdGhpcy5yZWdpc3RlckRldmljZVNlcnZpY2UubG9hZGluZyRcbiAgICAgIC5waXBlKHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCkpXG4gICAgICAuc3Vic2NyaWJlKHZhbHVlID0+ICh0aGlzLmlzTG9hZGluZyA9IHZhbHVlKSk7XG5cbiAgICB0aGlzLmJvb3RzdHJhcFJlYWx0aW1lU2VydmljZVxuICAgICAgLm9uVXBkYXRlJCgpXG4gICAgICAucGlwZSh0YWtlVW50aWwodGhpcy51bnN1YnNjcmliZSQpKVxuICAgICAgLnN1YnNjcmliZSgoYm9vdHN0cmFwOiBJUmVhbHRpbWVEZXZpY2VCb290c3RyYXApID0+IHtcbiAgICAgICAgdGhpcy5yZWdpc3RlckRldmljZVNlcnZpY2Uub25EZXZpY2VCb290c3RyYXAoYm9vdHN0cmFwKTtcbiAgICAgIH0pO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy51bnN1YnNjcmliZSQubmV4dCgpO1xuICAgIHRoaXMudW5zdWJzY3JpYmUkLmNvbXBsZXRlKCk7XG4gIH1cblxuICB1cGRhdGVMaXN0KGRhdGEpIHtcbiAgICB0aGlzLnJlZ2lzdGVyRGV2aWNlU2VydmljZS5pbnRlcm5hbExpc3RVcGRhdGUoZGF0YSk7XG4gIH1cblxuICBhc3luYyBkZWxldGUoaWQ6IHN0cmluZykge1xuICAgIGNvbnN0IGNvbmZpcm1lZCA9IGF3YWl0IHRoaXMubW9kYWxTZXJ2aWNlLmNvbmZpcm0oXG4gICAgICBnZXR0ZXh0KCdDYW5jZWwgZGV2aWNlIHJlZ2lzdHJhdGlvbicpLFxuICAgICAgdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoXG4gICAgICAgIGdldHRleHQoXG4gICAgICAgICAgJ1lvdSBhcmUgYWJvdXQgdG8gY2FuY2VsIGRldmljZSByZWdpc3RyYXRpb24gZm9yIElEIFwie3tpZH19XCIuIERvIHlvdSB3YW50IHRvIHByb2NlZWQ/J1xuICAgICAgICApLFxuICAgICAgICB7IGlkIH1cbiAgICAgICksXG4gICAgICBTdGF0dXMuREFOR0VSLFxuICAgICAge1xuICAgICAgICBvazogZ2V0dGV4dCgnQ2FuY2VsIHJlZ2lzdHJhdGlvbicpLFxuICAgICAgICBjYW5jZWw6IGdldHRleHQoJ0Nsb3NlJylcbiAgICAgIH1cbiAgICApO1xuXG4gICAgaWYgKGNvbmZpcm1lZCkge1xuICAgICAgdGhpcy5yZWdpc3RlckRldmljZVNlcnZpY2UucmVtb3ZlKGlkKTtcbiAgICB9XG4gIH1cblxuICBhY2NlcHQocmVxdWVzdDogSURldmljZVJlZ2lzdHJhdGlvbikge1xuICAgIHRoaXMucmVnaXN0ZXJEZXZpY2VTZXJ2aWNlLmFjY2VwdChyZXF1ZXN0KTtcbiAgfVxuXG4gIGFjY2VwdEFsbCgpIHtcbiAgICB0aGlzLnJlZ2lzdGVyRGV2aWNlU2VydmljZS5hY2NlcHRBbGwoKTtcbiAgfVxuXG4gIGNhbkFjY2VwdEFsbCgpIHtcbiAgICBjb25zdCBwZW5kaW5nUmVxdWVzdHMgPSB0aGlzLnJlZ2lzdGVyRGV2aWNlU2VydmljZS5nZXRSZXF1ZXN0QnlTdGF0dXMoXG4gICAgICBEZXZpY2VSZWdpc3RyYXRpb25TdGF0dXMuUEVORElOR19BQ0NFUFRBTkNFXG4gICAgKTtcbiAgICByZXR1cm4gIShwZW5kaW5nUmVxdWVzdHMubGVuZ3RoID4gMCAmJiAhdGhpcy5yZXF1aXJlU2VjdXJpdHlUb2tlbik7XG4gIH1cblxuICBsb2FkQWxsKCkge1xuICAgIHRoaXMucmVnaXN0ZXJEZXZpY2VTZXJ2aWNlLmxpc3QoKTtcbiAgfVxuXG4gIGRpc3BsYXlNb2RlKGxpc3RDbGFzczogJ2ludGVyYWN0LWxpc3QnIHwgJ2ludGVyYWN0LWdyaWQnKSB7XG4gICAgdGhpcy5ncmlkT3JMaXN0ID0gbGlzdENsYXNzO1xuICB9XG5cbiAgYXN5bmMgc2V0UmVxdWlyZVNlY3VyaXR5VG9rZW4oKSB7XG4gICAgY29uc3QgbW9kZTogRGV2aWNlUmVnaXN0cmF0aW9uU2VjdXJpdHlNb2RlID0gYXdhaXQgdGhpcy5vcHRpb25zU2VydmljZS5nZXRUZW5hbnRPcHRpb24oXG4gICAgICAnZGV2aWNlLXJlZ2lzdHJhdGlvbicsXG4gICAgICAnc2VjdXJpdHktdG9rZW4ucG9saWN5JyxcbiAgICAgIERldmljZVJlZ2lzdHJhdGlvblNlY3VyaXR5TW9kZS5PUFRJT05BTFxuICAgICk7XG4gICAgdGhpcy5fc2VjdXJpdHlUb2tlblBvbGljeS5uZXh0KG1vZGUpO1xuICAgIHRoaXMucmVxdWlyZVNlY3VyaXR5VG9rZW4gPSBtb2RlID09PSBEZXZpY2VSZWdpc3RyYXRpb25TZWN1cml0eU1vZGUuUkVRVUlSRUQ7XG4gIH1cblxuICBhc3luYyBzZXRJc01hbmFnZW1lbnRUZW5hbnQoKSB7XG4gICAgdGhpcy5pc01hbmFnZW1lbnRUZW5hbnQgPSBhd2FpdCB0aGlzLnRlbmFudFVpU2VydmljZS5pc01hbmFnZW1lbnRUZW5hbnQoKTtcbiAgfVxuXG4gIHNob3VsZFNob3dTZWN1cml0eVRva2VuSW5wdXQoZGF0YTogSURldmljZVJlZ2lzdHJhdGlvbikge1xuICAgIHJldHVybiAoXG4gICAgICBkYXRhICYmXG4gICAgICBkYXRhLnN0YXR1cyA9PT0gRGV2aWNlUmVnaXN0cmF0aW9uU3RhdHVzLlBFTkRJTkdfQUNDRVBUQU5DRSAmJlxuICAgICAgdGhpcy5zaG93VG9rZW5JbnB1dEJhc2VkT25TZWN1cml0eU1vZGUoKVxuICAgICk7XG4gIH1cblxuICBzaG93VG9rZW5JbnB1dEJhc2VkT25TZWN1cml0eU1vZGUoKSB7XG4gICAgcmV0dXJuIHRoaXMuX3NlY3VyaXR5VG9rZW5Qb2xpY3kuZ2V0VmFsdWUoKSAhPT0gRGV2aWNlUmVnaXN0cmF0aW9uU2VjdXJpdHlNb2RlLklHTk9SRUQ7XG4gIH1cbn1cbiJdfQ==