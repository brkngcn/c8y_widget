import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { DeviceRegistrationSecurityMode, DeviceRegistrationStatus } from '@c8y/client';
import { BehaviorSubject, Subject } from 'rxjs';
import { filter, map, switchMap, takeUntil } from 'rxjs/operators';
import { DeviceBootstrapRealtimeService, TenantUiService, ModalService, Status, gettext, OptionsService } from '@c8y/ngx-components';
import { RegisterDeviceService } from './register-device.service';
import { sortBy } from 'lodash-es';
import { TranslateService } from '@ngx-translate/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './register-device.service';
import * as ɵngcc2 from '@c8y/ngx-components';
import * as ɵngcc3 from '@ngx-translate/core';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from './dropdown/register-device-dropdown.component';
import * as ɵngcc6 from 'ngx-bootstrap/popover';
import * as ɵngcc7 from '@angular/forms';

function DeviceRegistrationViewComponent_ng_container_0_small_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1("1 ", ɵngcc0.ɵɵpipeBind1(2, 1, "new device"), "");
} }
function DeviceRegistrationViewComponent_ng_container_0_small_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const deviceRequestList_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate2(" ", deviceRequestList_r1.data.length, " ", ɵngcc0.ɵɵpipeBind1(2, 2, "new devices"), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r13 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 5);
    ɵngcc0.ɵɵlistener("click", function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(3); return ctx_r12.acceptAll(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 11);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const limitStatus_r6 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 4, "Accept all"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r7.canAcceptAll() || (limitStatus_r6 == null ? null : limitStatus_r6.isReached));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "check");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 6, "Accept all"), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_c8y_action_bar_item_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-action-bar-item", 12);
    ɵngcc0.ɵɵelement(1, "c8y-register-device-dropdown");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("placement", "right");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 29);
    ɵngcc0.ɵɵelementStart(1, "p", 21);
    ɵngcc0.ɵɵtext(2, "Security token");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "button", 30);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "i", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(4, 3, "Security token is required if the connected device uses it."));
    ɵngcc0.ɵɵproperty("outsideClick", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "question-circle-o");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_div_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 34);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 35);
    ɵngcc0.ɵɵtext(8);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 3, "Created"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 5, "By`user`"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(9, 7, "Tenant ID"), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_ng_template_11_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "div", 33);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 33);
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, "Created"), " ");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 4, "By`user`"), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 18);
    ɵngcc0.ɵɵelementStart(1, "div", 19);
    ɵngcc0.ɵɵelementStart(2, "div", 20);
    ɵngcc0.ɵɵelementStart(3, "p", 21);
    ɵngcc0.ɵɵtext(4, "Device");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 22);
    ɵngcc0.ɵɵelementStart(6, "p", 21);
    ɵngcc0.ɵɵtext(7, "Status");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_div_8_Template, 6, 5, "div", 23);
    ɵngcc0.ɵɵelementStart(9, "div", 24);
    ɵngcc0.ɵɵtemplate(10, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_div_10_Template, 10, 9, "div", 25);
    ɵngcc0.ɵɵtemplate(11, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_ng_template_11_Template, 7, 6, "ng-template", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(13, "div", 27);
    ɵngcc0.ɵɵelement(14, "div", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r20 = ɵngcc0.ɵɵreference(12);
    const ctx_r15 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r15.showTokenInputBasedOnSecurityMode());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r15.isManagementTenant)("ngIfElse", _r20);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 36);
    ɵngcc0.ɵɵelementStart(1, "p", 37);
    ɵngcc0.ɵɵelementStart(2, "strong");
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "br");
    ɵngcc0.ɵɵelementStart(6, "span", 21);
    ɵngcc0.ɵɵtext(7, "Please contact your platform administrator.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 1, ctx_r16.limitReachedInfo$), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_i_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 47);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_ng_container_1_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 43);
    ɵngcc0.ɵɵtext(1, " Security token ");
    ɵngcc0.ɵɵelementEnd();
} }
const _c0 = function () { return { example: "A1e3gh5ds" }; };
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r34 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_ng_container_1_span_1_Template, 2, 0, "span", 53);
    ɵngcc0.ɵɵelementStart(2, "input", 54);
    ɵngcc0.ɵɵlistener("ngModelChange", function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_ng_container_1_Template_input_ngModelChange_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r34); const singleRequest_r22 = ɵngcc0.ɵɵnextContext(3).$implicit; return singleRequest_r22.securityToken = $event; });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const ctx_r30 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r30.gridOrList !== "interact-list");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngModel", singleRequest_r22.securityToken)("placeholder", ɵngcc0.ɵɵpipeBind2(3, 4, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(7, _c0)))("required", ctx_r30.requireSecurityToken);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 52);
    ɵngcc0.ɵɵtemplate(1, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_ng_container_1_Template, 4, 8, "ng-container", 0);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r28 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r28.shouldShowSecurityTokenInput(singleRequest_r22));
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r39 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 55);
    ɵngcc0.ɵɵlistener("click", function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_button_7_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r39); const singleRequest_r22 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r37 = ɵngcc0.ɵɵnextContext(4); return ctx_r37.accept(singleRequest_r22); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const limitStatus_r6 = ɵngcc0.ɵɵnextContext(2).ngIf;
    const ctx_r29 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Accept"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r29.isLoading || (limitStatus_r6 == null ? null : limitStatus_r6.isReached) || !singleRequest_r22.securityToken && ctx_r29.requireSecurityToken);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 5, "Accept"), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_Template(rf, ctx) { if (rf & 1) {
    const _r44 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_div_1_Template, 2, 1, "div", 48);
    ɵngcc0.ɵɵelementStart(2, "div", 49);
    ɵngcc0.ɵɵelementStart(3, "button", 50);
    ɵngcc0.ɵɵlistener("click", function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_Template_button_click_3_listener() { ɵngcc0.ɵɵrestoreView(_r44); const singleRequest_r22 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r42 = ɵngcc0.ɵɵnextContext(4); return ctx_r42.delete(singleRequest_r22.id); });
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_button_7_Template, 4, 7, "button", 51);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext().$implicit;
    const ctx_r24 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r24.showTokenInputBasedOnSecurityMode());
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(4, 5, "Remove"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r24.isLoading);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(6, 7, "Remove"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", singleRequest_r22.status === ctx_r24.status.PENDING_ACCEPTANCE);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_small_17_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelementStart(1, "span", 43);
    ɵngcc0.ɵɵtext(2, "Created on`date`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 33);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "span", 57);
    ɵngcc0.ɵɵtext(7, "by`user`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "span", 34);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(10, "span", 57);
    ɵngcc0.ɵɵtext(11, "in`tenant`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "span", 35);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 3, singleRequest_r22.creationTime), " ");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(singleRequest_r22.owner);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(singleRequest_r22.tenantId);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_small_17_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 32);
    ɵngcc0.ɵɵelement(1, "div", 33);
    ɵngcc0.ɵɵelement(2, "div", 34);
    ɵngcc0.ɵɵelementStart(3, "span", 43);
    ɵngcc0.ɵɵtext(4, "Created in`tenant`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "div", 35);
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate1(" ", singleRequest_r22.tenantId, " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_small_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 32);
    ɵngcc0.ɵɵtemplate(1, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_small_17_div_1_Template, 14, 5, "div", 56);
    ɵngcc0.ɵɵtemplate(2, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_small_17_div_2_Template, 8, 1, "div", 56);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", singleRequest_r22.creationTime && singleRequest_r22.owner);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !singleRequest_r22.creationTime || !singleRequest_r22.owner);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_template_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 32);
    ɵngcc0.ɵɵelementStart(1, "span", 57);
    ɵngcc0.ɵɵtext(2, "Created on`date`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "span", 33);
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "c8yDate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "span", 57);
    ɵngcc0.ɵɵtext(7, "by`user`");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "span", 33);
    ɵngcc0.ɵɵtext(9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const singleRequest_r22 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 2, singleRequest_r22.creationTime), " ");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(singleRequest_r22.owner);
} }
const _c1 = function () { return ["ROLE_DEVICE_CONTROL_ADMIN"]; };
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 36);
    ɵngcc0.ɵɵelementStart(2, "div", 38);
    ɵngcc0.ɵɵelementStart(3, "div", 39);
    ɵngcc0.ɵɵelementStart(4, "div", 40);
    ɵngcc0.ɵɵelement(5, "i", 11);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "p", 41);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(8, "div", 42);
    ɵngcc0.ɵɵelementStart(9, "span", 43);
    ɵngcc0.ɵɵtext(10, "Status");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "p");
    ɵngcc0.ɵɵtemplate(12, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_i_12_Template, 1, 0, "i", 44);
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(15, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_container_15_Template, 8, 9, "ng-container", 45);
    ɵngcc0.ɵɵelementStart(16, "div", 46);
    ɵngcc0.ɵɵtemplate(17, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_small_17_Template, 3, 2, "small", 25);
    ɵngcc0.ɵɵtemplate(18, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_ng_template_18_Template, 10, 4, "ng-template", null, 26, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const singleRequest_r22 = ctx.$implicit;
    const _r26 = ɵngcc0.ɵɵreference(19);
    const ctx_r17 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵclassMap(ctx_r17.statusProps[singleRequest_r22.status].cls);
    ɵngcc0.ɵɵproperty("c8yIcon", ctx_r17.statusProps[singleRequest_r22.status].icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(singleRequest_r22.id);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngIf", singleRequest_r22.status === ctx_r17.status.WAITING_FOR_CONNECTION);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(14, 9, ctx_r17.statusProps[singleRequest_r22.status].label), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpureFunction0(11, _c1));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r17.isManagementTenant)("ngIfElse", _r26);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_Template(rf, ctx) { if (rf & 1) {
    const _r53 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 13);
    ɵngcc0.ɵɵtemplate(2, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_2_Template, 15, 3, "div", 14);
    ɵngcc0.ɵɵtemplate(3, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_div_3_Template, 8, 3, "div", 15);
    ɵngcc0.ɵɵtemplate(4, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_ng_container_4_Template, 20, 12, "ng-container", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(5, "c8y-load-more", 17);
    ɵngcc0.ɵɵlistener("onLoad", function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_Template_c8y_load_more_onLoad_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r53); const ctx_r52 = ɵngcc0.ɵɵnextContext(3); return ctx_r52.updateList($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const limitStatus_r6 = ɵngcc0.ɵɵnextContext().ngIf;
    const deviceRequestList_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ctx_r9.gridOrList);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r9.gridOrList === "interact-list");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", limitStatus_r6 == null ? null : limitStatus_r6.isReached);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", deviceRequestList_r1.data);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("paging", deviceRequestList_r1.paging)("hidden", true);
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "h3");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "p", 21);
    ɵngcc0.ɵɵtext(5, "Please contact your platform administrator.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r56 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r56.limitReachedInfo$), " ");
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_ng_template_3_p_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "p", 21);
    ɵngcc0.ɵɵtext(1, " Use the \"Register device\" dropdown in the top right corner. ");
    ɵngcc0.ɵɵelementEnd();
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h3", 21);
    ɵngcc0.ɵɵtext(1, "No pending registrations to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(2, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_ng_template_3_p_2_Template, 2, 0, "p", 61);
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpureFunction0(1, _c1));
} }
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 58);
    ɵngcc0.ɵɵelement(1, "h1", 59);
    ɵngcc0.ɵɵtemplate(2, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_ng_container_2_Template, 6, 3, "ng-container", 9);
    ɵngcc0.ɵɵtemplate(3, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_ng_template_3_Template, 3, 2, "ng-template", null, 60, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const _r57 = ɵngcc0.ɵɵreference(4);
    const limitStatus_r6 = ɵngcc0.ɵɵnextContext().ngIf;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", limitStatus_r6 == null ? null : limitStatus_r6.isReached)("ngIfElse", _r57);
} }
const _c2 = function (a0) { return { "icon-spin": a0 }; };
function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    const _r62 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "c8y-action-bar-item", 3);
    ɵngcc0.ɵɵtemplate(2, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_button_2_Template, 5, 8, "button", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "c8y-action-bar-item", 3);
    ɵngcc0.ɵɵelementStart(4, "button", 5);
    ɵngcc0.ɵɵlistener("click", function DeviceRegistrationViewComponent_ng_container_0_ng_container_8_Template_button_click_4_listener() { ɵngcc0.ɵɵrestoreView(_r62); const ctx_r61 = ɵngcc0.ɵɵnextContext(2); return ctx_r61.loadAll(); });
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelement(6, "i", 6);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_c8y_action_bar_item_9_Template, 2, 1, "c8y-action-bar-item", 7);
    ɵngcc0.ɵɵelement(10, "c8y-help", 8);
    ɵngcc0.ɵɵtemplate(11, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_container_11_Template, 6, 6, "ng-container", 9);
    ɵngcc0.ɵɵtemplate(12, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_ng_template_12_Template, 5, 2, "ng-template", null, 10, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r10 = ɵngcc0.ɵɵreference(13);
    const deviceRequestList_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("placement", "right")("priority", 10);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpureFunction0(17, _c1));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("placement", "right")("priority", 9);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(5, 13, "Reload"));
    ɵngcc0.ɵɵproperty("disabled", ctx_r4.isLoading);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIcon", "refresh")("ngClass", ɵngcc0.ɵɵpureFunction1(18, _c2, ctx_r4.isLoading));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 15, "Reload"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("c8yIfAllowed", ɵngcc0.ɵɵpureFunction0(20, _c1));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", deviceRequestList_r1.data.length > 0)("ngIfElse", _r10);
} }
function DeviceRegistrationViewComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    const _r65 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "c8y-title");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, DeviceRegistrationViewComponent_ng_container_0_small_4_Template, 3, 3, "small", 0);
    ɵngcc0.ɵɵtemplate(5, DeviceRegistrationViewComponent_ng_container_0_small_5_Template, 3, 4, "small", 0);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "c8y-action-bar-item", 1);
    ɵngcc0.ɵɵelementStart(7, "c8y-list-display-switch", 2);
    ɵngcc0.ɵɵlistener("onListClassChange", function DeviceRegistrationViewComponent_ng_container_0_Template_c8y_list_display_switch_onListClassChange_7_listener($event) { ɵngcc0.ɵɵrestoreView(_r65); const ctx_r64 = ɵngcc0.ɵɵnextContext(); return ctx_r64.displayMode($event); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, DeviceRegistrationViewComponent_ng_container_0_ng_container_8_Template, 14, 21, "ng-container", 0);
    ɵngcc0.ɵɵpipe(9, "async");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const deviceRequestList_r1 = ctx.ngIf;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 5, "Device registration"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", deviceRequestList_r1.data.length === 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", deviceRequestList_r1.data.length > 1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("placement", "left");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(9, 7, ctx_r0.limit$));
} }
export class DeviceRegistrationViewComponent {
    constructor(registerDeviceService, bootstrapRealtimeService, tenantUiService, modalService, translateService, optionsService) {
        this.registerDeviceService = registerDeviceService;
        this.bootstrapRealtimeService = bootstrapRealtimeService;
        this.tenantUiService = tenantUiService;
        this.modalService = modalService;
        this.translateService = translateService;
        this.optionsService = optionsService;
        this.requireSecurityToken = false;
        this.isManagementTenant = false;
        this.isLoading = false;
        this.gridOrList = 'interact-grid';
        this.status = DeviceRegistrationStatus;
        this.statusProps = {
            [DeviceRegistrationStatus.WAITING_FOR_CONNECTION]: {
                label: gettext('Waiting for connection'),
                icon: 'unlink',
                cls: 'text-danger'
            },
            [DeviceRegistrationStatus.PENDING_ACCEPTANCE]: {
                label: gettext('Pending acceptance'),
                icon: 'circle',
                cls: 'text-info'
            },
            [DeviceRegistrationStatus.ACCEPTED]: {
                label: gettext('Accepted'),
                icon: 'check-circle',
                cls: 'text-success'
            },
            [DeviceRegistrationStatus.BLOCKED]: {
                label: gettext('Blocked'),
                icon: 'remove',
                cls: 'text-danger'
            }
        };
        this.unsubscribe$ = new Subject();
        this._securityTokenPolicy = new BehaviorSubject(DeviceRegistrationSecurityMode.OPTIONAL);
    }
    ngOnInit() {
        this.loadAll();
        this.setIsManagementTenant();
        this.setRequireSecurityToken();
        this.deviceRequests$ = this.registerDeviceService.deviceRegistrationRequests$.pipe(map(req => ({
            data: sortBy(req.data, [
                ({ status }) => (status === DeviceRegistrationStatus.PENDING_ACCEPTANCE ? 0 : 1),
                '-creationTime'
            ]),
            paging: req.paging
        })));
        this.limit$ = this.registerDeviceService.limit$;
        this.limitReachedInfo$ = this.limit$.pipe(filter(deviceRegistrationLimit => deviceRegistrationLimit.isReached), switchMap(({ limit }) => this.translateService.stream(gettext('You reached the limit of {{ maxDevices }} devices. No more devices can be registered.'), { maxDevices: limit })));
        this.registerDeviceService.loading$
            .pipe(takeUntil(this.unsubscribe$))
            .subscribe(value => (this.isLoading = value));
        this.bootstrapRealtimeService
            .onUpdate$()
            .pipe(takeUntil(this.unsubscribe$))
            .subscribe((bootstrap) => {
            this.registerDeviceService.onDeviceBootstrap(bootstrap);
        });
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
    updateList(data) {
        this.registerDeviceService.internalListUpdate(data);
    }
    delete(id) {
        return __awaiter(this, void 0, void 0, function* () {
            const confirmed = yield this.modalService.confirm(gettext('Cancel device registration'), this.translateService.instant(gettext('You are about to cancel device registration for ID "{{id}}". Do you want to proceed?'), { id }), Status.DANGER, {
                ok: gettext('Cancel registration'),
                cancel: gettext('Close')
            });
            if (confirmed) {
                this.registerDeviceService.remove(id);
            }
        });
    }
    accept(request) {
        this.registerDeviceService.accept(request);
    }
    acceptAll() {
        this.registerDeviceService.acceptAll();
    }
    canAcceptAll() {
        const pendingRequests = this.registerDeviceService.getRequestByStatus(DeviceRegistrationStatus.PENDING_ACCEPTANCE);
        return !(pendingRequests.length > 0 && !this.requireSecurityToken);
    }
    loadAll() {
        this.registerDeviceService.list();
    }
    displayMode(listClass) {
        this.gridOrList = listClass;
    }
    setRequireSecurityToken() {
        return __awaiter(this, void 0, void 0, function* () {
            const mode = yield this.optionsService.getTenantOption('device-registration', 'security-token.policy', DeviceRegistrationSecurityMode.OPTIONAL);
            this._securityTokenPolicy.next(mode);
            this.requireSecurityToken = mode === DeviceRegistrationSecurityMode.REQUIRED;
        });
    }
    setIsManagementTenant() {
        return __awaiter(this, void 0, void 0, function* () {
            this.isManagementTenant = yield this.tenantUiService.isManagementTenant();
        });
    }
    shouldShowSecurityTokenInput(data) {
        return (data &&
            data.status === DeviceRegistrationStatus.PENDING_ACCEPTANCE &&
            this.showTokenInputBasedOnSecurityMode());
    }
    showTokenInputBasedOnSecurityMode() {
        return this._securityTokenPolicy.getValue() !== DeviceRegistrationSecurityMode.IGNORED;
    }
}
DeviceRegistrationViewComponent.ɵfac = function DeviceRegistrationViewComponent_Factory(t) { return new (t || DeviceRegistrationViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.RegisterDeviceService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DeviceBootstrapRealtimeService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.TenantUiService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.TranslateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.OptionsService)); };
DeviceRegistrationViewComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DeviceRegistrationViewComponent, selectors: [["c8y-device-registration-view"]], decls: 2, vars: 3, consts: [[4, "ngIf"], ["itemClass", "navbar-form hidden-xs", 3, "placement"], [3, "onListClassChange"], [3, "placement", "priority"], ["class", "btn btn-link", 3, "title", "disabled", "click", 4, "c8yIfAllowed"], [1, "btn", "btn-link", 3, "title", "disabled", "click"], [3, "c8yIcon", "ngClass"], [3, "placement", 4, "c8yIfAllowed"], ["src", "/users-guide/device-management/#connecting-devices"], [4, "ngIf", "ngIfElse"], ["noData", ""], [3, "c8yIcon"], [3, "placement"], [1, "card-group", 3, "ngClass"], ["class", "page-sticky-header hidden-xs", 4, "ngIf"], ["class", "col-xs-12 col-sm-6 col-md-4 col-lg-3", 4, "ngIf"], [4, "ngFor", "ngForOf"], [3, "paging", "hidden", "onLoad"], [1, "page-sticky-header", "hidden-xs"], [1, "flex-row"], [1, "card-header", "p-l-40"], ["translate", ""], [1, "card-block", "card-column-30", "p-l-0", "m-l-8"], ["class", "card-block card-column-40 p-0", 4, "ngIf"], [1, "card-footer", "card-column-40"], ["class", "d-contents", 4, "ngIf", "ngIfElse"], ["noManagement", ""], [1, "card-actions-group", 2, "min-width", "176px"], [1, "btn", "btn-xs", "invisible"], [1, "card-block", "card-column-40", "p-0"], ["placement", "right", "container", "body", "triggers", "click focus", 1, "btn", "btn-clean", 3, "popover", "outsideClick"], [1, "text-info", 3, "c8yIcon"], [1, "d-contents"], [1, "card-column-50"], [1, "card-column-30"], [1, "card-column-20"], [1, "col-xs-12", "col-sm-6", "col-md-4", "col-lg-3"], ["role", "alert", 1, "alert", "alert-warning", "center-block"], [1, "card"], [1, "card-header", "separator"], [1, "card-icon"], [1, "card-title", "text-truncate"], [1, "card-block", "text-center", "card-column-30"], ["translate", "", 1, "text-label-small"], ["c8yIcon", "refresh", "class", "icon-spin text-primary", 4, "ngIf"], [4, "c8yIfAllowed"], [1, "card-footer", "separator", "text-center", "card-column-40"], ["c8yIcon", "refresh", 1, "icon-spin", "text-primary"], ["class", "card-block text-center card-column-40 p-t-0 p-b-0", 4, "ngIf"], [1, "card-actions-group", "flex-item-v-center", 2, "min-width", "176px"], [1, "btn", "btn-danger", "btn-xs", 3, "title", "disabled", "click"], ["class", "btn btn-primary btn-xs", 3, "title", "disabled", "click", 4, "ngIf"], [1, "card-block", "text-center", "card-column-40", "p-t-0", "p-b-0"], ["class", "text-label-small", "translate", "", 4, "ngIf"], ["type", "text", 1, "form-control", 3, "ngModel", "placeholder", "required", "ngModelChange"], [1, "btn", "btn-primary", "btn-xs", 3, "title", "disabled", "click"], ["class", "d-contents", 4, "ngIf"], ["translate", "", 1, "text-label-small", "m-l-4", "m-r-4"], [1, "c8y-empty-state", "m-t-40", "text-center"], [1, "c8y-icon", "c8y-icon-device-connect", "c8y-icon-duocolor"], ["limitNotReached", ""], ["translate", "", 4, "c8yIfAllowed"]], template: function DeviceRegistrationViewComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DeviceRegistrationViewComponent_ng_container_0_Template, 10, 9, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.deviceRequests$));
    } }, directives: [ɵngcc4.NgIf, ɵngcc2.TitleComponent, ɵngcc2.ActionBarItemComponent, ɵngcc2.ɵbh, ɵngcc2.IfAllowedDirective, ɵngcc2.IconDirective, ɵngcc4.NgClass, ɵngcc2.HelpComponent, ɵngcc5.RegisterDeviceDropdownComponent, ɵngcc4.NgForOf, ɵngcc2.LoadMoreComponent, ɵngcc2.C8yTranslateDirective, ɵngcc6.PopoverDirective, ɵngcc7.DefaultValueAccessor, ɵngcc2.RequiredInputPlaceholderDirective, ɵngcc7.NgControlStatus, ɵngcc7.NgModel, ɵngcc7.RequiredValidator], pipes: [ɵngcc4.AsyncPipe, ɵngcc2.C8yTranslatePipe, ɵngcc2.DatePipe], encapsulation: 2 });
DeviceRegistrationViewComponent.ctorParameters = () => [
    { type: RegisterDeviceService },
    { type: DeviceBootstrapRealtimeService },
    { type: TenantUiService },
    { type: ModalService },
    { type: TranslateService },
    { type: OptionsService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DeviceRegistrationViewComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-device-registration-view',
                template: "<ng-container *ngIf=\"deviceRequests$ | async as deviceRequestList\">\n  <c8y-title>\n    {{ 'Device registration' | translate }}\n    <small *ngIf=\"deviceRequestList.data.length === 1\">1 {{ 'new device' | translate }}</small>\n    <small *ngIf=\"deviceRequestList.data.length > 1\">\n      {{ deviceRequestList.data.length }} {{ 'new devices' | translate }}\n    </small>\n  </c8y-title>\n\n  <c8y-action-bar-item [placement]=\"'left'\" itemClass=\"navbar-form hidden-xs\">\n    <c8y-list-display-switch (onListClassChange)=\"displayMode($event)\"></c8y-list-display-switch>\n  </c8y-action-bar-item>\n\n  <ng-container *ngIf=\"limit$ | async as limitStatus\">\n    <c8y-action-bar-item [placement]=\"'right'\" [priority]=\"10\">\n      <button\n        *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\"\n        class=\"btn btn-link\"\n        title=\"{{ 'Accept all' | translate }}\"\n        (click)=\"acceptAll()\"\n        [disabled]=\"canAcceptAll() || limitStatus?.isReached\"\n      >\n        <i [c8yIcon]=\"'check'\"></i>\n        {{ 'Accept all' | translate }}\n      </button>\n    </c8y-action-bar-item>\n\n    <c8y-action-bar-item [placement]=\"'right'\" [priority]=\"9\">\n      <button\n        class=\"btn btn-link\"\n        title=\"{{ 'Reload' | translate }}\"\n        (click)=\"loadAll()\"\n        [disabled]=\"isLoading\"\n      >\n        <i [c8yIcon]=\"'refresh'\" [ngClass]=\"{ 'icon-spin': isLoading }\"></i>\n        {{ 'Reload' | translate }}\n      </button>\n    </c8y-action-bar-item>\n\n    <c8y-action-bar-item [placement]=\"'right'\" *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\">\n      <c8y-register-device-dropdown></c8y-register-device-dropdown>\n    </c8y-action-bar-item>\n\n    <c8y-help src=\"/users-guide/device-management/#connecting-devices\"></c8y-help>\n\n    <ng-container *ngIf=\"deviceRequestList.data.length > 0; else noData\">\n      <div class=\"card-group\" [ngClass]=\"gridOrList\">\n        <!-- START interact-list sticky header START -->\n        <div *ngIf=\"gridOrList === 'interact-list'\" class=\"page-sticky-header hidden-xs\">\n          <div class=\"flex-row\">\n            <div class=\"card-header p-l-40\">\n              <p translate>Device</p>\n            </div>\n            <div class=\"card-block card-column-30 p-l-0 m-l-8\">\n              <p translate>Status</p>\n            </div>\n            <div class=\"card-block card-column-40 p-0\" *ngIf=\"showTokenInputBasedOnSecurityMode()\">\n              <p translate>Security token</p>\n              <button\n                class=\"btn btn-clean\"\n                popover=\"{{\n                  'Security token is required if the connected device uses it.' | translate\n                }}\"\n                placement=\"right\"\n                container=\"body\"\n                triggers=\"click focus\"\n                [outsideClick]=\"true\"\n              >\n                <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n              </button>\n            </div>\n            <div class=\"card-footer card-column-40\">\n              <div class=\"d-contents\" *ngIf=\"isManagementTenant; else noManagement\">\n                <div class=\"card-column-50\">\n                  {{ 'Created' | translate }}\n                </div>\n                <div class=\"card-column-30\">\n                  {{ 'By`user`' | translate }}\n                </div>\n                <div class=\"card-column-20\">\n                  {{ 'Tenant ID' | translate }}\n                </div>\n              </div>\n              <ng-template #noManagement>\n                <div class=\"d-contents\">\n                  <div class=\"card-column-50\">\n                    {{ 'Created' | translate }}\n                  </div>\n                  <div class=\"card-column-50\">\n                    {{ 'By`user`' | translate }}\n                  </div>\n                </div>\n              </ng-template>\n            </div>\n            <div class=\"card-actions-group\" style=\"min-width: 176px\">\n              <div class=\"btn btn-xs invisible\">\n                <!--EMPTY by design-->\n              </div>\n            </div>\n          </div>\n        </div>\n        <!-- END interact-list sticky header END -->\n\n        <div *ngIf=\"limitStatus?.isReached\" class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n          <p class=\"alert alert-warning center-block\" role=\"alert\">\n            <strong>\n              {{ limitReachedInfo$ | async }}\n            </strong>\n            <br />\n            <span translate>Please contact your platform administrator.</span>\n          </p>\n        </div>\n\n        <ng-container *ngFor=\"let singleRequest of deviceRequestList.data\">\n          <div class=\"col-xs-12 col-sm-6 col-md-4 col-lg-3\">\n            <div class=\"card\">\n              <div class=\"card-header separator\">\n                <div class=\"card-icon\">\n                  <i\n                    [c8yIcon]=\"statusProps[singleRequest.status].icon\"\n                    [class]=\"statusProps[singleRequest.status].cls\"\n                  ></i>\n                </div>\n                <p class=\"card-title text-truncate\">{{ singleRequest.id }}</p>\n              </div>\n\n              <div class=\"card-block text-center card-column-30\">\n                <span class=\"text-label-small\" translate>Status</span>\n                <p>\n                  <i\n                    *ngIf=\"singleRequest.status === status.WAITING_FOR_CONNECTION\"\n                    c8yIcon=\"refresh\"\n                    class=\"icon-spin text-primary\"\n                  ></i>\n                  {{ statusProps[singleRequest.status].label | translate }}\n                </p>\n              </div>\n\n              <ng-container *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\">\n                <div\n                  class=\"card-block text-center card-column-40 p-t-0 p-b-0\"\n                  *ngIf=\"showTokenInputBasedOnSecurityMode()\"\n                >\n                  <ng-container *ngIf=\"shouldShowSecurityTokenInput(singleRequest)\">\n                    <span *ngIf=\"gridOrList !== 'interact-list'\" class=\"text-label-small\" translate>\n                      Security token\n                    </span>\n                    <input\n                      [(ngModel)]=\"singleRequest.securityToken\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'A1e3gh5ds' }\"\n                      [required]=\"requireSecurityToken\"\n                    />\n                  </ng-container>\n                </div>\n\n                <div class=\"card-actions-group flex-item-v-center\" style=\"min-width: 176px\">\n                  <button\n                    class=\"btn btn-danger btn-xs\"\n                    title=\"{{ 'Remove' | translate }}\"\n                    (click)=\"delete(singleRequest.id)\"\n                    [disabled]=\"isLoading\"\n                  >\n                    {{ 'Remove' | translate }}\n                  </button>\n                  <button\n                    class=\"btn btn-primary btn-xs\"\n                    title=\"{{ 'Accept' | translate }}\"\n                    (click)=\"accept(singleRequest)\"\n                    *ngIf=\"singleRequest.status === status.PENDING_ACCEPTANCE\"\n                    [disabled]=\"\n                      isLoading ||\n                      limitStatus?.isReached ||\n                      (!singleRequest.securityToken && requireSecurityToken)\n                    \"\n                  >\n                    {{ 'Accept' | translate }}\n                  </button>\n                </div>\n              </ng-container>\n\n              <div class=\"card-footer separator text-center card-column-40\">\n                <small *ngIf=\"isManagementTenant; else noManagement\" class=\"d-contents\">\n                  <div class=\"d-contents\" *ngIf=\"singleRequest.creationTime && singleRequest.owner\">\n                    <span class=\"text-label-small\" translate>Created on`date`</span>\n                    <span class=\"card-column-50\">\n                      {{ singleRequest.creationTime | c8yDate }}\n                    </span>\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>by`user`</span>\n                    <span class=\"card-column-30\">{{ singleRequest.owner }}</span>\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>in`tenant`</span>\n                    <span class=\"card-column-20\">{{ singleRequest.tenantId }}</span>\n                  </div>\n                  <div\n                    class=\"d-contents\"\n                    *ngIf=\"!singleRequest.creationTime || !singleRequest.owner\"\n                  >\n                    <div class=\"card-column-50\"></div>\n                    <div class=\"card-column-30\"></div>\n                    <span class=\"text-label-small\" translate>Created in`tenant`</span>\n                    <div class=\"card-column-20\">\n                      <span>\n                        {{ singleRequest.tenantId }}\n                      </span>\n                    </div>\n                  </div>\n                </small>\n                <ng-template #noManagement>\n                  <small class=\"d-contents\">\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>Created on`date`</span>\n                    <span class=\"card-column-50\">\n                      {{ singleRequest.creationTime | c8yDate }}\n                    </span>\n                    <span class=\"text-label-small m-l-4 m-r-4\" translate>by`user`</span>\n                    <span class=\"card-column-50\">{{ singleRequest.owner }}</span>\n                  </small>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <c8y-load-more\n        [paging]=\"deviceRequestList.paging\"\n        [hidden]=\"true\"\n        (onLoad)=\"updateList($event)\"\n      ></c8y-load-more>\n    </ng-container>\n\n    <ng-template #noData>\n      <div class=\"c8y-empty-state m-t-40 text-center\">\n        <h1 class=\"c8y-icon c8y-icon-device-connect c8y-icon-duocolor\"></h1>\n        <ng-container *ngIf=\"limitStatus?.isReached; else limitNotReached\">\n          <h3>\n            {{ limitReachedInfo$ | async }}\n          </h3>\n          <p translate>Please contact your platform administrator.</p>\n        </ng-container>\n        <ng-template #limitNotReached>\n          <h3 translate>No pending registrations to display.</h3>\n          <p *c8yIfAllowed=\"['ROLE_DEVICE_CONTROL_ADMIN']\" translate>\n            Use the \"Register device\" dropdown in the top right corner.\n          </p>\n        </ng-template>\n      </div>\n    </ng-template>\n  </ng-container>\n</ng-container>\n"
            }]
    }], function () { return [{ type: ɵngcc1.RegisterDeviceService }, { type: ɵngcc2.DeviceBootstrapRealtimeService }, { type: ɵngcc2.TenantUiService }, { type: ɵngcc2.ModalService }, { type: ɵngcc3.TranslateService }, { type: ɵngcc2.OptionsService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,