import { Injectable } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { DatapointSelectorModalComponent } from './datapoint-selector-modal/datapoint-selector-modal.component';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
export class DatapointSelectorService {
    constructor(modal) {
        this.modal = modal;
    }
    selectDataPoints(initialState = {}) {
        const modal = this.modal.show(DatapointSelectorModalComponent, {
            ignoreBackdropClick: true,
            keyboard: false,
            initialState,
            class: 'modal-lg'
        });
        const content = modal.content;
        return content.result;
    }
}
DatapointSelectorService.ɵfac = function DatapointSelectorService_Factory(t) { return new (t || DatapointSelectorService)(ɵngcc0.ɵɵinject(ɵngcc1.BsModalService)); };
DatapointSelectorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DatapointSelectorService_Factory() { return new DatapointSelectorService(i0.ɵɵinject(i1.BsModalService)); }, token: DatapointSelectorService, providedIn: "root" });
DatapointSelectorService.ctorParameters = () => [
    { type: BsModalService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectorService, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: ɵngcc1.BsModalService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LXNlbGVjdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2RhdGFwb2ludC1zZWxlY3Rvci9kYXRhcG9pbnQtc2VsZWN0b3Iuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUVyRCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSwrREFBK0QsQ0FBQztBQUNoSDtBQUVBOzs7QUFBQSxNQUFNLE9BQU8sd0JBQXdCO0FBQ3JDLElBQUUsWUFBc0IsS0FBcUI7QUFBSSxRQUF6QixVQUFLLEdBQUwsS0FBSyxDQUFnQjtBQUFDLElBQUUsQ0FBQztBQUNqRCxJQUNFLGdCQUFnQixDQUNkLGVBQXVELEVBQUU7QUFDMUQsUUFDQyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQywrQkFBK0IsRUFBRTtBQUNuRSxZQUFNLG1CQUFtQixFQUFFLElBQUk7QUFDL0IsWUFBTSxRQUFRLEVBQUUsS0FBSztBQUNyQixZQUFNLFlBQVk7QUFDbEIsWUFBTSxLQUFLLEVBQUUsVUFBVTtBQUN2QixTQUFLLENBQUMsQ0FBQztBQUNQLFFBQUksTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQTBDLENBQUM7QUFDckUsUUFBSSxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDMUIsSUFBRSxDQUFDO0FBQ0g7cUtBQUM7QUFDRCwrT0FoQks7QUFBQztFQURMLFVBQVUsU0FBQyxFQUFFLHZCQUVFLFlBTlAsY0FBYztBQUFHO0NBSUYsRUFBRSxNQUFNLEVBQUU7OzsrRUFKTjtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNNb2RhbFNlcnZpY2UgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IERhdGFwb2ludFNlbGVjdG9yTW9kYWxPcHRpb25zLCBLUElEZXRhaWxzIH0gZnJvbSAnLi9kYXRhcG9pbnQtc2VsZWN0aW9uLm1vZGVsJztcbmltcG9ydCB7IERhdGFwb2ludFNlbGVjdG9yTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL2RhdGFwb2ludC1zZWxlY3Rvci1tb2RhbC9kYXRhcG9pbnQtc2VsZWN0b3ItbW9kYWwuY29tcG9uZW50JztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBEYXRhcG9pbnRTZWxlY3RvclNlcnZpY2Uge1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgbW9kYWw6IEJzTW9kYWxTZXJ2aWNlKSB7fVxuXG4gIHNlbGVjdERhdGFQb2ludHMoXG4gICAgaW5pdGlhbFN0YXRlOiBQYXJ0aWFsPERhdGFwb2ludFNlbGVjdG9yTW9kYWxPcHRpb25zPiA9IHt9XG4gICk6IFByb21pc2U8S1BJRGV0YWlsc1tdPiB7XG4gICAgY29uc3QgbW9kYWwgPSB0aGlzLm1vZGFsLnNob3coRGF0YXBvaW50U2VsZWN0b3JNb2RhbENvbXBvbmVudCwge1xuICAgICAgaWdub3JlQmFja2Ryb3BDbGljazogdHJ1ZSxcbiAgICAgIGtleWJvYXJkOiBmYWxzZSxcbiAgICAgIGluaXRpYWxTdGF0ZSxcbiAgICAgIGNsYXNzOiAnbW9kYWwtbGcnXG4gICAgfSk7XG4gICAgY29uc3QgY29udGVudCA9IG1vZGFsLmNvbnRlbnQgYXMgRGF0YXBvaW50U2VsZWN0b3JNb2RhbENvbXBvbmVudDtcbiAgICByZXR1cm4gY29udGVudC5yZXN1bHQ7XG4gIH1cbn1cbiJdfQ==