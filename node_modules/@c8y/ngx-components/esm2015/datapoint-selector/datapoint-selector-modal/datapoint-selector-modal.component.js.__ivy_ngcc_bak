import { Component, ElementRef } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
export class DatapointSelectorModalComponent {
    constructor(bsModal, elementRef) {
        this.bsModal = bsModal;
        this.elementRef = elementRef;
        this.allowChangingContext = true;
        this.allowSearch = true;
        this.allowDatapointsFromMultipleAssets = true;
        this.selectedDatapoints = new Array();
        this.title = gettext('Data point selector');
        this.saveButtonLabel = gettext('Add data points');
        this.guessDatapointUnit = true;
        this.defaultActiveState = true;
        this.assetSelectorConfig = {};
        this.result = new Promise((resolve, reject) => {
            this.save = resolve;
            this.cancel = reject;
        });
    }
    ngOnInit() {
        this.applyWorkaroundForAngularJSModalsThatMightBeOpenedInParallel();
    }
    saveChanges() {
        this.bsModal.hide();
        this.save(this.selectedDatapoints);
    }
    close() {
        this.bsModal.hide();
        this.cancel();
    }
    /**
     * changes the z-index of the modal, to make sure this modal is on top.
     * required as angularJS modals are placing them selves on top via adjusting z-index.
     * while angular modals use the order within the dom for this..
     */
    applyWorkaroundForAngularJSModalsThatMightBeOpenedInParallel() {
        const modalContainer = get(this.elementRef, 'nativeElement.parentElement.parentElement.parentElement');
        modalContainer.style.zIndex = '1060';
    }
}
DatapointSelectorModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-datapoint-selector-modal',
                template: "<div class=\"modal-header separator\">\n  <h4 class=\"text-medium\">{{ title | translate }}</h4>\n</div>\n<div class=\"modal-inner-scroll modal-inner-scroll--fixed\">\n  <c8y-datapoint-selector\n    [contextAsset]=\"contextAsset\"\n    [guessDatapointUnit]=\"guessDatapointUnit\"\n    [allowDatapointsFromMultipleAssets]=\"allowDatapointsFromMultipleAssets\"\n    [allowChangingContext]=\"allowChangingContext\"\n    [defaultActiveState]=\"defaultActiveState\"\n    [allowSearch]=\"allowSearch\"\n    [(ngModel)]=\"selectedDatapoints\"\n  ></c8y-datapoint-selector>\n</div>\n<div class=\"modal-footer\">\n  <button\n    type=\"button\"\n    [title]=\"'Cancel' | translate\"\n    class=\"btn btn-default\"\n    (click)=\"close()\"\n    translate\n  >\n    Cancel\n  </button>\n  <button\n    [title]=\"saveButtonLabel | translate\"\n    class=\"btn btn-primary\"\n    [disabled]=\"!this.selectedDatapoints?.length\"\n    (click)=\"saveChanges()\"\n  >\n    {{ saveButtonLabel | translate }}\n  </button>\n</div>\n"
            },] }
];
DatapointSelectorModalComponent.ctorParameters = () => [
    { type: BsModalRef },
    { type: ElementRef }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2RhdGFwb2ludC1zZWxlY3Rvci9kYXRhcG9pbnQtc2VsZWN0b3ItbW9kYWwvZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUU5RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNoQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFVakQsTUFBTSxPQUFPLCtCQUErQjtJQW1CMUMsWUFBb0IsT0FBbUIsRUFBVSxVQUFzQjtRQUFuRCxZQUFPLEdBQVAsT0FBTyxDQUFZO1FBQVUsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQWpCdkUseUJBQW9CLEdBQUcsSUFBSSxDQUFDO1FBQzVCLGdCQUFXLEdBQUcsSUFBSSxDQUFDO1FBQ25CLHNDQUFpQyxHQUFHLElBQUksQ0FBQztRQUN6Qyx1QkFBa0IsR0FBRyxJQUFJLEtBQUssRUFBYyxDQUFDO1FBQzdDLFVBQUssR0FBVyxPQUFPLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUMvQyxvQkFBZSxHQUFXLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3JELHVCQUFrQixHQUFHLElBQUksQ0FBQztRQUMxQix1QkFBa0IsR0FBRyxJQUFJLENBQUM7UUFDMUIsd0JBQW1CLEdBQXdELEVBQUUsQ0FBQztRQUNyRSxXQUFNLEdBQTBCLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO1lBQ3ZFLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDO1lBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBS3VFLENBQUM7SUFFM0UsUUFBUTtRQUNOLElBQUksQ0FBQyw0REFBNEQsRUFBRSxDQUFDO0lBQ3RFLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVEOzs7O09BSUc7SUFDSyw0REFBNEQ7UUFDbEUsTUFBTSxjQUFjLEdBQWdCLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLHlEQUF5RCxDQUFDLENBQUM7UUFDcEgsY0FBYyxDQUFDLEtBQUssQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZDLENBQUM7OztZQS9DRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDhCQUE4QjtnQkFDeEMsZ2dDQUF3RDthQUN6RDs7O1lBVFEsVUFBVTtZQUpDLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSUlkZW50aWZpZWQgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHtcbiAgRGF0YXBvaW50U2VsZWN0b3JNb2RhbEFzc2V0U2VsZWN0b3JPcHRpb25zLFxuICBLUElEZXRhaWxzXG59IGZyb20gJy4uL2RhdGFwb2ludC1zZWxlY3Rpb24ubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGFwb2ludC1zZWxlY3Rvci1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGF0YXBvaW50U2VsZWN0b3JNb2RhbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvbnRleHRBc3NldDogSUlkZW50aWZpZWQ7XG4gIGFsbG93Q2hhbmdpbmdDb250ZXh0ID0gdHJ1ZTtcbiAgYWxsb3dTZWFyY2ggPSB0cnVlO1xuICBhbGxvd0RhdGFwb2ludHNGcm9tTXVsdGlwbGVBc3NldHMgPSB0cnVlO1xuICBzZWxlY3RlZERhdGFwb2ludHMgPSBuZXcgQXJyYXk8S1BJRGV0YWlscz4oKTtcbiAgdGl0bGU6IHN0cmluZyA9IGdldHRleHQoJ0RhdGEgcG9pbnQgc2VsZWN0b3InKTtcbiAgc2F2ZUJ1dHRvbkxhYmVsOiBzdHJpbmcgPSBnZXR0ZXh0KCdBZGQgZGF0YSBwb2ludHMnKTtcbiAgZ3Vlc3NEYXRhcG9pbnRVbml0ID0gdHJ1ZTtcbiAgZGVmYXVsdEFjdGl2ZVN0YXRlID0gdHJ1ZTtcbiAgYXNzZXRTZWxlY3RvckNvbmZpZzogUGFydGlhbDxEYXRhcG9pbnRTZWxlY3Rvck1vZGFsQXNzZXRTZWxlY3Rvck9wdGlvbnM+ID0ge307XG4gIHJlYWRvbmx5IHJlc3VsdDogUHJvbWlzZTxLUElEZXRhaWxzW10+ID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIHRoaXMuc2F2ZSA9IHJlc29sdmU7XG4gICAgdGhpcy5jYW5jZWwgPSByZWplY3Q7XG4gIH0pO1xuXG4gIHByaXZhdGUgc2F2ZTogKHZhbHVlOiBLUElEZXRhaWxzW10pID0+IHZvaWQ7XG4gIHByaXZhdGUgY2FuY2VsOiAocmVhc29uPzogYW55KSA9PiB2b2lkO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYnNNb2RhbDogQnNNb2RhbFJlZiwgcHJpdmF0ZSBlbGVtZW50UmVmOiBFbGVtZW50UmVmKSB7fVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYXBwbHlXb3JrYXJvdW5kRm9yQW5ndWxhckpTTW9kYWxzVGhhdE1pZ2h0QmVPcGVuZWRJblBhcmFsbGVsKCk7XG4gIH1cblxuICBzYXZlQ2hhbmdlcygpOiB2b2lkIHtcbiAgICB0aGlzLmJzTW9kYWwuaGlkZSgpO1xuICAgIHRoaXMuc2F2ZSh0aGlzLnNlbGVjdGVkRGF0YXBvaW50cyk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmJzTW9kYWwuaGlkZSgpO1xuICAgIHRoaXMuY2FuY2VsKCk7XG4gIH1cblxuICAvKipcbiAgICogY2hhbmdlcyB0aGUgei1pbmRleCBvZiB0aGUgbW9kYWwsIHRvIG1ha2Ugc3VyZSB0aGlzIG1vZGFsIGlzIG9uIHRvcC5cbiAgICogcmVxdWlyZWQgYXMgYW5ndWxhckpTIG1vZGFscyBhcmUgcGxhY2luZyB0aGVtIHNlbHZlcyBvbiB0b3AgdmlhIGFkanVzdGluZyB6LWluZGV4LlxuICAgKiB3aGlsZSBhbmd1bGFyIG1vZGFscyB1c2UgdGhlIG9yZGVyIHdpdGhpbiB0aGUgZG9tIGZvciB0aGlzLi5cbiAgICovXG4gIHByaXZhdGUgYXBwbHlXb3JrYXJvdW5kRm9yQW5ndWxhckpTTW9kYWxzVGhhdE1pZ2h0QmVPcGVuZWRJblBhcmFsbGVsKCkge1xuICAgIGNvbnN0IG1vZGFsQ29udGFpbmVyOiBIVE1MRWxlbWVudCA9IGdldCh0aGlzLmVsZW1lbnRSZWYsICduYXRpdmVFbGVtZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50Jyk7XG4gICAgbW9kYWxDb250YWluZXIuc3R5bGUuekluZGV4ID0gJzEwNjAnO1xuICB9XG59XG4iXX0=