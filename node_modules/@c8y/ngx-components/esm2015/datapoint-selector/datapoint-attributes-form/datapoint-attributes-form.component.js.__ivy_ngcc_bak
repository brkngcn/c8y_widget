import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { map, take } from 'rxjs/operators';
import { DatapointAttributesFormValidationService } from './datapoint-attributes-form-validation.service';
import { AXIS_TYPES, CHART_LINE_TYPES, CHART_RENDER_TYPES } from './datapoint-attributes.model';
export class DatapointAttributesFormComponent {
    constructor(formValidations) {
        this.formValidations = formValidations;
        this.showTarget = true;
        this.showRange = true;
        this.showYellowRange = true;
        this.showRedRange = true;
        this.showChart = true;
        this.showFormIfTemplateWasSelected = false;
        this.rawValue = {};
        this.CHART_RENDER_TYPES = CHART_RENDER_TYPES;
        this.CHART_LINE_TYPES = CHART_LINE_TYPES;
        this.AXIS_TYPES = AXIS_TYPES;
        this.customValidationErrorMessages = {};
        this.formGroup = this.formValidations.getDefaultFormGroup();
        this.setSubForms();
    }
    validate(control) {
        var _a;
        return ((_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.valid) ? null : { formInvalid: {} };
    }
    writeValue(obj) {
        this.rawValue = obj || {};
        if (obj) {
            this.formGroup.patchValue(this.formValidations.convertToFormGroupFormat(obj), {
                emitEvent: false
            });
        }
    }
    registerOnChange(fn) {
        this.formGroup.valueChanges
            .pipe(map(this.formValidations.convertToBackendFormat), map(formValue => Object.assign(this.rawValue, formValue)))
            .subscribe(fn);
    }
    registerOnTouched(fn) {
        this.formGroup.valueChanges.pipe(take(1)).subscribe(fn);
    }
    setDisabledState(isDisabled) {
        isDisabled ? this.formGroup.disable() : this.formGroup.enable();
    }
    setSubForms() {
        if (!this.formGroup) {
            this.range = this.yellowRange = this.redRange = this.chart = undefined;
            return;
        }
        this.range = this.formGroup.get('range');
        this.yellowRange = this.formGroup.get('yellowRange');
        this.redRange = this.formGroup.get('redRange');
        this.chart = this.formGroup.get('chart');
    }
}
DatapointAttributesFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-datapoint-attributes-form',
                template: "<div [formGroup]=\"formGroup\" *ngIf=\"!rawValue?.__template || showFormIfTemplateWasSelected\">\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"formGroup.controls?.label || formGroup.controls?.unit || formGroup.controls?.target\">\n    <legend translate>Details</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.label\">\n        <c8y-form-group>\n          <label translate>Label</label>\n          <input\n            class=\"form-control\"\n            name=\"label\"\n            formControlName=\"label\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'Temperature' }\"\n          />\n          <c8y-messages [show]=\"formGroup.controls.label.touched && formGroup.controls.label.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['label'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.unit\">\n        <c8y-form-group>\n          <label translate>Unit</label>\n          <input\n            class=\"form-control\"\n            name=\"unit\"\n            formControlName=\"unit\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: '\u00BAC' }\"\n          />\n          <c8y-messages [show]=\"formGroup.controls.unit.touched && formGroup.controls.unit.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['unit'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.target && showTarget\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || formGroup.controls.target.touched) &&\n              formGroup.controls?.target?.errors\n          }\"\n        >\n          <label translate>Target</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"target\"\n            formControlName=\"target\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 25 }\"\n          />\n          <c8y-messages\n            [show]=\"\n              (range?.touched || formGroup.controls.target.touched) &&\n              formGroup.controls.target.errors\n            \"\n          >\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['target'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"range && showRange\">\n    <legend translate>Range</legend>\n    <div class=\"row\" formGroupName=\"range\">\n      <div class=\"col-md-6\">\n        <c8y-form-group [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.min?.errors }\">\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 0 }\"\n          />\n          <c8y-messages [show]=\"range?.touched && range.controls?.min?.errors\"> </c8y-messages>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-6\">\n        <c8y-form-group [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.max?.errors }\">\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n          />\n          <c8y-messages [show]=\"range?.touched && range.controls?.max?.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['max'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" formGroupName=\"yellowRange\" *ngIf=\"yellowRange && showYellowRange\">\n    <legend translate>Yellow range</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || yellowRange?.touched) && yellowRange?.controls?.min?.errors\n          }\"\n        >\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 50 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.min?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || yellowRange?.touched) && yellowRange?.controls?.max?.errors\n          }\"\n        >\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.max?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" formGroupName=\"redRange\" *ngIf=\"redRange && showRedRange\">\n    <legend translate>Red range</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error': (range?.touched || redRange?.touched) && redRange?.controls?.min?.errors\n          }\"\n        >\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.min?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error': (range?.touched || redRange?.touched) && redRange?.controls?.max?.errors\n          }\"\n        >\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.max?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"chart && showChart\" formGroupName=\"chart\">\n    <legend translate>Chart</legend>\n    <div class=\"tight-grid\">\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"display\">\n            {{ 'Display' | translate }}\n            <button\n              class=\"btn-clean text-info\"\n              popover=\"{{ 'Value displayed when data is aggregated' | translate }}\"\n              [placement]=\"'right'\"\n              [triggers]=\"'focus'\"\n              [container]=\"'body'\"\n            >\n              <i c8yIcon=\"question-circle-o\"></i>\n            </button>\n          </label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"renderType\">\n              <option *ngFor=\"let type of CHART_RENDER_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"chartType\" translate>Chart type</label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"lineType\">\n              <option *ngFor=\"let type of CHART_LINE_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n            <span></span>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"yAxis\" translate>Y Axis</label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"yAxisType\">\n              <option *ngFor=\"let type of AXIS_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n            <span></span>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => DatapointAttributesFormComponent),
                        multi: true
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => DatapointAttributesFormComponent),
                        multi: true
                    }
                ]
            },] }
];
DatapointAttributesFormComponent.ctorParameters = () => [
    { type: DatapointAttributesFormValidationService }
];
DatapointAttributesFormComponent.propDecorators = {
    showTarget: [{ type: Input }],
    showRange: [{ type: Input }],
    showYellowRange: [{ type: Input }],
    showRedRange: [{ type: Input }],
    showChart: [{ type: Input }],
    showFormIfTemplateWasSelected: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LWF0dHJpYnV0ZXMtZm9ybS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9kYXRhcG9pbnQtc2VsZWN0b3IvZGF0YXBvaW50LWF0dHJpYnV0ZXMtZm9ybS9kYXRhcG9pbnQtYXR0cmlidXRlcy1mb3JtLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0QsT0FBTyxFQUdMLGFBQWEsRUFDYixpQkFBaUIsRUFHbEIsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsR0FBRyxFQUFFLElBQUksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzNDLE9BQU8sRUFBRSx3Q0FBd0MsRUFBRSxNQUFNLGdEQUFnRCxDQUFDO0FBQzFHLE9BQU8sRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQWtCaEcsTUFBTSxPQUFPLGdDQUFnQztJQXVCM0MsWUFBb0IsZUFBeUQ7UUFBekQsb0JBQWUsR0FBZixlQUFlLENBQTBDO1FBdEJwRSxlQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLGNBQVMsR0FBRyxJQUFJLENBQUM7UUFDakIsb0JBQWUsR0FBRyxJQUFJLENBQUM7UUFDdkIsaUJBQVksR0FBRyxJQUFJLENBQUM7UUFDcEIsY0FBUyxHQUFHLElBQUksQ0FBQztRQUNqQixrQ0FBNkIsR0FBRyxLQUFLLENBQUM7UUFNL0MsYUFBUSxHQUFRLEVBQUUsQ0FBQztRQUNuQix1QkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUN4QyxxQkFBZ0IsR0FBRyxnQkFBZ0IsQ0FBQztRQUNwQyxlQUFVLEdBQUcsVUFBVSxDQUFDO1FBRXhCLGtDQUE2QixHQUl6QixFQUFFLENBQUM7UUFHTCxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQyxl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InNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgZm9yd2FyZFJlZiwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEFic3RyYWN0Q29udHJvbCwgQ29udHJvbFZhbHVlQWNjZXNzb3IsXG4gIEZvcm1Hcm91cCxcbiAgTkdfVkFMSURBVE9SUyxcbiAgTkdfVkFMVUVfQUNDRVNTT1IsXG4gIFZhbGlkYXRpb25FcnJvcnMsXG4gIFZhbGlkYXRvclxufSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBtYXAsIHRha2UgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBEYXRhcG9pbnRBdHRyaWJ1dGVzRm9ybVZhbGlkYXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9kYXRhcG9pbnQtYXR0cmlidXRlcy1mb3JtLXZhbGlkYXRpb24uc2VydmljZSc7XG5pbXBvcnQgeyBBWElTX1RZUEVTLCBDSEFSVF9MSU5FX1RZUEVTLCBDSEFSVF9SRU5ERVJfVFlQRVMgfSBmcm9tICcuL2RhdGFwb2ludC1hdHRyaWJ1dGVzLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWRhdGFwb2ludC1hdHRyaWJ1dGVzLWZvcm0nLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0YXBvaW50LWF0dHJpYnV0ZXMtZm9ybS5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgdXNlRXhpc3Rpbmc6IGZvcndhcmRSZWYoKCkgPT4gRGF0YXBvaW50QXR0cmlidXRlc0Zvcm1Db21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEYXRhcG9pbnRBdHRyaWJ1dGVzRm9ybUNvbXBvbmVudCksXG4gICAgICBtdWx0aTogdHJ1ZVxuICAgIH1cbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBEYXRhcG9pbnRBdHRyaWJ1dGVzRm9ybUNvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBWYWxpZGF0b3Ige1xuICBASW5wdXQoKSBzaG93VGFyZ2V0ID0gdHJ1ZTtcbiAgQElucHV0KCkgc2hvd1JhbmdlID0gdHJ1ZTtcbiAgQElucHV0KCkgc2hvd1llbGxvd1JhbmdlID0gdHJ1ZTtcbiAgQElucHV0KCkgc2hvd1JlZFJhbmdlID0gdHJ1ZTtcbiAgQElucHV0KCkgc2hvd0NoYXJ0ID0gdHJ1ZTtcbiAgQElucHV0KCkgc2hvd0Zvcm1JZlRlbXBsYXRlV2FzU2VsZWN0ZWQgPSBmYWxzZTtcbiAgZm9ybUdyb3VwOiBGb3JtR3JvdXA7XG4gIHJhbmdlOiBGb3JtR3JvdXA7XG4gIHllbGxvd1JhbmdlOiBGb3JtR3JvdXA7XG4gIHJlZFJhbmdlOiBGb3JtR3JvdXA7XG4gIGNoYXJ0OiBGb3JtR3JvdXA7XG4gIHJhd1ZhbHVlOiBhbnkgPSB7fTtcbiAgQ0hBUlRfUkVOREVSX1RZUEVTID0gQ0hBUlRfUkVOREVSX1RZUEVTO1xuICBDSEFSVF9MSU5FX1RZUEVTID0gQ0hBUlRfTElORV9UWVBFUztcbiAgQVhJU19UWVBFUyA9IEFYSVNfVFlQRVM7XG5cbiAgY3VzdG9tVmFsaWRhdGlvbkVycm9yTWVzc2FnZXM6IHtcbiAgICBbZm9ybUZpZWxkOiBzdHJpbmddOiB7XG4gICAgICBbdmFsaWRhdGlvbkVycm9yOiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgfSA9IHt9O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZm9ybVZhbGlkYXRpb25zOiBEYXRhcG9pbnRBdHRyaWJ1dGVzRm9ybVZhbGlkYXRpb25TZXJ2aWNlKSB7XG4gICAgdGhpcy5mb3JtR3JvdXAgPSB0aGlzLmZvcm1WYWxpZGF0aW9ucy5nZXREZWZhdWx0Rm9ybUdyb3VwKCk7XG4gICAgdGhpcy5zZXRTdWJGb3JtcygpO1xuICB9XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybUdyb3VwPy52YWxpZCA/IG51bGwgOiB7IGZvcm1JbnZhbGlkOiB7fSB9O1xuICB9XG5cbiAgd3JpdGVWYWx1ZShvYmo6IGFueSk6IHZvaWQge1xuICAgIHRoaXMucmF3VmFsdWUgPSBvYmogfHwge307XG4gICAgaWYgKG9iaikge1xuICAgICAgdGhpcy5mb3JtR3JvdXAucGF0Y2hWYWx1ZSh0aGlzLmZvcm1WYWxpZGF0aW9ucy5jb252ZXJ0VG9Gb3JtR3JvdXBGb3JtYXQob2JqKSwge1xuICAgICAgICBlbWl0RXZlbnQ6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICByZWdpc3Rlck9uQ2hhbmdlKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmZvcm1Hcm91cC52YWx1ZUNoYW5nZXNcbiAgICAgIC5waXBlKFxuICAgICAgICBtYXAodGhpcy5mb3JtVmFsaWRhdGlvbnMuY29udmVydFRvQmFja2VuZEZvcm1hdCksXG4gICAgICAgIG1hcChmb3JtVmFsdWUgPT4gT2JqZWN0LmFzc2lnbih0aGlzLnJhd1ZhbHVlLCBmb3JtVmFsdWUpKVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShmbik7XG4gIH1cblxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KTogdm9pZCB7XG4gICAgdGhpcy5mb3JtR3JvdXAudmFsdWVDaGFuZ2VzLnBpcGUodGFrZSgxKSkuc3Vic2NyaWJlKGZuKTtcbiAgfVxuXG4gIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQge1xuICAgIGlzRGlzYWJsZWQgPyB0aGlzLmZvcm1Hcm91cC5kaXNhYmxlKCkgOiB0aGlzLmZvcm1Hcm91cC5lbmFibGUoKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0U3ViRm9ybXMoKSB7XG4gICAgaWYgKCF0aGlzLmZvcm1Hcm91cCkge1xuICAgICAgdGhpcy5yYW5nZSA9IHRoaXMueWVsbG93UmFuZ2UgPSB0aGlzLnJlZFJhbmdlID0gdGhpcy5jaGFydCA9IHVuZGVmaW5lZDtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdGhpcy5yYW5nZSA9IHRoaXMuZm9ybUdyb3VwLmdldCgncmFuZ2UnKSBhcyBGb3JtR3JvdXA7XG4gICAgdGhpcy55ZWxsb3dSYW5nZSA9IHRoaXMuZm9ybUdyb3VwLmdldCgneWVsbG93UmFuZ2UnKSBhcyBGb3JtR3JvdXA7XG4gICAgdGhpcy5yZWRSYW5nZSA9IHRoaXMuZm9ybUdyb3VwLmdldCgncmVkUmFuZ2UnKSBhcyBGb3JtR3JvdXA7XG4gICAgdGhpcy5jaGFydCA9IHRoaXMuZm9ybUdyb3VwLmdldCgnY2hhcnQnKSBhcyBGb3JtR3JvdXA7XG4gIH1cbn1cbiJdfQ==