import { Component, forwardRef, Input } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { map, take } from 'rxjs/operators';
import { DatapointAttributesFormValidationService } from './datapoint-attributes-form-validation.service';
import { AXIS_TYPES, CHART_LINE_TYPES, CHART_RENDER_TYPES } from './datapoint-attributes.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './datapoint-attributes-form-validation.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@c8y/ngx-components';
import * as ɵngcc5 from 'ngx-bootstrap/popover';

function DatapointAttributesFormComponent_div_0_fieldset_1_div_4_c8y_message_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    const item_r10 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r10.key)("text", item_r10.value);
} }
const _c0 = function () { return { example: "Temperature" }; };
function DatapointAttributesFormComponent_div_0_fieldset_1_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(2, "label", 7);
    ɵngcc0.ɵɵtext(3, "Label");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "input", 11);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(7, DatapointAttributesFormComponent_div_0_fieldset_1_div_4_c8y_message_7_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(8, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r6 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(5, 3, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(8, _c0)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ctx_r6.formGroup.controls.label.touched && ctx_r6.formGroup.controls.label.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 6, ctx_r6.customValidationErrorMessages["label"]));
} }
function DatapointAttributesFormComponent_div_0_fieldset_1_div_5_c8y_message_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    const item_r12 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r12.key)("text", item_r12.value);
} }
const _c1 = function () { return { example: "\u00BAC" }; };
function DatapointAttributesFormComponent_div_0_fieldset_1_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(2, "label", 7);
    ɵngcc0.ɵɵtext(3, "Unit");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "input", 15);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(7, DatapointAttributesFormComponent_div_0_fieldset_1_div_5_c8y_message_7_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(8, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(5, 3, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(8, _c1)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ctx_r7.formGroup.controls.unit.touched && ctx_r7.formGroup.controls.unit.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 6, ctx_r7.customValidationErrorMessages["unit"]));
} }
function DatapointAttributesFormComponent_div_0_fieldset_1_div_6_c8y_message_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    const item_r14 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r14.key)("text", item_r14.value);
} }
const _c2 = function (a0) { return { "has-error": a0 }; };
const _c3 = function () { return { example: 25 }; };
function DatapointAttributesFormComponent_div_0_fieldset_1_div_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(2, "label", 7);
    ɵngcc0.ɵɵtext(3, "Target");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "input", 17);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementStart(6, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(7, DatapointAttributesFormComponent_div_0_fieldset_1_div_6_c8y_message_7_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(8, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r8 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(9, _c2, ((ctx_r8.range == null ? null : ctx_r8.range.touched) || ctx_r8.formGroup.controls.target.touched) && (ctx_r8.formGroup.controls == null ? null : ctx_r8.formGroup.controls.target == null ? null : ctx_r8.formGroup.controls.target.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(5, 4, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(11, _c3)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r8.range == null ? null : ctx_r8.range.touched) || ctx_r8.formGroup.controls.target.touched) && ctx_r8.formGroup.controls.target.errors);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(8, 7, ctx_r8.customValidationErrorMessages["target"]));
} }
function DatapointAttributesFormComponent_div_0_fieldset_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 6);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Details");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵtemplate(4, DatapointAttributesFormComponent_div_0_fieldset_1_div_4_Template, 9, 9, "div", 9);
    ɵngcc0.ɵɵtemplate(5, DatapointAttributesFormComponent_div_0_fieldset_1_div_5_Template, 9, 9, "div", 9);
    ɵngcc0.ɵɵtemplate(6, DatapointAttributesFormComponent_div_0_fieldset_1_div_6_Template, 9, 12, "div", 9);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.label);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.unit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r1.formGroup.controls == null ? null : ctx_r1.formGroup.controls.target) && ctx_r1.showTarget);
} }
function DatapointAttributesFormComponent_div_0_fieldset_2_c8y_message_18_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "c8y-message", 14);
} if (rf & 2) {
    const item_r16 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("name", item_r16.key)("text", item_r16.value);
} }
const _c4 = function () { return { example: 0 }; };
const _c5 = function () { return { example: 100 }; };
function DatapointAttributesFormComponent_div_0_fieldset_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 6);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 18);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(6, "label", 7);
    ɵngcc0.ɵɵtext(7, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "input", 19);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(13, "label", 7);
    ɵngcc0.ɵɵtext(14, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "input", 20);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelementStart(17, "c8y-messages", 12);
    ɵngcc0.ɵɵtemplate(18, DatapointAttributesFormComponent_div_0_fieldset_2_c8y_message_18_Template, 1, 2, "c8y-message", 13);
    ɵngcc0.ɵɵpipe(19, "keyvalue");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c2, (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range == null ? null : ctx_r2.range.controls == null ? null : ctx_r2.range.controls.min == null ? null : ctx_r2.range.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(9, 7, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(17, _c4)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range.controls == null ? null : ctx_r2.range.controls.min == null ? null : ctx_r2.range.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(18, _c2, (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range == null ? null : ctx_r2.range.controls == null ? null : ctx_r2.range.controls.max == null ? null : ctx_r2.range.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(16, 10, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(20, _c5)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", (ctx_r2.range == null ? null : ctx_r2.range.touched) && (ctx_r2.range.controls == null ? null : ctx_r2.range.controls.max == null ? null : ctx_r2.range.controls.max.errors));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(19, 13, ctx_r2.customValidationErrorMessages["max"]));
} }
const _c6 = function () { return { example: 50 }; };
const _c7 = function () { return { example: 75 }; };
function DatapointAttributesFormComponent_div_0_fieldset_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 21);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Yellow range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(6, "label", 7);
    ɵngcc0.ɵɵtext(7, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "input", 19);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(13, "label", 7);
    ɵngcc0.ɵɵtext(14, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "input", 20);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelement(17, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c2, ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.min == null ? null : ctx_r3.yellowRange.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(9, 6, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(14, _c6)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.min == null ? null : ctx_r3.yellowRange.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c2, ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.max == null ? null : ctx_r3.yellowRange.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(16, 9, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(17, _c7)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r3.range == null ? null : ctx_r3.range.touched) || (ctx_r3.yellowRange == null ? null : ctx_r3.yellowRange.touched)) && (ctx_r3.yellowRange.controls == null ? null : ctx_r3.yellowRange.controls.max == null ? null : ctx_r3.yellowRange.controls.max.errors));
} }
function DatapointAttributesFormComponent_div_0_fieldset_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 22);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Red range");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 8);
    ɵngcc0.ɵɵelementStart(4, "div", 10);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(6, "label", 7);
    ɵngcc0.ɵɵtext(7, "Min");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(8, "input", 19);
    ɵngcc0.ɵɵpipe(9, "translate");
    ɵngcc0.ɵɵelement(10, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(11, "div", 10);
    ɵngcc0.ɵɵelementStart(12, "c8y-form-group", 16);
    ɵngcc0.ɵɵelementStart(13, "label", 7);
    ɵngcc0.ɵɵtext(14, "Max");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(15, "input", 20);
    ɵngcc0.ɵɵpipe(16, "translate");
    ɵngcc0.ɵɵelement(17, "c8y-messages", 12);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(12, _c2, ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange == null ? null : ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.min == null ? null : ctx_r4.redRange.controls.min.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(9, 6, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(14, _c7)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.min == null ? null : ctx_r4.redRange.controls.min.errors));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(15, _c2, ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange == null ? null : ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.max == null ? null : ctx_r4.redRange.controls.max.errors)));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("placeholder", ɵngcc0.ɵɵpipeBind2(16, 9, "e.g. {{ example }}", ɵngcc0.ɵɵpureFunction0(17, _c5)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("show", ((ctx_r4.range == null ? null : ctx_r4.range.touched) || (ctx_r4.redRange == null ? null : ctx_r4.redRange.touched)) && (ctx_r4.redRange.controls == null ? null : ctx_r4.redRange.controls.max == null ? null : ctx_r4.redRange.controls.max.errors));
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_option_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const type_r20 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", type_r20.val);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, type_r20.text), " ");
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_option_21_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const type_r21 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", type_r21.val);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, type_r21.text), " ");
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_option_29_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 36);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const type_r22 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", type_r22.val);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(2, 2, type_r22.text), " ");
} }
function DatapointAttributesFormComponent_div_0_fieldset_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "fieldset", 23);
    ɵngcc0.ɵɵelementStart(1, "legend", 7);
    ɵngcc0.ɵɵtext(2, "Chart");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 24);
    ɵngcc0.ɵɵelementStart(4, "div", 25);
    ɵngcc0.ɵɵelementStart(5, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(6, "label", 26);
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementStart(9, "button", 27);
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelement(11, "i", 28);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(12, "div", 29);
    ɵngcc0.ɵɵelementStart(13, "select", 30);
    ɵngcc0.ɵɵtemplate(14, DatapointAttributesFormComponent_div_0_fieldset_5_option_14_Template, 3, 4, "option", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(15, "div", 25);
    ɵngcc0.ɵɵelementStart(16, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(17, "label", 32);
    ɵngcc0.ɵɵtext(18, "Chart type");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(19, "div", 29);
    ɵngcc0.ɵɵelementStart(20, "select", 33);
    ɵngcc0.ɵɵtemplate(21, DatapointAttributesFormComponent_div_0_fieldset_5_option_21_Template, 3, 4, "option", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(22, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(23, "div", 25);
    ɵngcc0.ɵɵelementStart(24, "c8y-form-group");
    ɵngcc0.ɵɵelementStart(25, "label", 34);
    ɵngcc0.ɵɵtext(26, "Y Axis");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(27, "div", 29);
    ɵngcc0.ɵɵelementStart(28, "select", 35);
    ɵngcc0.ɵɵtemplate(29, DatapointAttributesFormComponent_div_0_fieldset_5_option_29_Template, 3, 4, "option", 31);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(30, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r5 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(8, 8, "Display"), " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(10, 10, "Value displayed when data is aggregated"));
    ɵngcc0.ɵɵproperty("placement", "right")("triggers", "focus")("container", "body");
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.CHART_RENDER_TYPES);
    ɵngcc0.ɵɵadvance(7);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.CHART_LINE_TYPES);
    ɵngcc0.ɵɵadvance(8);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r5.AXIS_TYPES);
} }
function DatapointAttributesFormComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 1);
    ɵngcc0.ɵɵtemplate(1, DatapointAttributesFormComponent_div_0_fieldset_1_Template, 7, 3, "fieldset", 2);
    ɵngcc0.ɵɵtemplate(2, DatapointAttributesFormComponent_div_0_fieldset_2_Template, 20, 21, "fieldset", 2);
    ɵngcc0.ɵɵtemplate(3, DatapointAttributesFormComponent_div_0_fieldset_3_Template, 18, 18, "fieldset", 3);
    ɵngcc0.ɵɵtemplate(4, DatapointAttributesFormComponent_div_0_fieldset_4_Template, 18, 18, "fieldset", 4);
    ɵngcc0.ɵɵtemplate(5, DatapointAttributesFormComponent_div_0_fieldset_5_Template, 31, 12, "fieldset", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("formGroup", ctx_r0.formGroup);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", (ctx_r0.formGroup.controls == null ? null : ctx_r0.formGroup.controls.label) || (ctx_r0.formGroup.controls == null ? null : ctx_r0.formGroup.controls.unit) || (ctx_r0.formGroup.controls == null ? null : ctx_r0.formGroup.controls.target));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.range && ctx_r0.showRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.yellowRange && ctx_r0.showYellowRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.redRange && ctx_r0.showRedRange);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.chart && ctx_r0.showChart);
} }
export class DatapointAttributesFormComponent {
    constructor(formValidations) {
        this.formValidations = formValidations;
        this.showTarget = true;
        this.showRange = true;
        this.showYellowRange = true;
        this.showRedRange = true;
        this.showChart = true;
        this.showFormIfTemplateWasSelected = false;
        this.rawValue = {};
        this.CHART_RENDER_TYPES = CHART_RENDER_TYPES;
        this.CHART_LINE_TYPES = CHART_LINE_TYPES;
        this.AXIS_TYPES = AXIS_TYPES;
        this.customValidationErrorMessages = {};
        this.formGroup = this.formValidations.getDefaultFormGroup();
        this.setSubForms();
    }
    validate(control) {
        var _a;
        return ((_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.valid) ? null : { formInvalid: {} };
    }
    writeValue(obj) {
        this.rawValue = obj || {};
        if (obj) {
            this.formGroup.patchValue(this.formValidations.convertToFormGroupFormat(obj), {
                emitEvent: false
            });
        }
    }
    registerOnChange(fn) {
        this.formGroup.valueChanges
            .pipe(map(this.formValidations.convertToBackendFormat), map(formValue => Object.assign(this.rawValue, formValue)))
            .subscribe(fn);
    }
    registerOnTouched(fn) {
        this.formGroup.valueChanges.pipe(take(1)).subscribe(fn);
    }
    setDisabledState(isDisabled) {
        isDisabled ? this.formGroup.disable() : this.formGroup.enable();
    }
    setSubForms() {
        if (!this.formGroup) {
            this.range = this.yellowRange = this.redRange = this.chart = undefined;
            return;
        }
        this.range = this.formGroup.get('range');
        this.yellowRange = this.formGroup.get('yellowRange');
        this.redRange = this.formGroup.get('redRange');
        this.chart = this.formGroup.get('chart');
    }
}
DatapointAttributesFormComponent.ɵfac = function DatapointAttributesFormComponent_Factory(t) { return new (t || DatapointAttributesFormComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DatapointAttributesFormValidationService)); };
DatapointAttributesFormComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointAttributesFormComponent, selectors: [["c8y-datapoint-attributes-form"]], inputs: { showTarget: "showTarget", showRange: "showRange", showYellowRange: "showYellowRange", showRedRange: "showRedRange", showChart: "showChart", showFormIfTemplateWasSelected: "showFormIfTemplateWasSelected" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: forwardRef(() => DatapointAttributesFormComponent),
                multi: true
            },
            {
                provide: NG_VALIDATORS,
                useExisting: forwardRef(() => DatapointAttributesFormComponent),
                multi: true
            }
        ])], decls: 1, vars: 1, consts: [[3, "formGroup", 4, "ngIf"], [3, "formGroup"], ["class", "c8y-fieldset", 4, "ngIf"], ["class", "c8y-fieldset", "formGroupName", "yellowRange", 4, "ngIf"], ["class", "c8y-fieldset", "formGroupName", "redRange", 4, "ngIf"], ["class", "c8y-fieldset", "formGroupName", "chart", 4, "ngIf"], [1, "c8y-fieldset"], ["translate", ""], [1, "row"], ["class", "col-md-6", 4, "ngIf"], [1, "col-md-6"], ["name", "label", "formControlName", "label", 1, "form-control", 3, "placeholder"], [3, "show"], [3, "name", "text", 4, "ngFor", "ngForOf"], [3, "name", "text"], ["name", "unit", "formControlName", "unit", 1, "form-control", 3, "placeholder"], [3, "ngClass"], ["type", "number", "name", "target", "formControlName", "target", 1, "form-control", 3, "placeholder"], ["formGroupName", "range", 1, "row"], ["type", "number", "name", "min", "formControlName", "min", 1, "form-control", 3, "placeholder"], ["type", "number", "name", "max", "formControlName", "max", 1, "form-control", 3, "placeholder"], ["formGroupName", "yellowRange", 1, "c8y-fieldset"], ["formGroupName", "redRange", 1, "c8y-fieldset"], ["formGroupName", "chart", 1, "c8y-fieldset"], [1, "tight-grid"], [1, "col-xs-6", "col-sm-4"], ["for", "display"], [1, "btn-clean", "text-info", 3, "popover", "placement", "triggers", "container"], ["c8yIcon", "question-circle-o"], [1, "c8y-select-wrapper"], ["formControlName", "renderType", 1, "form-control"], [3, "ngValue", 4, "ngFor", "ngForOf"], ["for", "chartType", "translate", ""], ["formControlName", "lineType", 1, "form-control"], ["for", "yAxis", "translate", ""], ["formControlName", "yAxisType", 1, "form-control"], [3, "ngValue"]], template: function DatapointAttributesFormComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, DatapointAttributesFormComponent_div_0_Template, 6, 6, "div", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.rawValue == null ? null : ctx.rawValue.__template) || ctx.showFormIfTemplateWasSelected);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc4.C8yTranslateDirective, ɵngcc4.FormGroupComponent, ɵngcc3.DefaultValueAccessor, ɵngcc4.RequiredInputPlaceholderDirective, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc4.MessagesComponent, ɵngcc2.NgForOf, ɵngcc4.MessageDirective, ɵngcc2.NgClass, ɵngcc3.NumberValueAccessor, ɵngcc3.FormGroupName, ɵngcc5.PopoverDirective, ɵngcc4.IconDirective, ɵngcc3.SelectControlValueAccessor, ɵngcc3.NgSelectOption, ɵngcc3.ɵNgSelectMultipleOption], pipes: [ɵngcc4.C8yTranslatePipe, ɵngcc2.KeyValuePipe], encapsulation: 2 });
DatapointAttributesFormComponent.ctorParameters = () => [
    { type: DatapointAttributesFormValidationService }
];
DatapointAttributesFormComponent.propDecorators = {
    showTarget: [{ type: Input }],
    showRange: [{ type: Input }],
    showYellowRange: [{ type: Input }],
    showRedRange: [{ type: Input }],
    showChart: [{ type: Input }],
    showFormIfTemplateWasSelected: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointAttributesFormComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-datapoint-attributes-form',
                template: "<div [formGroup]=\"formGroup\" *ngIf=\"!rawValue?.__template || showFormIfTemplateWasSelected\">\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"formGroup.controls?.label || formGroup.controls?.unit || formGroup.controls?.target\">\n    <legend translate>Details</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.label\">\n        <c8y-form-group>\n          <label translate>Label</label>\n          <input\n            class=\"form-control\"\n            name=\"label\"\n            formControlName=\"label\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'Temperature' }\"\n          />\n          <c8y-messages [show]=\"formGroup.controls.label.touched && formGroup.controls.label.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['label'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.unit\">\n        <c8y-form-group>\n          <label translate>Unit</label>\n          <input\n            class=\"form-control\"\n            name=\"unit\"\n            formControlName=\"unit\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: '\u00BAC' }\"\n          />\n          <c8y-messages [show]=\"formGroup.controls.unit.touched && formGroup.controls.unit.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['unit'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\" *ngIf=\"formGroup.controls?.target && showTarget\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || formGroup.controls.target.touched) &&\n              formGroup.controls?.target?.errors\n          }\"\n        >\n          <label translate>Target</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"target\"\n            formControlName=\"target\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 25 }\"\n          />\n          <c8y-messages\n            [show]=\"\n              (range?.touched || formGroup.controls.target.touched) &&\n              formGroup.controls.target.errors\n            \"\n          >\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['target'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"range && showRange\">\n    <legend translate>Range</legend>\n    <div class=\"row\" formGroupName=\"range\">\n      <div class=\"col-md-6\">\n        <c8y-form-group [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.min?.errors }\">\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 0 }\"\n          />\n          <c8y-messages [show]=\"range?.touched && range.controls?.min?.errors\"> </c8y-messages>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-md-6\">\n        <c8y-form-group [ngClass]=\"{ 'has-error': range?.touched && range?.controls?.max?.errors }\">\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n          />\n          <c8y-messages [show]=\"range?.touched && range.controls?.max?.errors\">\n            <c8y-message\n              *ngFor=\"let item of customValidationErrorMessages['max'] | keyvalue\"\n              [name]=\"item.key\"\n              [text]=\"item.value\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" formGroupName=\"yellowRange\" *ngIf=\"yellowRange && showYellowRange\">\n    <legend translate>Yellow range</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || yellowRange?.touched) && yellowRange?.controls?.min?.errors\n          }\"\n        >\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 50 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.min?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error':\n              (range?.touched || yellowRange?.touched) && yellowRange?.controls?.max?.errors\n          }\"\n        >\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || yellowRange?.touched) && yellowRange.controls?.max?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" formGroupName=\"redRange\" *ngIf=\"redRange && showRedRange\">\n    <legend translate>Red range</legend>\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error': (range?.touched || redRange?.touched) && redRange?.controls?.min?.errors\n          }\"\n        >\n          <label translate>Min</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"min\"\n            formControlName=\"min\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 75 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.min?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n\n      <div class=\"col-md-6\">\n        <c8y-form-group\n          [ngClass]=\"{\n            'has-error': (range?.touched || redRange?.touched) && redRange?.controls?.max?.errors\n          }\"\n        >\n          <label translate>Max</label>\n          <input\n            type=\"number\"\n            class=\"form-control\"\n            name=\"max\"\n            formControlName=\"max\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 100 }\"\n          />\n          <c8y-messages\n            [show]=\"(range?.touched || redRange?.touched) && redRange.controls?.max?.errors\"\n          >\n          </c8y-messages>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n\n  <fieldset class=\"c8y-fieldset\" *ngIf=\"chart && showChart\" formGroupName=\"chart\">\n    <legend translate>Chart</legend>\n    <div class=\"tight-grid\">\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"display\">\n            {{ 'Display' | translate }}\n            <button\n              class=\"btn-clean text-info\"\n              popover=\"{{ 'Value displayed when data is aggregated' | translate }}\"\n              [placement]=\"'right'\"\n              [triggers]=\"'focus'\"\n              [container]=\"'body'\"\n            >\n              <i c8yIcon=\"question-circle-o\"></i>\n            </button>\n          </label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"renderType\">\n              <option *ngFor=\"let type of CHART_RENDER_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"chartType\" translate>Chart type</label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"lineType\">\n              <option *ngFor=\"let type of CHART_LINE_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n            <span></span>\n          </div>\n        </c8y-form-group>\n      </div>\n      <div class=\"col-xs-6 col-sm-4\">\n        <c8y-form-group>\n          <label for=\"yAxis\" translate>Y Axis</label>\n          <div class=\"c8y-select-wrapper\">\n            <select class=\"form-control\" formControlName=\"yAxisType\">\n              <option *ngFor=\"let type of AXIS_TYPES\" [ngValue]=\"type.val\">\n                {{ type.text | translate }}\n              </option>\n            </select>\n            <span></span>\n          </div>\n        </c8y-form-group>\n      </div>\n    </div>\n  </fieldset>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => DatapointAttributesFormComponent),
                        multi: true
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => DatapointAttributesFormComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.DatapointAttributesFormValidationService }]; }, { showTarget: [{
            type: Input
        }], showRange: [{
            type: Input
        }], showYellowRange: [{
            type: Input
        }], showRedRange: [{
            type: Input
        }], showChart: [{
            type: Input
        }], showFormIfTemplateWasSelected: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,