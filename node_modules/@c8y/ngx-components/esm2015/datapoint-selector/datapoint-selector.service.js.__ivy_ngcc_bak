import { Injectable } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { DatapointSelectorModalComponent } from './datapoint-selector-modal/datapoint-selector-modal.component';
import * as i0 from "@angular/core";
import * as i1 from "ngx-bootstrap/modal";
export class DatapointSelectorService {
    constructor(modal) {
        this.modal = modal;
    }
    selectDataPoints(initialState = {}) {
        const modal = this.modal.show(DatapointSelectorModalComponent, {
            ignoreBackdropClick: true,
            keyboard: false,
            initialState,
            class: 'modal-lg'
        });
        const content = modal.content;
        return content.result;
    }
}
DatapointSelectorService.ɵprov = i0.ɵɵdefineInjectable({ factory: function DatapointSelectorService_Factory() { return new DatapointSelectorService(i0.ɵɵinject(i1.BsModalService)); }, token: DatapointSelectorService, providedIn: "root" });
DatapointSelectorService.decorators = [
    { type: Injectable, args: [{ providedIn: 'root' },] }
];
DatapointSelectorService.ctorParameters = () => [
    { type: BsModalService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LXNlbGVjdG9yLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9kYXRhcG9pbnQtc2VsZWN0b3IvZGF0YXBvaW50LXNlbGVjdG9yLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFckQsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sK0RBQStELENBQUM7OztBQUdoSCxNQUFNLE9BQU8sd0JBQXdCO0lBQ25DLFlBQXNCLEtBQXFCO1FBQXJCLFVBQUssR0FBTCxLQUFLLENBQWdCO0lBQUcsQ0FBQztJQUUvQyxnQkFBZ0IsQ0FDZCxlQUF1RCxFQUFFO1FBRXpELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLCtCQUErQixFQUFFO1lBQzdELG1CQUFtQixFQUFFLElBQUk7WUFDekIsUUFBUSxFQUFFLEtBQUs7WUFDZixZQUFZO1lBQ1osS0FBSyxFQUFFLFVBQVU7U0FDbEIsQ0FBQyxDQUFDO1FBQ0gsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLE9BQTBDLENBQUM7UUFDakUsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDO0lBQ3hCLENBQUM7Ozs7WUFmRixVQUFVLFNBQUMsRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFOzs7WUFKekIsY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9tb2RhbCc7XG5pbXBvcnQgeyBEYXRhcG9pbnRTZWxlY3Rvck1vZGFsT3B0aW9ucywgS1BJRGV0YWlscyB9IGZyb20gJy4vZGF0YXBvaW50LXNlbGVjdGlvbi5tb2RlbCc7XG5pbXBvcnQgeyBEYXRhcG9pbnRTZWxlY3Rvck1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRhcG9pbnQtc2VsZWN0b3ItbW9kYWwvZGF0YXBvaW50LXNlbGVjdG9yLW1vZGFsLmNvbXBvbmVudCc7XG5cbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXG5leHBvcnQgY2xhc3MgRGF0YXBvaW50U2VsZWN0b3JTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIG1vZGFsOiBCc01vZGFsU2VydmljZSkge31cblxuICBzZWxlY3REYXRhUG9pbnRzKFxuICAgIGluaXRpYWxTdGF0ZTogUGFydGlhbDxEYXRhcG9pbnRTZWxlY3Rvck1vZGFsT3B0aW9ucz4gPSB7fVxuICApOiBQcm9taXNlPEtQSURldGFpbHNbXT4ge1xuICAgIGNvbnN0IG1vZGFsID0gdGhpcy5tb2RhbC5zaG93KERhdGFwb2ludFNlbGVjdG9yTW9kYWxDb21wb25lbnQsIHtcbiAgICAgIGlnbm9yZUJhY2tkcm9wQ2xpY2s6IHRydWUsXG4gICAgICBrZXlib2FyZDogZmFsc2UsXG4gICAgICBpbml0aWFsU3RhdGUsXG4gICAgICBjbGFzczogJ21vZGFsLWxnJ1xuICAgIH0pO1xuICAgIGNvbnN0IGNvbnRlbnQgPSBtb2RhbC5jb250ZW50IGFzIERhdGFwb2ludFNlbGVjdG9yTW9kYWxDb21wb25lbnQ7XG4gICAgcmV0dXJuIGNvbnRlbnQucmVzdWx0O1xuICB9XG59XG4iXX0=