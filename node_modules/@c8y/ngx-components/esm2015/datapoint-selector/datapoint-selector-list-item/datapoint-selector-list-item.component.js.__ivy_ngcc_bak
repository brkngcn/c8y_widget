import { Component, ContentChild, EventEmitter, forwardRef, Input, Output } from '@angular/core';
import { FormBuilder, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { pipe } from 'rxjs';
import { map, startWith, take } from 'rxjs/operators';
import { ListItemDragHandleComponent } from '@c8y/ngx-components';
import { DATAPOINT_LIBRARY_FRAGMENT } from '../datapoint-selection.model';
export class DatapointSelectorListItemComponent {
    constructor(formBuilder) {
        this.formBuilder = formBuilder;
        this.defaultFormOptions = {};
        this.isSelected = false;
        this.isCollapsed = true;
        this.showAddRemoveButton = true;
        this.editable = true;
        this.showActiveToggle = false;
        this.activeToggleDisabled = false;
        this.showOptions = false;
        this.actions = [];
        this.optionToRemove = false;
        this.hasUnlinkTemplateOption = false;
        this.added = new EventEmitter();
        this.removed = new EventEmitter();
        this.colorPickerDisabled = true;
        this.disableTypeaheadIfSelected = false;
        this.pattern = '';
        this.formGroup = this.formBuilder.group({
            details: [],
            color: [],
            __active: [],
            __target: [],
            fragment: [],
            series: [],
            __template: []
        });
        this.isValid$ = this.formGroup.statusChanges.pipe(map((status) => status === 'VALID'), startWith(this.formGroup.valid));
    }
    validate(control) {
        var _a;
        return ((_a = this.formGroup) === null || _a === void 0 ? void 0 : _a.valid) ? null : { formInvalid: {} };
    }
    writeValue(obj) {
        this.formGroup.patchValue(Object.assign(Object.assign({}, obj), { details: obj }));
    }
    registerOnChange(fn) {
        this.formGroup.valueChanges.pipe(map(tmp => this.transformFormValue(tmp))).subscribe(fn);
    }
    registerOnTouched(fn) {
        this.formGroup.valueChanges.pipe(take(1)).subscribe(fn);
    }
    setDisabledState(isDisabled) {
        isDisabled ? this.formGroup.disable() : this.formGroup.enable();
    }
    collapse() {
        this.isCollapsed = !this.isCollapsed;
    }
    addOrRemoveItem() {
        const value = this.transformFormValue(this.formGroup.value);
        if (this.isSelected) {
            this.removed.emit(value);
        }
        else {
            this.added.emit(value);
        }
    }
    remove(dp) {
        this.removed.emit(this.transformFormValue(this.formGroup.value));
    }
    setPipe(filterStr) {
        this.pattern = filterStr;
        this.filterPipe = pipe(map((data) => {
            return this.filterDatapointLabel(data, filterStr);
        }));
    }
    unlinkDatapointTemplate() {
        const details = this.formGroup.value.details || {};
        this.resetUnusedProperties(details);
        this.formGroup.patchValue({ __template: undefined, details });
    }
    dataPointTemplateSelected(template) {
        const attributesToAssign = [
            'color',
            'label',
            'min',
            'max',
            'yellowRangeMax',
            'yellowRangeMin',
            'redRangeMax',
            'redRangeMin',
            'target',
            'orientation',
            'unit'
        ];
        const { fragment, series, __target, __active } = this.formGroup.value;
        const dataPoint = {
            fragment,
            series,
            __active,
            __target,
            __template: template.id
        };
        for (const attribute of attributesToAssign) {
            const value = template[DATAPOINT_LIBRARY_FRAGMENT][attribute];
            dataPoint[attribute] = value;
        }
        this.writeValue(dataPoint);
        this.setPipe('');
    }
    resetUnusedProperties(details) {
        const { showTarget, showYellowRange, showRedRange } = this.defaultFormOptions;
        details.__template = undefined;
        if (!showTarget) {
            details.target = undefined;
        }
        if (!showYellowRange) {
            details.yellowRangeMin = undefined;
            details.yellowRangeMax = undefined;
        }
        if (!showRedRange) {
            details.redRangeMin = undefined;
            details.redRangeMax = undefined;
        }
    }
    filterDatapointLabel(kpis, filterStr) {
        return kpis.filter((mo) => mo[DATAPOINT_LIBRARY_FRAGMENT] &&
            mo[DATAPOINT_LIBRARY_FRAGMENT].label &&
            typeof mo[DATAPOINT_LIBRARY_FRAGMENT].label === 'string' &&
            mo[DATAPOINT_LIBRARY_FRAGMENT].label.toLowerCase().indexOf(filterStr.toLowerCase()) > -1);
    }
    transformFormValue(formValue) {
        const obj = Object.assign({}, formValue.details || {}, formValue);
        delete obj.details;
        return obj;
    }
}
DatapointSelectorListItemComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-datapoint-selector-list-item',
                template: "<c8y-li class=\"c8y-list__item__collapse--container-small\" [formGroup]=\"formGroup\" #li>\n  <c8y-li-drag-handle><ng-content select=\"c8y-li-drag-handle\"></ng-content></c8y-li-drag-handle>\n  <c8y-li-icon *ngIf=\"showAddRemoveButton\" class=\"a-s-center p-r-4\">\n    <button\n      *ngIf=\"isSelected\"\n      class=\"btn btn-clean text-primary\"\n      (click)=\"addOrRemoveItem()\"\n      [title]=\"'Remove' | translate\"\n    >\n      <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n    </button>\n    <button\n      *ngIf=\"!isSelected\"\n      class=\"btn btn-clean text-primary\"\n      (click)=\"addOrRemoveItem()\"\n      [title]=\"'Select' | translate\"\n    >\n      <i c8yIcon=\"plus-circle\" class=\"text-primary\"></i>\n    </button>\n  </c8y-li-icon>\n\n  <c8y-li-checkbox\n    *ngIf=\"showActiveToggle\"\n    [displayAsSwitch]=\"true\"\n    formControlName=\"__active\"\n    (click)=\"$event.stopPropagation()\"\n    class=\"a-s-center p-r-0\"\n  ></c8y-li-checkbox>\n\n  <div class=\"d-flex a-i-center p-l-4\">\n    <div class=\"c8y-list__item__colorpicker p-t-0 p-b-0 p-l-0\" [title]=\"'Change color' | translate\">\n      <div class=\"c8y-colorpicker\">\n        <input type=\"color\" formControlName=\"color\" (click)=\"$event.stopPropagation()\" />\n        <span [style.background-color]=\"formGroup.value.color\"></span>\n      </div>\n    </div>\n    <button\n      class=\"btn-clean data-point-label text-truncate\"\n      [title]=\"formGroup.value.details?.label\"\n      (click)=\"li.collapsed = !li.collapsed\"\n    >\n      <span class=\"text-truncate\">\n        <c8y-highlight\n          [text]=\"formGroup.value.details?.label\"\n          [pattern]=\"highlightText\"\n          [shouldTrimPattern]=\"true\"\n        ></c8y-highlight>\n      </span>\n      <small class=\"text-truncate text-muted icon-flex\" *ngIf=\"formGroup.value.__target\">\n        <i c8yIcon=\"exchange\"></i>\n        <span class=\"text-truncate\">{{ formGroup.value.__target.name }}</span>\n      </small>\n    </button>\n\n    <button\n      class=\"btn-clean m-l-auto\"\n      *ngIf=\"!(isValid$ | async)\"\n      [popover]=\"'Some entries are invalid. Check the input fields with red borders.' | translate\"\n      container=\"body\"\n      [outsideClick]=\"true\"\n    >\n      <i class=\"text-danger\" c8yIcon=\"warning\"></i>\n    </button>\n  </div>\n\n  <c8y-li-action\n    *ngIf=\"optionToRemove\"\n    [icon]=\"'minus-circle'\"\n    [label]=\"'Remove from list' | translate\"\n    (click)=\"remove(formGroup.value)\"\n  ></c8y-li-action>\n  <c8y-li-action\n    *ngFor=\"let action of actions\"\n    [icon]=\"action.icon\"\n    [label]=\"action.label\"\n    (click)=\"action.callback(formGroup.value)\"\n  ></c8y-li-action>\n  <c8y-li-collapse>\n    <div class=\"data-point-details\">\n      <ul class=\"list-unstyled small m-b-16\">\n        <li class=\"p-t-4 p-b-4 flex-row separator-top-bottom\">\n          <label class=\"small m-b-0 m-r-8 flex-item-v-start text-muted\" translate>Fragment</label>\n          <span class=\"flex-item-right\">\n            <c8y-highlight\n              [text]=\"formGroup.value.fragment\"\n              [pattern]=\"highlightText\"\n              [shouldTrimPattern]=\"true\"\n            ></c8y-highlight>\n          </span>\n        </li>\n        <li class=\"p-t-4 p-b-4 flex-row separator-bottom\">\n          <label class=\"small m-b-0 m-r-8 flex-item-v-start text-muted\" translate>Series</label>\n          <span class=\"flex-item-right\">\n            <c8y-highlight\n              [text]=\"formGroup.value.series\"\n              [pattern]=\"highlightText\"\n              [shouldTrimPattern]=\"true\"\n            ></c8y-highlight>\n          </span>\n        </li>\n      </ul>\n      <div\n        class=\"form-group\"\n        *ngIf=\"datapointLibraryEntries && datapointLibraryEntries | async as libraryEntries\"\n      >\n        <label class=\"d-inline-block\" translate>Data point template</label>\n        <button\n          class=\"btn btn-clean\"\n          [popover]=\"datapointHintPopoverTemplate\"\n          (click)=\"$event.stopPropagation()\"\n          container=\"body\"\n          [outsideClick]=\"true\"\n        >\n          <i [c8yIcon]=\"'question-circle-o'\" class=\"m-l-4 text-info\"></i>\n        </button>\n\n        <ng-template #datapointHintPopoverTemplate>\n          {{\n            'Using a data point template sets color, label, unit and ranges. Removing the template allows you to set the values manually.'\n              | translate\n          }}\n        </ng-template>\n        <div class=\"d-flex\">\n          <c8y-typeahead\n            [placeholder]=\"'No template' | translate\"\n            [ngModel]=\"formGroup.value.__template ? formGroup.value.details : undefined\"\n            [ngModelOptions]=\"{ standalone: true }\"\n            (onSearch)=\"setPipe($event)\"\n            [displayProperty]=\"'label'\"\n            [hideNew]=\"true\"\n            *ngIf=\"datapointLibraryEntries\"\n            [disabled]=\"isSelected && disableTypeaheadIfSelected\"\n            class=\"flex-grow\"\n          >\n            <c8y-li\n              *c8yFor=\"\n                let item of datapointLibraryEntries;\n                loadMore: 'auto';\n                pipe: filterPipe;\n                notFound: notFoundTemplate\n              \"\n              class=\"p-l-8 p-r-8 c8y-list__item--link interact\"\n              (click)=\"dataPointTemplateSelected(item)\"\n              [active]=\"formGroup.value.__template === item.id\"\n            >\n              <c8y-highlight [text]=\"item.c8y_Kpi?.label\" [pattern]=\"pattern\"></c8y-highlight>\n              <c8y-li-icon icon=\"circle\" [style.color]=\"item.c8y_Kpi?.color\"></c8y-li-icon>\n            </c8y-li>\n            <ng-template #notFoundTemplate>\n              <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0\">\n                <span>No match found.</span>\n              </c8y-li>\n            </ng-template>\n          </c8y-typeahead>\n          <button\n            *ngIf=\"formGroup.value.__template\"\n            class=\"btn btn-info btn-xs btn-icon a-s-center m-l-8\"\n            [popover]=\"datapointOverviewPopoverTemplate\"\n            placement=\"left\"\n            container=\"body\"\n            [outsideClick]=\"true\"\n            [title]=\"'Info' | translate\"\n          >\n            <i c8yIcon=\"info\" class=\"text-info\"></i>\n          </button>\n          <button\n            *ngIf=\"formGroup.value.__template && hasUnlinkTemplateOption\"\n            class=\"btn btn-danger btn-xs btn-icon a-s-center m-l-8\"\n            (click)=\"unlinkDatapointTemplate()\"\n            [title]=\"'Unlink data point template' | translate\"\n          >\n            <i c8yIcon=\"unlink\"></i>\n          </button>\n        </div>\n      </div>\n      <ng-template #datapointOverviewPopoverTemplate>\n        <c8y-datapoint-template-popover\n          [datapoint]=\"formGroup.value.details\"\n        ></c8y-datapoint-template-popover>\n      </ng-template>\n      <c8y-datapoint-attributes-form\n        *ngIf=\"defaultFormOptions\"\n        [showTarget]=\"defaultFormOptions.showTarget\"\n        [showRange]=\"defaultFormOptions.showRange\"\n        [showYellowRange]=\"defaultFormOptions.showYellowRange\"\n        [showRedRange]=\"defaultFormOptions.showRedRange\"\n        [showChart]=\"defaultFormOptions.showChart\"\n        [showFormIfTemplateWasSelected]=\"defaultFormOptions.showFormIfTemplateWasSelected\"\n        formControlName=\"details\"\n      ></c8y-datapoint-attributes-form>\n    </div>\n  </c8y-li-collapse>\n</c8y-li>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: forwardRef(() => DatapointSelectorListItemComponent),
                        multi: true
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => DatapointSelectorListItemComponent),
                        multi: true
                    }
                ]
            },] }
];
DatapointSelectorListItemComponent.ctorParameters = () => [
    { type: FormBuilder }
];
DatapointSelectorListItemComponent.propDecorators = {
    defaultFormOptions: [{ type: Input }],
    isSelected: [{ type: Input }],
    isCollapsed: [{ type: Input }],
    showAddRemoveButton: [{ type: Input }],
    editable: [{ type: Input }],
    showActiveToggle: [{ type: Input }],
    activeToggleDisabled: [{ type: Input }],
    showOptions: [{ type: Input }],
    datapointLibraryEntries: [{ type: Input }],
    actions: [{ type: Input }],
    optionToRemove: [{ type: Input }],
    hasUnlinkTemplateOption: [{ type: Input }],
    added: [{ type: Output }],
    removed: [{ type: Output }],
    colorPickerDisabled: [{ type: Input }],
    disableTypeaheadIfSelected: [{ type: Input }],
    highlightText: [{ type: Input }],
    dragHandle: [{ type: ContentChild, args: [ListItemDragHandleComponent,] }]
};
//# sourceMappingURL=data:application/json;base64,