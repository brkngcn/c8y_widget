import { moveItemInArray } from '@angular/cdk/drag-drop';
import { Component, forwardRef, Input, Optional, Output } from '@angular/core';
import { FormBuilder, NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { C8yValidators } from '@c8y/ngx-components';
import { WidgetConfigComponent } from '@c8y/ngx-components/context-dashboard';
import { from } from 'rxjs';
import { map, shareReplay, take, tap } from 'rxjs/operators';
import { DatapointLibraryService } from '../datapoint-library.service';
import { DatapointSelectorService } from '../datapoint-selector.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../datapoint-selector.service';
import * as ɵngcc2 from '../datapoint-library.service';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@c8y/ngx-components/context-dashboard';
import * as ɵngcc5 from '@c8y/ngx-components';
import * as ɵngcc6 from '@angular/cdk/drag-drop';
import * as ɵngcc7 from '@angular/common';
import * as ɵngcc8 from '../datapoint-selector-list-item/datapoint-selector-list-item.component';

function DatapointSelectionListComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " At least {{ minActive }} active data points must be selected. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("translateParams", ctx_r0.formArray.errors == null ? null : ctx_r0.formArray.errors.minActiveCount);
} }
function DatapointSelectionListComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " At maximum {{ maxActive }} active data points are allowed to be selected. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("translateParams", ctx_r1.formArray.errors == null ? null : ctx_r1.formArray.errors.maxActiveCount);
} }
function DatapointSelectionListComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 11);
    ɵngcc0.ɵɵelement(1, "h1", 12);
    ɵngcc0.ɵɵelementStart(2, "div");
    ɵngcc0.ɵɵelementStart(3, "p");
    ɵngcc0.ɵɵelementStart(4, "strong", 9);
    ɵngcc0.ɵɵtext(5, "No data points to display.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "small", 9);
    ɵngcc0.ɵɵtext(7, "Add your first data point.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DatapointSelectionListComponent_div_8_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "c8y-datapoint-selector-list-item", 14);
    ɵngcc0.ɵɵlistener("removed", function DatapointSelectionListComponent_div_8_Template_c8y_datapoint_selector_list_item_removed_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const index_r5 = restoredCtx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.onItemRemoved(index_r5); });
    ɵngcc0.ɵɵelementStart(2, "c8y-li-drag-handle", 15);
    ɵngcc0.ɵɵelement(3, "i", 16);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const dpForm_r4 = ctx.$implicit;
    const ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("formGroup", dpForm_r4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("defaultFormOptions", ctx_r3.defaultFormOptions)("activeToggleDisabled", ctx_r3.maxActiveCountReached)("showActiveToggle", true)("showAddRemoveButton", false)("showOptions", true)("editable", true)("colorPickerDisabled", false)("actions", ctx_r3.actions)("optionToRemove", true)("datapointLibraryEntries", ctx_r3.datapointLibraryEntries)("hasUnlinkTemplateOption", true);
} }
const _c0 = [[["", 8, "alert"]]];
const _c1 = [".alert"];
export class DatapointSelectionListComponent {
    constructor(datapointSelector, datapointLibrary, formBuilder, widgetComponent) {
        this.datapointSelector = datapointSelector;
        this.datapointLibrary = datapointLibrary;
        this.formBuilder = formBuilder;
        this.widgetComponent = widgetComponent;
        this.actions = [];
        this.allowDragAndDrop = true;
        this.config = {};
        this.defaultFormOptions = {};
        this.minActiveCount = 1;
        this.resolveContext = true;
        this.maxActiveCountReached = false;
        this.usedValidators = {};
        this.formArray = this.formBuilder.array([]);
        this.isValid = this.formArray.statusChanges.pipe(map(status => status === 'VALID'));
        this.datapointLibraryEntries = from(this.datapointLibrary.getFirstDatapointLibraryPage()).pipe(shareReplay());
        this.change = this.formArray.valueChanges.pipe(map(res => this.transformValue(res)));
    }
    ngOnChanges(changes) {
        if (!changes.maxActiveCount && !changes.minActiveCount) {
            return;
        }
        if (changes.maxActiveCount) {
            this.usedValidators.maxActiveCount = C8yValidators.maxActiveCount(this.maxActiveCount);
        }
        if (changes.minActiveCount) {
            this.usedValidators.minActiveCount = C8yValidators.minActiveCount(this.minActiveCount);
        }
        const validators = Object.values(this.usedValidators);
        this.formArray.setValidators(validators);
    }
    registerOnTouched(fn) {
        this.formArray.valueChanges.pipe(take(1)).subscribe(fn);
    }
    validate(control) {
        return this.formArray.valid ? null : { formInvalid: {} };
    }
    ngOnInit() {
        var _a;
        const context = (_a = this.widgetComponent) === null || _a === void 0 ? void 0 : _a.context;
        if ((context === null || context === void 0 ? void 0 : context.id) && this.resolveContext) {
            const { name, id, c8y_IsDevice } = context;
            this.config.contextAsset = { name, id, c8y_IsDevice };
        }
    }
    writeValue(obj) {
        this.formArray.clear();
        if (obj === null || obj === void 0 ? void 0 : obj.length) {
            obj.forEach(val => {
                const formgroup = this.formBuilder.group({ details: [] });
                formgroup.patchValue({ details: val });
                this.formArray.push(formgroup);
            });
        }
        this.calculateMaxActiveCount();
    }
    registerOnChange(fn) {
        this.formArray.valueChanges
            .pipe(map(res => this.transformValue(res)), 
        // check maxActiveCount
        tap(res => {
            this.calculateMaxActiveCount();
        }))
            .subscribe(fn);
    }
    add() {
        var _a, _b, _c;
        const allowChangingContext = !((_a = this.widgetComponent) === null || _a === void 0 ? void 0 : _a.isDeviceTypeDashboard) && ((_b = this.config) === null || _b === void 0 ? void 0 : _b.allowChangingContext) !== false;
        this.datapointSelector
            .selectDataPoints(Object.assign(Object.assign({}, (this.config || {})), { selectedDatapoints: this.transformValue(this.formArray.value), defaultActiveState: true, allowChangingContext, allowSearch: !((_c = this.config) === null || _c === void 0 ? void 0 : _c.contextAsset) }))
            .then(result => {
            this.writeValue(result);
        }, error => {
            // nothing to do, modal was closed
        });
    }
    onItemRemoved(index) {
        this.formArray.removeAt(index);
    }
    drop(event) {
        const currentSorting = this.formArray.value;
        moveItemInArray(currentSorting, event.previousIndex, event.currentIndex);
        this.formArray.setValue(currentSorting);
    }
    transformValue(formArrayValue) {
        if (!formArrayValue) {
            return [];
        }
        return formArrayValue.map(tmp => Object.assign({}, ...Object.values(tmp)));
    }
    calculateMaxActiveCount() {
        if (this.maxActiveCount) {
            const currentlyActive = this.formArray.value.filter(tmp => { var _a; return (_a = tmp.details) === null || _a === void 0 ? void 0 : _a.__active; }).length;
            this.maxActiveCountReached = currentlyActive >= this.maxActiveCount;
        }
        this.maxActiveCountReached = false;
    }
}
DatapointSelectionListComponent.ɵfac = function DatapointSelectionListComponent_Factory(t) { return new (t || DatapointSelectionListComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DatapointSelectorService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.DatapointLibraryService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormBuilder), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.WidgetConfigComponent, 8)); };
DatapointSelectionListComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DatapointSelectionListComponent, selectors: [["c8y-datapoint-selection-list"]], inputs: { actions: "actions", allowDragAndDrop: "allowDragAndDrop", config: "config", defaultFormOptions: "defaultFormOptions", minActiveCount: "minActiveCount", resolveContext: "resolveContext", maxActiveCount: "maxActiveCount" }, outputs: { isValid: "isValid", change: "change" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => DatapointSelectionListComponent)
            },
            {
                provide: NG_VALIDATORS,
                useExisting: forwardRef(() => DatapointSelectionListComponent),
                multi: true
            }
        ]), ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c1, decls: 15, vars: 8, consts: [[1, "card-header", "separator", "sticky-top", "bg-component"], ["translate", "", 1, "card-title", "h4"], ["cdkDropList", "", 1, "flex-grow", "ff-scroll-fix", "cdk-droplist", 3, "cdkDropListDisabled", "cdkDropListDropped"], ["class", "alert alert-info", "role", "alert", "ngNonBindable", "", "translate", "", 3, "translateParams", 4, "ngIf"], ["class", "c8y-empty-state", 4, "ngIf"], [3, "formGroup", 4, "ngFor", "ngForOf"], [1, "card-footer", "bg-component", "sticky-bottom", "separator"], [1, "btn", "btn-default", "btn-sm", 3, "title", "click"], ["c8yIcon", "plus-circle"], ["translate", ""], ["role", "alert", "translate", "", 1, "alert", "alert-info", 3, "translateParams"], [1, "c8y-empty-state"], [1, "c8y-icon", "c8y-icon-data-points", "c8y-icon-duocolor"], [3, "formGroup"], ["formControlName", "details", "cdkDrag", "", 1, "d-block", 3, "defaultFormOptions", "activeToggleDisabled", "showActiveToggle", "showAddRemoveButton", "showOptions", "editable", "colorPickerDisabled", "actions", "optionToRemove", "datapointLibraryEntries", "hasUnlinkTemplateOption", "removed"], ["cdkDragHandle", ""], ["c8yIcon", "drag-reorder"]], template: function DatapointSelectionListComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c0);
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelementStart(1, "span", 1);
        ɵngcc0.ɵɵtext(2, "Data points");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(3, "c8y-list-group", 2);
        ɵngcc0.ɵɵlistener("cdkDropListDropped", function DatapointSelectionListComponent_Template_c8y_list_group_cdkDropListDropped_3_listener($event) { return ctx.drop($event); });
        ɵngcc0.ɵɵtemplate(4, DatapointSelectionListComponent_div_4_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵtemplate(5, DatapointSelectionListComponent_div_5_Template, 2, 1, "div", 3);
        ɵngcc0.ɵɵprojection(6);
        ɵngcc0.ɵɵtemplate(7, DatapointSelectionListComponent_div_7_Template, 8, 0, "div", 4);
        ɵngcc0.ɵɵtemplate(8, DatapointSelectionListComponent_div_8_Template, 4, 12, "div", 5);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "div", 6);
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵlistener("click", function DatapointSelectionListComponent_Template_button_click_10_listener() { return ctx.add(); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelement(12, "i", 8);
        ɵngcc0.ɵɵelementStart(13, "span", 9);
        ɵngcc0.ɵɵtext(14, "Add data point");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("cdkDropListDisabled", !ctx.allowDragAndDrop || (ctx.formArray.controls == null ? null : ctx.formArray.controls.length) < 2);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formArray.errors == null ? null : ctx.formArray.errors.minActiveCount);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.formArray.errors == null ? null : ctx.formArray.errors.maxActiveCount);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", !(ctx.formArray.controls == null ? null : ctx.formArray.controls.length));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.formArray.controls);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(11, 6, "Add data point"));
    } }, directives: [ɵngcc5.C8yTranslateDirective, ɵngcc5.ListGroupComponent, ɵngcc6.CdkDropList, ɵngcc7.NgIf, ɵngcc7.NgForOf, ɵngcc5.IconDirective, ɵngcc3.NgControlStatusGroup, ɵngcc3.FormGroupDirective, ɵngcc8.DatapointSelectorListItemComponent, ɵngcc3.NgControlStatus, ɵngcc3.FormControlName, ɵngcc6.CdkDrag, ɵngcc5.ListItemDragHandleComponent, ɵngcc6.CdkDragHandle], pipes: [ɵngcc5.C8yTranslatePipe], encapsulation: 2 });
DatapointSelectionListComponent.ctorParameters = () => [
    { type: DatapointSelectorService },
    { type: DatapointLibraryService },
    { type: FormBuilder },
    { type: WidgetConfigComponent, decorators: [{ type: Optional }] }
];
DatapointSelectionListComponent.propDecorators = {
    actions: [{ type: Input }],
    allowDragAndDrop: [{ type: Input }],
    config: [{ type: Input }],
    defaultFormOptions: [{ type: Input }],
    maxActiveCount: [{ type: Input }],
    minActiveCount: [{ type: Input }],
    resolveContext: [{ type: Input }],
    isValid: [{ type: Output }],
    change: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DatapointSelectionListComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-datapoint-selection-list',
                template: "<div class=\"card-header separator sticky-top bg-component\">\n  <span class=\"card-title h4\" translate>Data points</span>\n</div>\n\n<c8y-list-group\n  class=\"flex-grow ff-scroll-fix cdk-droplist\"\n  cdkDropList\n  (cdkDropListDropped)=\"drop($event)\"\n  [cdkDropListDisabled]=\"!allowDragAndDrop || formArray.controls?.length < 2\"\n>\n  <div\n    class=\"alert alert-info\"\n    role=\"alert\"\n    ngNonBindable\n    *ngIf=\"formArray.errors?.minActiveCount\"\n    translate\n    [translateParams]=\"formArray.errors?.minActiveCount\"\n  >\n    At least {{ minActive }} active data points must be selected.\n  </div>\n\n  <div\n    class=\"alert alert-info\"\n    role=\"alert\"\n    ngNonBindable\n    *ngIf=\"formArray.errors?.maxActiveCount\"\n    translate\n    [translateParams]=\"formArray.errors?.maxActiveCount\"\n  >\n    At maximum {{ maxActive }} active data points are allowed to be selected.\n  </div>\n\n  <ng-content select=\".alert\"></ng-content>\n\n  <div class=\"c8y-empty-state\" *ngIf=\"!formArray.controls?.length\">\n    <h1 class=\"c8y-icon c8y-icon-data-points c8y-icon-duocolor\"></h1>\n    <div>\n      <p>\n        <strong translate>No data points to display.</strong>\n      </p>\n      <small translate>Add your first data point.</small>\n    </div>\n  </div>\n  <div [formGroup]=\"dpForm\" *ngFor=\"let dpForm of formArray.controls; let index = index\">\n    <c8y-datapoint-selector-list-item\n      class=\"d-block\"\n      [defaultFormOptions]=\"defaultFormOptions\"\n      [activeToggleDisabled]=\"maxActiveCountReached\"\n      [showActiveToggle]=\"true\"\n      [showAddRemoveButton]=\"false\"\n      [showOptions]=\"true\"\n      [editable]=\"true\"\n      [colorPickerDisabled]=\"false\"\n      [actions]=\"actions\"\n      [optionToRemove]=\"true\"\n      [datapointLibraryEntries]=\"datapointLibraryEntries\"\n      [hasUnlinkTemplateOption]=\"true\"\n      formControlName=\"details\"\n      (removed)=\"onItemRemoved(index)\"\n      cdkDrag\n    >\n      <c8y-li-drag-handle cdkDragHandle>\n        <i c8yIcon=\"drag-reorder\"></i>\n      </c8y-li-drag-handle>\n    </c8y-datapoint-selector-list-item>\n  </div>\n</c8y-list-group>\n\n<div class=\"card-footer bg-component sticky-bottom separator\">\n  <button [title]=\"'Add data point' | translate\" class=\"btn btn-default btn-sm\" (click)=\"add()\">\n    <i c8yIcon=\"plus-circle\"></i>\n    <span translate>Add data point</span>\n  </button>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => DatapointSelectionListComponent)
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => DatapointSelectionListComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc1.DatapointSelectorService }, { type: ɵngcc2.DatapointLibraryService }, { type: ɵngcc3.FormBuilder }, { type: ɵngcc4.WidgetConfigComponent, decorators: [{
                type: Optional
            }] }]; }, { actions: [{
            type: Input
        }], allowDragAndDrop: [{
            type: Input
        }], config: [{
            type: Input
        }], defaultFormOptions: [{
            type: Input
        }], minActiveCount: [{
            type: Input
        }], resolveContext: [{
            type: Input
        }], isValid: [{
            type: Output
        }], change: [{
            type: Output
        }], maxActiveCount: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXBvaW50LXNlbGVjdGlvbi1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vZGF0YXBvaW50LXNlbGVjdG9yL2RhdGFwb2ludC1zZWxlY3Rpb24tbGlzdC9kYXRhcG9pbnQtc2VsZWN0aW9uLWxpc3QuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBZSxlQUFlLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RSxPQUFPLEVBQ0wsU0FBUyxFQUVULFVBQVUsRUFDVixLQUFLLEVBR0wsUUFBUSxFQUNSLE1BQU0sRUFHUCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBSUwsV0FBVyxFQUNYLGFBQWEsRUFDYixpQkFBaUIsRUFJbEIsTUFBTSxnQkFBZ0IsQ0FBQztBQUV4QixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDcEQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDOUUsT0FBTyxFQUFFLElBQUksRUFBYyxNQUFNLE1BQU0sQ0FBQztBQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFLFdBQVcsRUFBRSxJQUFJLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0QsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFRdkUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0J6RSxNQUFNLE9BQU8sK0JBQStCO0FBQUcsSUFnQjdDLFlBQ1UsaUJBQTJDLEVBQzNDLGdCQUF5QyxFQUN6QyxXQUF3QixFQUNaLGVBQXNDO0FBQzNELFFBSlMsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUEwQjtBQUFDLFFBQzVDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBeUI7QUFBQyxRQUMxQyxnQkFBVyxHQUFYLFdBQVcsQ0FBYTtBQUFDLFFBQ2Isb0JBQWUsR0FBZixlQUFlLENBQXVCO0FBQzlELFFBcEJXLFlBQU8sR0FBc0IsRUFBRSxDQUFDO0FBQzNDLFFBQVcscUJBQWdCLEdBQUcsSUFBSSxDQUFDO0FBQ25DLFFBQVcsV0FBTSxHQUEyQyxFQUFFLENBQUM7QUFDL0QsUUFBVyx1QkFBa0IsR0FBMkMsRUFBRSxDQUFDO0FBQzNFLFFBQ1csbUJBQWMsR0FBRyxDQUFDLENBQUM7QUFDOUIsUUFBVyxtQkFBYyxHQUFHLElBQUksQ0FBQztBQUNqQyxRQUVFLDBCQUFxQixHQUFHLEtBQUssQ0FBQztBQUNoQyxRQUdVLG1CQUFjLEdBQW1DLEVBQUUsQ0FBQztBQUM5RCxRQU9JLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDaEQsUUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEtBQUssT0FBTyxDQUFDLENBQUMsQ0FBQztBQUN4RixRQUFJLElBQUksQ0FBQyx1QkFBdUIsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLDRCQUE0QixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQzVGLFdBQVcsRUFBRSxDQUNkLENBQUM7QUFDTixRQUFJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ3pGLElBQUUsQ0FBQztBQUNILElBQ0UsV0FBVyxDQUFDLE9BQXNCO0FBQUksUUFDcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFO0FBQzVELFlBQU0sT0FBTztBQUNiLFNBQUs7QUFDTCxRQUFJLElBQUksT0FBTyxDQUFDLGNBQWMsRUFBRTtBQUNoQyxZQUFNLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzdGLFNBQUs7QUFDTCxRQUNJLElBQUksT0FBTyxDQUFDLGNBQWMsRUFBRTtBQUNoQyxZQUFNLElBQUksQ0FBQyxjQUFjLENBQUMsY0FBYyxHQUFHLGFBQWEsQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzdGLFNBQUs7QUFDTCxRQUFJLE1BQU0sVUFBVSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzFELFFBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0MsSUFBRSxDQUFDO0FBQ0gsSUFDRSxpQkFBaUIsQ0FBQyxFQUFPO0FBQUksUUFDM0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQUM1RCxJQUFFLENBQUM7QUFDSCxJQUNFLFFBQVEsQ0FBQyxPQUF3QjtBQUFJLFFBQ25DLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxXQUFXLEVBQUUsRUFBRSxFQUFFLENBQUM7QUFDN0QsSUFBRSxDQUFDO0FBQ0gsSUFDRSxRQUFRO0FBQUs7QUFDTCxRQUFOLE1BQU0sT0FBTyxHQUFHLE1BQUEsSUFBSSxDQUFDLGVBQWUsMENBQUUsT0FBTyxDQUFDO0FBQ2xELFFBQUksSUFBSSxDQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxFQUFFLEtBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtBQUM1QyxZQUFNLE1BQU0sRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLFlBQVksRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNqRCxZQUFNLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxHQUFHLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxZQUFZLEVBQUUsQ0FBQztBQUM1RCxTQUFLO0FBQ0wsSUFBRSxDQUFDO0FBQ0gsSUFDRSxVQUFVLENBQUMsR0FBaUI7QUFBSSxRQUM5QixJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQzNCLFFBQUksSUFBSSxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsTUFBTSxFQUFFO0FBQ3JCLFlBQU0sR0FBRyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUN4QixnQkFBUSxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ2xFLGdCQUFRLFNBQVMsQ0FBQyxVQUFVLENBQUMsRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQztBQUMvQyxnQkFBUSxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUN2QyxZQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ1QsU0FBSztBQUNMLFFBQUksSUFBSSxDQUFDLHVCQUF1QixFQUFFLENBQUM7QUFDbkMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxnQkFBZ0IsQ0FBQyxFQUFPO0FBQUksUUFDMUIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxZQUFZO0FBQy9CLGFBQU8sSUFBSSxDQUNILEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDM0MsUUFBTyx1QkFBdUI7QUFDL0IsUUFBUSxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUU7QUFDbEIsWUFBVSxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQztBQUN6QyxRQUFRLENBQUMsQ0FBQyxDQUNIO0FBQ1AsYUFBTyxTQUFTLENBQUMsRUFBRSxDQUFDLENBQUM7QUFDckIsSUFBRSxDQUFDO0FBQ0gsSUFDRSxHQUFHO0FBQ0w7QUFBd0IsUUFBcEIsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLENBQUEsTUFBQSxJQUFJLENBQUMsZUFBZSwwQ0FBRSxxQkFBcUIsQ0FBQSxJQUFJLENBQUEsTUFBQSxJQUFJLENBQUMsTUFBTSwwQ0FBRSxvQkFBb0IsTUFBSyxLQUFLLENBQUM7QUFDN0gsUUFBSSxJQUFJLENBQUMsaUJBQWlCO0FBQzFCLGFBQU8sZ0JBQWdCLGlDQUNaLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxFQUFFLENBQUMsS0FDdEIsa0JBQWtCLEVBQUUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUM3RCxrQkFBa0IsRUFBRSxJQUFJLEVBQ3hCLG9CQUFvQixFQUNwQixXQUFXLEVBQUUsQ0FBQyxDQUFBLE1BQUEsSUFBSSxDQUFDLE1BQU0sMENBQUUsWUFBWSxDQUFBLElBQ3ZDO0FBQ1IsYUFBTyxJQUFJLENBQ0gsTUFBTSxDQUFDLEVBQUU7QUFDakIsWUFBVSxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2xDLFFBQVEsQ0FBQyxFQUNELEtBQUssQ0FBQyxFQUFFO0FBQ2hCLFlBQVUsa0NBQWtDO0FBQzVDLFFBQVEsQ0FBQyxDQUNGLENBQUM7QUFDUixJQUFFLENBQUM7QUFDSCxJQUNFLGFBQWEsQ0FBQyxLQUFhO0FBQzdCLFFBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDbkMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLENBQUMsS0FBZ0M7QUFDdkMsUUFBSSxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQztBQUNoRCxRQUFJLGVBQWUsQ0FBQyxjQUFjLEVBQUUsS0FBSyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7QUFDN0UsUUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUM1QyxJQUFFLENBQUM7QUFDSCxJQUNVLGNBQWMsQ0FBQyxjQUFxQjtBQUM5QyxRQUFJLElBQUksQ0FBQyxjQUFjLEVBQUU7QUFDekIsWUFBTSxPQUFPLEVBQUUsQ0FBQztBQUNoQixTQUFLO0FBQ0wsUUFBSSxPQUFPLGNBQWMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQy9FLElBQUUsQ0FBQztBQUNILElBQ1UsdUJBQXVCO0FBQ2pDLFFBQUksSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFO0FBQzdCLFlBQU0sTUFBTSxlQUFlLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFdBQUMsT0FBQSxNQUFBLEdBQUcsQ0FBQyxPQUFPLDBDQUFFLFFBQVEsQ0FBQSxFQUFBLENBQUMsQ0FBQyxNQUFNLENBQUM7QUFDL0YsWUFBTSxJQUFJLENBQUMscUJBQXFCLEdBQUcsZUFBZSxJQUFJLElBQUksQ0FBQyxjQUFjLENBQUM7QUFDMUUsU0FBSztBQUNMLFFBQUksSUFBSSxDQUFDLHFCQUFxQixHQUFHLEtBQUssQ0FBQztBQUN2QyxJQUFFLENBQUM7QUFDSDsyREFqSkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSw4QkFBOEIsa0JBQ3hDOzs7Ozs7Ozs7Ozs7Ozs7V0FBd0Qsa0JBQ3hELFNBQVMsRUFBRTtpQkFDVDtFQUNFLE9BQU8sRUFBRSxpQkFBaUI7dUJBQzFCLEtBQUssRUFBRTtHQUFJLDBCQUNYLFdBQVcsRUFBRSxVQUFVLENBQUM7Q0FBRyxFQUFFLENBQUMsK0JBQStCLENBQUMsc0JBQy9ELHNCQUNELDBCQUNFLE9BQU8sRUFBRSxhQUFhLDBCQUN0QixXQUFXLEVBQUUsVUFBVSxDQUFDLEdBQUc7Q0FBRSxDQUFDLCtCQUErQixDQUFDLDBCQUM5RCxLQUFLLEVBQUUsSUFBSSxzQkFDWjtpQkFDRixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBhQUNJO0FBQUM7QUFBeUQsWUFsQnRELHdCQUF3QjtBQUFJLFlBUjVCLHVCQUF1QjtBQUFJLFlBWmxDLFdBQVc7QUFDWCxZQVFPLHFCQUFxQix1QkFpRHpCLFFBQVE7QUFBTTtBQUFHO0FBRWxCLHNCQXJCRCxLQUFLO0FBQUssK0JBQ1YsS0FBSztBQUFLLHFCQUNWLEtBQUs7QUFBSyxpQ0FDVixLQUFLO0FBQUssNkJBQ1YsS0FBSztBQUFLLDZCQUNWLEtBQUs7QUFBSyw2QkFDVixLQUFLO0FBQUssc0JBS1YsTUFBTTtBQUFLLHFCQUNYLE1BQU07QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDZGtEcmFnRHJvcCwgbW92ZUl0ZW1JbkFycmF5IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL2RyYWctZHJvcCc7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIENvbnRlbnRDaGlsZHJlbixcbiAgZm9yd2FyZFJlZixcbiAgSW5wdXQsXG4gIE9uQ2hhbmdlcyxcbiAgT25Jbml0LFxuICBPcHRpb25hbCxcbiAgT3V0cHV0LFxuICBRdWVyeUxpc3QsXG4gIFNpbXBsZUNoYW5nZXNcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBBYnN0cmFjdENvbnRyb2wsXG4gIENvbnRyb2xWYWx1ZUFjY2Vzc29yLFxuICBGb3JtQXJyYXksXG4gIEZvcm1CdWlsZGVyLFxuICBOR19WQUxJREFUT1JTLFxuICBOR19WQUxVRV9BQ0NFU1NPUixcbiAgVmFsaWRhdGlvbkVycm9ycyxcbiAgVmFsaWRhdG9yLFxuICBWYWxpZGF0b3JGblxufSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBJUmVzdWx0TGlzdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEM4eVZhbGlkYXRvcnMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFdpZGdldENvbmZpZ0NvbXBvbmVudCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvY29udGV4dC1kYXNoYm9hcmQnO1xuaW1wb3J0IHsgZnJvbSwgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwLCBzaGFyZVJlcGxheSwgdGFrZSwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgRGF0YXBvaW50TGlicmFyeVNlcnZpY2UgfSBmcm9tICcuLi9kYXRhcG9pbnQtbGlicmFyeS5zZXJ2aWNlJztcbmltcG9ydCB7XG4gIERhdGFwb2ludEFjdGlvbixcbiAgRGF0YXBvaW50QXR0cmlidXRlc0Zvcm1Db25maWcsXG4gIERhdGFwb2ludFNlbGVjdG9yTW9kYWxPcHRpb25zLFxuICBLUElEZXRhaWxzLFxuICBNYW5hZ2VkT2JqZWN0S1BJXG59IGZyb20gJy4uL2RhdGFwb2ludC1zZWxlY3Rpb24ubW9kZWwnO1xuaW1wb3J0IHsgRGF0YXBvaW50U2VsZWN0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vZGF0YXBvaW50LXNlbGVjdG9yLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGF0YXBvaW50LXNlbGVjdGlvbi1saXN0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2RhdGFwb2ludC1zZWxlY3Rpb24tbGlzdC5jb21wb25lbnQuaHRtbCcsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTFVFX0FDQ0VTU09SLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgICB1c2VFeGlzdGluZzogZm9yd2FyZFJlZigoKSA9PiBEYXRhcG9pbnRTZWxlY3Rpb25MaXN0Q29tcG9uZW50KVxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogTkdfVkFMSURBVE9SUyxcbiAgICAgIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IERhdGFwb2ludFNlbGVjdGlvbkxpc3RDb21wb25lbnQpLFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRGF0YXBvaW50U2VsZWN0aW9uTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBWYWxpZGF0b3IsIE9uSW5pdCwgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgYWN0aW9uczogRGF0YXBvaW50QWN0aW9uW10gPSBbXTtcbiAgQElucHV0KCkgYWxsb3dEcmFnQW5kRHJvcCA9IHRydWU7XG4gIEBJbnB1dCgpIGNvbmZpZzogUGFydGlhbDxEYXRhcG9pbnRTZWxlY3Rvck1vZGFsT3B0aW9ucz4gPSB7fTtcbiAgQElucHV0KCkgZGVmYXVsdEZvcm1PcHRpb25zOiBQYXJ0aWFsPERhdGFwb2ludEF0dHJpYnV0ZXNGb3JtQ29uZmlnPiA9IHt9O1xuICBASW5wdXQoKSBtYXhBY3RpdmVDb3VudDogbnVtYmVyO1xuICBASW5wdXQoKSBtaW5BY3RpdmVDb3VudCA9IDE7XG4gIEBJbnB1dCgpIHJlc29sdmVDb250ZXh0ID0gdHJ1ZTtcbiAgZm9ybUFycmF5OiBGb3JtQXJyYXk7XG4gIGRhdGFwb2ludExpYnJhcnlFbnRyaWVzOiBPYnNlcnZhYmxlPElSZXN1bHRMaXN0PE1hbmFnZWRPYmplY3RLUEk+PjtcbiAgbWF4QWN0aXZlQ291bnRSZWFjaGVkID0gZmFsc2U7XG5cbiAgQE91dHB1dCgpIGlzVmFsaWQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gIEBPdXRwdXQoKSBjaGFuZ2U6IE9ic2VydmFibGU8YW55W10+O1xuICBwcml2YXRlIHVzZWRWYWxpZGF0b3JzOiB7IFtrZXk6IHN0cmluZ106IFZhbGlkYXRvckZuIH0gPSB7fTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGRhdGFwb2ludFNlbGVjdG9yOiBEYXRhcG9pbnRTZWxlY3RvclNlcnZpY2UsXG4gICAgcHJpdmF0ZSBkYXRhcG9pbnRMaWJyYXJ5OiBEYXRhcG9pbnRMaWJyYXJ5U2VydmljZSxcbiAgICBwcml2YXRlIGZvcm1CdWlsZGVyOiBGb3JtQnVpbGRlcixcbiAgICBAT3B0aW9uYWwoKSBwcml2YXRlIHdpZGdldENvbXBvbmVudDogV2lkZ2V0Q29uZmlnQ29tcG9uZW50XG4gICkge1xuICAgIHRoaXMuZm9ybUFycmF5ID0gdGhpcy5mb3JtQnVpbGRlci5hcnJheShbXSk7XG4gICAgdGhpcy5pc1ZhbGlkID0gdGhpcy5mb3JtQXJyYXkuc3RhdHVzQ2hhbmdlcy5waXBlKG1hcChzdGF0dXMgPT4gc3RhdHVzID09PSAnVkFMSUQnKSk7XG4gICAgdGhpcy5kYXRhcG9pbnRMaWJyYXJ5RW50cmllcyA9IGZyb20odGhpcy5kYXRhcG9pbnRMaWJyYXJ5LmdldEZpcnN0RGF0YXBvaW50TGlicmFyeVBhZ2UoKSkucGlwZShcbiAgICAgIHNoYXJlUmVwbGF5KClcbiAgICApO1xuICAgIHRoaXMuY2hhbmdlID0gdGhpcy5mb3JtQXJyYXkudmFsdWVDaGFuZ2VzLnBpcGUobWFwKHJlcyA9PiB0aGlzLnRyYW5zZm9ybVZhbHVlKHJlcykpKTtcbiAgfVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcbiAgICBpZiAoIWNoYW5nZXMubWF4QWN0aXZlQ291bnQgJiYgIWNoYW5nZXMubWluQWN0aXZlQ291bnQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGNoYW5nZXMubWF4QWN0aXZlQ291bnQpIHtcbiAgICAgIHRoaXMudXNlZFZhbGlkYXRvcnMubWF4QWN0aXZlQ291bnQgPSBDOHlWYWxpZGF0b3JzLm1heEFjdGl2ZUNvdW50KHRoaXMubWF4QWN0aXZlQ291bnQpO1xuICAgIH1cblxuICAgIGlmIChjaGFuZ2VzLm1pbkFjdGl2ZUNvdW50KSB7XG4gICAgICB0aGlzLnVzZWRWYWxpZGF0b3JzLm1pbkFjdGl2ZUNvdW50ID0gQzh5VmFsaWRhdG9ycy5taW5BY3RpdmVDb3VudCh0aGlzLm1pbkFjdGl2ZUNvdW50KTtcbiAgICB9XG4gICAgY29uc3QgdmFsaWRhdG9ycyA9IE9iamVjdC52YWx1ZXModGhpcy51c2VkVmFsaWRhdG9ycyk7XG4gICAgdGhpcy5mb3JtQXJyYXkuc2V0VmFsaWRhdG9ycyh2YWxpZGF0b3JzKTtcbiAgfVxuXG4gIHJlZ2lzdGVyT25Ub3VjaGVkKGZuOiBhbnkpOiB2b2lkIHtcbiAgICB0aGlzLmZvcm1BcnJheS52YWx1ZUNoYW5nZXMucGlwZSh0YWtlKDEpKS5zdWJzY3JpYmUoZm4pO1xuICB9XG5cbiAgdmFsaWRhdGUoY29udHJvbDogQWJzdHJhY3RDb250cm9sKTogVmFsaWRhdGlvbkVycm9ycyB7XG4gICAgcmV0dXJuIHRoaXMuZm9ybUFycmF5LnZhbGlkID8gbnVsbCA6IHsgZm9ybUludmFsaWQ6IHt9IH07XG4gIH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgICBjb25zdCBjb250ZXh0ID0gdGhpcy53aWRnZXRDb21wb25lbnQ/LmNvbnRleHQ7XG4gICAgaWYgKGNvbnRleHQ/LmlkICYmIHRoaXMucmVzb2x2ZUNvbnRleHQpIHtcbiAgICAgIGNvbnN0IHsgbmFtZSwgaWQsIGM4eV9Jc0RldmljZSB9ID0gY29udGV4dDtcbiAgICAgIHRoaXMuY29uZmlnLmNvbnRleHRBc3NldCA9IHsgbmFtZSwgaWQsIGM4eV9Jc0RldmljZSB9O1xuICAgIH1cbiAgfVxuXG4gIHdyaXRlVmFsdWUob2JqOiBLUElEZXRhaWxzW10pOiB2b2lkIHtcbiAgICB0aGlzLmZvcm1BcnJheS5jbGVhcigpO1xuICAgIGlmIChvYmo/Lmxlbmd0aCkge1xuICAgICAgb2JqLmZvckVhY2godmFsID0+IHtcbiAgICAgICAgY29uc3QgZm9ybWdyb3VwID0gdGhpcy5mb3JtQnVpbGRlci5ncm91cCh7IGRldGFpbHM6IFtdIH0pO1xuICAgICAgICBmb3JtZ3JvdXAucGF0Y2hWYWx1ZSh7IGRldGFpbHM6IHZhbCB9KTtcbiAgICAgICAgdGhpcy5mb3JtQXJyYXkucHVzaChmb3JtZ3JvdXApO1xuICAgICAgfSk7XG4gICAgfVxuICAgIHRoaXMuY2FsY3VsYXRlTWF4QWN0aXZlQ291bnQoKTtcbiAgfVxuXG4gIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQge1xuICAgIHRoaXMuZm9ybUFycmF5LnZhbHVlQ2hhbmdlc1xuICAgICAgLnBpcGUoXG4gICAgICAgIG1hcChyZXMgPT4gdGhpcy50cmFuc2Zvcm1WYWx1ZShyZXMpKSxcbiAgICAgICAgLy8gY2hlY2sgbWF4QWN0aXZlQ291bnRcbiAgICAgICAgdGFwKHJlcyA9PiB7XG4gICAgICAgICAgdGhpcy5jYWxjdWxhdGVNYXhBY3RpdmVDb3VudCgpO1xuICAgICAgICB9KVxuICAgICAgKVxuICAgICAgLnN1YnNjcmliZShmbik7XG4gIH1cblxuICBhZGQoKSB7XG4gICAgY29uc3QgYWxsb3dDaGFuZ2luZ0NvbnRleHQgPSAhdGhpcy53aWRnZXRDb21wb25lbnQ/LmlzRGV2aWNlVHlwZURhc2hib2FyZCAmJiB0aGlzLmNvbmZpZz8uYWxsb3dDaGFuZ2luZ0NvbnRleHQgIT09IGZhbHNlO1xuICAgIHRoaXMuZGF0YXBvaW50U2VsZWN0b3JcbiAgICAgIC5zZWxlY3REYXRhUG9pbnRzKHtcbiAgICAgICAgLi4uKHRoaXMuY29uZmlnIHx8IHt9KSxcbiAgICAgICAgc2VsZWN0ZWREYXRhcG9pbnRzOiB0aGlzLnRyYW5zZm9ybVZhbHVlKHRoaXMuZm9ybUFycmF5LnZhbHVlKSxcbiAgICAgICAgZGVmYXVsdEFjdGl2ZVN0YXRlOiB0cnVlLFxuICAgICAgICBhbGxvd0NoYW5naW5nQ29udGV4dCxcbiAgICAgICAgYWxsb3dTZWFyY2g6ICF0aGlzLmNvbmZpZz8uY29udGV4dEFzc2V0XG4gICAgICB9KVxuICAgICAgLnRoZW4oXG4gICAgICAgIHJlc3VsdCA9PiB7XG4gICAgICAgICAgdGhpcy53cml0ZVZhbHVlKHJlc3VsdCk7XG4gICAgICAgIH0sXG4gICAgICAgIGVycm9yID0+IHtcbiAgICAgICAgICAvLyBub3RoaW5nIHRvIGRvLCBtb2RhbCB3YXMgY2xvc2VkXG4gICAgICAgIH1cbiAgICAgICk7XG4gIH1cblxuICBvbkl0ZW1SZW1vdmVkKGluZGV4OiBudW1iZXIpIHtcbiAgICB0aGlzLmZvcm1BcnJheS5yZW1vdmVBdChpbmRleCk7XG4gIH1cblxuICBkcm9wKGV2ZW50OiBDZGtEcmFnRHJvcDxLUElEZXRhaWxzW10+KSB7XG4gICAgY29uc3QgY3VycmVudFNvcnRpbmcgPSB0aGlzLmZvcm1BcnJheS52YWx1ZTtcbiAgICBtb3ZlSXRlbUluQXJyYXkoY3VycmVudFNvcnRpbmcsIGV2ZW50LnByZXZpb3VzSW5kZXgsIGV2ZW50LmN1cnJlbnRJbmRleCk7XG4gICAgdGhpcy5mb3JtQXJyYXkuc2V0VmFsdWUoY3VycmVudFNvcnRpbmcpO1xuICB9XG5cbiAgcHJpdmF0ZSB0cmFuc2Zvcm1WYWx1ZShmb3JtQXJyYXlWYWx1ZTogYW55W10pIHtcbiAgICBpZiAoIWZvcm1BcnJheVZhbHVlKSB7XG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIHJldHVybiBmb3JtQXJyYXlWYWx1ZS5tYXAodG1wID0+IE9iamVjdC5hc3NpZ24oe30sIC4uLk9iamVjdC52YWx1ZXModG1wKSkpO1xuICB9XG5cbiAgcHJpdmF0ZSBjYWxjdWxhdGVNYXhBY3RpdmVDb3VudCgpIHtcbiAgICBpZiAodGhpcy5tYXhBY3RpdmVDb3VudCkge1xuICAgICAgY29uc3QgY3VycmVudGx5QWN0aXZlID0gdGhpcy5mb3JtQXJyYXkudmFsdWUuZmlsdGVyKHRtcCA9PiB0bXAuZGV0YWlscz8uX19hY3RpdmUpLmxlbmd0aDtcbiAgICAgIHRoaXMubWF4QWN0aXZlQ291bnRSZWFjaGVkID0gY3VycmVudGx5QWN0aXZlID49IHRoaXMubWF4QWN0aXZlQ291bnQ7XG4gICAgfVxuICAgIHRoaXMubWF4QWN0aXZlQ291bnRSZWFjaGVkID0gZmFsc2U7XG4gIH1cbn1cbiJdfQ==