import { Injectable } from '@angular/core';
import { ApplicationService } from '@c8y/client';
import { from } from 'rxjs';
import { map } from 'rxjs/operators';
export class AppLogsService {
    constructor(application) {
        this.application = application;
    }
    getLogs$(appId, instanceName, params = {}) {
        const formattedDateFrom = params.dateFrom ? this.formatDate(params.dateFrom) : null;
        const formattedDateTo = params.dateTo ? this.formatDate(params.dateTo) : null;
        const modifiedParams = Object.assign(Object.assign(Object.assign({}, params), (formattedDateFrom && { dateFrom: formattedDateFrom })), (formattedDateTo && { dateTo: formattedDateTo }));
        return from(this.application.getInstanceLog(appId, instanceName, modifiedParams)).pipe(map(res => res.data));
    }
    formatDate(dateToFormat) {
        return new Date(dateToFormat).toISOString();
    }
}
AppLogsService.decorators = [
    { type: Injectable }
];
AppLogsService.ctorParameters = () => [
    { type: ApplicationService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLWxvZ3Muc2VydmljZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2FwcC1sb2dzL2FwcC1sb2dzLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDakQsT0FBTyxFQUFjLElBQUksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUN4QyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFTckMsTUFBTSxPQUFPLGNBQWM7SUFFekIsWUFBb0IsV0FBK0I7UUFBL0IsZ0JBQVcsR0FBWCxXQUFXLENBQW9CO0lBQUcsQ0FBQztJQUV2RCxRQUFRLENBQUMsS0FBYSxFQUFFLFlBQW9CLEVBQUUsU0FBd0IsRUFBRTtRQUN0RSxNQUFNLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDcEYsTUFBTSxlQUFlLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztRQUM5RSxNQUFNLGNBQWMsaURBQ2YsTUFBTSxHQUNOLENBQUMsaUJBQWlCLElBQUksRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUUsQ0FBQyxHQUN0RCxDQUFDLGVBQWUsSUFBSSxFQUFFLE1BQU0sRUFBRSxlQUFlLEVBQUUsQ0FBQyxDQUNwRCxDQUFDO1FBRUYsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLFlBQVksRUFBRSxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUMvRyxDQUFDO0lBRUQsVUFBVSxDQUFDLFlBQW9CO1FBQzdCLE9BQU8sSUFBSSxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDOUMsQ0FBQzs7O1lBbkJGLFVBQVU7OztZQVZGLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IExvZ3NKU09OIH0gZnJvbSAnLi9sb2dzLm1vZGVsJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IE9ic2VydmFibGUsIGZyb20gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcblxuaW50ZXJmYWNlIFJlcXVlc3RQYXJhbXMge1xuICBkYXRlRnJvbT87XG4gIGRhdGVUbz87XG4gIGxpbWl0Pztcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFwcExvZ3NTZXJ2aWNlIHtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGFwcGxpY2F0aW9uOiBBcHBsaWNhdGlvblNlcnZpY2UpIHt9XG5cbiAgZ2V0TG9ncyQoYXBwSWQ6IHN0cmluZywgaW5zdGFuY2VOYW1lOiBzdHJpbmcsIHBhcmFtczogUmVxdWVzdFBhcmFtcyA9IHt9KTogT2JzZXJ2YWJsZTxMb2dzSlNPTj4ge1xuICAgIGNvbnN0IGZvcm1hdHRlZERhdGVGcm9tID0gcGFyYW1zLmRhdGVGcm9tID8gdGhpcy5mb3JtYXREYXRlKHBhcmFtcy5kYXRlRnJvbSkgOiBudWxsO1xuICAgIGNvbnN0IGZvcm1hdHRlZERhdGVUbyA9IHBhcmFtcy5kYXRlVG8gPyB0aGlzLmZvcm1hdERhdGUocGFyYW1zLmRhdGVUbykgOiBudWxsO1xuICAgIGNvbnN0IG1vZGlmaWVkUGFyYW1zID0ge1xuICAgICAgLi4ucGFyYW1zLFxuICAgICAgLi4uKGZvcm1hdHRlZERhdGVGcm9tICYmIHsgZGF0ZUZyb206IGZvcm1hdHRlZERhdGVGcm9tIH0pLFxuICAgICAgLi4uKGZvcm1hdHRlZERhdGVUbyAmJiB7IGRhdGVUbzogZm9ybWF0dGVkRGF0ZVRvIH0pXG4gICAgfTtcblxuICAgIHJldHVybiBmcm9tKHRoaXMuYXBwbGljYXRpb24uZ2V0SW5zdGFuY2VMb2coYXBwSWQsIGluc3RhbmNlTmFtZSwgbW9kaWZpZWRQYXJhbXMpKS5waXBlKG1hcChyZXMgPT4gcmVzLmRhdGEpKTtcbiAgfVxuXG4gIGZvcm1hdERhdGUoZGF0ZVRvRm9ybWF0OiBzdHJpbmcpOiBzdHJpbmcge1xuICAgIHJldHVybiBuZXcgRGF0ZShkYXRlVG9Gb3JtYXQpLnRvSVNPU3RyaW5nKCk7XG4gIH1cbn1cbiJdfQ==