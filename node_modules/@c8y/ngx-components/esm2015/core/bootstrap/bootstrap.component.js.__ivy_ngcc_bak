import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { of } from 'rxjs';
import { distinctUntilChanged, map, switchMap } from 'rxjs/operators';
import { ActionBarService } from '../action-bar/action-bar.service';
import { OptionsService } from '../common/options.service';
import { Permissions } from '../common/permissions.service';
import { AppStateService } from '../common/ui-state.service';
import { HeaderService } from '../header/header.service';
import { NavigatorService } from '../navigator/navigator.service';
import { PluginsResolveService } from '../plugins/plugins-resolve.service';
import { NEEDED_ROLE_FOR_SETUP, SETUP_FINISHED_STEP_ID } from '../setup/setup.model';
import { Steppers } from '../stepper/stepper.model';
import { StepperService } from '../stepper/stepper.service';
import { TabsService } from '../tabs/tabs.service';
export class BootstrapComponent {
    constructor(tabs, ui, navigator, actionBar, headerService, options, pluginsResolve, stepperService, permissions) {
        this.tabs = tabs;
        this.ui = ui;
        this.navigator = navigator;
        this.actionBar = actionBar;
        this.headerService = headerService;
        this.options = options;
        this.pluginsResolve = pluginsResolve;
        this.stepperService = stepperService;
        this.permissions = permissions;
        this.showPoweredBy = true;
        this.noAppsMargin$ = this.headerService.map(({ nav }) => !nav.open && nav.hiddenOnStartup);
        this.tabsOrientation = this.options.tabsHorizontal ? 'horizontal' : 'vertical';
        this.ui
            .map(({ lang }) => lang)
            .pipe(distinctUntilChanged())
            .subscribe(() => {
            this.actionBar.refresh();
        });
        this.showPoweredBy = !this.options.get('hidePowered');
        this.isSetupNeeded$ = this.ui.currentApplication.pipe(map(app => this.ui.isOwnerOfApplication(app)), switchMap(isOwner => {
            if (!isOwner) {
                return of([]);
            }
            return this.stepperService.getById$(Steppers.SETUP);
        }), map((steps) => this.getNotCompletedSetupSteps(steps)), map(notCompletedSetupSteps => this.options.forceSetup || this.options.isSetup && this.needsSetup(notCompletedSetupSteps)));
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const { remoteModules } = window.C8Y_APP;
            if (remoteModules.length) {
                yield this.pluginsResolve.resolveRemotePlugins(remoteModules);
            }
        });
    }
    needsSetup(notCompletedSetupSteps) {
        notCompletedSetupSteps = this.excludeSetupFinishStep(notCompletedSetupSteps);
        if (this.hasPermission()) {
            return notCompletedSetupSteps.length > 0;
        }
        // Show setup screen as there are required steps but the user
        // has no permission. The Setup screen will show an error to
        // the user.
        return this.hasRequiredSteps(notCompletedSetupSteps);
    }
    excludeSetupFinishStep(notCompletedSetupSteps) {
        return notCompletedSetupSteps.filter(({ setupId }) => setupId !== SETUP_FINISHED_STEP_ID);
    }
    hasRequiredSteps(notCompletedSetupSteps) {
        return notCompletedSetupSteps.some(step => step.required);
    }
    hasPermission() {
        return this.permissions.hasRole(NEEDED_ROLE_FOR_SETUP);
    }
    getNotCompletedSetupSteps(steps) {
        if (!this.ui.currentApplicationConfig.value) {
            return steps;
        }
        return steps.filter(step => step.setupId && !(this.ui.currentApplicationConfig.value.setup || []).includes(step.setupId));
    }
}
BootstrapComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-bootstrap',
                template: "<c8y-login *ngIf=\"!(ui.currentUser | async)\"></c8y-login>\n\n<div\n  *ngIf=\"(ui.currentUser | async) && !(isSetupNeeded$ | async)\"\n  [class.head-open]=\"headerService.headerOpen\"\n>\n  <c8y-header-bar #header></c8y-header-bar>\n  <c8y-navigator-outlet\n    [nodes]=\"navigator.items$ | async\"\n    [open]=\"headerService.navigatorOpen$ | async\"\n  >\n    <header class=\"title navigator-slot-top\">\n      <div class=\"tenant-brand\"></div>\n      <c8y-app-icon\n        [name]=\"(ui.state$ | async).app.name\"\n        [contextPath]=\"(ui.state$ | async).app.contextPath\"\n      ></c8y-app-icon>\n      <span>{{ (ui.state$ | async).app | humanizeAppName | async }}</span>\n    </header>\n    <div class=\"powered-by navigator-slot-bottom\" *ngIf=\"showPoweredBy\">\n      <p translate>powered by Cumulocity</p>\n    </div>\n  </c8y-navigator-outlet>\n\n  <div class=\"alerts\">\n    <c8y-alert-outlet></c8y-alert-outlet>\n  </div>\n  <c8y-tabs-outlet\n    #tabsComponent\n    [tabs]=\"tabs.items$ | async\"\n    [navigatorOpen]=\"headerService.navigatorOpen$ | async\"\n    [orientation]=\"tabs.orientation$ | async\"\n  >\n  </c8y-tabs-outlet>\n  <c8y-action-bar\n    #actionBarComponent\n    [navigatorOpen]=\"headerService.navigatorOpen$ | async\"\n    [hasTabs]=\"tabsComponent.hasTabs\"\n    [isTabsHorizontal]=\"tabsComponent?.isHorizontal\"\n    [items$]=\"actionBar.items$\"\n  >\n  </c8y-action-bar>\n\n  <div\n    class=\"mcontainer\"\n    [ngClass]=\"{\n      open: headerService.navigatorOpen$ | async,\n      'no-apps-margin': noAppsMargin$ | async,\n      'horizontal-tabs': tabsComponent.isHorizontal,\n      'vertical-tabs': !tabsComponent.isHorizontal,\n      'has-tabs': tabsComponent.hasTabs,\n      'has-action-bar': !actionBarComponent?.hidden\n    }\"\n  >\n    <div class=\"container-fluid\">\n      <router-outlet></router-outlet>\n      <ng-content select=\"#c8y-legacy-view\"></ng-content>\n      <!-- legacy ng-view, will not be migrated atm -->\n    </div>\n  </div>\n</div>\n\n<div *ngIf=\"(ui.currentUser | async) && (isSetupNeeded$ | async)\">\n  <c8y-header-bar [simple]=\"true\"></c8y-header-bar>\n  <div class=\"mcontainer\">\n    <div class=\"container-fluid\">\n      <c8y-setup></c8y-setup>\n    </div>\n  </div>\n</div>\n\n<c8y-cookie-banner></c8y-cookie-banner>\n"
            },] }
];
BootstrapComponent.ctorParameters = () => [
    { type: TabsService },
    { type: AppStateService },
    { type: NavigatorService },
    { type: ActionBarService },
    { type: HeaderService },
    { type: OptionsService },
    { type: PluginsResolveService },
    { type: StepperService },
    { type: Permissions }
];
//# sourceMappingURL=data:application/json;base64,