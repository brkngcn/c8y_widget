import { Component, Input } from '@angular/core';
import { isEmpty, mapValues } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { Status, statusAlert, statusIcons } from '../common/status.model';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/modal';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../i18n/c8y-translate.pipe';
import * as ɵngcc4 from '../common/show-if-filter.pipe';

function ConfirmModalComponent_h3_1_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, ctx_r3.title));
} }
const _c0 = function (a0) { return [a0]; };
function ConfirmModalComponent_h3_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "h3", 7);
    ɵngcc0.ɵɵelement(1, "i", 8);
    ɵngcc0.ɵɵtemplate(2, ConfirmModalComponent_h3_1_span_2_Template, 3, 3, "span", 9);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r0.classIcon));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.title);
} }
function ConfirmModalComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r6 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 10);
    ɵngcc0.ɵɵelementStart(1, "label", 11);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementStart(3, "input", 12);
    ɵngcc0.ɵɵlistener("change", function ConfirmModalComponent_div_5_Template_input_change_3_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r6); const co_r4 = restoredCtx.$implicit; return co_r4.value.checked = !co_r4.value.checked; });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span");
    ɵngcc0.ɵɵelementStart(5, "span", 13);
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const co_r4 = ctx.$implicit;
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(2, 4, co_r4.value.text));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", co_r4.value.checked)("disabled", ctx_r1.confirmOptions[co_r4.value.disabledByKey] == null ? null : ctx_r1.confirmOptions[co_r4.value.disabledByKey].checked);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 6, co_r4.value.text));
} }
function ConfirmModalComponent_button_11_Template(rf, ctx) { if (rf & 1) {
    const _r8 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 14);
    ɵngcc0.ɵɵlistener("click", function ConfirmModalComponent_button_11_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.dismiss(); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 2, ctx_r2.labels.cancel));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 4, ctx_r2.labels.cancel), " ");
} }
const _c1 = ["*"];
export class ConfirmModalComponent {
    constructor(modal) {
        this.modal = modal;
        this.status = Status.INFO;
        this._labels = {
            ok: 'OK',
            cancel: 'Cancel'
        };
        this.result = new Promise((resolve, reject) => {
            this.dismiss = () => {
                reject();
                this.modal.hide();
            };
            this.close = () => {
                resolve(isEmpty(this.confirmOptions)
                    ? true
                    : {
                        confirmed: true,
                        confirmOptions: mapValues(this.confirmOptions, option => option.checked)
                    });
                this.modal.hide();
            };
        });
    }
    set labels(labels) {
        const { ok = 'OK', cancel = 'Cancel' } = labels || {};
        this._labels = { ok, cancel };
    }
    get labels() {
        return this._labels;
    }
    get classIcon() {
        return `dlt-c8y-icon-${statusIcons[this.status]}`;
    }
    get classAlert() {
        return statusAlert[this.status];
    }
    ngOnDestroy() {
        this.dismiss();
    }
}
ConfirmModalComponent.ɵfac = function ConfirmModalComponent_Factory(t) { return new (t || ConfirmModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.BsModalRef)); };
ConfirmModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ConfirmModalComponent, selectors: [["c8y-confirm-modal"]], inputs: { status: "status", labels: "labels", title: "title", body: "body", confirmOptions: "confirmOptions" }, ngContentSelectors: _c1, decls: 16, vars: 21, consts: [[1, "c8y-prompt", "alert", 3, "ngClass"], ["class", "m-b-16 d-flex a-i-center", 4, "ngIf"], [1, "text-break-word", "m-b-16"], ["class", "c8y-checkbox plain m-b-8", 4, "ngFor", "ngForOf"], [1, "alert-footer"], ["type", "button", "class", "btn btn-default", 3, "title", "click", 4, "ngIf"], ["type", "button", 1, "btn", "btn-primary", 3, "title", "click"], [1, "m-b-16", "d-flex", "a-i-center"], [1, "dlt-c8y-icon", 3, "ngClass"], [4, "ngIf"], [1, "c8y-checkbox", "plain", "m-b-8"], [1, "c8y-checkbox", 3, "title"], ["type", "checkbox", 3, "checked", "disabled", "change"], [1, "text-muted"], ["type", "button", 1, "btn", "btn-default", 3, "title", "click"]], template: function ConfirmModalComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵtemplate(1, ConfirmModalComponent_h3_1_Template, 3, 4, "h3", 1);
        ɵngcc0.ɵɵelementStart(2, "p", 2);
        ɵngcc0.ɵɵtext(3);
        ɵngcc0.ɵɵpipe(4, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(5, ConfirmModalComponent_div_5_Template, 8, 8, "div", 3);
        ɵngcc0.ɵɵpipe(6, "keyvalue");
        ɵngcc0.ɵɵpipe(7, "async");
        ɵngcc0.ɵɵpipe(8, "showIfFilter");
        ɵngcc0.ɵɵprojection(9);
        ɵngcc0.ɵɵelementStart(10, "div", 4);
        ɵngcc0.ɵɵtemplate(11, ConfirmModalComponent_button_11_Template, 4, 6, "button", 5);
        ɵngcc0.ɵɵelementStart(12, "button", 6);
        ɵngcc0.ɵɵlistener("click", function ConfirmModalComponent_Template_button_click_12_listener() { return ctx.close(); });
        ɵngcc0.ɵɵpipe(13, "translate");
        ɵngcc0.ɵɵtext(14);
        ɵngcc0.ɵɵpipe(15, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(19, _c0, ctx.classAlert));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.title);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(4, 7, ctx.body));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ɵngcc0.ɵɵpipeBind1(6, 9, ɵngcc0.ɵɵpipeBind1(7, 11, ɵngcc0.ɵɵpipeBind1(8, 13, ctx.confirmOptions))));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("ngIf", ctx.labels.cancel !== null);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(13, 15, ctx.labels.ok));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(15, 17, ctx.labels.ok), " ");
    } }, directives: [ɵngcc2.NgClass, ɵngcc2.NgIf, ɵngcc2.NgForOf], pipes: [ɵngcc3.C8yTranslatePipe, ɵngcc2.KeyValuePipe, ɵngcc2.AsyncPipe, ɵngcc4.ShowIfFilterPipe], encapsulation: 2 });
ConfirmModalComponent.ctorParameters = () => [
    { type: BsModalRef }
];
ConfirmModalComponent.propDecorators = {
    title: [{ type: Input }],
    body: [{ type: Input }],
    confirmOptions: [{ type: Input }],
    status: [{ type: Input }],
    labels: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ConfirmModalComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-confirm-modal',
                template: "<div class=\"c8y-prompt alert\" [ngClass]=\"[classAlert]\">\n  <h3 class=\"m-b-16 d-flex a-i-center\" *ngIf=\"title\">\n    <i class=\"dlt-c8y-icon\" [ngClass]=\"[classIcon]\"></i>\n    <span *ngIf=\"title\">{{ title | translate }}</span>\n  </h3>\n  <p class=\"text-break-word m-b-16\">{{ body | translate }}</p>\n  <div\n    class=\"c8y-checkbox plain m-b-8\"\n    *ngFor=\"let co of confirmOptions | showIfFilter | async | keyvalue\"\n  >\n    <label [title]=\"co.value.text | translate\" class=\"c8y-checkbox\">\n      <input\n        type=\"checkbox\"\n        [checked]=\"co.value.checked\"\n        (change)=\"co.value.checked = !co.value.checked\"\n        [disabled]=\"confirmOptions[co.value.disabledByKey]?.checked\"\n      />\n      <span></span>\n      <span class=\"text-muted\">{{ co.value.text | translate }}</span>\n    </label>\n  </div>\n  <ng-content></ng-content>\n  <div class=\"alert-footer\">\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      type=\"button\"\n      class=\"btn btn-default\"\n      *ngIf=\"labels.cancel !== null\"\n      (click)=\"dismiss()\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button\n      title=\"{{ labels.ok | translate }}\"\n      type=\"button\"\n      class=\"btn btn-primary\"\n      (click)=\"close()\"\n    >\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n"
            }]
    }], function () { return [{ type: ɵngcc1.BsModalRef }]; }, { status: [{
            type: Input
        }], labels: [{
            type: Input
        }], title: [{
            type: Input
        }], body: [{
            type: Input
        }], confirmOptions: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29uZmlybS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvbW9kYWwvbW9kYWwtY29uZmlybS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDNUQsT0FBTyxFQUFFLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRWpELE9BQU8sRUFBRSxNQUFNLEVBQUUsV0FBVyxFQUFFLFdBQVcsRUFBYyxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0J0RixNQUFNLE9BQU8scUJBQXFCO0FBQUcsSUFrQm5DLFlBQW9CLEtBQWlCO0FBQ3ZDLFFBRHNCLFVBQUssR0FBTCxLQUFLLENBQVk7QUFBQyxRQVg3QixXQUFNLEdBQWUsTUFBTSxDQUFDLElBQUksQ0FBQztBQUM1QyxRQVdJLElBQUksQ0FBQyxPQUFPLEdBQUc7QUFDbkIsWUFBTSxFQUFFLEVBQUUsSUFBSTtBQUNkLFlBQU0sTUFBTSxFQUFFLFFBQVE7QUFDdEIsU0FBSyxDQUFDO0FBQ04sUUFBSSxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxFQUFFO0FBQ2xELFlBQU0sSUFBSSxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUU7QUFDMUIsZ0JBQVEsTUFBTSxFQUFFLENBQUM7QUFDakIsZ0JBQVEsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUMxQixZQUFNLENBQUMsQ0FBQztBQUNSLFlBQU0sSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLEVBQUU7QUFDeEIsZ0JBQVEsT0FBTyxDQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDO0FBQ3RDLG9CQUFZLENBQUMsQ0FBQyxJQUFJO0FBQ2xCLG9CQUFZLENBQUMsQ0FBQztBQUNkLHdCQUFnQixTQUFTLEVBQUUsSUFBSTtBQUMvQix3QkFBZ0IsY0FBYyxFQUFFLFNBQVMsQ0FBQyxJQUFJLENBQUMsY0FBYyxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztBQUN4RixxQkFBZSxDQUNOLENBQUM7QUFDVixnQkFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0FBQzFCLFlBQU0sQ0FBQyxDQUFDO0FBQ1IsUUFBSSxDQUFDLENBQUMsQ0FBQztBQUNQLElBQUUsQ0FBQztBQUNILElBakNFLElBQWEsTUFBTSxDQUFDLE1BQW1CO0FBQ3pDLFFBQUksTUFBTSxFQUFFLEVBQUUsR0FBRyxJQUFJLEVBQUUsTUFBTSxHQUFHLFFBQVEsRUFBRSxHQUFHLE1BQU0sSUFBSSxFQUFFLENBQUM7QUFDMUQsUUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNILElBQ0UsSUFBSSxNQUFNO0FBQUssUUFDYixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7QUFDeEIsSUFBRSxDQUFDO0FBQ0gsSUEwQkUsSUFBSSxTQUFTO0FBQ2YsUUFBSSxPQUFPLGdCQUFnQixXQUFXLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7QUFDdEQsSUFBRSxDQUFDO0FBQ0gsSUFDRSxJQUFJLFVBQVU7QUFDaEIsUUFBSSxPQUFPLFdBQVcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDcEMsSUFBRSxDQUFDO0FBQ0gsSUFDRSxXQUFXO0FBQ2IsUUFBSSxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7QUFDbkIsSUFBRSxDQUFDO0FBQ0g7aURBekRDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsbUJBQW1CLGtCQUM3Qjs7Ozs7Ozs7OytCQUE2QyxjQUM5Qzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MExBQ0k7QUFBQztBQUErQyxZQWpDNUMsVUFBVTtBQUFHO0FBQUc7QUFDVCxvQkFvQ2IsS0FBSztBQUFLLG1CQUNWLEtBQUs7QUFBSyw2QkFDVixLQUFLO0FBQUsscUJBQ1YsS0FBSztBQUFLLHFCQUNWLEtBQUs7QUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQUU7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uRGVzdHJveSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgaXNFbXB0eSwgbWFwVmFsdWVzIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFN0YXR1cywgc3RhdHVzQWxlcnQsIHN0YXR1c0ljb25zLCBTdGF0dXNUeXBlIH0gZnJvbSAnLi4vY29tbW9uL3N0YXR1cy5tb2RlbCc7XG5pbXBvcnQgeyBNb2RhbExhYmVscyB9IGZyb20gJy4uL3NlbGVjdC1tb2RhbC9zZWxlY3QtbW9kYWwubW9kZWwnO1xuXG4vKipcbiAqIExhYmVscyB0byBiZSB1c2VkIGluIHRoZSBzZWxlY3Rpb24gbW9kYWwuXG4gKiBAZGVwcmVjYXRlZCBUaGlzIGlzIGdvaW5nIHRvIGJlIHJlbW92ZWQgYWZ0ZXIgMTAwNy43LjAuIFVzZSBNb2RhbExhYmVscyBpbnN0ZWFkLlxuICovXG4vLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6IG5vLWVtcHR5LWludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBJTGFiZWxzIGV4dGVuZHMgTW9kYWxMYWJlbHMge31cblxuLyoqXG4gKiBEZWZpbmVzIG9wdGlvbnMgdG8gYmUgZGlzcGxheWVkIGluIHRoZSBjb25maXJtIGRpYWxvZy5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBDb25maXJtT3B0aW9ucyB7XG4gIFtrZXk6IHN0cmluZ106IENvbmZpcm1PcHRpb247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29uZmlybU9wdGlvbiB7XG4gIHRleHQ6IHN0cmluZztcbiAgY2hlY2tlZD86IGJvb2xlYW47XG4gIHNob3dJZj86IGJvb2xlYW4gfCAoKCkgPT4gYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4gfCBPYnNlcnZhYmxlPGJvb2xlYW4+KTtcbiAgLyoqXG4gICAqIFdpbGwgZGlzYWJsZSB0aGUgY3VycmVudCBvcHRpb24gd2hlbiBhbiBvcHRpb24gd2l0aCB0aGUgZ2l2ZW4ga2V5IGlzIHNlbGVjdGVkLlxuICAgKi9cbiAgZGlzYWJsZWRCeUtleT86IHN0cmluZztcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvbmZpcm0tbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vbW9kYWwtY29uZmlybS5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlybU1vZGFsQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgcmVzdWx0OiBQcm9taXNlPGJvb2xlYW4gfCB7IGNvbmZpcm1lZDogYm9vbGVhbjsgY29uZmlybU9wdGlvbnM6IHsgW2tleTogc3RyaW5nXTogYm9vbGVhbiB9IH0+O1xuICBkaXNtaXNzOiAoKSA9PiB2b2lkO1xuICBjbG9zZTogKCkgPT4gdm9pZDtcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcbiAgQElucHV0KCkgYm9keTogc3RyaW5nO1xuICBASW5wdXQoKSBjb25maXJtT3B0aW9uczogQ29uZmlybU9wdGlvbnM7XG4gIEBJbnB1dCgpIHN0YXR1czogU3RhdHVzVHlwZSA9IFN0YXR1cy5JTkZPO1xuICBASW5wdXQoKSBzZXQgbGFiZWxzKGxhYmVsczogTW9kYWxMYWJlbHMpIHtcbiAgICBjb25zdCB7IG9rID0gJ09LJywgY2FuY2VsID0gJ0NhbmNlbCcgfSA9IGxhYmVscyB8fCB7fTtcbiAgICB0aGlzLl9sYWJlbHMgPSB7IG9rLCBjYW5jZWwgfTtcbiAgfVxuXG4gIGdldCBsYWJlbHMoKTogTW9kYWxMYWJlbHMge1xuICAgIHJldHVybiB0aGlzLl9sYWJlbHM7XG4gIH1cblxuICBwcml2YXRlIF9sYWJlbHM6IE1vZGFsTGFiZWxzO1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIG1vZGFsOiBCc01vZGFsUmVmKSB7XG4gICAgdGhpcy5fbGFiZWxzID0ge1xuICAgICAgb2s6ICdPSycsXG4gICAgICBjYW5jZWw6ICdDYW5jZWwnXG4gICAgfTtcbiAgICB0aGlzLnJlc3VsdCA9IG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIHRoaXMuZGlzbWlzcyA9ICgpID0+IHtcbiAgICAgICAgcmVqZWN0KCk7XG4gICAgICAgIHRoaXMubW9kYWwuaGlkZSgpO1xuICAgICAgfTtcbiAgICAgIHRoaXMuY2xvc2UgPSAoKSA9PiB7XG4gICAgICAgIHJlc29sdmUoXG4gICAgICAgICAgaXNFbXB0eSh0aGlzLmNvbmZpcm1PcHRpb25zKVxuICAgICAgICAgICAgPyB0cnVlXG4gICAgICAgICAgICA6IHtcbiAgICAgICAgICAgICAgICBjb25maXJtZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgY29uZmlybU9wdGlvbnM6IG1hcFZhbHVlcyh0aGlzLmNvbmZpcm1PcHRpb25zLCBvcHRpb24gPT4gb3B0aW9uLmNoZWNrZWQpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gICAgICB9O1xuICAgIH0pO1xuICB9XG5cbiAgZ2V0IGNsYXNzSWNvbigpIHtcbiAgICByZXR1cm4gYGRsdC1jOHktaWNvbi0ke3N0YXR1c0ljb25zW3RoaXMuc3RhdHVzXX1gO1xuICB9XG5cbiAgZ2V0IGNsYXNzQWxlcnQoKSB7XG4gICAgcmV0dXJuIHN0YXR1c0FsZXJ0W3RoaXMuc3RhdHVzXTtcbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuZGlzbWlzcygpO1xuICB9XG59XG4iXX0=