import { Component, Input, Optional, Output, EventEmitter, HostListener } from '@angular/core';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { gettext } from '../i18n/gettext';
import { isEmpty } from 'lodash';
/**
 * C8y modal component.
 * ## Example:
 *
 * Creating custom modal:
 * ```typescript
 *  import { Component } from "@angular/core";
 *  import { Subject } from 'rxjs';
 *
 * @Component({
 *  selector: "my-modal",
 *  template: `
 *    <c8y-modal title="CustomTitle"
 *      (onClose)="onClose($event)"
 *      (onDismiss)="onDismiss($event)"
 *      [labels]="labels"
 *      [disabled]="true" <- will disable ok button
 *      >
 *        <span>I am body of modal</span>
 *        <span>For simple string use body="string"</span>
 *    </c8y-modal>`
 * })
 *
 * export class MyModalComponent {
 *
 *  closeSubject: Subject<boolean> = new Subject();
 *  labels : ModalLabels = {ok: "customOK", cancel: "customCancel"};
 *
 *  onDismiss(event){
 *    this.closeSubject.next(false);
 *  }
 *
 *  onClose(event) {
 *    this.closeSubject.next(true);
 *  }
 * }
 * ```
 * Showing modal:
 * ```typescript
 * import { BsModalService } from "ngx-bootstrap/modal";
 *
 * constructor(
 *  public bsModalService: BsModalService,
 * ) {}
 *
 * showModal() {
 *  const modalRef = this.bsModalService.show(MyModalComponent);
 *  modalRef.content.closeSubject.subscribe(result => {
 *    console.log('results:', result);
 *  });
 * }
 * ```
 */
export class ModalComponent {
    constructor(modal) {
        this.modal = modal;
        this.onDismiss = new EventEmitter();
        this.onClose = new EventEmitter();
        this.disabled = false;
        this.customFooter = false;
        this.headerClasses = '';
        this._labels = { ok: gettext('OK'), cancel: gettext('Cancel') };
    }
    set labels({ ok, cancel }) {
        this._labels = { ok, cancel };
    }
    get labels() { return this._labels; }
    _dismiss() {
        let fn = this.dismiss;
        if (!fn && this.modal) {
            fn = () => this.modal.hide();
        }
        if (fn) {
            fn();
        }
        this.onDismiss.emit(true);
    }
    _close() {
        let fn = this.close;
        if (!fn && this.modal) {
            fn = () => this.modal.hide();
        }
        if (fn) {
            fn();
        }
        this.onClose.emit(true);
    }
    onEnterKeyDown(event) {
        const hasOnlyOneButton = isEmpty(this.labels.ok) !== isEmpty(this.labels.cancel);
        const isCancelClickable = !this.customFooter && this.labels.cancel;
        const isOkClickable = !this.customFooter && !this.disabled && this.labels.ok;
        if (hasOnlyOneButton && isCancelClickable) {
            this._dismiss();
        }
        if (hasOnlyOneButton && isOkClickable) {
            this._close();
        }
    }
}
ModalComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-modal',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header {{ headerClasses }}\" [ngClass]=\"{ separator: title }\">\n    <ng-content select=\"[c8y-modal-title]\"></ng-content>\n    <h3 [hidden]=\"!title\">\n      {{ title | translate }}\n    </h3>\n  </div>\n  <div class=\"modal-inner-scroll\">\n    <div [ngClass]=\"{ 'modal-body': !customFooter, 'd-contents': customFooter }\">\n      <p *ngIf=\"title\" class=\"text-center text-break-word\">\n        {{ body }}\n      </p>\n      <ng-content></ng-content>\n    </div>\n  </div>\n  <div class=\"modal-footer\" *ngIf=\"!customFooter\">\n    <ng-content select=\"[c8y-modal-footer]\"></ng-content>\n    <button\n      title=\"{{ labels.cancel | translate }}\"\n      *ngIf=\"labels.cancel\"\n      class=\"btn btn-default\"\n      (click)=\"_dismiss()\"\n    >\n      {{ labels.cancel | translate }}\n    </button>\n    <button\n      title=\"{{ labels.ok | translate }}\"\n      *ngIf=\"labels.ok\"\n      class=\"btn btn-primary\"\n      (click)=\"_close()\"\n      [disabled]=\"disabled\"\n    >\n      {{ labels.ok | translate }}\n    </button>\n  </div>\n</div>\n"
            },] }
];
ModalComponent.ctorParameters = () => [
    { type: BsModalRef, decorators: [{ type: Optional }] }
];
ModalComponent.propDecorators = {
    onDismiss: [{ type: Output }],
    onClose: [{ type: Output }],
    disabled: [{ type: Input }],
    close: [{ type: Input }],
    dismiss: [{ type: Input }],
    title: [{ type: Input }],
    body: [{ type: Input }],
    customFooter: [{ type: Input }],
    headerClasses: [{ type: Input }],
    labels: [{ type: Input }],
    onEnterKeyDown: [{ type: HostListener, args: ['document:keydown.enter', ['$event'],] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9tb2RhbC9tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9GLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDMUMsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFFBQVEsQ0FBQztBQUdqQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQW9ERztBQU1ILE1BQU0sT0FBTyxjQUFjO0lBa0J6QixZQUFnQyxLQUFpQjtRQUFqQixVQUFLLEdBQUwsS0FBSyxDQUFZO1FBakJ2QyxjQUFTLEdBQTBCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDdEQsWUFBTyxHQUEwQixJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ3JELGFBQVEsR0FBRyxLQUFLLENBQUM7UUFLakIsaUJBQVksR0FBWSxLQUFLLENBQUM7UUFDOUIsa0JBQWEsR0FBVyxFQUFFLENBQUM7UUFPNUIsWUFBTyxHQUFpQixFQUFFLEVBQUUsRUFBRSxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO0lBRTdCLENBQUM7SUFSckQsSUFBYSxNQUFNLENBQUMsRUFBQyxFQUFFLEVBQUUsTUFBTSxFQUFjO1FBQzNDLElBQUksQ0FBQyxPQUFPLEdBQUcsRUFBQyxFQUFFLEVBQUcsTUFBTSxFQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELElBQUksTUFBTSxLQUFrQixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0lBTWxELFFBQVE7UUFDTixJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3RCLElBQUksQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUFFLEVBQUUsR0FBRyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1NBQUU7UUFDeEQsSUFBSSxFQUFFLEVBQUU7WUFBRSxFQUFFLEVBQUUsQ0FBQztTQUFFO1FBQ2pCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVCLENBQUM7SUFFRCxNQUFNO1FBQ0osSUFBSSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFBRSxFQUFFLEdBQUcsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUFFO1FBQ3hELElBQUksRUFBRSxFQUFFO1lBQUUsRUFBRSxFQUFFLENBQUM7U0FBRTtRQUNqQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMxQixDQUFDO0lBRW1ELGNBQWMsQ0FBQyxLQUFvQjtRQUNyRixNQUFNLGdCQUFnQixHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxLQUFLLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2pGLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxJQUFJLENBQUMsWUFBWSxJQUFJLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDO1FBQ25FLE1BQU0sYUFBYSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUM7UUFDN0UsSUFBSSxnQkFBZ0IsSUFBSyxpQkFBaUIsRUFBRTtZQUMxQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7U0FDakI7UUFDRCxJQUFJLGdCQUFnQixJQUFLLGFBQWEsRUFBRTtZQUN0QyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7U0FDZjtJQUNILENBQUM7OztZQWpERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLFdBQVc7Z0JBQ3JCLDhtQ0FBcUM7YUFDdEM7OztZQTdEUSxVQUFVLHVCQWlGSixRQUFROzs7d0JBakJwQixNQUFNO3NCQUNOLE1BQU07dUJBQ04sS0FBSztvQkFDTCxLQUFLO3NCQUNMLEtBQUs7b0JBQ0wsS0FBSzttQkFDTCxLQUFLOzJCQUNMLEtBQUs7NEJBQ0wsS0FBSztxQkFDTCxLQUFLOzZCQXdCTCxZQUFZLFNBQUMsd0JBQXdCLEVBQUUsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPcHRpb25hbCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJy4uL2kxOG4vZ2V0dGV4dCc7XG5pbXBvcnQgeyBpc0VtcHR5IH0gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IE1vZGFsTGFiZWxzIH0gZnJvbSAnLi4vc2VsZWN0LW1vZGFsL3NlbGVjdC1tb2RhbC5tb2RlbCc7XG5cbi8qKlxuICogQzh5IG1vZGFsIGNvbXBvbmVudC5cbiAqICMjIEV4YW1wbGU6XG4gKlxuICogQ3JlYXRpbmcgY3VzdG9tIG1vZGFsOlxuICogYGBgdHlwZXNjcmlwdFxuICogIGltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG4gKiAgaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuICpcbiAqIEBDb21wb25lbnQoe1xuICogIHNlbGVjdG9yOiBcIm15LW1vZGFsXCIsXG4gKiAgdGVtcGxhdGU6IGBcbiAqICAgIDxjOHktbW9kYWwgdGl0bGU9XCJDdXN0b21UaXRsZVwiXG4gKiAgICAgIChvbkNsb3NlKT1cIm9uQ2xvc2UoJGV2ZW50KVwiXG4gKiAgICAgIChvbkRpc21pc3MpPVwib25EaXNtaXNzKCRldmVudClcIlxuICogICAgICBbbGFiZWxzXT1cImxhYmVsc1wiXG4gKiAgICAgIFtkaXNhYmxlZF09XCJ0cnVlXCIgPC0gd2lsbCBkaXNhYmxlIG9rIGJ1dHRvblxuICogICAgICA+XG4gKiAgICAgICAgPHNwYW4+SSBhbSBib2R5IG9mIG1vZGFsPC9zcGFuPlxuICogICAgICAgIDxzcGFuPkZvciBzaW1wbGUgc3RyaW5nIHVzZSBib2R5PVwic3RyaW5nXCI8L3NwYW4+XG4gKiAgICA8L2M4eS1tb2RhbD5gXG4gKiB9KVxuICpcbiAqIGV4cG9ydCBjbGFzcyBNeU1vZGFsQ29tcG9uZW50IHtcbiAqXG4gKiAgY2xvc2VTdWJqZWN0OiBTdWJqZWN0PGJvb2xlYW4+ID0gbmV3IFN1YmplY3QoKTtcbiAqICBsYWJlbHMgOiBNb2RhbExhYmVscyA9IHtvazogXCJjdXN0b21PS1wiLCBjYW5jZWw6IFwiY3VzdG9tQ2FuY2VsXCJ9O1xuICpcbiAqICBvbkRpc21pc3MoZXZlbnQpe1xuICogICAgdGhpcy5jbG9zZVN1YmplY3QubmV4dChmYWxzZSk7XG4gKiAgfVxuICpcbiAqICBvbkNsb3NlKGV2ZW50KSB7XG4gKiAgICB0aGlzLmNsb3NlU3ViamVjdC5uZXh0KHRydWUpO1xuICogIH1cbiAqIH1cbiAqIGBgYFxuICogU2hvd2luZyBtb2RhbDpcbiAqIGBgYHR5cGVzY3JpcHRcbiAqIGltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSBcIm5neC1ib290c3RyYXAvbW9kYWxcIjtcbiAqXG4gKiBjb25zdHJ1Y3RvcihcbiAqICBwdWJsaWMgYnNNb2RhbFNlcnZpY2U6IEJzTW9kYWxTZXJ2aWNlLFxuICogKSB7fVxuICpcbiAqIHNob3dNb2RhbCgpIHtcbiAqICBjb25zdCBtb2RhbFJlZiA9IHRoaXMuYnNNb2RhbFNlcnZpY2Uuc2hvdyhNeU1vZGFsQ29tcG9uZW50KTtcbiAqICBtb2RhbFJlZi5jb250ZW50LmNsb3NlU3ViamVjdC5zdWJzY3JpYmUocmVzdWx0ID0+IHtcbiAqICAgIGNvbnNvbGUubG9nKCdyZXN1bHRzOicsIHJlc3VsdCk7XG4gKiAgfSk7XG4gKiB9XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LW1vZGFsJyxcbiAgdGVtcGxhdGVVcmw6ICcuL21vZGFsLmNvbXBvbmVudC5odG1sJyxcbn0pXG5cbmV4cG9ydCBjbGFzcyBNb2RhbENvbXBvbmVudCB7XG4gIEBPdXRwdXQoKSBvbkRpc21pc3M6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQE91dHB1dCgpIG9uQ2xvc2U6IEV2ZW50RW1pdHRlcjxib29sZWFuPiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcbiAgQElucHV0KCkgZGlzYWJsZWQgPSBmYWxzZTtcbiAgQElucHV0KCkgY2xvc2U6ICgpID0+IHZvaWQ7XG4gIEBJbnB1dCgpIGRpc21pc3M6ICgpID0+IHZvaWQ7XG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGJvZHk6IHN0cmluZztcbiAgQElucHV0KCkgY3VzdG9tRm9vdGVyOiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGhlYWRlckNsYXNzZXM6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoKSBzZXQgbGFiZWxzKHtvaywgY2FuY2VsfTogTW9kYWxMYWJlbHMpIHtcbiAgICB0aGlzLl9sYWJlbHMgPSB7b2sgLCBjYW5jZWx9O1xuICB9XG5cbiAgZ2V0IGxhYmVscygpOiBNb2RhbExhYmVscyB7IHJldHVybiB0aGlzLl9sYWJlbHM7IH1cblxuICBwcml2YXRlIF9sYWJlbHM6IE1vZGFsTGFiZWxzID0gIHsgb2s6IGdldHRleHQoJ09LJyksIGNhbmNlbDogZ2V0dGV4dCgnQ2FuY2VsJykgfTtcblxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBwcml2YXRlIG1vZGFsOiBCc01vZGFsUmVmKSB7fVxuXG4gIF9kaXNtaXNzKCkge1xuICAgIGxldCBmbiA9IHRoaXMuZGlzbWlzcztcbiAgICBpZiAoIWZuICYmIHRoaXMubW9kYWwpIHsgZm4gPSAoKSA9PiB0aGlzLm1vZGFsLmhpZGUoKTsgfVxuICAgIGlmIChmbikgeyBmbigpOyB9XG4gICAgdGhpcy5vbkRpc21pc3MuZW1pdCh0cnVlKTtcbiAgfVxuXG4gIF9jbG9zZSgpIHtcbiAgICBsZXQgZm4gPSB0aGlzLmNsb3NlO1xuICAgIGlmICghZm4gJiYgdGhpcy5tb2RhbCkgeyBmbiA9ICgpID0+IHRoaXMubW9kYWwuaGlkZSgpOyB9XG4gICAgaWYgKGZuKSB7IGZuKCk7IH1cbiAgICB0aGlzLm9uQ2xvc2UuZW1pdCh0cnVlKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2RvY3VtZW50OmtleWRvd24uZW50ZXInLCBbJyRldmVudCddKSBvbkVudGVyS2V5RG93bihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIGNvbnN0IGhhc09ubHlPbmVCdXR0b24gPSBpc0VtcHR5KHRoaXMubGFiZWxzLm9rKSAhPT0gaXNFbXB0eSh0aGlzLmxhYmVscy5jYW5jZWwpO1xuICAgIGNvbnN0IGlzQ2FuY2VsQ2xpY2thYmxlID0gIXRoaXMuY3VzdG9tRm9vdGVyICYmIHRoaXMubGFiZWxzLmNhbmNlbDtcbiAgICBjb25zdCBpc09rQ2xpY2thYmxlID0gIXRoaXMuY3VzdG9tRm9vdGVyICYmICF0aGlzLmRpc2FibGVkICYmIHRoaXMubGFiZWxzLm9rO1xuICAgIGlmIChoYXNPbmx5T25lQnV0dG9uICAmJiBpc0NhbmNlbENsaWNrYWJsZSkge1xuICAgICAgdGhpcy5fZGlzbWlzcygpO1xuICAgIH1cbiAgICBpZiAoaGFzT25seU9uZUJ1dHRvbiAgJiYgaXNPa0NsaWNrYWJsZSkge1xuICAgICAgdGhpcy5fY2xvc2UoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==