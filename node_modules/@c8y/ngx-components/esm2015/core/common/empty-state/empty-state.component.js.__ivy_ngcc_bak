import { Component, Input } from '@angular/core';
/**
 * A component to show generic empty state.
 * Title and subtitle should be used with translate pipe to mark strings for translation.
 * Component can be displayed vertically (default) or horizontally.
 * Additional markup elements can be placed inside the tag.
 *
 * Example:
 * ```html
 * <c8y-ui-empty-state
 *   [icon]="'c8y-icon'"
 *   [title]="'Place your title here' | translate"
 *   [subtitle]="'Place your subtitle here' | translate"
 *   [horizontal]="true"
 * >
 *   (...)
 * </c8y-ui-empty-state>
 * ```
 */
export class EmptyStateComponent {
}
EmptyStateComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-ui-empty-state',
                template: "<div class=\"c8y-empty-state\" [ngClass]=\"{ 'c8y-empty-state--horizontal': horizontal }\">\n  <i [c8yIcon]=\"icon\" class=\"c8y-icon-duocolor\"></i>\n\n  <ng-container *ngIf=\"!horizontal\">\n    <div>\n      <h3 class=\"text-medium p-b-4\">{{ title | translate }}</h3>\n      <p *ngIf=\"subtitle\">{{ subtitle | translate }}</p>\n      <div class=\"p-t-16\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"horizontal\">\n    <div>\n      <p>\n        <strong>{{ title | translate }}</strong>\n      </p>\n      <p *ngIf=\"subtitle\" class=\"small\">{{ subtitle | translate }}</p>\n      <div class=\"small m-t-8\">\n        <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #content>\n    <ng-content></ng-content>\n  </ng-template>\n</div>\n"
            },] }
];
EmptyStateComponent.propDecorators = {
    icon: [{ type: Input }],
    title: [{ type: Input }],
    subtitle: [{ type: Input }],
    horizontal: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1wdHktc3RhdGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29yZS9jb21tb24vZW1wdHktc3RhdGUvZW1wdHktc3RhdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpEOzs7Ozs7Ozs7Ozs7Ozs7OztHQWlCRztBQUtILE1BQU0sT0FBTyxtQkFBbUI7OztZQUovQixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsMjVCQUEyQzthQUM1Qzs7O21CQUdFLEtBQUs7b0JBRUwsS0FBSzt1QkFFTCxLQUFLO3lCQUVMLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbi8qKlxuICogQSBjb21wb25lbnQgdG8gc2hvdyBnZW5lcmljIGVtcHR5IHN0YXRlLlxuICogVGl0bGUgYW5kIHN1YnRpdGxlIHNob3VsZCBiZSB1c2VkIHdpdGggdHJhbnNsYXRlIHBpcGUgdG8gbWFyayBzdHJpbmdzIGZvciB0cmFuc2xhdGlvbi5cbiAqIENvbXBvbmVudCBjYW4gYmUgZGlzcGxheWVkIHZlcnRpY2FsbHkgKGRlZmF1bHQpIG9yIGhvcml6b250YWxseS5cbiAqIEFkZGl0aW9uYWwgbWFya3VwIGVsZW1lbnRzIGNhbiBiZSBwbGFjZWQgaW5zaWRlIHRoZSB0YWcuXG4gKlxuICogRXhhbXBsZTpcbiAqIGBgYGh0bWxcbiAqIDxjOHktdWktZW1wdHktc3RhdGVcbiAqICAgW2ljb25dPVwiJ2M4eS1pY29uJ1wiXG4gKiAgIFt0aXRsZV09XCInUGxhY2UgeW91ciB0aXRsZSBoZXJlJyB8IHRyYW5zbGF0ZVwiXG4gKiAgIFtzdWJ0aXRsZV09XCInUGxhY2UgeW91ciBzdWJ0aXRsZSBoZXJlJyB8IHRyYW5zbGF0ZVwiXG4gKiAgIFtob3Jpem9udGFsXT1cInRydWVcIlxuICogPlxuICogICAoLi4uKVxuICogPC9jOHktdWktZW1wdHktc3RhdGU+XG4gKiBgYGBcbiAqL1xuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXVpLWVtcHR5LXN0YXRlJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2VtcHR5LXN0YXRlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBFbXB0eVN0YXRlQ29tcG9uZW50IHtcbiAgLyoqIEljb24gbmFtZS4gKi9cbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICAvKiogUmVxdWlyZWQgdGl0bGUuICovXG4gIEBJbnB1dCgpIHRpdGxlOiBzdHJpbmc7XG4gIC8qKiBPcHRpb25hbCBzdWJ0aXRsZS4gKi9cbiAgQElucHV0KCkgc3VidGl0bGU6IHN0cmluZztcbiAgLyoqIFdoZXRoZXIgdG8gZGlzcGxheSBpdCBpbiBob3Jpem9udGFsIGxheW91dC4gKi9cbiAgQElucHV0KCkgaG9yaXpvbnRhbDogYm9vbGVhbjtcbn1cbiJdfQ==