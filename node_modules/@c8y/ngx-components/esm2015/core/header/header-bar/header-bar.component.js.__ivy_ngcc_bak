import { Component, Input } from '@angular/core';
import { ActionService } from '../../action/action.service';
import { BreadcrumbService } from '../../breadcrumb/breadcrumb.service';
import { SearchService } from '../../search/search.service';
import { AppStateService } from '../../common/ui-state.service';
import { UserMenuService } from '../../user/user-menu.service';
import { HeaderService } from '../header.service';
import { DocsService } from '../../docs/docs.service';
export class HeaderBarComponent {
    constructor(headerService, actionService, breadcrumbService, searchService, appState, userMenuService, docs) {
        this.headerService = headerService;
        this.actionService = actionService;
        this.breadcrumbService = breadcrumbService;
        this.searchService = searchService;
        this.appState = appState;
        this.userMenuService = userMenuService;
        this.docs = docs;
        this.canToggle$ = this.headerService.hasItemsInNavigator$;
        this.appState$ = this.appState.state$;
        this.drawerOpen = false;
        this.headerOpen = false;
        /**
         * Can be set to show an header bar with only
         * title, app-switcher and user-menu
         */
        this.simple = false;
    }
    ngAfterViewInit() {
        this.headerService.verifyIfNavOpen();
    }
}
HeaderBarComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-header-bar',
                template: "<div\n  class=\"app-main-header\"\n  [ngClass]=\"{\n    open: (headerService.navigatorOpen$ | async) && !simple,\n    drawerOpen: drawerOpen\n  }\"\n>\n  <div class=\"header-bar\">\n    <button\n      *ngIf=\"(canToggle$ | async) && !simple\"\n      type=\"button\"\n      class=\"navigator-toggle main-header-button\"\n      title=\"{{ 'Toggle navigator' | translate }}\"\n      (click)=\"headerService.toggleNavigator()\"\n    >\n      <i [c8yIcon]=\"'outdent'\" *ngIf=\"!(headerService.navigatorOpen$ | async)\"></i>\n      <i [c8yIcon]=\"'dedent-right'\" *ngIf=\"headerService.navigatorOpen$ | async\"></i>\n    </button>\n    <div class=\"app-view\">\n      <c8y-app-icon\n        [name]=\"(appState$ | async).app.name\"\n        [contextPath]=\"(appState$ | async).app.contextPath\"\n      ></c8y-app-icon>\n\n      <span class=\"page-header\">\n        <c8y-title-outlet></c8y-title-outlet>\n        <c8y-breadcrumb-outlet\n          *ngIf=\"!simple\"\n          [breadcrumbs]=\"breadcrumbService.items$ | async\"\n          class=\"app-breadcrumbs\"\n        ></c8y-breadcrumb-outlet>\n      </span>\n    </div>\n    <c8y-search-outlet\n      *ngIf=\"!simple\"\n      title=\"{{ 'Search' | translate }}\"\n      [search]=\"searchService.items$ | async\"\n      class=\"main-header-item\"\n    ></c8y-search-outlet>\n    <c8y-action-outlet\n      *ngIf=\"!simple\"\n      title=\"{{ 'Add' | translate }}\"\n      [items]=\"actionService.items$ | async\"\n    ></c8y-action-outlet>\n    <c8y-app-switcher\n      title=\"{{ 'Application switcher' | translate }}\"\n      class=\"main-header-item\"\n    ></c8y-app-switcher>\n    <c8y-user-menu-outlet\n      [items]=\"(userMenuService.state$ | async).userMenuItems\"\n      class=\"main-header-item\"\n    ></c8y-user-menu-outlet>\n\n    <button\n      title=\"{{ 'Toggle side drawer' | translate }}\"\n      class=\"drawer-toggle main-header-button\"\n      *ngIf=\"(appState$ | async).showRightDrawer && !simple\"\n      (click)=\"drawerOpen = !drawerOpen\"\n    >\n      <i [c8yIcon]=\"'indent'\" *ngIf=\"drawerOpen\"></i>\n      <i [c8yIcon]=\"'dedent'\" *ngIf=\"!drawerOpen\"></i>\n    </button>\n  </div>\n  <div class=\"head-toggler\">\n    <button title=\"{{ 'Toggle' | translate }}\" type=\"button\" (click)=\"headerService.toggle()\">\n      <i [c8yIcon]=\"'angle-right'\"></i>\n    </button>\n  </div>\n  <c8y-right-drawer\n    *ngIf=\"(appState$ | async).showRightDrawer\"\n    [app]=\"(appState$ | async).app\"\n    [quickLinks]=\"docs.items$ | async\"\n    [helpAndSupport]=\"docs.items$ | async\"\n  >\n  </c8y-right-drawer>\n  <div class=\"loading-bar\" [ngClass]=\"{ active: (appState$ | async).isLoading }\"></div>\n</div>\n"
            },] }
];
HeaderBarComponent.ctorParameters = () => [
    { type: HeaderService },
    { type: ActionService },
    { type: BreadcrumbService },
    { type: SearchService },
    { type: AppStateService },
    { type: UserMenuService },
    { type: DocsService }
];
HeaderBarComponent.propDecorators = {
    simple: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyLWJhci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL2hlYWRlci9oZWFkZXItYmFyL2hlYWRlci1iYXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBaUIsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVoRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0scUNBQXFDLENBQUM7QUFDeEUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUNoRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU10RCxNQUFNLE9BQU8sa0JBQWtCO0lBWTdCLFlBQ1MsYUFBNEIsRUFDNUIsYUFBNEIsRUFDNUIsaUJBQW9DLEVBQ3BDLGFBQTRCLEVBQzNCLFFBQXlCLEVBQzFCLGVBQWdDLEVBQ2hDLElBQWlCO1FBTmpCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBQzVCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFDcEMsa0JBQWEsR0FBYixhQUFhLENBQWU7UUFDM0IsYUFBUSxHQUFSLFFBQVEsQ0FBaUI7UUFDMUIsb0JBQWUsR0FBZixlQUFlLENBQWlCO1FBQ2hDLFNBQUksR0FBSixJQUFJLENBQWE7UUFsQjFCLGVBQVUsR0FBd0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxvQkFBb0IsQ0FBQztRQUMxRSxjQUFTLEdBQW9CLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDO1FBQ2xELGVBQVUsR0FBRyxLQUFLLENBQUM7UUFDbkIsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQjs7O1dBR0c7UUFFSCxXQUFNLEdBQUcsS0FBSyxDQUFDO0lBVVosQ0FBQztJQUVKLGVBQWU7UUFDYixJQUFJLENBQUMsYUFBYSxDQUFDLGVBQWUsRUFBRSxDQUFDO0lBQ3ZDLENBQUM7OztZQTVCRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtnQkFDMUIscXBGQUEwQzthQUMzQzs7O1lBTlEsYUFBYTtZQUxiLGFBQWE7WUFDYixpQkFBaUI7WUFDakIsYUFBYTtZQUNiLGVBQWU7WUFDZixlQUFlO1lBRWYsV0FBVzs7O3FCQWVqQixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQWN0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL2FjdGlvbi9hY3Rpb24uc2VydmljZSc7XG5pbXBvcnQgeyBCcmVhZGNydW1iU2VydmljZSB9IGZyb20gJy4uLy4uL2JyZWFkY3J1bWIvYnJlYWRjcnVtYi5zZXJ2aWNlJztcbmltcG9ydCB7IFNlYXJjaFNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZWFyY2gvc2VhcmNoLnNlcnZpY2UnO1xuaW1wb3J0IHsgQXBwU3RhdGVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vY29tbW9uL3VpLXN0YXRlLnNlcnZpY2UnO1xuaW1wb3J0IHsgVXNlck1lbnVTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vdXNlci91c2VyLW1lbnUuc2VydmljZSc7XG5pbXBvcnQgeyBIZWFkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vaGVhZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgRG9jc1NlcnZpY2UgfSBmcm9tICcuLi8uLi9kb2NzL2RvY3Muc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1oZWFkZXItYmFyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2hlYWRlci1iYXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIEhlYWRlckJhckNvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBjYW5Ub2dnbGUkOiBPYnNlcnZhYmxlPGJvb2xlYW4+ID0gdGhpcy5oZWFkZXJTZXJ2aWNlLmhhc0l0ZW1zSW5OYXZpZ2F0b3IkO1xuICBhcHBTdGF0ZSQ6IE9ic2VydmFibGU8YW55PiA9IHRoaXMuYXBwU3RhdGUuc3RhdGUkO1xuICBkcmF3ZXJPcGVuID0gZmFsc2U7XG4gIGhlYWRlck9wZW4gPSBmYWxzZTtcbiAgLyoqXG4gICAqIENhbiBiZSBzZXQgdG8gc2hvdyBhbiBoZWFkZXIgYmFyIHdpdGggb25seVxuICAgKiB0aXRsZSwgYXBwLXN3aXRjaGVyIGFuZCB1c2VyLW1lbnVcbiAgICovXG4gIEBJbnB1dCgpXG4gIHNpbXBsZSA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHB1YmxpYyBoZWFkZXJTZXJ2aWNlOiBIZWFkZXJTZXJ2aWNlLFxuICAgIHB1YmxpYyBhY3Rpb25TZXJ2aWNlOiBBY3Rpb25TZXJ2aWNlLFxuICAgIHB1YmxpYyBicmVhZGNydW1iU2VydmljZTogQnJlYWRjcnVtYlNlcnZpY2UsXG4gICAgcHVibGljIHNlYXJjaFNlcnZpY2U6IFNlYXJjaFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBhcHBTdGF0ZTogQXBwU3RhdGVTZXJ2aWNlLFxuICAgIHB1YmxpYyB1c2VyTWVudVNlcnZpY2U6IFVzZXJNZW51U2VydmljZSxcbiAgICBwdWJsaWMgZG9jczogRG9jc1NlcnZpY2VcbiAgKSB7fVxuXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLmhlYWRlclNlcnZpY2UudmVyaWZ5SWZOYXZPcGVuKCk7XG4gIH1cbn1cbiJdfQ==