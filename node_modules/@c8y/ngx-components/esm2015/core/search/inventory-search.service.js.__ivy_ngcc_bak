import { Injectable } from '@angular/core';
import { InventoryService } from '@c8y/client';
import { find, get, isUndefined, some } from 'lodash-es';
import * as i0 from "@angular/core";
import * as i1 from "@c8y/client/lib/src/inventory/InventoryService";
export class InventorySearchService {
    constructor(inventoryService) {
        this.inventoryService = inventoryService;
        this.FRAGMENTS_FOR_NO_DEVICE = [
            'c8y_Dashboard',
            'c8y_Report',
            'c8y_Kpi',
            'c8y_ExportConfiguration',
            'c8y_IsBinary',
            'c8y_NoDevice',
            'c8y_IsDeviceGroup',
            'c8y_Group',
            'com_cumulocity_model_smartrest_SmartRestTemplate',
            'com_cumulocity_model_devicesimulator_SensorTemplate',
            '_attachments',
            'c8y_IsDeviceType',
            'c8y_objectmapping_ObjectMapping',
            'c8y_IsAssetType'
        ];
        this.TYPES_FOR_NO_DEVICE = [
            'c8y_ConfigurationDump',
            'c8y_Firmware',
            'c8y_SmartRule',
            'c8y_Software',
            'impact_object_mapping',
            'c8y_UserPreference',
            'c8y_TenantPolicy',
            'c8y_PrivateSmartRule',
            'c8y_SmartRest2Template',
            'c8y_JsonSchema',
            'c8y_DeviceShellTemplate',
            'c8y_DemoStatus',
            'c8y_DataBroker',
            'c8y_Application_',
            'brandingVariables',
            'c8y_DeviceSimulator',
            'c8y_CertificateMetadata',
            'lwm2m_post_registration',
            'c8y_microservice_manifest_'
        ];
        this.DEVICE_FRAGMENT_TYPE = 'c8y_IsDevice';
        this.DEFAULT_PAGE_SIZE = 50;
    }
    /**
     * Returns the full-text search results.
     *
     * @param term The search term.
     * @param pagination The currently used pagination.
     */
    search(term, pagination = { currentPage: 1, pageSize: this.DEFAULT_PAGE_SIZE }) {
        return this.inventoryService.list({
            text: term,
            withTotalPages: true,
            pageSize: pagination.pageSize,
            withChildren: false,
            currentPage: pagination.currentPage || 1
        });
    }
    /**
     * Will return only valid assets (groups and devices) and filter out
     * none useful inventories (e.g. c8y_JsonSchema).
     * @param data All managed objects that should be filtered.
     */
    filterOnlyAssets(data) {
        return data.filter(mo => mo.c8y_IsDeviceGroup || this.isAnyDevice(mo));
    }
    isAnyDevice(mo) {
        const isDevice = this.isRootDevice(mo) || !this.hasFragmentOrTypeFromBlacklist(mo);
        return isDevice;
    }
    hasFragmentOrTypeFromBlacklist(mo) {
        return this.hasTypeFromBlacklist(mo) || this.hasFragmentFromBlacklist(mo);
    }
    hasTypeFromBlacklist(mo) {
        const moType = get(mo, 'type', '');
        return some(this.TYPES_FOR_NO_DEVICE, type => moType.includes(type));
    }
    hasFragmentFromBlacklist(mo) {
        return find(this.FRAGMENTS_FOR_NO_DEVICE, f => !isUndefined(mo[f]));
    }
    isRootDevice(mo) {
        return !!mo[this.DEVICE_FRAGMENT_TYPE];
    }
}
InventorySearchService.ɵprov = i0.ɵɵdefineInjectable({ factory: function InventorySearchService_Factory() { return new InventorySearchService(i0.ɵɵinject(i1.InventoryService)); }, token: InventorySearchService, providedIn: "root" });
InventorySearchService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
InventorySearchService.ctorParameters = () => [
    { type: InventoryService }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW52ZW50b3J5LXNlYXJjaC5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9zZWFyY2gvaW52ZW50b3J5LXNlYXJjaC5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFrQixnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvRCxPQUFPLEVBQUUsSUFBSSxFQUFFLEdBQUcsRUFBRSxXQUFXLEVBQUUsSUFBSSxFQUFFLE1BQU0sV0FBVyxDQUFDOzs7QUFNekQsTUFBTSxPQUFPLHNCQUFzQjtJQXlDakMsWUFBb0IsZ0JBQWtDO1FBQWxDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUF4Q3RELDRCQUF1QixHQUFHO1lBQ3hCLGVBQWU7WUFDZixZQUFZO1lBQ1osU0FBUztZQUNULHlCQUF5QjtZQUN6QixjQUFjO1lBQ2QsY0FBYztZQUNkLG1CQUFtQjtZQUNuQixXQUFXO1lBQ1gsa0RBQWtEO1lBQ2xELHFEQUFxRDtZQUNyRCxjQUFjO1lBQ2Qsa0JBQWtCO1lBQ2xCLGlDQUFpQztZQUNqQyxpQkFBaUI7U0FDbEIsQ0FBQztRQUNGLHdCQUFtQixHQUFHO1lBQ3BCLHVCQUF1QjtZQUN2QixjQUFjO1lBQ2QsZUFBZTtZQUNmLGNBQWM7WUFDZCx1QkFBdUI7WUFDdkIsb0JBQW9CO1lBQ3BCLGtCQUFrQjtZQUNsQixzQkFBc0I7WUFDdEIsd0JBQXdCO1lBQ3hCLGdCQUFnQjtZQUNoQix5QkFBeUI7WUFDekIsZ0JBQWdCO1lBQ2hCLGdCQUFnQjtZQUNoQixrQkFBa0I7WUFDbEIsbUJBQW1CO1lBQ25CLHFCQUFxQjtZQUNyQix5QkFBeUI7WUFDekIseUJBQXlCO1lBQ3pCLDRCQUE0QjtTQUM3QixDQUFDO1FBQ0YseUJBQW9CLEdBQUcsY0FBYyxDQUFDO1FBQzVCLHNCQUFpQixHQUFHLEVBQUUsQ0FBQztJQUV3QixDQUFDO0lBRTFEOzs7OztPQUtHO0lBQ0gsTUFBTSxDQUNKLElBQVksRUFDWixhQUF5QixFQUFFLFdBQVcsRUFBRSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtRQUU3RSxPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7WUFDaEMsSUFBSSxFQUFFLElBQUk7WUFDVixjQUFjLEVBQUUsSUFBSTtZQUNwQixRQUFRLEVBQUUsVUFBVSxDQUFDLFFBQVE7WUFDN0IsWUFBWSxFQUFFLEtBQUs7WUFDbkIsV0FBVyxFQUFFLFVBQVUsQ0FBQyxXQUFXLElBQUksQ0FBQztTQUN6QyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILGdCQUFnQixDQUFDLElBQXNCO1FBQ3JDLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVPLFdBQVcsQ0FBQyxFQUFFO1FBQ3BCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsOEJBQThCLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDbkYsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQztJQUVPLDhCQUE4QixDQUFDLEVBQUU7UUFDdkMsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsRUFBRSxDQUFDLElBQUksSUFBSSxDQUFDLHdCQUF3QixDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7SUFFTyxvQkFBb0IsQ0FBQyxFQUFFO1FBQzdCLE1BQU0sTUFBTSxHQUFHLEdBQUcsQ0FBQyxFQUFFLEVBQUUsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1FBQ25DLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztJQUN2RSxDQUFDO0lBRU8sd0JBQXdCLENBQUMsRUFBRTtRQUNqQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsdUJBQXVCLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3RFLENBQUM7SUFFTyxZQUFZLENBQUMsRUFBRTtRQUNyQixPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLG9CQUFvQixDQUFDLENBQUM7SUFDekMsQ0FBQzs7OztZQTlGRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7OztZQU53QixnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCwgSW52ZW50b3J5U2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGZpbmQsIGdldCwgaXNVbmRlZmluZWQsIHNvbWUgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgUGFnaW5hdGlvbiB9IGZyb20gJy4uL2RhdGEtZ3JpZCc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIEludmVudG9yeVNlYXJjaFNlcnZpY2Uge1xuICBGUkFHTUVOVFNfRk9SX05PX0RFVklDRSA9IFtcbiAgICAnYzh5X0Rhc2hib2FyZCcsXG4gICAgJ2M4eV9SZXBvcnQnLFxuICAgICdjOHlfS3BpJyxcbiAgICAnYzh5X0V4cG9ydENvbmZpZ3VyYXRpb24nLFxuICAgICdjOHlfSXNCaW5hcnknLFxuICAgICdjOHlfTm9EZXZpY2UnLFxuICAgICdjOHlfSXNEZXZpY2VHcm91cCcsXG4gICAgJ2M4eV9Hcm91cCcsXG4gICAgJ2NvbV9jdW11bG9jaXR5X21vZGVsX3NtYXJ0cmVzdF9TbWFydFJlc3RUZW1wbGF0ZScsXG4gICAgJ2NvbV9jdW11bG9jaXR5X21vZGVsX2RldmljZXNpbXVsYXRvcl9TZW5zb3JUZW1wbGF0ZScsXG4gICAgJ19hdHRhY2htZW50cycsXG4gICAgJ2M4eV9Jc0RldmljZVR5cGUnLFxuICAgICdjOHlfb2JqZWN0bWFwcGluZ19PYmplY3RNYXBwaW5nJyxcbiAgICAnYzh5X0lzQXNzZXRUeXBlJ1xuICBdO1xuICBUWVBFU19GT1JfTk9fREVWSUNFID0gW1xuICAgICdjOHlfQ29uZmlndXJhdGlvbkR1bXAnLFxuICAgICdjOHlfRmlybXdhcmUnLFxuICAgICdjOHlfU21hcnRSdWxlJyxcbiAgICAnYzh5X1NvZnR3YXJlJyxcbiAgICAnaW1wYWN0X29iamVjdF9tYXBwaW5nJyxcbiAgICAnYzh5X1VzZXJQcmVmZXJlbmNlJyxcbiAgICAnYzh5X1RlbmFudFBvbGljeScsXG4gICAgJ2M4eV9Qcml2YXRlU21hcnRSdWxlJyxcbiAgICAnYzh5X1NtYXJ0UmVzdDJUZW1wbGF0ZScsXG4gICAgJ2M4eV9Kc29uU2NoZW1hJyxcbiAgICAnYzh5X0RldmljZVNoZWxsVGVtcGxhdGUnLFxuICAgICdjOHlfRGVtb1N0YXR1cycsXG4gICAgJ2M4eV9EYXRhQnJva2VyJyxcbiAgICAnYzh5X0FwcGxpY2F0aW9uXycsXG4gICAgJ2JyYW5kaW5nVmFyaWFibGVzJyxcbiAgICAnYzh5X0RldmljZVNpbXVsYXRvcicsXG4gICAgJ2M4eV9DZXJ0aWZpY2F0ZU1ldGFkYXRhJyxcbiAgICAnbHdtMm1fcG9zdF9yZWdpc3RyYXRpb24nLFxuICAgICdjOHlfbWljcm9zZXJ2aWNlX21hbmlmZXN0XydcbiAgXTtcbiAgREVWSUNFX0ZSQUdNRU5UX1RZUEUgPSAnYzh5X0lzRGV2aWNlJztcbiAgcHJvdGVjdGVkIERFRkFVTFRfUEFHRV9TSVpFID0gNTA7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbnZlbnRvcnlTZXJ2aWNlOiBJbnZlbnRvcnlTZXJ2aWNlKSB7fVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBmdWxsLXRleHQgc2VhcmNoIHJlc3VsdHMuXG4gICAqXG4gICAqIEBwYXJhbSB0ZXJtIFRoZSBzZWFyY2ggdGVybS5cbiAgICogQHBhcmFtIHBhZ2luYXRpb24gVGhlIGN1cnJlbnRseSB1c2VkIHBhZ2luYXRpb24uXG4gICAqL1xuICBzZWFyY2goXG4gICAgdGVybTogc3RyaW5nLFxuICAgIHBhZ2luYXRpb246IFBhZ2luYXRpb24gPSB7IGN1cnJlbnRQYWdlOiAxLCBwYWdlU2l6ZTogdGhpcy5ERUZBVUxUX1BBR0VfU0laRSB9XG4gICkge1xuICAgIHJldHVybiB0aGlzLmludmVudG9yeVNlcnZpY2UubGlzdCh7XG4gICAgICB0ZXh0OiB0ZXJtLFxuICAgICAgd2l0aFRvdGFsUGFnZXM6IHRydWUsXG4gICAgICBwYWdlU2l6ZTogcGFnaW5hdGlvbi5wYWdlU2l6ZSxcbiAgICAgIHdpdGhDaGlsZHJlbjogZmFsc2UsXG4gICAgICBjdXJyZW50UGFnZTogcGFnaW5hdGlvbi5jdXJyZW50UGFnZSB8fCAxXG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogV2lsbCByZXR1cm4gb25seSB2YWxpZCBhc3NldHMgKGdyb3VwcyBhbmQgZGV2aWNlcykgYW5kIGZpbHRlciBvdXRcbiAgICogbm9uZSB1c2VmdWwgaW52ZW50b3JpZXMgKGUuZy4gYzh5X0pzb25TY2hlbWEpLlxuICAgKiBAcGFyYW0gZGF0YSBBbGwgbWFuYWdlZCBvYmplY3RzIHRoYXQgc2hvdWxkIGJlIGZpbHRlcmVkLlxuICAgKi9cbiAgZmlsdGVyT25seUFzc2V0cyhkYXRhOiBJTWFuYWdlZE9iamVjdFtdKTogSU1hbmFnZWRPYmplY3RbXSB7XG4gICAgcmV0dXJuIGRhdGEuZmlsdGVyKG1vID0+IG1vLmM4eV9Jc0RldmljZUdyb3VwIHx8IHRoaXMuaXNBbnlEZXZpY2UobW8pKTtcbiAgfVxuXG4gIHByaXZhdGUgaXNBbnlEZXZpY2UobW8pOiBib29sZWFuIHtcbiAgICBjb25zdCBpc0RldmljZSA9IHRoaXMuaXNSb290RGV2aWNlKG1vKSB8fCAhdGhpcy5oYXNGcmFnbWVudE9yVHlwZUZyb21CbGFja2xpc3QobW8pO1xuICAgIHJldHVybiBpc0RldmljZTtcbiAgfVxuXG4gIHByaXZhdGUgaGFzRnJhZ21lbnRPclR5cGVGcm9tQmxhY2tsaXN0KG1vKTogYm9vbGVhbiB7XG4gICAgcmV0dXJuIHRoaXMuaGFzVHlwZUZyb21CbGFja2xpc3QobW8pIHx8IHRoaXMuaGFzRnJhZ21lbnRGcm9tQmxhY2tsaXN0KG1vKTtcbiAgfVxuXG4gIHByaXZhdGUgaGFzVHlwZUZyb21CbGFja2xpc3QobW8pOiBib29sZWFuIHtcbiAgICBjb25zdCBtb1R5cGUgPSBnZXQobW8sICd0eXBlJywgJycpO1xuICAgIHJldHVybiBzb21lKHRoaXMuVFlQRVNfRk9SX05PX0RFVklDRSwgdHlwZSA9PiBtb1R5cGUuaW5jbHVkZXModHlwZSkpO1xuICB9XG5cbiAgcHJpdmF0ZSBoYXNGcmFnbWVudEZyb21CbGFja2xpc3QobW8pOiBib29sZWFuIHtcbiAgICByZXR1cm4gZmluZCh0aGlzLkZSQUdNRU5UU19GT1JfTk9fREVWSUNFLCBmID0+ICFpc1VuZGVmaW5lZChtb1tmXSkpO1xuICB9XG5cbiAgcHJpdmF0ZSBpc1Jvb3REZXZpY2UobW8pOiBib29sZWFuIHtcbiAgICByZXR1cm4gISFtb1t0aGlzLkRFVklDRV9GUkFHTUVOVF9UWVBFXTtcbiAgfVxufVxuIl19