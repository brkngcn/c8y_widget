import { __awaiter, __decorate } from "tslib";
import { Component, ViewChild, Input, Output, EventEmitter, HostListener } from '@angular/core';
import { Router } from '@angular/router';
import { InventoryService } from '@c8y/client';
import { TypeaheadComponent } from '../select/typeahead.component';
import { defer, empty, merge, of, pipe } from 'rxjs';
import { map, switchMap, tap } from 'rxjs/operators';
import { InventorySearchService } from './inventory-search.service';
import { AssetTypesService } from '../asset-types/asset-types.service';
import { memoize } from '../common/memoize.decorator';
import { property } from 'lodash-es';
export class SearchInputComponent {
    constructor(router, inventory, searchService, assetTypesService) {
        this.router = router;
        this.inventory = inventory;
        this.searchService = searchService;
        this.assetTypesService = assetTypesService;
        this.mode = 'search';
        this.container = '';
        this.filter = new EventEmitter();
        this.search = new EventEmitter();
        this.reset = new EventEmitter();
        this.onClick = new EventEmitter();
        this.term = '';
        this.filterPipe = pipe(map((data) => {
            return this.searchService.filterOnlyAssets(data);
        }));
        this.recentSearchResults = [];
        this.isLoading = false;
        this.noMatch = false;
        this.RECENT_SEARCH_STORAGE_KEY = 'recent_search_view';
        this.MAX_RECENT_SEARCH_RESULTS = 5;
        this.DEFAULT_FILTER = {
            withTotalPages: true,
            pageSize: 5,
            withChildren: false
        };
        this.KEYCODE_ENTER = 'Enter';
        this.KEYCODE_ESC = 'Escape';
    }
    ngOnInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const recentSearchIds = JSON.parse(localStorage.getItem(this.RECENT_SEARCH_STORAGE_KEY));
            if (recentSearchIds && recentSearchIds.length > 0) {
                const { data } = yield this.inventory.list({ ids: recentSearchIds.join(',') });
                this.recentSearchResults = data;
                this.recentlyRegisteredResults$ = defer(() => this.inventory.list(Object.assign({ q: '$orderby=creationTime desc' }, this.DEFAULT_FILTER)));
            }
            if (this.mode === 'select') {
                requestAnimationFrame(() => {
                    this.subscribeOnSearch();
                });
            }
        });
    }
    onKeydownHandler(event) {
        if (event.key === this.KEYCODE_ESC) {
            this.hideDropdown();
        }
    }
    getIcon(mo) {
        return this.assetTypesService.getIcon(mo.type) || 'c8y-group-open';
    }
    onOpenChange(isOpen) {
        if (isOpen) {
            // needs to request an animation frame as
            // otherwise the typeahead is undefined
            requestAnimationFrame(() => {
                this.subscribeOnSearch();
                this.typeahead.dropdown.show();
                this.typeahead.searchControl.nativeElement.focus();
            });
        }
    }
    open(event, mo, term) {
        event.stopPropagation();
        const isAlreadyRecent = this.recentSearchResults.find(({ id }) => id === mo.id);
        if (!isAlreadyRecent) {
            this.recentSearchResults.unshift(mo);
            this.recentSearchResults = this.recentSearchResults.slice(0, this.MAX_RECENT_SEARCH_RESULTS);
        }
        const recentSearchIds = this.recentSearchResults.map(({ id }) => id);
        localStorage.setItem(this.RECENT_SEARCH_STORAGE_KEY, JSON.stringify(recentSearchIds));
        if (term) {
            this.selected = mo;
            this.term = term;
        }
        this.onClick.emit(mo);
        this.hideDropdown();
    }
    onReset(status) {
        status.$event.stopPropagation();
        this.reset.emit(this.term);
        this.typeahead.onSearch.emit('');
        this.selected = undefined;
        this.typeahead.searchControl.nativeElement.focus();
    }
    keyDown(event) {
        if (event.key === this.KEYCODE_ENTER) {
            // enter hit can be faster then typeahead debounce,
            // therefore we take the term from the DOM element
            // itself:
            const searchTerm = event.target.value;
            this.onSearch(searchTerm);
        }
    }
    onSearch(search) {
        this.search.emit(search);
        this.hideDropdown();
    }
    onFilter(search) {
        this.filter.emit(search);
        this.hideDropdown();
    }
    onOpenAssetTable() {
        this.router.navigateByUrl('/assetsearch');
        this.hideDropdown();
    }
    hideDropdown() {
        if (this.dropdown) {
            this.dropdown.hide();
            return;
        }
        if (this.typeahead && this.typeahead.dropdown) {
            this.typeahead.dropdown.hide();
            return;
        }
    }
    subscribeOnSearch() {
        if (!this.results$) {
            this.results$ = this.typeahead.onSearch.pipe(tap(term => this.onTypingStarted(term)), switchMap(term => this.mergeRequest(term)));
        }
    }
    navigate(commands, extras) {
        this.router
            .navigateByUrl('/', { skipLocationChange: true })
            .then(() => this.router.navigate(commands, extras));
    }
    mergeRequest(term) {
        return merge(of({ data: [] }), this.queryInventoryService(term).pipe(tap(({ data, paging }) => this.onLoadingDone(data, paging))));
    }
    queryInventoryService(term) {
        if (term) {
            return defer(() => this.searchService.search(term));
        }
        return empty();
    }
    onLoadingDone(data, paging) {
        this.isLoading = false;
        this.noMatch =
            paging && paging.nextPage === null && this.searchService.filterOnlyAssets(data).length === 0;
    }
    onTypingStarted(term) {
        this.noMatch = false;
        this.term = term;
        this.isLoading = term.length > 0;
    }
}
SearchInputComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-search-input',
                template: "<div\n  class=\"dropdown\"\n  dropdown\n  #dropdown=\"bs-dropdown\"\n  [insideClick]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n  *ngIf=\"mode === 'search'\"\n>\n  <button\n    class=\"main-header-button dropdown-toggle c8y-dropdown\"\n    dropdownToggle\n    type=\"button\"\n    [title]=\"'Search' | translate\"\n    aria-controls=\"searchDropdown\"\n  >\n    <i c8yIcon=\"search\" class=\"icon-2x\"></i>\n  </button>\n\n  <div\n    id=\"searchDropdown\"\n    *dropdownMenu\n    class=\"search-header-menu dropdown-menu dropdown-menu-center\"\n  >\n    <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n  </div>\n</div>\n\n<div class=\"search-header-inline\" *ngIf=\"mode === 'select'\">\n  <ng-container *ngTemplateOutlet=\"form\"></ng-container>\n</div>\n\n<ng-template #form>\n  <form [ngClass]=\"{ 'c8y-search-form': mode === 'search' }\" novalidate #searchForm=\"ngForm\">\n    <c8y-typeahead\n      [(ngModel)]=\"selected\"\n      placeholder=\"{{ 'Search for groups or assets\u2026' | translate }}\"\n      (keydown)=\"keyDown($event)\"\n      (onIconClick)=\"onReset($event)\"\n      [icon]=\"term ? 'times' : 'search'\"\n      [allowFreeEntries]=\"false\"\n      [container]=\"container\"\n      name=\"selected\"\n    >\n      <!-- filter buttons -->\n      <c8y-li *ngIf=\"term.length !== 0\" class=\"p-l-16 p-r-16\">\n        <div class=\"flex-row\" *ngIf=\"mode === 'search'\">\n          <p class=\"m-r-4 text-muted\">\n            <em translate>Searching by exact match. Click for other search options:</em>\n          </p>\n          <div class=\"btn-group btn-group-sm\">\n            <button\n              class=\"btn btn-default\"\n              title=\"{{ 'Starts with' | translate }}\"\n              (click)=\"onFilter(term + '*')\"\n            >\n              {{ 'Starts with' | translate }}\n            </button>\n            <button\n              class=\"btn btn-default\"\n              title=\"{{ 'Contains' | translate }}\"\n              (click)=\"onFilter('*' + term + '*')\"\n            >\n              {{ 'Contains' | translate }}\n            </button>\n            <button\n              class=\"btn btn-default\"\n              title=\"{{ 'Ends with' | translate }}\"\n              (click)=\"onFilter('*' + term)\"\n            >\n              {{ 'Ends with' | translate }}\n            </button>\n          </div>\n        </div>\n      </c8y-li>\n\n      <!-- Recent search -->\n      <c8y-li\n        *ngIf=\"term.length === 0 && recentSearchResults.length > 0\"\n        [selectable]=\"false\"\n        class=\"p-l-24 p-r-24\"\n      >\n        <div class=\"legend form-block\">\n          <span translate>Recent search views</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *ngFor=\"let result of term.length === 0 ? recentSearchResults : []\"\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n      >\n        <c8y-li-icon>\n          <device-status [mo]=\"result\" *ngIf=\"!result.c8y_IsDeviceGroup\"></device-status>\n          <i\n            [c8yIcon]=\"getIcon(result)\"\n            class=\"c8y-icon-duocolor\"\n            *ngIf=\"result.c8y_IsDeviceGroup\"\n          ></i>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- Recently registered devices -->\n      <c8y-li\n        *ngIf=\"term.length === 0 && (recentlyRegisteredResults$ | async)?.data?.length > 0\"\n        class=\"p-l-24 p-r-24\"\n        [selectable]=\"false\"\n      >\n        <div class=\"legend form-block\">\n          <span translate>Recently registered devices</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *c8yFor=\"\n          let result of term.length === 0 ? recentlyRegisteredResults$ : { data: [] };\n          loadMore: 'none';\n          pipe: filterPipe\n        \"\n        class=\"c8y-list__item--link m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n      >\n        <c8y-li-icon>\n          <device-status [mo]=\"result\" *ngIf=\"!result.c8y_IsDeviceGroup\"></device-status>\n          <i\n          [c8yIcon]=\"getIcon(result)\"\n            class=\"c8y-icon-duocolor\"\n            *ngIf=\"result.c8y_IsDeviceGroup\"\n          ></i>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- Search results -->\n      <c8y-li *ngIf=\"term.length !== 0\" class=\"p-l-24 p-r-24\" [selectable]=\"false\">\n        <div class=\"legend form-block\">\n          <span translate>Search results</span>\n        </div>\n      </c8y-li>\n      <c8y-li\n        *c8yFor=\"\n          let result of results$;\n          loadMore: 'auto';\n          pipe: filterPipe;\n          notFound: notFoundTemplate;\n          loadingTemplate: loading;\n          loadNextLabel: 'Find more\u2026'\n        \"\n        class=\"c8y-list__item--link  m-l-16 m-r-16\"\n        (click)=\"open($event, result, result.name)\"\n        [title]=\"result.name\"\n      >\n        <c8y-li-icon>\n          <device-status [mo]=\"result\" *ngIf=\"!result.c8y_IsDeviceGroup\"></device-status>\n          <i\n            [c8yIcon]=\"getIcon(result)\"\n            class=\"c8y-icon-duocolor\"\n            *ngIf=\"result.c8y_IsDeviceGroup\"\n          ></i>\n        </c8y-li-icon>\n        {{ result.name || '--' }}\n      </c8y-li>\n\n      <!-- No search results found entry -->\n      <ng-template #notFoundTemplate>\n        <c8y-li *ngIf=\"noMatch\" class=\"p-16 c8y-empty-state\" [selectable]=\"false\">\n          <c8y-li-icon [icon]=\"'search'\"></c8y-li-icon>\n          <p><strong translate>No match found.</strong></p>\n          <small translate *ngIf=\"mode === 'search'\">\n            Try to filter or open the asset grid to show all devices and groups.\n          </small>\n          <small translate *ngIf=\"mode === 'select'\">\n            Try to rephrase your search word.\n          </small>\n        </c8y-li>\n      </ng-template>\n\n      <!-- loading bar first entries -->\n      <c8y-li *ngIf=\"isLoading\" class=\"p-t-32 p-b-0\" style=\"position: relative;\">\n        <div class=\"spinner\" style=\"right:0;\">\n          <div class=\"rect1\"></div>\n          <div class=\"rect2\"></div>\n          <div class=\"rect3\"></div>\n          <div class=\"rect4\"></div>\n          <div class=\"rect5\"></div>\n        </div>\n      </c8y-li>\n\n      <!-- loading bar for loading more entries (inventory roles) -->\n      <ng-template #loading>\n        <c8y-li class=\"text-center p-t-32 p-b-0\" style=\"position:relative;\">\n          <div class=\"spinner\" style=\"right:0;\">\n            <div class=\"rect1\"></div>\n            <div class=\"rect2\"></div>\n            <div class=\"rect3\"></div>\n            <div class=\"rect4\"></div>\n            <div class=\"rect5\"></div>\n          </div>\n        </c8y-li>\n      </ng-template>\n\n      <!-- more filter possibilities -->\n      <c8y-li\n        class=\"m-t-24 bg-gray-lighter p-t-16 p-b-16 p-l-24 p-r-24\"\n        [selectable]=\"false\"\n        *ngIf=\"mode === 'search'\"\n      >\n        <div class=\"flex-row\">\n          <i c8yIcon=\"info-circle\" class=\"text-info m-r-4\"></i>\n          <p translate class=\"m-r-8\">Need more filter possibilities?</p>\n          <button\n            type=\"button\"\n            class=\"m-l-auto btn btn-default btn-sm\"\n            translate\n            (mousedown)=\"onOpenAssetTable()\"\n          >\n            Go to the asset data table\n          </button>\n        </div>\n      </c8y-li>\n    </c8y-typeahead>\n  </form>\n</ng-template>\n"
            },] }
];
SearchInputComponent.ctorParameters = () => [
    { type: Router },
    { type: InventoryService },
    { type: InventorySearchService },
    { type: AssetTypesService }
];
SearchInputComponent.propDecorators = {
    mode: [{ type: Input }],
    container: [{ type: Input }],
    filter: [{ type: Output }],
    search: [{ type: Output }],
    reset: [{ type: Output }],
    onClick: [{ type: Output }],
    typeahead: [{ type: ViewChild, args: [TypeaheadComponent, { static: false },] }],
    dropdown: [{ type: ViewChild, args: ['dropdown', { static: false },] }],
    onKeydownHandler: [{ type: HostListener, args: ['document:keydown', ['$event'],] }]
};
__decorate([
    memoize(property('id'))
], SearchInputComponent.prototype, "getIcon", null);
//# sourceMappingURL=data:application/json;base64,