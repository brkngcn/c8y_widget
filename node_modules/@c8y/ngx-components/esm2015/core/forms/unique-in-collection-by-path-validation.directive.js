import { Directive, Input } from '@angular/core';
import { NG_VALIDATORS } from '@angular/forms';
import { find, get, isEqualWith } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
export class UniqueInCollectionByPathValidationDirective {
    validate(control) {
        const match = find(this.collection, element => isEqualWith(get(element, this.path), control.value, this.comparator));
        return !!match && !!control.value
            ? { uniqueByPath: { key: this.path, value: get(match, this.path) } }
            : null;
    }
}
UniqueInCollectionByPathValidationDirective.ɵfac = function UniqueInCollectionByPathValidationDirective_Factory(t) { return new (t || UniqueInCollectionByPathValidationDirective)(); };
UniqueInCollectionByPathValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: UniqueInCollectionByPathValidationDirective, selectors: [["", "uniqueByPath", ""]], inputs: { collection: "collection", path: "path", comparator: "comparator" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALIDATORS,
                useExisting: UniqueInCollectionByPathValidationDirective,
                multi: true
            }
        ])] });
UniqueInCollectionByPathValidationDirective.propDecorators = {
    collection: [{ type: Input }],
    path: [{ type: Input }],
    comparator: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UniqueInCollectionByPathValidationDirective, [{
        type: Directive,
        args: [{
                selector: '[uniqueByPath]',
                providers: [
                    {
                        provide: NG_VALIDATORS,
                        useExisting: UniqueInCollectionByPathValidationDirective,
                        multi: true
                    }
                ]
            }]
    }], null, { collection: [{
            type: Input
        }], path: [{
            type: Input
        }], comparator: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidW5pcXVlLWluLWNvbGxlY3Rpb24tYnktcGF0aC12YWxpZGF0aW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9mb3Jtcy91bmlxdWUtaW4tY29sbGVjdGlvbi1ieS1wYXRoLXZhbGlkYXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBbUIsYUFBYSxFQUFhLE1BQU0sZ0JBQWdCLENBQUM7QUFDM0UsT0FBTyxFQUFFLElBQUksRUFBRSxHQUFHLEVBQUUsV0FBVyxFQUFFLE1BQU0sV0FBVyxDQUFDOztBQVluRCxNQUFNLE9BQU8sMkNBQTJDO0FBQUcsSUFLekQsUUFBUSxDQUFDLE9BQXdCO0FBQUksUUFDbkMsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLEVBQUUsQ0FDNUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUNyRSxDQUFDO0FBQ04sUUFDSSxPQUFPLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLO0FBQ3JDLFlBQU0sQ0FBQyxDQUFDLEVBQUUsWUFBWSxFQUFFLEVBQUUsR0FBRyxFQUFFLElBQUksQ0FBQyxJQUFJLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUU7QUFDMUUsWUFBTSxDQUFDLENBQUMsSUFBSSxDQUFDO0FBQ2IsSUFBRSxDQUFDO0FBQ0g7dUVBeEJDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsZ0JBQWdCLGtCQUMxQixTQUFTLEVBQUUsc0JBQ1Q7eUJBQ0UsT0FBTyxFQUFFLGFBQWEsMEJBQ3RCLFdBQVcsRUFBRSwyQ0FBMkMsMEJBQ3hELEtBQUssRUFBRSxJQUFJLHNCQUNaLGtCQUNGLGNBQ0Y7Ozs7OztlQUNJO0FBQUM7QUFBK0QseUJBQ2xFLEtBQUs7QUFBSyxtQkFDVixLQUFLO0FBQUsseUJBQ1YsS0FBSztBQUFJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBYnN0cmFjdENvbnRyb2wsIE5HX1ZBTElEQVRPUlMsIFZhbGlkYXRvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IGZpbmQsIGdldCwgaXNFcXVhbFdpdGggfSBmcm9tICdsb2Rhc2gtZXMnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbdW5pcXVlQnlQYXRoXScsXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IE5HX1ZBTElEQVRPUlMsXG4gICAgICB1c2VFeGlzdGluZzogVW5pcXVlSW5Db2xsZWN0aW9uQnlQYXRoVmFsaWRhdGlvbkRpcmVjdGl2ZSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFVuaXF1ZUluQ29sbGVjdGlvbkJ5UGF0aFZhbGlkYXRpb25EaXJlY3RpdmUgaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xuICBASW5wdXQoKSBjb2xsZWN0aW9uOiBJdGVyYWJsZTxvYmplY3Q+O1xuICBASW5wdXQoKSBwYXRoOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbXBhcmF0b3I6ICh2YWwxOiBhbnksIHZhbDI6IGFueSkgPT4gYm9vbGVhbjtcblxuICB2YWxpZGF0ZShjb250cm9sOiBBYnN0cmFjdENvbnRyb2wpOiB7IFtrZXk6IHN0cmluZ106IGFueSB9IHwgbnVsbCB7XG4gICAgY29uc3QgbWF0Y2ggPSBmaW5kKHRoaXMuY29sbGVjdGlvbiwgZWxlbWVudCA9PlxuICAgICAgaXNFcXVhbFdpdGgoZ2V0KGVsZW1lbnQsIHRoaXMucGF0aCksIGNvbnRyb2wudmFsdWUsIHRoaXMuY29tcGFyYXRvcilcbiAgICApO1xuXG4gICAgcmV0dXJuICEhbWF0Y2ggJiYgISFjb250cm9sLnZhbHVlXG4gICAgICA/IHsgdW5pcXVlQnlQYXRoOiB7IGtleTogdGhpcy5wYXRoLCB2YWx1ZTogZ2V0KG1hdGNoLCB0aGlzLnBhdGgpIH0gfVxuICAgICAgOiBudWxsO1xuICB9XG59XG4iXX0=