import { NG_VALIDATORS } from '@angular/forms';
import { Directive, Input } from '@angular/core';
import { isUndefined, isFinite } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
export class MaxValidationDirective {
    constructor() {
        this.max = '';
    }
    validate(control) {
        const parsedMax = typeof this.max === 'number' ? this.max : parseFloat(this.max);
        if (isUndefined(control.value) || !isFinite(parsedMax)) {
            return null;
        }
        const valid = !(control.value > parsedMax);
        return valid ? null : { max: { max: parsedMax, actual: control.value } };
    }
}
MaxValidationDirective.ɵfac = function MaxValidationDirective_Factory(t) { return new (t || MaxValidationDirective)(); };
MaxValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MaxValidationDirective, selectors: [["", "max", ""]], inputs: { max: "max" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true }])] });
MaxValidationDirective.propDecorators = {
    max: [{ type: Input }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MaxValidationDirective, [{
        type: Directive,
        args: [{
                selector: '[max]',
                providers: [{ provide: NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true }]
            }]
    }], function () { return []; }, { max: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF4LXZhbGlkYXRpb24uZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL2Zvcm1zL21heC12YWxpZGF0aW9uLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW1CLGFBQWEsRUFBYSxNQUFNLGdCQUFnQixDQUFDO0FBQzNFLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRWpELE9BQU8sRUFBRSxXQUFXLEVBQUUsUUFBUSxFQUFFLE1BQU0sV0FBVyxDQUFDOztBQU1sRCxNQUFNLE9BQU8sc0JBQXNCO0FBQUcsSUFKdEM7QUFDRyxRQUlRLFFBQUcsR0FBb0IsRUFBRSxDQUFDO0FBQ3JDLElBVUEsQ0FBQztBQUNELElBVkUsUUFBUSxDQUFDLE9BQXdCO0FBQUksUUFDbkMsTUFBTSxTQUFTLEdBQUcsT0FBTyxJQUFJLENBQUMsR0FBRyxLQUFLLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNyRixRQUFJLElBQUksV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxTQUFTLENBQUMsRUFBRTtBQUM1RCxZQUFNLE9BQU8sSUFBSSxDQUFDO0FBQ2xCLFNBQUs7QUFDTCxRQUNJLE1BQU0sS0FBSyxHQUFHLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxDQUFDO0FBQy9DLFFBQUksT0FBTyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBQyxHQUFHLEVBQUUsRUFBRSxHQUFHLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQztBQUM1RSxJQUFFLENBQUM7QUFDSDtrREFoQkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxPQUFPLGtCQUNqQjtRQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsV0FBVyxFQUFFLHNCQUFzQixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUMsQ0FBQyxjQUN4Riw4S0FDSTtBQUFDO0FBQTBDLGtCQUM3QyxLQUFLO0FBQUk7Ozs7Ozs7OztvQkFBRTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWJzdHJhY3RDb250cm9sLCBOR19WQUxJREFUT1JTLCBWYWxpZGF0b3IgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IGlzVW5kZWZpbmVkLCBpc0Zpbml0ZSB9IGZyb20gJ2xvZGFzaC1lcyc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1ttYXhdJyxcbiAgcHJvdmlkZXJzOiBbe3Byb3ZpZGU6IE5HX1ZBTElEQVRPUlMsIHVzZUV4aXN0aW5nOiBNYXhWYWxpZGF0aW9uRGlyZWN0aXZlLCBtdWx0aTogdHJ1ZX1dXG59KVxuZXhwb3J0IGNsYXNzIE1heFZhbGlkYXRpb25EaXJlY3RpdmUgaW1wbGVtZW50cyBWYWxpZGF0b3Ige1xuICBASW5wdXQoKSBtYXg6IHN0cmluZyB8IG51bWJlciA9ICcnO1xuXG4gIHZhbGlkYXRlKGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCk6IHtba2V5OiBzdHJpbmddOiBhbnl9IHwgbnVsbCB7XG4gICAgY29uc3QgcGFyc2VkTWF4ID0gdHlwZW9mIHRoaXMubWF4ID09PSAnbnVtYmVyJyA/IHRoaXMubWF4IDogcGFyc2VGbG9hdCh0aGlzLm1heCk7XG4gICAgaWYgKGlzVW5kZWZpbmVkKGNvbnRyb2wudmFsdWUpIHx8ICFpc0Zpbml0ZShwYXJzZWRNYXgpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICBjb25zdCB2YWxpZCA9ICEoY29udHJvbC52YWx1ZSA+IHBhcnNlZE1heCk7XG4gICAgcmV0dXJuIHZhbGlkID8gbnVsbCA6IHttYXg6IHsgbWF4OiBwYXJzZWRNYXgsIGFjdHVhbDogY29udHJvbC52YWx1ZSB9IH07XG4gIH1cbn1cbiJdfQ==