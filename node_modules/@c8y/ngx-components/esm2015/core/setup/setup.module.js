import { NgModule } from '@angular/core';
import { CommonModule } from '../common/common.module';
import { HeaderModule } from '../header/header.module';
import { gettext } from '../i18n/gettext';
import { PluginsModule } from '../plugins/plugins.module';
import { PropertiesListModule } from '../properties-list/properties-list.module';
import { Steppers } from '../stepper/stepper.model';
import { StepperModule } from '../stepper/stepper.module';
import { HOOK_STEPPER } from '../stepper/stepper.service';
import { SetupCompletedComponent } from './setup-completed.component';
import { SetupComponent } from './setup.component';
import { SETUP_FINISHED_STEP_ID } from './setup.model';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = {
    setupId: SETUP_FINISHED_STEP_ID,
    stepperId: Steppers.SETUP,
    component: SetupCompletedComponent,
    label: gettext('Summary'),
    priority: Infinity
};
export class SetupModule {
}
SetupModule.ɵfac = function SetupModule_Factory(t) { return new (t || SetupModule)(); };
SetupModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: SetupModule });
SetupModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: HOOK_STEPPER,
            useValue: ɵ0,
            multi: true
        }
    ], imports: [[CommonModule, HeaderModule, StepperModule, PluginsModule, PropertiesListModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SetupModule, [{
        type: NgModule,
        args: [{
                declarations: [SetupComponent, SetupCompletedComponent],
                imports: [CommonModule, HeaderModule, StepperModule, PluginsModule, PropertiesListModule],
                exports: [SetupComponent, SetupCompletedComponent],
                entryComponents: [SetupCompletedComponent],
                providers: [
                    {
                        provide: HOOK_STEPPER,
                        useValue: ɵ0,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SetupModule, { declarations: function () { return [SetupComponent, SetupCompletedComponent]; }, imports: function () { return [CommonModule, HeaderModule, StepperModule, PluginsModule, PropertiesListModule]; }, exports: function () { return [SetupComponent, SetupCompletedComponent]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0dXAubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9jb3JlL3NldHVwL3NldHVwLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNqRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDcEQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDbkQsT0FBTyxFQUFhLHNCQUFzQixFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUNsRSxXQVNnQjtBQUNoQixJQUFRLE9BQU8sRUFBRSxzQkFBc0I7QUFDdkMsSUFBUSxTQUFTLEVBQUUsUUFBUSxDQUFDLEtBQUs7QUFDakMsSUFBUSxTQUFTLEVBQUUsdUJBQXVCO0FBQzFDLElBQVEsS0FBSyxFQUFFLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDakMsSUFBUSxRQUFRLEVBQUUsUUFBUTtBQUMxQixDQUFvQjtBQUtwQixNQUFNLE9BQU8sV0FBVztBQUFHO3VDQW5CMUIsUUFBUSxTQUFDLGtCQUNSLFlBQVksRUFBRTtBQUFDLGNBQWMsRUFBRSx1QkFBdUIsQ0FBQyxrQkFDdkQsT0FBTyxFQUFFLENBQUMsWUFBWTtDQUFFLFlBQVksRUFBRSxhQUFhLEVBQUUsYUFBYSxFQUFFLG9CQUFvQixDQUFDOztFQUN6RixPQUFPLEVBQUUsQ0FBQyxjQUFjLEVBQUU7Z0JBQXVCLENBQUM7U0FDbEQ7QUFBZSxFQUFFLENBQUM7Z0JBQXVCLENBQUMsa0JBQzFDLFNBQVMsRUFBRSxzQkFDVCwwQkFDRSxPQUFPO0FBQUUsWUFBWSwwQkFDckIsUUFBUSxJQU1NLDBCQUNkLEtBQUssRUFBRSxJQUFJO0VBQ1osa0JBQ0Y7VUFDRjs7Ozs7Ozs7Ozs7Ozs7bVlBQ0k7QUFBQztBQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJy4uL2NvbW1vbi9jb21tb24ubW9kdWxlJztcbmltcG9ydCB7IEhlYWRlck1vZHVsZSB9IGZyb20gJy4uL2hlYWRlci9oZWFkZXIubW9kdWxlJztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICcuLi9pMThuL2dldHRleHQnO1xuaW1wb3J0IHsgUGx1Z2luc01vZHVsZSB9IGZyb20gJy4uL3BsdWdpbnMvcGx1Z2lucy5tb2R1bGUnO1xuaW1wb3J0IHsgUHJvcGVydGllc0xpc3RNb2R1bGUgfSBmcm9tICcuLi9wcm9wZXJ0aWVzLWxpc3QvcHJvcGVydGllcy1saXN0Lm1vZHVsZSc7XG5pbXBvcnQgeyBTdGVwcGVycyB9IGZyb20gJy4uL3N0ZXBwZXIvc3RlcHBlci5tb2RlbCc7XG5pbXBvcnQgeyBTdGVwcGVyTW9kdWxlIH0gZnJvbSAnLi4vc3RlcHBlci9zdGVwcGVyLm1vZHVsZSc7XG5pbXBvcnQgeyBIT09LX1NURVBQRVIgfSBmcm9tICcuLi9zdGVwcGVyL3N0ZXBwZXIuc2VydmljZSc7XG5pbXBvcnQgeyBTZXR1cENvbXBsZXRlZENvbXBvbmVudCB9IGZyb20gJy4vc2V0dXAtY29tcGxldGVkLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTZXR1cENvbXBvbmVudCB9IGZyb20gJy4vc2V0dXAuY29tcG9uZW50JztcbmltcG9ydCB7IFNldHVwU3RlcCwgU0VUVVBfRklOSVNIRURfU1RFUF9JRCB9IGZyb20gJy4vc2V0dXAubW9kZWwnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtTZXR1cENvbXBvbmVudCwgU2V0dXBDb21wbGV0ZWRDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBIZWFkZXJNb2R1bGUsIFN0ZXBwZXJNb2R1bGUsIFBsdWdpbnNNb2R1bGUsIFByb3BlcnRpZXNMaXN0TW9kdWxlXSxcbiAgZXhwb3J0czogW1NldHVwQ29tcG9uZW50LCBTZXR1cENvbXBsZXRlZENvbXBvbmVudF0sXG4gIGVudHJ5Q29tcG9uZW50czogW1NldHVwQ29tcGxldGVkQ29tcG9uZW50XSxcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogSE9PS19TVEVQUEVSLFxuICAgICAgdXNlVmFsdWU6IHtcbiAgICAgICAgc2V0dXBJZDogU0VUVVBfRklOSVNIRURfU1RFUF9JRCxcbiAgICAgICAgc3RlcHBlcklkOiBTdGVwcGVycy5TRVRVUCxcbiAgICAgICAgY29tcG9uZW50OiBTZXR1cENvbXBsZXRlZENvbXBvbmVudCxcbiAgICAgICAgbGFiZWw6IGdldHRleHQoJ1N1bW1hcnknKSxcbiAgICAgICAgcHJpb3JpdHk6IEluZmluaXR5XG4gICAgICB9IGFzIFNldHVwU3RlcCxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFNldHVwTW9kdWxlIHt9XG4iXX0=