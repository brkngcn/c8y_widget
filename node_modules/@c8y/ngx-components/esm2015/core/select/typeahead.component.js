import { ContentChildren, Input, Output, EventEmitter, Component, ViewChild, forwardRef } from '@angular/core';
import { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';
import { fromEvent } from 'rxjs';
import { debounceTime, map, distinctUntilChanged, filter } from 'rxjs/operators';
import { ListItemComponent } from '../list-group/list-item.component';
import { findIndex, get, set } from 'lodash-es';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from 'ngx-bootstrap/dropdown';
import * as ɵngcc2 from '../forms/required-input-placeholder.directive';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@angular/common';
import * as ɵngcc5 from '../common/icon.directive';
import * as ɵngcc6 from '../i18n/c8y-translate.directive';
import * as ɵngcc7 from '../list-group/list-group.component';
import * as ɵngcc8 from '../i18n/c8y-translate.pipe';

const _c0 = ["searchControl"];
const _c1 = ["searchControlModel"];
const _c2 = ["dropdown"];
function TypeaheadComponent_span_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 10);
    ɵngcc0.ɵɵtext(1, " New ");
    ɵngcc0.ɵɵelementEnd();
} }
function TypeaheadComponent_c8y_list_group_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-list-group", 11);
    ɵngcc0.ɵɵprojection(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    const _r1 = ɵngcc0.ɵɵreference(4);
    ɵngcc0.ɵɵstyleProp("width", ctx_r4.container === "body" ? _r1.clientWidth + "px" : undefined);
} }
const _c3 = [[["div"], ["c8y-li"], ["c8y-list-item"], ["button"], ["a"]]];
const _c4 = function (a0, a1) { return { "p-r-80": a0, "p-r-40": a1 }; };
const _c5 = ["div, c8y-li, c8y-list-item, button, a"];
export class TypeaheadComponent {
    constructor() {
        this.required = false;
        this.disabled = false;
        this.allowFreeEntries = true;
        this.displayProperty = 'name';
        this.icon = 'caret-down';
        this.name = this.displayProperty;
        this.autoClose = true;
        this.hideNew = false;
        this.container = '';
        this.selected = {
            id: null
        };
        this.onSearch = new EventEmitter();
        this.onIconClick = new EventEmitter();
        this.KEYCODE_UP = 38;
        this.KEYCODE_DOWN = 40;
        this.KEYCODE_TAB = 9;
        this.KEYCODE_ENTER = 13;
        this.KEYCODE_ESC = 27;
    }
    writeValue(value) {
        this.selected = value;
        if (value && this.searchControl) {
            this.searchControl.nativeElement.value = get(value, this.displayProperty, '');
        }
    }
    registerOnChange(fn) {
        this.onChange = fn;
    }
    registerOnTouched(fn) {
        this.onTouched = fn;
    }
    setDisabledState(isDisabled) {
        this.disabled = isDisabled;
    }
    doBlur() {
        if (this.onTouched) {
            this.onTouched();
        }
    }
    getDisplayProperty() {
        return get(this.selected, this.displayProperty, '');
    }
    onShown() {
        this.searchControl.nativeElement.focus();
    }
    /**
     * Resets the input field - clear value and clean field to be pristine and untouched.
     */
    reset() {
        this.searchControlModel.reset();
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
    ngAfterViewInit() {
        this.subscription = fromEvent(this.searchControl.nativeElement, 'keydown')
            .pipe(map((e) => this.handleKeyboard(e)), filter((e) => e), debounceTime(200), map((e) => e.target.value), distinctUntilChanged())
            .subscribe(value => {
            this.selected = {
                id: null
            };
            set(this.selected, this.displayProperty, value || '');
            if (typeof this.onChange === 'function') {
                this.onChange(this.selected);
            }
            this.onSearch.emit(value);
        });
    }
    handleKeyboard(event) {
        const keyCode = event.keyCode;
        if ([this.KEYCODE_ENTER, this.KEYCODE_DOWN, this.KEYCODE_TAB, this.KEYCODE_UP].includes(keyCode)) {
            const items = this.list.toArray();
            const index = findIndex(items, item => item.active);
            if (keyCode === this.KEYCODE_ENTER || keyCode === this.KEYCODE_TAB) {
                if (index > -1) {
                    event.preventDefault();
                    items[index].element.nativeElement.click();
                }
                this.dropdown.hide();
                this.searchControl.nativeElement.blur();
            }
            else {
                this.dropdown.show();
                const upOrDown = keyCode === this.KEYCODE_DOWN ? 1 : -1;
                if (index > -1) {
                    items[index].active = false;
                }
                this.selectNextItemOnKeyboardMove(items, index, upOrDown);
            }
            return;
        }
        else if (keyCode === this.KEYCODE_ESC && this.autoClose) {
            event.stopPropagation();
            this.dropdown.hide();
            this.searchControl.nativeElement.blur();
            return;
        }
        else {
            this.dropdown.show();
        }
        return event;
    }
    validate(ctrl) {
        if (this.required && !get(ctrl.value, this.displayProperty, '')) {
            return { required: true };
        }
        if (!this.allowFreeEntries && this.selected && this.selected.id === null && ctrl.value[this.displayProperty]) {
            return { notExisting: true };
        }
        return null;
    }
    selectNextItemOnKeyboardMove(items, index, upOrDown) {
        if (items[index + upOrDown]) {
            if (!items[index + upOrDown].selectable) {
                this.selectNextItemOnKeyboardMove(items, index + upOrDown, upOrDown);
                return;
            }
            items[index + upOrDown].active = true;
        }
    }
}
TypeaheadComponent.ɵfac = function TypeaheadComponent_Factory(t) { return new (t || TypeaheadComponent)(); };
TypeaheadComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TypeaheadComponent, selectors: [["c8y-typeahead"]], contentQueries: function TypeaheadComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ListItemComponent, 4);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.list = _t);
    } }, viewQuery: function TypeaheadComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
        ɵngcc0.ɵɵviewQuery(_c1, 5);
        ɵngcc0.ɵɵviewQuery(_c2, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchControl = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchControlModel = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);
    } }, inputs: { required: "required", disabled: "disabled", allowFreeEntries: "allowFreeEntries", displayProperty: "displayProperty", icon: "icon", name: "name", autoClose: "autoClose", hideNew: "hideNew", container: "container", selected: "selected", maxlength: "maxlength", placeholder: "placeholder" }, outputs: { onSearch: "onSearch", onIconClick: "onIconClick" }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                multi: true,
                useExisting: forwardRef(() => TypeaheadComponent)
            },
            {
                provide: NG_VALIDATORS,
                useExisting: forwardRef(() => TypeaheadComponent),
                multi: true
            }
        ])], ngContentSelectors: _c5, decls: 14, vars: 24, consts: [["dropdown", "", "placement", "bottom left", 1, "c8y-search-dropdown", "dropdown", "fit-w", 3, "container", "autoClose", "isDisabled", "onShown"], ["dropdown", "bs-dropdown"], ["dropdownToggle", "", 1, "input-group", "input-group-dropdown"], ["type", "text", 1, "form-control", "text-truncate", 3, "ngClass", "required", "ngModel", "placeholder", "name", "maxlength", "disabled", "title", "blur"], ["searchControl", "", "searchControlModel", "ngModel"], ["class", "label label-info p-absolute", "style", "top: 10px; right: 40px; z-index: 10", "translate", "", 4, "ngIf"], [1, "input-group-btn"], ["type", "button", 1, "btn", "btn-clean", 3, "title", "disabled", "click"], [1, "text-primary", 3, "c8yIcon"], ["class", "dropdown-menu dropdown-menu--modal", 3, "width", 4, "dropdownMenu"], ["translate", "", 1, "label", "label-info", "p-absolute", 2, "top", "10px", "right", "40px", "z-index", "10"], [1, "dropdown-menu", "dropdown-menu--modal"]], template: function TypeaheadComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c3);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵlistener("onShown", function TypeaheadComponent_Template_div_onShown_0_listener() { return ctx.onShown(); });
        ɵngcc0.ɵɵelementStart(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "input", 3, 4);
        ɵngcc0.ɵɵlistener("blur", function TypeaheadComponent_Template_input_blur_3_listener() { return ctx.doBlur(); });
        ɵngcc0.ɵɵpipe(6, "translate");
        ɵngcc0.ɵɵpipe(7, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(8, TypeaheadComponent_span_8_Template, 2, 0, "span", 5);
        ɵngcc0.ɵɵelementStart(9, "span", 6);
        ɵngcc0.ɵɵelementStart(10, "button", 7);
        ɵngcc0.ɵɵlistener("click", function TypeaheadComponent_Template_button_click_10_listener($event) { return ctx.onIconClick.emit({ icon: ctx.icon, $event: $event }); });
        ɵngcc0.ɵɵpipe(11, "translate");
        ɵngcc0.ɵɵelement(12, "i", 8);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(13, TypeaheadComponent_c8y_list_group_13_Template, 2, 2, "c8y-list-group", 9);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        let tmp_4_0;
        let tmp_11_0;
        ɵngcc0.ɵɵproperty("container", ctx.container)("autoClose", true)("isDisabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(7, 17, ctx.placeholder));
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction2(21, _c4, !ctx.hideNew && (ctx.selected ? ctx.selected.id === null && ((tmp_4_0 = ctx.getDisplayProperty()) == null ? null : tmp_4_0.length) > 0 && ctx.allowFreeEntries : false), ctx.hideNew || ((tmp_4_0 = ctx.getDisplayProperty()) == null ? null : tmp_4_0.length) === 0))("required", ctx.required)("ngModel", ctx.selected ? ctx.getDisplayProperty() : "")("placeholder", ɵngcc0.ɵɵpipeBind1(6, 15, ctx.placeholder))("name", ctx.name)("maxlength", ctx.maxlength)("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(5);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.hideNew && (ctx.selected ? ctx.selected.id === null && ((tmp_11_0 = ctx.getDisplayProperty()) == null ? null : tmp_11_0.length) > 0 && ctx.allowFreeEntries : false));
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(11, 19, "Search"));
        ɵngcc0.ɵɵproperty("disabled", ctx.disabled);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yIcon", ctx.icon);
    } }, directives: [ɵngcc1.BsDropdownDirective, ɵngcc1.BsDropdownToggleDirective, ɵngcc2.RequiredInputPlaceholderDirective, ɵngcc3.DefaultValueAccessor, ɵngcc4.NgClass, ɵngcc3.RequiredValidator, ɵngcc3.NgControlStatus, ɵngcc3.NgModel, ɵngcc3.MaxLengthValidator, ɵngcc4.NgIf, ɵngcc5.IconDirective, ɵngcc1.BsDropdownMenuDirective, ɵngcc6.C8yTranslateDirective, ɵngcc7.ListGroupComponent], pipes: [ɵngcc8.C8yTranslatePipe], encapsulation: 2 });
TypeaheadComponent.propDecorators = {
    searchControl: [{ type: ViewChild, args: ['searchControl', { static: false },] }],
    searchControlModel: [{ type: ViewChild, args: ['searchControlModel', { static: false },] }],
    dropdown: [{ type: ViewChild, args: ['dropdown', { static: false },] }],
    list: [{ type: ContentChildren, args: [ListItemComponent,] }],
    required: [{ type: Input }],
    maxlength: [{ type: Input }],
    disabled: [{ type: Input }],
    allowFreeEntries: [{ type: Input }],
    placeholder: [{ type: Input }],
    displayProperty: [{ type: Input }],
    icon: [{ type: Input }],
    name: [{ type: Input }],
    autoClose: [{ type: Input }],
    hideNew: [{ type: Input }],
    container: [{ type: Input }],
    selected: [{ type: Input }],
    onSearch: [{ type: Output }],
    onIconClick: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TypeaheadComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-typeahead',
                template: "<div\n  class=\"c8y-search-dropdown dropdown fit-w\"\n  dropdown\n  [container]=\"container\"\n  placement=\"bottom left\"\n  #dropdown=\"bs-dropdown\"\n  [autoClose]=\"true\"\n  (onShown)=\"onShown()\"\n  [isDisabled]=\"disabled\"\n>\n  <div class=\"input-group input-group-dropdown\" dropdownToggle>\n    <input\n      #searchControl\n      #searchControlModel=\"ngModel\"\n      type=\"text\"\n      class=\"form-control text-truncate\"\n      [ngClass]=\"{'p-r-80': !hideNew &&\n      (selected\n        ? selected.id === null && getDisplayProperty()?.length > 0 && allowFreeEntries\n        : false), \n        'p-r-40': hideNew || getDisplayProperty()?.length === 0\n        }\"\n      [required]=\"required\"\n      [ngModel]=\"selected ? getDisplayProperty() : ''\"\n      [placeholder]=\"placeholder | translate\"\n      (blur)=\"doBlur()\"\n      [name]=\"name\"\n      [maxlength]=\"maxlength\"\n      [disabled]=\"disabled\"\n      title=\"{{ placeholder | translate }}\"\n    />\n    <span\n      class=\"label label-info p-absolute\"\n      style=\"top: 10px; right: 40px; z-index: 10\"\n      translate\n      *ngIf=\"\n        !hideNew &&\n        (selected\n          ? selected.id === null && getDisplayProperty()?.length > 0 && allowFreeEntries\n          : false)\n      \"\n    >\n      New\n    </span>\n\n    <span class=\"input-group-btn\">\n      <button\n        type=\"button\"\n        class=\"btn btn-clean\"\n        title=\"{{ 'Search' | translate }}\"\n        [disabled]=\"disabled\"\n        (click)=\"onIconClick.emit({ icon, $event });\"\n      >\n        <i [c8yIcon]=\"icon\" class=\"text-primary\"></i>\n      </button>\n    </span>\n  </div>\n\n  <c8y-list-group\n    class=\"dropdown-menu dropdown-menu--modal\"\n    *dropdownMenu\n    [style.width]=\"container === 'body' ? searchControl.clientWidth + 'px' : undefined\"\n  >\n    <ng-content select=\"div, c8y-li, c8y-list-item, button, a\"></ng-content>\n  </c8y-list-group>\n</div>\n",
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        multi: true,
                        useExisting: forwardRef(() => TypeaheadComponent)
                    },
                    {
                        provide: NG_VALIDATORS,
                        useExisting: forwardRef(() => TypeaheadComponent),
                        multi: true
                    }
                ]
            }]
    }], function () { return []; }, { required: [{
            type: Input
        }], disabled: [{
            type: Input
        }], allowFreeEntries: [{
            type: Input
        }], displayProperty: [{
            type: Input
        }], icon: [{
            type: Input
        }], name: [{
            type: Input
        }], autoClose: [{
            type: Input
        }], hideNew: [{
            type: Input
        }], container: [{
            type: Input
        }], selected: [{
            type: Input
        }], onSearch: [{
            type: Output
        }], onIconClick: [{
            type: Output
        }], searchControl: [{
            type: ViewChild,
            args: ['searchControl', { static: false }]
        }], searchControlModel: [{
            type: ViewChild,
            args: ['searchControlModel', { static: false }]
        }], dropdown: [{
            type: ViewChild,
            args: ['dropdown', { static: false }]
        }], list: [{
            type: ContentChildren,
            args: [ListItemComponent]
        }], maxlength: [{
            type: Input
        }], placeholder: [{
            type: Input
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,