import { Component, Input } from '@angular/core';
import { DocsService } from '../docs/docs.service';
import { HelpService } from './help.service';
/**
 * A component which shows a context help in
 * the action bar.
 *
 * @example
 * ```html
 * <c8y-help src="/users-guide/cockpit/#dashboards"></c8y-help>
 * ```
 */
export class HelpComponent {
    /**
     * @ignore Only private DI
     */
    constructor(docsService, helpService) {
        this.docsService = docsService;
        this.helpService = helpService;
        /**
         * The source of the documentation. Used to link to the documentation as well as
         * to parse the source to display.
         */
        this.src = '';
        /**
         * Indicates if the help dialog is collapsed.
         */
        this.isCollapsed = true;
        /**
         * The priority where the help icon should be shown in the action bar
         */
        this.priority = Infinity;
        /**
         * A title. Set in open by passing the source.
         */
        this.title = '';
        /**
         * The section heading in the doc which is going to be displayed.
         */
        this.sectionHeading = '';
        /**
         * The section content in the doc which is going to be displayed.
         */
        this.sectionContent = '';
        /**
         * Indicates if the component is loading.
         */
        this.isLoading = true;
        /**
         * Indicates if the component failed loading the source.
         */
        this.hasError = false;
        /**
         * Indicates if a warning should be shown.
         */
        this.showLangWarning = false;
        /**
         * @ignore
         */
        this.isInit = false;
    }
    /**
     * The component is shown by default and therefore breaks e2e test. This is
     * to prevent the visibility on first navigation.
     * @ignore
     */
    onCollapsed() {
        this.isInit = true;
    }
    /**
     * Builds the URL based on the src. The Base URL can be set in the application options docBaseUrl.
     * @param src The source of the help on the guide.
     * @param index This flag is used to call the index.json content of a guide. For example, "https://www.cumulocity.com/guides/users-guide/cockpit/index.json".
     */
    getUrl(src = '', index = false) {
        let docsUrl;
        try {
            docsUrl =
                typeof this.helpService.contextHelp.value === 'string'
                    ? new URL(this.docsService.getUrlWithDocsVersion(this.helpService.contextHelp.value))
                    : new URL(this.docsService.getBaseUrl());
        }
        catch (error) {
            docsUrl = new URL(this.docsService.getBaseUrl());
            console.warn(error);
        }
        const [url, hashFragment] = src.split('#');
        this.sectionHeading = hashFragment;
        if (index) {
            src = `${url}index.json`;
        }
        return `${docsUrl.href}${src}`;
    }
    /**
     * Toggles the visibility of the help dialog.
     */
    toggle() {
        if (this.isCollapsed) {
            this.open();
            return;
        }
        this.close();
    }
    /**
     * Closes the help dialog.
     */
    close() {
        this.isCollapsed = true;
        this.clean();
    }
    /**
     * Opens the help dialog.
     */
    open() {
        this.isCollapsed = false;
        this.isLoading = true;
        this.requestContent();
        if (!this.icon) {
            this.icon = this.resolveIcon();
        }
    }
    requestContent() {
        const req = new XMLHttpRequest();
        req.onreadystatechange = () => this.render(req);
        req.addEventListener('load', () => this.render(req));
        req.open('GET', this.getUrl(this.src, true));
        req.responseType = 'json';
        req.setRequestHeader('Accept', 'text/html');
        req.send();
    }
    clean() {
        this.title = '';
        this.hasError = false;
        this.sectionContent = '';
    }
    resolveIcon() {
        try {
            const icon = Array.from(document.querySelector('nav .active i').classList).find(classes => classes.startsWith('c8y-icon-') || classes.startsWith('dlt-c8y-icon-'));
            return icon.replace('dlt-c8y-icon-', '').replace('c8y-icon-', 'c8y-');
        }
        catch (ex) {
            return 'life-saver';
        }
    }
    render(req) {
        if (req.readyState === 4) {
            this.isLoading = false;
            if (req.status === 200) {
                this.hasError = false;
                const sectionData = req.response[this.sectionHeading];
                if (sectionData) {
                    this.title = sectionData.title;
                    this.sectionContent = sectionData.helpcontent;
                }
            }
            else {
                this.hasError = true;
            }
        }
    }
}
HelpComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-help',
                template: "<c8y-action-bar-item\n  [placement]=\"'right'\"\n  itemClass=\"pull-right\"\n  [priority]=\"priority\"\n  *ngIf=\"!!(helpService.contextHelp | async)\"\n>\n  <button\n    class=\"btn btn-help\"\n    [title]=\"'Open help' | translate\"\n    (click)=\"toggle()\"\n    [attr.aria-expanded]=\"!isCollapsed\"\n    aria-controls=\"collapseHelp\"\n    c8yProductExperience\n    [actionName]=\"isCollapsed ? 'helpOpened' : 'helpClosed'\"\n    [actionData]=\"{ src: src }\"\n  >\n    <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n  </button>\n</c8y-action-bar-item>\n\n<div\n  id=\"collapseHelp\"\n  class=\"c8y-help-drawer\"\n  [collapse]=\"isCollapsed\"\n  [isAnimated]=\"true\"\n  (collapsed)=\"onCollapsed()\"\n>\n  <div [ngClass]=\"{ 'c8y-help-drawer-block': isInit }\" #docOutlet>\n    <div *ngIf=\"isLoading\">\n      <c8y-loading></c8y-loading>\n    </div>\n\n    <div *ngIf=\"!isLoading\">\n      <div class=\"d-flex\">\n        <i\n          [c8yIcon]=\"!hasError ? icon : 'unlink'\"\n          [ngClass]=\"{ 'text-warning': hasError, 'text-muted': !hasError }\"\n          class=\"c8y-icon-duocolor icon-48\"\n        ></i>\n        <div class=\"p-l-16 flex-grow\" *ngIf=\"!hasError\">\n          <div\n            class=\"alert alert-info m-b-16\"\n            *ngIf=\"\n              !helpService.isSupportedLanguage() &&\n              !showLangWarning &&\n              !helpService.isWarningAlertViewed\n            \"\n          >\n            <button\n              class=\"close\"\n              type=\"button\"\n              (click)=\"\n                showLangWarning = !showLangWarning;\n                helpService.isWarningAlertViewed = !helpService.isWarningAlertViewed\n              \"\n            >\n              <span aria-hidden=\"true\">\u00D7</span>\n              <span class=\"sr-only\">Close</span>\n            </button>\n            <p>\n              {{ 'Help content is only available in English.' | translate }}\n            </p>\n          </div>\n          <h4 class=\"text-bold text-primary p-t-16 m-b-16\">\n            {{ title }}\n          </h4>\n          <div id=\"helpContent\" class=\"help-content\" [innerHTML]=\"sectionContent\"></div>\n        </div>\n\n        <div class=\"p-l-16 p-t-16 flex-grow\" *ngIf=\"hasError\">\n          <h4 class=\"text-bold m-b-16\" translate>Sorry, that didn't work</h4>\n          <div class=\"help-content\">\n            <p translate>The content couldn't be loaded.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"c8y-help-drawer-footer\" *ngIf=\"!isLoading && !hasError\">\n    <button\n      class=\"btn btn-default\"\n      (click)=\"toggle()\"\n      [title]=\"'Close help' | translate\"\n      [attr.aria-expanded]=\"!isCollapsed\"\n      aria-controls=\"collapseHelp\"\n      translate\n    >\n      Close\n    </button>\n    <a\n      href=\"{{ hasError ? getUrl() : getUrl(src) }}\"\n      class=\"btn btn-primary\"\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n    >\n      <span translate *ngIf=\"!hasError\"> Open the <span>User guide`KEEP_ORIGINAL`</span> </span>\n      <span translate *ngIf=\"hasError\"> Check the <span>User guide`KEEP_ORIGINAL`</span> </span>\n    </a>\n  </div>\n</div>\n"
            },] }
];
HelpComponent.ctorParameters = () => [
    { type: DocsService },
    { type: HelpService }
];
HelpComponent.propDecorators = {
    src: [{ type: Input }],
    isCollapsed: [{ type: Input }],
    priority: [{ type: Input }],
    icon: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,