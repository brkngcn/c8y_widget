import { Component, EventEmitter, Output, ViewChild } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { camelCase } from 'lodash-es';
import { BsModalRef } from 'ngx-bootstrap/modal';
export class ConfigureCustomColumnComponent {
    constructor(fb, modalRef) {
        this.fb = fb;
        this.modalRef = modalRef;
        this.SIMPLE_JSON_PATH_REGEX = /^[^.\s]+(\.\S+)*$/;
        this.onAddCustomColumn = new EventEmitter();
        this.formGroup = this.fb.group({
            header: [''],
            path: [''],
            addAnother: [false]
        });
    }
    comparator(val1, val2) {
        return camelCase(val1) === camelCase(val2);
    }
    addColumn() {
        const { header, path } = this.formGroup.value;
        this.onAddCustomColumn.emit({
            name: camelCase(header),
            header,
            path,
            custom: true,
            visible: true
        });
        if (this.formGroup.value.addAnother) {
            this.form.resetForm({ addAnother: true });
        }
        else {
            this.modalRef.hide();
        }
    }
}
ConfigureCustomColumnComponent.decorators = [
    { type: Component, args: [{
                selector: 'c8y-configure-custom-column',
                template: "<div class=\"viewport-modal\">\n  <div class=\"modal-header separator-bottom\">\n    <h3 translate>Configure custom column</h3>\n  </div>\n\n  <form class=\"d-contents\" #columnConfigForm=\"ngForm\" [formGroup]=\"formGroup\">\n    <div class=\"modal-inner-scroll\">\n      <div class=\"modal-body\">\n        <c8y-form-group>\n          <label for=\"header\" translate>Header</label>\n          <input\n            id=\"header\"\n            formControlName=\"header\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            [placeholder]=\"'e.g. Agent name' | translate\"\n            [required]=\"true\"\n            uniqueByPath\n            [collection]=\"columns\"\n            path=\"header\"\n            [comparator]=\"comparator\"\n          />\n          <c8y-messages>\n            <c8y-message\n              name=\"uniqueByPath\"\n              [text]=\"'Column\\'s header name must be unique' | translate\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n        <c8y-form-group>\n          <label for=\"fragmentPath\" translate>Fragment path</label>\n          <input\n            id=\"fragmentPath\"\n            formControlName=\"path\"\n            class=\"form-control\"\n            autocomplete=\"off\"\n            [placeholder]=\"'e.g. {{ example }}' | translate: { example: 'c8y_Agent.name' }\"\n            [required]=\"true\"\n            [pattern]=\"SIMPLE_JSON_PATH_REGEX\"\n          />\n          <c8y-messages>\n            <c8y-message\n              name=\"pattern\"\n              [text]=\"'Must be a valid JSON path' | translate\"\n            ></c8y-message>\n          </c8y-messages>\n        </c8y-form-group>\n        <label class=\"c8y-switch\" [title]=\"'Add another column after saving this one' | translate\">\n          <input type=\"checkbox\" formControlName=\"addAnother\" class=\"form-control\" />\n          <span></span>\n          <span translate>Add another column after saving this one</span>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"modal-footer\">\n      <button title=\"{{ 'Cancel' | translate }}\" class=\"btn btn-default\" (click)=\"modalRef.hide()\">\n        {{ 'Cancel' | translate }}\n      </button>\n      <button\n        title=\"{{ 'Save' | translate }}\"\n        class=\"btn btn-primary\"\n        [disabled]=\"columnConfigForm.form.pristine || !columnConfigForm.form.valid\"\n        (click)=\"addColumn()\"\n      >\n        {{ 'Save' | translate }}\n      </button>\n    </div>\n  </form>\n</div>\n"
            },] }
];
ConfigureCustomColumnComponent.ctorParameters = () => [
    { type: FormBuilder },
    { type: BsModalRef }
];
ConfigureCustomColumnComponent.propDecorators = {
    form: [{ type: ViewChild, args: ['columnConfigForm', { static: false },] }],
    onAddCustomColumn: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJlLWN1c3RvbS1jb2x1bW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vY29yZS9kYXRhLWdyaWQvY29uZmlndXJlLWN1c3RvbS1jb2x1bW4vY29uZmlndXJlLWN1c3RvbS1jb2x1bW4uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLFdBQVcsRUFBcUIsTUFBTSxnQkFBZ0IsQ0FBQztBQUNoRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQU9qRCxNQUFNLE9BQU8sOEJBQThCO0lBZXpDLFlBQW1CLEVBQWUsRUFBUyxRQUFvQjtRQUE1QyxPQUFFLEdBQUYsRUFBRSxDQUFhO1FBQVMsYUFBUSxHQUFSLFFBQVEsQ0FBWTtRQWR0RCwyQkFBc0IsR0FBRyxtQkFBbUIsQ0FBQztRQUt0RCxzQkFBaUIsR0FBcUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUV6RSxjQUFTLEdBQWMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUM7WUFDbkMsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ1osSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ1YsVUFBVSxFQUFFLENBQUMsS0FBSyxDQUFDO1NBQ3BCLENBQUMsQ0FBQztJQUcrRCxDQUFDO0lBRW5FLFVBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSTtRQUNuQixPQUFPLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0MsQ0FBQztJQUVELFNBQVM7UUFDUCxNQUFNLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxHQUFHLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO1FBQzlDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxJQUFJLENBQUM7WUFDMUIsSUFBSSxFQUFFLFNBQVMsQ0FBQyxNQUFNLENBQUM7WUFDdkIsTUFBTTtZQUNOLElBQUk7WUFDSixNQUFNLEVBQUUsSUFBSTtZQUNaLE9BQU8sRUFBRSxJQUFJO1NBQ2QsQ0FBQyxDQUFDO1FBRUgsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUU7WUFDbkMsSUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQztTQUMzQzthQUFNO1lBQ0wsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsQ0FBQztTQUN0QjtJQUNILENBQUM7OztZQXhDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLDZCQUE2QjtnQkFDdkMsd2dGQUF1RDthQUN4RDs7O1lBUlEsV0FBVztZQUVYLFVBQVU7OzttQkFVaEIsU0FBUyxTQUFDLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTtnQ0FFL0MsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIFZpZXdDaGlsZCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybUJ1aWxkZXIsIEZvcm1Hcm91cCwgTmdGb3JtIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHsgY2FtZWxDYXNlIH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEJzTW9kYWxSZWYgfSBmcm9tICduZ3gtYm9vdHN0cmFwL21vZGFsJztcbmltcG9ydCB7IENvbHVtbiwgQ3VzdG9tQ29sdW1uQ29uZmlnIH0gZnJvbSAnLi4vZGF0YS1ncmlkLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvbmZpZ3VyZS1jdXN0b20tY29sdW1uJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbmZpZ3VyZS1jdXN0b20tY29sdW1uLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBDb25maWd1cmVDdXN0b21Db2x1bW5Db21wb25lbnQge1xuICByZWFkb25seSBTSU1QTEVfSlNPTl9QQVRIX1JFR0VYID0gL15bXi5cXHNdKyhcXC5cXFMrKSokLztcblxuICBAVmlld0NoaWxkKCdjb2x1bW5Db25maWdGb3JtJywgeyBzdGF0aWM6IGZhbHNlIH0pIGZvcm06IE5nRm9ybTtcblxuICBAT3V0cHV0KClcbiAgb25BZGRDdXN0b21Db2x1bW46IEV2ZW50RW1pdHRlcjxDdXN0b21Db2x1bW5Db25maWc+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuXG4gIGZvcm1Hcm91cDogRm9ybUdyb3VwID0gdGhpcy5mYi5ncm91cCh7XG4gICAgaGVhZGVyOiBbJyddLFxuICAgIHBhdGg6IFsnJ10sXG4gICAgYWRkQW5vdGhlcjogW2ZhbHNlXVxuICB9KTtcbiAgY29sdW1uczogQ29sdW1uW107XG5cbiAgY29uc3RydWN0b3IocHVibGljIGZiOiBGb3JtQnVpbGRlciwgcHVibGljIG1vZGFsUmVmOiBCc01vZGFsUmVmKSB7fVxuXG4gIGNvbXBhcmF0b3IodmFsMSwgdmFsMikge1xuICAgIHJldHVybiBjYW1lbENhc2UodmFsMSkgPT09IGNhbWVsQ2FzZSh2YWwyKTtcbiAgfVxuXG4gIGFkZENvbHVtbigpOiB2b2lkIHtcbiAgICBjb25zdCB7IGhlYWRlciwgcGF0aCB9ID0gdGhpcy5mb3JtR3JvdXAudmFsdWU7XG4gICAgdGhpcy5vbkFkZEN1c3RvbUNvbHVtbi5lbWl0KHtcbiAgICAgIG5hbWU6IGNhbWVsQ2FzZShoZWFkZXIpLFxuICAgICAgaGVhZGVyLFxuICAgICAgcGF0aCxcbiAgICAgIGN1c3RvbTogdHJ1ZSxcbiAgICAgIHZpc2libGU6IHRydWVcbiAgICB9KTtcblxuICAgIGlmICh0aGlzLmZvcm1Hcm91cC52YWx1ZS5hZGRBbm90aGVyKSB7XG4gICAgICB0aGlzLmZvcm0ucmVzZXRGb3JtKHsgYWRkQW5vdGhlcjogdHJ1ZSB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5tb2RhbFJlZi5oaWRlKCk7XG4gICAgfVxuICB9XG59XG4iXX0=