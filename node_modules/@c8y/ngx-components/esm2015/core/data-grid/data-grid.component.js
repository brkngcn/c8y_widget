import { __awaiter } from "tslib";
import { CdkHeaderCell } from '@angular/cdk/table';
import { ChangeDetectorRef, Component, ComponentFactoryResolver, ContentChildren, ElementRef, EventEmitter, Input, Output, ViewChild, ViewChildren, ViewContainerRef } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { flow, get, parseInt as _parseInt, union, uniqBy, without, indexOf } from 'lodash-es';
import { BsModalService } from 'ngx-bootstrap/modal';
import { BehaviorSubject, combineLatest, Subject } from 'rxjs';
import { debounceTime, delay, distinctUntilChanged, first, map, mergeMap, take, takeUntil, tap } from 'rxjs/operators';
import { AlertService } from '../alert/alert.service';
import { LoadMoreComponent } from '../common/load-more.component';
import { gettext } from '../i18n/gettext';
import { GainsightService } from '../product-experience/gainsight.service';
import { ColumnDirective } from './column/column.directive';
import { ConfigureCustomColumnComponent } from './configure-custom-column';
import { FilteringActionType, minColumnGridTrackSize, ratiosByColumnTypes } from './data-grid.model';
import { GridDataSource } from './grid-data-source';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '../product-experience/gainsight.service';
import * as ɵngcc3 from 'ngx-bootstrap/modal';
import * as ɵngcc4 from '../alert/alert.service';
import * as ɵngcc5 from '@angular/common';
import * as ɵngcc6 from '@angular/cdk/table';
import * as ɵngcc7 from '../common/progress-bar.component';
import * as ɵngcc8 from '../common/icon.directive';
import * as ɵngcc9 from '../product-experience/product-experience.directive';
import * as ɵngcc10 from 'ngx-bootstrap/popover';
import * as ɵngcc11 from '../i18n/c8y-translate.directive';
import * as ɵngcc12 from 'ngx-bootstrap/dropdown';
import * as ɵngcc13 from '@angular/cdk/drag-drop';
import * as ɵngcc14 from '@angular/forms';
import * as ɵngcc15 from 'ngx-bootstrap/tooltip';
import * as ɵngcc16 from '../modal/popover-confirm.component';
import * as ɵngcc17 from './column/cell-renderer.component';
import * as ɵngcc18 from './column/filtering-form-renderer.component';
import * as ɵngcc19 from 'ngx-bootstrap/pagination';
import * as ɵngcc20 from '../i18n/c8y-translate.pipe';
import * as ɵngcc21 from './is-control-visible.pipe';
import * as ɵngcc22 from '../common/map-function.pipe';

const _c0 = ["scroll"];
const _c1 = ["infiniteScrollContainer"];
function DataGridComponent_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 13);
    ɵngcc0.ɵɵelementStart(1, "div", 14);
    ɵngcc0.ɵɵelement(2, "c8y-progress-bar", 15);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("message", ctx_r1.loadingItemsLabel);
} }
function DataGridComponent_div_5_ng_container_4_span_1_small_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "small", 33);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(1, " {{ filteredItemsCount }} of {{ allItemsCount }} items ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r18 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵproperty("translateParams", ctx_r18.filteringLabelsParams);
} }
function DataGridComponent_div_5_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵelementStart(1, "span", 31);
    ɵngcc0.ɵɵtext(2, "No filters");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_5_ng_container_4_span_1_small_3_Template, 2, 1, "small", 32);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r15 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !!ctx_r15.filteringLabelsParams.allItemsCount);
} }
function DataGridComponent_div_5_ng_container_4_span_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "span", 35);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "small", 36);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(5, " of {{ allItemsCount }} items ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r19 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(3, 2, ctx_r19.dataSource.stats$).filteredSize, " ");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ctx_r19.filteringLabelsParams);
} }
function DataGridComponent_div_5_ng_container_4_span_2_Template(rf, ctx) { if (rf & 1) {
    const _r21 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_4_span_2_ng_container_1_Template, 6, 4, "ng-container", 18);
    ɵngcc0.ɵɵelementStart(2, "button", 34);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_ng_container_4_span_2_Template_button_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(3); return ctx_r20.clearFilters(); });
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r16 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !!ctx_r16.filteringLabelsParams.allItemsCount);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate1("title", " ", ɵngcc0.ɵɵpipeBind1(3, 3, "Clear filters"), "");
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(5, 5, "Clear filters"), " ");
} }
function DataGridComponent_div_5_ng_container_4_span_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 27);
    ɵngcc0.ɵɵelementStart(1, "button", 37);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 38);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(2, 1, "The counter for the total number of items might be inaccurate."));
} }
function DataGridComponent_div_5_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_4_span_1_Template, 4, 1, "span", 18);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_5_ng_container_4_span_2_Template, 6, 7, "span", 18);
    ɵngcc0.ɵɵelementStart(3, "span", 27);
    ɵngcc0.ɵɵelementStart(4, "button", 28);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelement(6, "i", 29);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(7, DataGridComponent_div_5_ng_container_4_span_7_Template, 4, 3, "span", 30);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r10 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r10.filteringApplied);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.filteringApplied);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("popover", ɵngcc0.ɵɵpipeBind1(5, 5, "Click the column headers to apply filters."));
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:ApplyFilterInfo");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r10.showCounterWarning);
} }
const _c2 = function (a0) { return { type: a0 }; };
function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r29 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "button", 41);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_container_1_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r29); const headerActionControl_r22 = ɵngcc0.ɵɵnextContext(2).$implicit; return headerActionControl_r22.callback(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 42);
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const headerActionControl_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 4, headerActionControl_r22.text));
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:" + headerActionControl_r22.text)("actionData", ɵngcc0.ɵɵpureFunction1(8, _c2, headerActionControl_r22.type));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 6, headerActionControl_r22.text));
} }
function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainer(0);
} }
const _c3 = function (a0) { return { headerActionControl: a0 }; };
function DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_ng_container_0_Template, 1, 0, "ng-container", 43);
} if (rf & 2) {
    const headerActionControl_r22 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngTemplateOutlet", headerActionControl_r22.template)("ngTemplateOutletContext", ɵngcc0.ɵɵpureFunction1(2, _c3, headerActionControl_r22));
} }
function DataGridComponent_div_5_ng_container_7_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_7_ng_container_1_ng_container_1_Template, 7, 10, "ng-container", 39);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_5_ng_container_7_ng_container_1_ng_template_2_Template, 1, 4, "ng-template", null, 40, ɵngcc0.ɵɵtemplateRefExtractor);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const _r25 = ɵngcc0.ɵɵreference(3);
    const headerActionControl_r22 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !headerActionControl_r22.template)("ngIfElse", _r25);
} }
function DataGridComponent_div_5_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_ng_container_7_ng_container_1_Template, 4, 2, "ng-container", 18);
    ɵngcc0.ɵɵpipe(2, "isControlVisible");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const headerActionControl_r22 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(2, 1, headerActionControl_r22));
} }
function DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_button_9_Template(rf, ctx) { if (rf & 1) {
    const _r43 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 58);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_button_9_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r43); const _r41 = ɵngcc0.ɵɵreference(3); const column_r38 = ɵngcc0.ɵɵnextContext(2).$implicit; ɵngcc0.ɵɵnextContext(2); const _r34 = ɵngcc0.ɵɵreference(1); const ctx_r42 = ɵngcc0.ɵɵnextContext(2); return ctx_r42.removeCustomColumn(_r41, column_r38, _r34); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "c8y-popover-confirm", 59, 60);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelement(5, "i", 61);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 4, "Remove`column,verb`"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("placement", "left")("title", ɵngcc0.ɵɵpipeBind1(4, 6, "Confirm removal"))("outsideClick", true);
} }
function DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    const _r47 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 54);
    ɵngcc0.ɵɵelementStart(2, "label", 55);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementStart(4, "input", 56);
    ɵngcc0.ɵɵlistener("ngModelChange", function DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_Template_input_ngModelChange_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r47); const column_r38 = ɵngcc0.ɵɵnextContext().$implicit; return column_r38.visible = $event; })("change", function DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_Template_input_change_4_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r48 = ɵngcc0.ɵɵnextContext(5); ctx_r48.updateGridColumnsSize(); return ctx_r48.emitConfigChange(); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(5, "span");
    ɵngcc0.ɵɵelementStart(6, "span");
    ɵngcc0.ɵɵtext(7);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_button_9_Template, 6, 8, "button", 57);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r38 = ɵngcc0.ɵɵnextContext().$implicit;
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 5, column_r38.header) || column_r38.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngModel", column_r38.visible)("actionName", "dataGrid:ConfigureColumns:" + (column_r38.header || column_r38.name));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(8, 7, column_r38.header) || column_r38.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", column_r38.custom);
} }
function DataGridComponent_div_5_div_8_ul_8_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 53);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_div_8_ul_8_div_3_ng_container_1_Template, 10, 9, "ng-container", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r38 = ctx.$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !column_r38.positionFixed);
} }
function DataGridComponent_div_5_div_8_ul_8_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r51 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li");
    ɵngcc0.ɵɵelementStart(1, "button", 62);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_8_ul_8_li_4_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r51); ɵngcc0.ɵɵnextContext(2); const _r34 = ɵngcc0.ɵɵreference(1); const ctx_r50 = ɵngcc0.ɵɵnextContext(2); ctx_r50.openCustomColumnModal(); return _r34.hide(); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 63);
    ɵngcc0.ɵɵelementStart(4, "span");
    ɵngcc0.ɵɵtext(5);
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Add custom column"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(6, 4, "Add custom column"));
} }
function DataGridComponent_div_5_div_8_ul_8_Template(rf, ctx) { if (rf & 1) {
    const _r54 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 49);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_8_ul_8_Template_ul_click_0_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(1, "li", 50);
    ɵngcc0.ɵɵelementStart(2, "div", 51);
    ɵngcc0.ɵɵlistener("cdkDropListDropped", function DataGridComponent_div_5_div_8_ul_8_Template_div_cdkDropListDropped_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r54); const ctx_r53 = ɵngcc0.ɵɵnextContext(3); return ctx_r53.onColumnDrop($event); });
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_5_div_8_ul_8_div_3_Template, 2, 1, "div", 52);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_div_5_div_8_ul_8_li_4_Template, 7, 6, "li", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r35 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r35.columns);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r35.onAddCustomColumn == null ? null : ctx_r35.onAddCustomColumn.observers == null ? null : ctx_r35.onAddCustomColumn.observers.length);
} }
function DataGridComponent_div_5_div_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 44, 45);
    ɵngcc0.ɵɵelementStart(2, "button", 46);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelement(4, "i", 47);
    ɵngcc0.ɵɵelementStart(5, "span");
    ɵngcc0.ɵɵtext(6);
    ɵngcc0.ɵɵpipe(7, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(8, DataGridComponent_div_5_div_8_ul_8_Template, 5, 2, "ul", 48);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("insideClick", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(3, 4, "Configure columns"));
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:ConfigureColumns");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(7, 6, "Configure columns"));
} }
function DataGridComponent_div_5_div_16_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 69);
} }
function DataGridComponent_div_5_div_16_i_5_Template(rf, ctx) { if (rf & 1) {
    const _r58 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "i", 70);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_16_i_5_Template_i_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r58); const ctx_r57 = ɵngcc0.ɵɵnextContext(3); ctx_r57.searchText = ""; return ctx_r57.searchText$.emit(""); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:SearchInputClear");
} }
function DataGridComponent_div_5_div_16_Template(rf, ctx) { if (rf & 1) {
    const _r60 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 64);
    ɵngcc0.ɵɵelementStart(1, "input", 65);
    ɵngcc0.ɵɵlistener("input", function DataGridComponent_div_5_div_16_Template_input_input_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r60); const ctx_r59 = ɵngcc0.ɵɵnextContext(2); return ctx_r59.searchText$.emit($event.target.value); });
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(3, "div", 66);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_div_5_div_16_i_4_Template, 1, 0, "i", 67);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_5_div_16_i_5_Template, 1, 1, "i", 68);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r13 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(2, 5, "Search\u2026"));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r13.searchText)("actionName", "dataGrid:SearchInput");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r13.searchText.length === 0);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r13.searchText.length > 0);
} }
const _c4 = function (a0) { return { count: a0 }; };
function DataGridComponent_div_5_div_17_small_5_Template(rf, ctx) { if (rf & 1) {
    const _r64 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "small");
    ɵngcc0.ɵɵelementStart(1, "a", 76);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_17_small_5_Template_a_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r64); const ctx_r63 = ɵngcc0.ɵɵnextContext(3); return ctx_r63.setAllItemsSelected(true); });
    ɵngcc0.ɵɵelementStart(2, "span", 36);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵtext(4, " Select all {{ count }} items ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r61 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(3, _c4, ɵngcc0.ɵɵpipeBind1(3, 1, ctx_r61.dataSource.stats$).filteredSize));
} }
function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r71 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 80);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r71); const bulkActionControl_r65 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r70 = ɵngcc0.ɵɵnextContext(3); return bulkActionControl_r65.callback(ctx_r70.selectedItemIds, ctx_r70.reload.bind(ctx_r70)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 81);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Export"));
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:BulkExport");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 5, "Export"));
} }
function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r74 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 80);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r74); const bulkActionControl_r65 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r73 = ɵngcc0.ɵɵnextContext(3); return bulkActionControl_r65.callback(ctx_r73.selectedItemIds, ctx_r73.reload.bind(ctx_r73)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 82);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Delete"));
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:BulkDelete");
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 5, "Delete"));
} }
function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r77 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 80);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r77); const bulkActionControl_r65 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r76 = ɵngcc0.ɵɵnextContext(3); return bulkActionControl_r65.callback(ctx_r76.selectedItemIds, ctx_r76.reload.bind(ctx_r76)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 83);
    ɵngcc0.ɵɵelementStart(3, "span");
    ɵngcc0.ɵɵtext(4);
    ɵngcc0.ɵɵpipe(5, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const bulkActionControl_r65 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 4, bulkActionControl_r65.text));
    ɵngcc0.ɵɵproperty("actionName", "dataGrid:Bulk:" + bulkActionControl_r65.text);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", bulkActionControl_r65.icon);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(5, 6, bulkActionControl_r65.text));
} }
function DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_1_Template, 6, 7, "button", 78);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_2_Template, 6, 7, "button", 78);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_button_3_Template, 6, 8, "button", 79);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r66 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r66.builtInActionType.Export);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r66.builtInActionType.Delete);
} }
function DataGridComponent_div_5_div_17_ng_container_8_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 77);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_div_5_div_17_ng_container_8_ng_container_1_Template, 4, 2, "ng-container", 18);
    ɵngcc0.ɵɵpipe(2, "isControlVisible");
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const bulkActionControl_r65 = ctx.$implicit;
    const ctx_r62 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵproperty("ngSwitch", bulkActionControl_r65.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind2(2, 2, bulkActionControl_r65, ctx_r62.selectedItemIds));
} }
function DataGridComponent_div_5_div_17_Template(rf, ctx) { if (rf & 1) {
    const _r81 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 71);
    ɵngcc0.ɵɵelementStart(1, "h4");
    ɵngcc0.ɵɵelementStart(2, "span", 36);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(3, " {{ count }} selected items. ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "br", 72);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_5_div_17_small_5_Template, 5, 5, "small", 18);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(6, "div", 19);
    ɵngcc0.ɵɵelementStart(7, "div", 20);
    ɵngcc0.ɵɵtemplate(8, DataGridComponent_div_5_div_17_ng_container_8_Template, 3, 5, "ng-container", 73);
    ɵngcc0.ɵɵelementStart(9, "button", 74);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_div_17_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r81); const ctx_r80 = ɵngcc0.ɵɵnextContext(2); return ctx_r80.cancel(); });
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵelement(11, "i", 75);
    ɵngcc0.ɵɵelementStart(12, "span");
    ɵngcc0.ɵɵtext(13);
    ɵngcc0.ɵɵpipe(14, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r14 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("translateParams", ɵngcc0.ɵɵpureFunction1(9, _c4, ctx_r14.selectedItemIds.length));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r14.serverSideDataCallback && ctx_r14.selectedItemIds.length >= ctx_r14.pagination.pageSize);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r14.bulkActionControls);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 5, "Cancel"));
    ɵngcc0.ɵɵadvance(4);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(14, 7, "Cancel"));
} }
const _c5 = function (a0) { return { "m-r-16": a0 }; };
function DataGridComponent_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r83 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 16);
    ɵngcc0.ɵɵelementStart(1, "h4", 17);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_div_5_ng_container_4_Template, 8, 7, "ng-container", 18);
    ɵngcc0.ɵɵelementStart(5, "div", 19);
    ɵngcc0.ɵɵelementStart(6, "div", 20);
    ɵngcc0.ɵɵtemplate(7, DataGridComponent_div_5_ng_container_7_Template, 3, 3, "ng-container", 21);
    ɵngcc0.ɵɵtemplate(8, DataGridComponent_div_5_div_8_Template, 9, 8, "div", 22);
    ɵngcc0.ɵɵelementStart(9, "button", 23);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_div_5_Template_button_click_9_listener() { ɵngcc0.ɵɵrestoreView(_r83); const ctx_r82 = ɵngcc0.ɵɵnextContext(); return ctx_r82.clickReload(); });
    ɵngcc0.ɵɵpipe(10, "translate");
    ɵngcc0.ɵɵpipe(11, "async");
    ɵngcc0.ɵɵelement(12, "i", 24);
    ɵngcc0.ɵɵelementStart(13, "span");
    ɵngcc0.ɵɵtext(14);
    ɵngcc0.ɵɵpipe(15, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(16, DataGridComponent_div_5_div_16_Template, 6, 7, "div", 25);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(17, DataGridComponent_div_5_div_17_Template, 15, 11, "div", 26);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(18, _c5, !!ctx_r2.title));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 10, ctx_r2.title));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.displayOptions.filter);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.headerActionControls);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.configureColumnsEnabled);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(10, 12, "Reload"));
    ɵngcc0.ɵɵproperty("disabled", ɵngcc0.ɵɵpipeBind1(11, 14, ctx_r2.dataSource.loading$));
    ɵngcc0.ɵɵadvance(5);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(15, 16, "Reload"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !ctx_r2.serverSideDataCallback || ctx_r2.showSearch);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.selectedItemIds.length !== 0);
} }
function DataGridComponent_ng_container_7_ng_container_2_th_1_Template(rf, ctx) { if (rf & 1) {
    const _r92 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "th", 89);
    ɵngcc0.ɵɵelementStart(1, "div");
    ɵngcc0.ɵɵelementStart(2, "label", 90);
    ɵngcc0.ɵɵelementStart(3, "input", 91);
    ɵngcc0.ɵɵlistener("change", function DataGridComponent_ng_container_7_ng_container_2_th_1_Template_input_change_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r92); const ctx_r91 = ɵngcc0.ɵɵnextContext(3); return ctx_r91.setAllItemsInCurrentPageSelected($event.target.checked); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(4, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r89 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("checked", ctx_r89.currentPageSelectionState.allSelected)("indeterminate", !(ctx_r89.currentPageSelectionState.allSelected || ctx_r89.currentPageSelectionState.allDeselected));
} }
function DataGridComponent_ng_container_7_ng_container_2_td_2_Template(rf, ctx) { if (rf & 1) {
    const _r95 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", 92);
    ɵngcc0.ɵɵelementStart(1, "label", 90);
    ɵngcc0.ɵɵelementStart(2, "input", 93);
    ɵngcc0.ɵɵlistener("change", function DataGridComponent_ng_container_7_ng_container_2_td_2_Template_input_change_2_listener($event) { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r95); const row_r93 = restoredCtx.$implicit; const ctx_r94 = ɵngcc0.ɵɵnextContext(3); return ctx_r94.setItemsSelected([row_r93], $event.target.checked); });
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelement(3, "span");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r93 = ctx.$implicit;
    const ctx_r90 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("checked", ctx_r90.isItemSelected(row_r93));
} }
function DataGridComponent_ng_container_7_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_2_th_1_Template, 5, 2, "th", 87);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_2_td_2_Template, 4, 1, "td", 88);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DataGridComponent_ng_container_7_ng_container_3_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "th", 89);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r109 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 98);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r109); const actionControl_r102 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r107 = ɵngcc0.ɵɵnextContext(3); return actionControl_r102.callback(row_r98, ctx_r107.reload.bind(ctx_r107)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 99);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 2, "Edit"));
    ɵngcc0.ɵɵproperty("actionName", "dataGridEntry:Edit");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r113 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 100);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r113); const actionControl_r102 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r111 = ɵngcc0.ɵɵnextContext(3); return actionControl_r102.callback(row_r98, ctx_r111.reload.bind(ctx_r111)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 61);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 2, "Delete"));
    ɵngcc0.ɵɵproperty("actionName", "dataGridEntry:Delete");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_i_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 83);
} if (rf & 2) {
    const actionControl_r102 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", actionControl_r102.icon);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const actionControl_r102 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(2, 1, actionControl_r102.text));
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r121 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 101);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r121); const actionControl_r102 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(2).$implicit; const ctx_r119 = ɵngcc0.ɵɵnextContext(3); return actionControl_r102.callback(row_r98, ctx_r119.reload.bind(ctx_r119)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_i_2_Template, 1, 1, "i", 102);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_span_3_Template, 3, 3, "span", 18);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const actionControl_r102 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("tooltip", ɵngcc0.ɵɵpipeBind1(1, 4, actionControl_r102.icon ? actionControl_r102.text : ""));
    ɵngcc0.ɵɵproperty("actionName", "dataGridEntry:" + actionControl_r102.text);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", actionControl_r102.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", !actionControl_r102.icon);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_1_Template, 3, 4, "button", 95);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_2_Template, 3, 4, "button", 96);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_button_3_Template, 4, 6, "button", 97);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r103 = ɵngcc0.ɵɵnextContext(6);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r103.builtInActionType.Edit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r103.builtInActionType.Delete);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 77);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_ng_container_1_Template, 4, 2, "ng-container", 18);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const actionControl_r102 = ctx.$implicit;
    const row_r98 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵproperty("ngSwitch", actionControl_r102.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", actionControl_r102.showIf ? actionControl_r102.showIf(row_r98) : true);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_ng_container_1_Template, 2, 2, "ng-container", 73);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r99 = ɵngcc0.ɵɵnextContext(4);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r99.actionControls);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r135 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 110);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r135); const actionControl_r127 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r133 = ɵngcc0.ɵɵnextContext(3); return actionControl_r127.callback(row_r98, ctx_r133.reload.bind(ctx_r133)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 99);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Edit"));
    ɵngcc0.ɵɵproperty("actionName", "dataGridActions:Edit");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, "Edit"), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r139 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 110);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r139); const actionControl_r127 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r137 = ɵngcc0.ɵɵnextContext(3); return actionControl_r127.callback(row_r98, ctx_r137.reload.bind(ctx_r137)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 82);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Delete"));
    ɵngcc0.ɵɵproperty("actionName", "dataGridActions:Delete");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, "Delete"), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_3_Template(rf, ctx) { if (rf & 1) {
    const _r143 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 110);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r143); const actionControl_r127 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r141 = ɵngcc0.ɵɵnextContext(3); return actionControl_r127.callback(row_r98, ctx_r141.reload.bind(ctx_r141)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 111);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 3, "Export"));
    ɵngcc0.ɵɵproperty("actionName", "dataGridActions:Export");
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 5, "Export"), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r147 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 112);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r147); const actionControl_r127 = ɵngcc0.ɵɵnextContext(2).$implicit; const row_r98 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r145 = ɵngcc0.ɵɵnextContext(3); return actionControl_r127.callback(row_r98, ctx_r145.reload.bind(ctx_r145)); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelement(2, "i", 83);
    ɵngcc0.ɵɵtext(3);
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const actionControl_r127 = ɵngcc0.ɵɵnextContext(2).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 5, actionControl_r127.text));
    ɵngcc0.ɵɵproperty("actionName", "dataGridActions:" + actionControl_r127.text)("actionData", ɵngcc0.ɵɵpureFunction1(9, _c2, actionControl_r127.type));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵpropertyInterpolate("c8yIcon", actionControl_r127.icon);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", ɵngcc0.ɵɵpipeBind1(4, 7, actionControl_r127.text), " ");
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_1_Template, 5, 7, "button", 108);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_2_Template, 5, 7, "button", 108);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_3_Template, 5, 7, "button", 108);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_button_4_Template, 5, 11, "button", 109);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const ctx_r128 = ɵngcc0.ɵɵnextContext(7);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r128.builtInActionType.Edit);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r128.builtInActionType.Delete);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", ctx_r128.builtInActionType.Export);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "li", 77);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_ng_container_1_Template, 5, 3, "ng-container", 18);
    ɵngcc0.ɵɵpipe(2, "isControlVisible");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const actionControl_r127 = ctx.$implicit;
    const row_r98 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵproperty("ngSwitch", actionControl_r127.type);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind2(2, 2, actionControl_r127, row_r98));
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 107);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_li_1_Template, 3, 5, "li", 73);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r125 = ɵngcc0.ɵɵnextContext(5);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r125.actionControls);
} }
function DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 103);
    ɵngcc0.ɵɵelementStart(1, "button", 104);
    ɵngcc0.ɵɵpipe(2, "translate");
    ɵngcc0.ɵɵelement(3, "i", 105);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_ul_4_Template, 2, 1, "ul", 106);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(2, 2, "Actions"));
    ɵngcc0.ɵɵproperty("actionName", "dataGridEntry:Actions");
} }
const _c6 = function (a0) { return { "m-l-auto overflow-visible": a0 }; };
function DataGridComponent_ng_container_7_ng_container_3_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 92);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_td_2_ng_container_1_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵelementStart(2, "div", 17);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_td_2_div_3_Template, 5, 4, "div", 94);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r97 = ɵngcc0.ɵɵnextContext(3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r97.actionControls.length <= 2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(3, _c6, ctx_r97.actionControls.length > 2));
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r97.actionControls.length > 2);
} }
function DataGridComponent_ng_container_7_ng_container_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_3_th_1_Template, 1, 0, "th", 87);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_3_td_2_Template, 4, 5, "td", 88);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-cell-renderer", 121);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const cellRendererSpec_r158 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", cellRendererSpec_r158);
} }
const _c7 = function (a0, a1) { return { columnName: a0, value: a1 }; };
const _c8 = function (a0) { return [a0]; };
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 120);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_ng_container_2_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵpipe(3, "map");
    ɵngcc0.ɵɵpipe(4, "translate");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r84 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const ctx_r153 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(1, 2, column_r84.header) || column_r84.name);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(3, 4, ɵngcc0.ɵɵpureFunction1(13, _c8, ɵngcc0.ɵɵpureFunction2(10, _c7, column_r84.name, ɵngcc0.ɵɵpipeBind1(4, 8, column_r84.header) || column_r84.name)), ctx_r153.getHeaderCellRendererSpec, ctx_r153));
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-cell-renderer", 121);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const cellRendererSpec_r163 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", cellRendererSpec_r163);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-filtering-form-renderer", 121);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const filteringFormRendererSpec_r165 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", filteringFormRendererSpec_r165);
} }
const _c9 = function (a0) { return { "dropdown-menu-right-grid": a0 }; };
const _c10 = function (a0, a1) { return { column: a0, dropdown: a1 }; };
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 127);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_Template_ul_click_0_listener($event) { return $event.stopPropagation(); });
    ɵngcc0.ɵɵelementStart(1, "li", 128);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_ng_container_2_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵpipe(3, "map");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r160 = ɵngcc0.ɵɵreference(1);
    const column_r84 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const ctx_r162 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(6, _c9, ctx_r162.isDropDownPlacedRight(column_r84)));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(3, 2, ɵngcc0.ɵɵpureFunction1(11, _c8, ɵngcc0.ɵɵpureFunction2(8, _c10, column_r84, _r160)), ctx_r162.getFilteringFormRendererSpec, ctx_r162));
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 122, 123);
    ɵngcc0.ɵɵelementStart(2, "button", 124);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ng_container_4_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵpipe(5, "map");
    ɵngcc0.ɵɵpipe(6, "translate");
    ɵngcc0.ɵɵelement(7, "i", 125);
    ɵngcc0.ɵɵpipe(8, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(9, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_ul_9_Template, 4, 13, "ul", 126);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r84 = ɵngcc0.ɵɵnextContext(3).$implicit;
    const ctx_r154 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵpropertyInterpolate1("placement", "bottom ", ctx_r154.isDropDownPlacedRight(column_r84) ? "right" : "left", " ");
    ɵngcc0.ɵɵproperty("insideClick", true);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("title", ɵngcc0.ɵɵpipeBind1(3, 6, column_r84.header) || column_r84.name)("actionName", "dataGridFilterColumn:" + (column_r84.header || column_r84.name));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(5, 8, ɵngcc0.ɵɵpureFunction1(19, _c8, ɵngcc0.ɵɵpureFunction2(16, _c7, column_r84.name, ɵngcc0.ɵɵpipeBind1(6, 12, column_r84.header) || column_r84.name)), ctx_r154.getHeaderCellRendererSpec, ctx_r154));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(8, 14, "Filter"));
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 133);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 134);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "i", 135);
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_Template(rf, ctx) { if (rf & 1) {
    const _r174 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "button", 129);
    ɵngcc0.ɵɵlistener("click", function DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r174); const column_r84 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r172 = ɵngcc0.ɵɵnextContext(); return ctx_r172.changeSortOrder(column_r84.name); });
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵelementContainerStart(2, 77);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_3_Template, 1, 0, "i", 130);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_4_Template, 1, 0, "i", 131);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_i_5_Template, 1, 0, "i", 132);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r84 = ɵngcc0.ɵɵnextContext(3).$implicit;
    ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(1, 4, "Sort"));
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngSwitch", column_r84.sortOrder);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "asc");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "desc");
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_span_5_Template(rf, ctx) { if (rf & 1) {
    const _r178 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "span", 136);
    ɵngcc0.ɵɵlistener("mousedown", function DataGridComponent_ng_container_7_ng_container_4_th_1_span_5_Template_span_mousedown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r178); const column_r84 = ɵngcc0.ɵɵnextContext(3).$implicit; const ctx_r176 = ɵngcc0.ɵɵnextContext(); return ctx_r176.resizeHandleMouseDown$.emit({ event: $event, targetColumnName: column_r84.name }); });
    ɵngcc0.ɵɵelementEnd();
} }
function DataGridComponent_ng_container_7_ng_container_4_th_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "th", 115);
    ɵngcc0.ɵɵpipe(1, "map");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_th_1_div_2_Template, 5, 15, "div", 116);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_4_th_1_div_3_Template, 10, 21, "div", 117);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_th_1_button_4_Template, 6, 6, "button", 118);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_ng_container_7_ng_container_4_th_1_span_5_Template, 1, 0, "span", 119);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const column_r84 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r151 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("sorted", column_r84.sortOrder)("filtered", ɵngcc0.ɵɵpipeBind2(1, 12, column_r84, ctx_r151.isColumnFilteringApplied))("hidden", !column_r84.visible);
    ɵngcc0.ɵɵproperty("ngClass", column_r84.headerCSSClassName);
    ɵngcc0.ɵɵattribute("data-type", column_r84.dataType);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", !column_r84.filterable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r84.filterable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r84.sortable);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", column_r84.resizable);
} }
function DataGridComponent_ng_container_7_ng_container_4_td_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelement(1, "c8y-cell-renderer", 121);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const cellRendererSpec_r182 = ctx.ngIf;
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("spec", cellRendererSpec_r182);
} }
const _c11 = function (a0, a1, a2) { return { value: a0, row: a1, columnName: a2 }; };
function DataGridComponent_ng_container_7_ng_container_4_td_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 137);
    ɵngcc0.ɵɵpipe(1, "translate");
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_td_2_ng_container_2_Template, 2, 1, "ng-container", 18);
    ɵngcc0.ɵɵpipe(3, "map");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r180 = ctx.$implicit;
    const column_r84 = ɵngcc0.ɵɵnextContext(2).$implicit;
    const ctx_r152 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("hidden", !column_r84.visible);
    ɵngcc0.ɵɵproperty("ngClass", column_r84.cellCSSClassName);
    ɵngcc0.ɵɵattribute("data-cell-title", ɵngcc0.ɵɵpipeBind1(1, 6, column_r84.header))("data-type", column_r84.dataType);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind3(3, 8, ɵngcc0.ɵɵpureFunction1(16, _c8, ɵngcc0.ɵɵpureFunction3(12, _c11, ctx_r152.resolveCellValue(row_r180, column_r84.path), row_r180, column_r84.name)), ctx_r152.getCellRendererSpec, ctx_r152));
} }
function DataGridComponent_ng_container_7_ng_container_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, DataGridComponent_ng_container_7_ng_container_4_th_1_Template, 6, 15, "th", 113);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_4_td_2_Template, 4, 18, "td", 114);
    ɵngcc0.ɵɵelementContainerEnd();
} }
function DataGridComponent_ng_container_7_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0, 84);
    ɵngcc0.ɵɵelementContainerStart(1, 77);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_ng_container_7_ng_container_2_Template, 3, 0, "ng-container", 85);
    ɵngcc0.ɵɵtemplate(3, DataGridComponent_ng_container_7_ng_container_3_Template, 3, 0, "ng-container", 85);
    ɵngcc0.ɵɵtemplate(4, DataGridComponent_ng_container_7_ng_container_4_Template, 3, 0, "ng-container", 86);
    ɵngcc0.ɵɵelementContainerEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const column_r84 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("cdkColumnDef", column_r84.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", column_r84.name);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "checkbox");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", "actions");
} }
function DataGridComponent_td_9_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "td", 138);
    ɵngcc0.ɵɵelement(1, "template", null, 139);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("grid-column", ctx_r4.styles.gridInfiniteScrollColumn);
} }
function DataGridComponent_tr_10_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 140);
} }
function DataGridComponent_tr_11_Template(rf, ctx) { if (rf & 1) {
    const _r187 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "tr", 141);
    ɵngcc0.ɵɵlistener("mouseover", function DataGridComponent_tr_11_Template_tr_mouseover_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r187); const row_r185 = restoredCtx.$implicit; const ctx_r186 = ɵngcc0.ɵɵnextContext(); return ctx_r186.rowMouseOver.emit(row_r185); })("mouseleave", function DataGridComponent_tr_11_Template_tr_mouseleave_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r187); const row_r185 = restoredCtx.$implicit; const ctx_r188 = ɵngcc0.ɵɵnextContext(); return ctx_r188.rowMouseLeave.emit(row_r185); })("click", function DataGridComponent_tr_11_Template_tr_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r187); const row_r185 = restoredCtx.$implicit; const ctx_r189 = ɵngcc0.ɵɵnextContext(); return ctx_r189.rowClick.emit(row_r185); });
    ɵngcc0.ɵɵelementEnd();
} }
const _c12 = function (a0) { return { hidden: a0 }; };
function DataGridComponent_tr_13_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "tr", 142);
} if (rf & 2) {
    const ctx_r7 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(1, _c12, !ctx_r7.infiniteScroll));
} }
function DataGridComponent_div_14_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 143);
    ɵngcc0.ɵɵelementStart(1, "div", 144);
    ɵngcc0.ɵɵprojection(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function DataGridComponent_div_17_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 152);
    ɵngcc0.ɵɵelementStart(1, "span", 153);
    ɵngcc0.ɵɵdisableBindings();
    ɵngcc0.ɵɵtext(2, " {{ pageFirstItemIdx }} - {{ pageLastItemIdx }} of {{ itemsTotal }} ");
    ɵngcc0.ɵɵenableBindings();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r190 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("translateParams", ctx_r190.paginationLabelParams);
} }
function DataGridComponent_div_17_div_5_option_6_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "option", 159);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const pageSize_r194 = ctx.$implicit;
    ɵngcc0.ɵɵproperty("ngValue", pageSize_r194);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate1(" ", pageSize_r194, " ");
} }
function DataGridComponent_div_17_div_5_Template(rf, ctx) { if (rf & 1) {
    const _r196 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 154);
    ɵngcc0.ɵɵelementStart(1, "label", 155);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵpipe(3, "translate");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 156);
    ɵngcc0.ɵɵelementStart(5, "select", 157);
    ɵngcc0.ɵɵlistener("ngModelChange", function DataGridComponent_div_17_div_5_Template_select_ngModelChange_5_listener($event) { ɵngcc0.ɵɵrestoreView(_r196); const ctx_r195 = ɵngcc0.ɵɵnextContext(2); return ctx_r195.updatePagination({ itemsPerPage: $event, page: ctx_r195.pagination.currentPage }); });
    ɵngcc0.ɵɵtemplate(6, DataGridComponent_div_17_div_5_option_6_Template, 2, 2, "option", 158);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r191 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind1(3, 3, "Items per page"));
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngModel", ctx_r191.pagination.pageSize);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r191.possiblePageSizes);
} }
function DataGridComponent_div_17_pagination_8_Template(rf, ctx) { if (rf & 1) {
    const _r198 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "pagination", 160);
    ɵngcc0.ɵɵlistener("pageChanged", function DataGridComponent_div_17_pagination_8_Template_pagination_pageChanged_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r198); const ctx_r197 = ɵngcc0.ɵɵnextContext(2); return ctx_r197.updatePagination($event); })("numPages", function DataGridComponent_div_17_pagination_8_Template_pagination_numPages_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r198); const ctx_r199 = ɵngcc0.ɵɵnextContext(2); return ctx_r199.totalPagesCount$.next($event); });
    ɵngcc0.ɵɵpipe(1, "async");
    ɵngcc0.ɵɵpipe(2, "async");
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r192 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵclassProp("hidden", ɵngcc0.ɵɵpipeBind1(1, 7, ctx_r192.hidePagination$));
    ɵngcc0.ɵɵproperty("ngModel", ctx_r192.pagination.currentPage)("totalItems", ɵngcc0.ɵɵpipeBind1(2, 9, ctx_r192.dataSource.stats$).filteredSize)("itemsPerPage", ctx_r192.pagination.pageSize)("maxSize", 5)("boundaryLinks", false);
} }
function DataGridComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 145);
    ɵngcc0.ɵɵelementStart(1, "div", 146);
    ɵngcc0.ɵɵtemplate(2, DataGridComponent_div_17_div_2_Template, 3, 1, "div", 147);
    ɵngcc0.ɵɵpipe(3, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(4, "div", 148);
    ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_17_div_5_Template, 7, 5, "div", 149);
    ɵngcc0.ɵɵpipe(6, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementStart(7, "div", 150);
    ɵngcc0.ɵɵtemplate(8, DataGridComponent_div_17_pagination_8_Template, 3, 11, "pagination", 151);
    ɵngcc0.ɵɵpipe(9, "async");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r9 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(3, 3, ctx_r9.dataSource.stats$).currentPageSize > 0);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(6, 5, ctx_r9.dataSource.stats$).filteredSize > ctx_r9.minPossiblePageSize);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(9, 7, ctx_r9.dataSource.stats$).filteredSize > 0);
} }
const _c13 = [[["c8y-ui-empty-state"], ["", 8, "c8y-empty-state"]]];
const _c14 = function (a0) { return { "table-data-grid__overlay": a0 }; };
const _c15 = function () { return ["infiniteScrollFooter"]; };
const _c16 = ["c8y-ui-empty-state, .c8y-empty-state"];
var SortingOrder;
(function (SortingOrder) {
    SortingOrder["ASC"] = "asc";
    SortingOrder["DESC"] = "desc";
})(SortingOrder || (SortingOrder = {}));
export class DataGridComponent {
    constructor(sanitizer, hostRef, cd, cfr, gainsightService, bsModalService, alertService) {
        this.sanitizer = sanitizer;
        this.hostRef = hostRef;
        this.cd = cd;
        this.cfr = cfr;
        this.gainsightService = gainsightService;
        this.bsModalService = bsModalService;
        this.alertService = alertService;
        /** The title for the data grid, it's displayed in the grid's header. */
        this.title = gettext('Items');
        /** The label for load more button. */
        this.loadMoreItemsLabel = gettext('Load more items');
        /** The label for loading indicator. */
        this.loadingItemsLabel = gettext('Loading items…');
        /** Determines whether text search input is shown in the grid's header. */
        this.showSearch = false;
        this.dataSource = new GridDataSource();
        this.filteringLabelsParams = {
            filteredItemsCount: 0,
            allItemsCount: 0
        };
        this.paginationLabelParams = {
            pageFirstItemIdx: 0,
            pageLastItemIdx: 0,
            itemsTotal: 0
        };
        this.possiblePageSizes = [10, 15, 20, 30, 50];
        this.minPossiblePageSize = Math.min(...this.possiblePageSizes);
        this.selectable = false;
        this.selectionPrimaryKey = 'id';
        this.displayOptions = {
            striped: true,
            bordered: false,
            gridHeader: true,
            filter: true
        };
        /** Sets initial search text. */
        this.searchText = '';
        /** Determines if custom columns button will be enabled. */
        this.configureColumnsEnabled = true;
        /** Shows the warning for the sub-assets counter */
        this.showCounterWarning = false;
        /** Emits an event when mouse is over a row. */
        this.rowMouseOver = new EventEmitter();
        /** Emits an event when mouse leaves a row. */
        this.rowMouseLeave = new EventEmitter();
        /** Emits an event when a row is clicked. */
        this.rowClick = new EventEmitter();
        /** Emits an event when grid's configuration is changed. */
        this.onConfigChange = new EventEmitter();
        /** Emits an event before the filter is applied. */
        this.onBeforeFilter = new EventEmitter();
        /** Emits an event before the search is performed. */
        this.onBeforeSearch = new EventEmitter();
        /** Emits an event when a filter is applied in a column. */
        this.onFilter = new EventEmitter();
        /** Emits an event when items selection changes. The array contains keys of selected items (key property is defined by `selectionPrimaryKey`). */
        this.itemsSelect = new EventEmitter();
        /** Emits an event when reload button is clicked. */
        this.onReload = new EventEmitter();
        /** Emits an event when a custom column is added */
        this.onAddCustomColumn = new EventEmitter();
        /** Emits an event when a custom column is removed */
        this.onRemoveCustomColumn = new EventEmitter();
        this.columnNames = [];
        this.styles = {
            tableCursor: 'auto',
            gridTemplateColumns: undefined,
            gridInfiniteScrollColumn: undefined
        };
        this.searchText$ = new EventEmitter();
        this.filteringApplied = false;
        this.totalPagesCount$ = new BehaviorSubject(Infinity);
        this.hidePagination$ = this.totalPagesCount$.pipe(map(totalPagesCount => totalPagesCount <= 1), delay(0) // prevents ExpressionChangedAfterItHasBeenCheckedError
        );
        this.selectedItemIds = [];
        this.currentPageSelectionState = {
            allSelected: false,
            allDeselected: true
        };
        this.builtInActionType = {
            Edit: "EDIT" /* Edit */,
            Delete: "DELETE" /* Delete */,
            Export: "EXPORT" /* Export */
        };
        this.confirmRemoveColumnButtons = [
            {
                label: gettext('Cancel'),
                action: () => Promise.resolve(false)
            },
            {
                label: gettext('Remove`column,verb`'),
                status: 'danger',
                action: () => Promise.resolve(true)
            }
        ];
        this.resizeHandleMouseDown$ = new EventEmitter();
        this.resizeHandleContainerMouseMove$ = new EventEmitter();
        this.resizeHandleContainerMouseUp$ = new EventEmitter();
        this.columnsInitialized = false;
        this.unsubscribe$ = new Subject();
        this.SEARCH_DEBOUNCE_TIME = 500;
        /**
         * Event emitter, taking boolean values used for loading data grid data with debounce.
         * Default value is set to false. Set to true if data grid is using infinite scroll and page should be reloaded.
         * This is used to avoid having multiple this.loadData() function calls.
         */
        this.triggerLoadData = new EventEmitter();
        this.triggerLoadData.pipe(debounceTime(1), takeUntil(this.unsubscribe$)).subscribe(reload => {
            this.loadData(reload);
        });
    }
    /** The list of columns to be displayed in the grid. */
    set _columns(columns) {
        this.columns = columns || [];
        this.columnsInitialized = this.columnsInitialized || !!columns;
    }
    /** The list of rows to be displayed in the grid (used for client side data). */
    set _rows(rows) {
        this.rows = rows || [];
    }
    /** Pagination settings, e.g. allows for setting current page or page size. */
    set _pagination(pagination) {
        this.pagination = pagination;
        const pageSize = get(this.pagination, 'pageSize');
        if (pageSize &&
            !this.possiblePageSizes.find(possiblePageSize => possiblePageSize === pageSize)) {
            this.pagination = Object.assign(Object.assign({}, this.pagination), { pageSize: 10 });
        }
    }
    /** Sets load more mode. */
    set _infiniteScroll(infiniteScroll) {
        this.infiniteScroll = infiniteScroll;
    }
    /**
     * Sets a callback function which will be invoked whenever data needs to be loaded from server.
     * The function should take [[DataSourceModifier]] and return [[ServerSideDataResult]].
     */
    set _serverSideDataCallback(serverSideDataCallback) {
        this.serverSideDataCallback = serverSideDataCallback;
    }
    /** Determines whether items can be selected by clicking a checkbox in the first column. */
    set _selectable(selectable) {
        this.selectable = selectable;
    }
    /** Determines which item's property will be used to distinguish selection status. */
    set _selectionPrimaryKey(selectionPrimaryKey) {
        this.selectionPrimaryKey = selectionPrimaryKey;
    }
    /** Sets display options. */
    set _displayOptions(displayOptions) {
        this.displayOptions = Object.assign(Object.assign({}, this.displayOptions), displayOptions);
    }
    /** Sets action controls (actions available for individual items). */
    set _actionControls(actionControls) {
        this.actionControls = actionControls || [];
    }
    /** Sets bulk action controls (actions available for items selected by user). */
    set _bulkActionControls(bulkActionControls) {
        this.bulkActionControls = bulkActionControls || [];
    }
    /** Sets header action controls (actions available from data grid header). */
    set _headerActionControls(headerActionControls) {
        this.headerActionControls = headerActionControls || [];
    }
    ngOnInit() {
        this.searchText$
            .pipe(takeUntil(this.unsubscribe$), debounceTime(this.SEARCH_DEBOUNCE_TIME), distinctUntilChanged(), tap(searchText => {
            this.searchText = searchText;
            this.onBeforeSearch.emit(this.searchText);
        }))
            .subscribe(() => {
            this.reload();
        });
        if (this.selectable) {
            combineLatest(this.dataSource.data$, this.itemsSelect.asObservable())
                .pipe(takeUntil(this.unsubscribe$))
                .subscribe(([data]) => {
                const currentPageEmpty = data.length === 0;
                this.currentPageSelectionState = {
                    allSelected: currentPageEmpty ? false : data.every(item => this.isItemSelected(item)),
                    allDeselected: currentPageEmpty ? true : data.every(item => !this.isItemSelected(item))
                };
            });
        }
        this.dataSource.stats$.pipe(takeUntil(this.unsubscribe$)).subscribe(stats => {
            this.createLoadMoreComponent(stats);
            this.updateFilteringLabelsParams(stats);
            this.updatePaginationLabelParams(stats);
        });
        if (this.refresh) {
            this.refresh.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
                this.cancel(false);
                this.reload();
            });
        }
    }
    ngOnChanges(event) {
        var _a, _b, _c;
        if (((!event._actionControls && !event.searchText) || ((_a = event._actionControls) === null || _a === void 0 ? void 0 : _a.firstChange)) &&
            this.columnsInitialized) {
            const reload = !!((_b = event._infiniteScroll) === null || _b === void 0 ? void 0 : _b.currentValue) && !((_c = event._infiniteScroll) === null || _c === void 0 ? void 0 : _c.firstChange);
            this.triggerLoadData.emit(reload);
        }
        this.updateColumns();
    }
    ngAfterViewInit() {
        this.updateGridColumnsSize();
        this.updateThEls();
        this.setupResizeHandle();
    }
    ngOnDestroy() {
        this.unsubscribe$.next();
        this.unsubscribe$.complete();
    }
    openCustomColumnModal() {
        const modalRef = this.bsModalService.show(ConfigureCustomColumnComponent, {
            class: 'modal-sm',
            ignoreBackdropClick: true,
            initialState: {
                columns: this.columns
            }
        });
        modalRef.content.onAddCustomColumn
            .pipe(takeUntil(modalRef.onHidden))
            .subscribe(event => this.onAddCustomColumn.emit(event));
    }
    removeCustomColumn(poConfirm, column, ddConfigureColumns) {
        return __awaiter(this, void 0, void 0, function* () {
            ddConfigureColumns.autoClose = false;
            poConfirm.message = gettext('Do you want to remove this column?');
            try {
                const remove = yield poConfirm.show(this.confirmRemoveColumnButtons);
                if (remove) {
                    this.onRemoveCustomColumn.emit(column);
                }
            }
            catch (e) {
                this.alertService.addServerFailure(e);
            }
            setTimeout(() => (ddConfigureColumns.autoClose = true), 0);
        });
    }
    trackByName(index, item) {
        return item.name;
    }
    resolveCellValue(row, path) {
        return flow([
            x => this.dataSource.resolveValue(x, path),
            this.dataSource.resolveFunction,
            this.dataSource.normalizeNil
        ])(row);
    }
    changeSortOrder(columnName) {
        const column = this.columns.find(({ name }) => name === columnName);
        this.gainsightService.triggerEvent('dataGrid:ChangeSortOrder', {
            column: columnName,
            sortOrderBeforeChange: getPresentSortOrder(column === null || column === void 0 ? void 0 : column.sortOrder)
        });
        if (column) {
            const { sortOrder } = column;
            if (!sortOrder) {
                this.updateSorting([columnName], SortingOrder.ASC);
            }
            else if (sortOrder === SortingOrder.ASC) {
                this.updateSorting([columnName], SortingOrder.DESC);
            }
            else {
                this.updateSorting([columnName], '');
            }
        }
        function getPresentSortOrder(sortOrder) {
            switch (sortOrder) {
                case SortingOrder.ASC:
                    return 'descending';
                case SortingOrder.DESC:
                    return 'descending (Default)';
                default:
                    return 'ascending';
            }
        }
    }
    updateSorting(columnNames, sortOrder) {
        this.columns = this.columns.map((column) => {
            if (columnNames.includes(column.name)) {
                return Object.assign(Object.assign({}, column), { sortOrder });
            }
            return column;
        });
        this.emitConfigChange();
        this.reload();
    }
    applyFilter(columnName, dropdown, filteringModifier) {
        this.gainsightService.triggerEvent('dataGrid:ApplyFilter', { column: columnName });
        this.onBeforeFilter.emit({ columnName, dropdown, filteringModifier });
        this.updateFiltering([columnName], {
            type: FilteringActionType.ApplyFilter,
            payload: { filteringModifier }
        });
        dropdown.hide();
        this.onFilter.emit({ columnName, dropdown, filteringModifier });
    }
    resetFilter(columnName, dropdown) {
        this.gainsightService.triggerEvent('dataGrid:ResetFilter', { column: columnName });
        this.updateFiltering([columnName], { type: FilteringActionType.ResetFilter });
        dropdown.hide();
        this.onFilter.emit({ columnName });
    }
    clearFilters(reload = true) {
        this.gainsightService.triggerEvent('dataGrid:ClearFilters');
        this.updateFiltering(this.columns.map(({ name }) => name), {
            type: FilteringActionType.ResetFilter
        }, reload);
        this.onFilter.emit({});
    }
    updateFiltering(columnNames, action, reload = true) {
        this.columns = this.columns.map(column => {
            if (columnNames.includes(column.name)) {
                return Object.assign(Object.assign({}, column), (action.type === FilteringActionType.ApplyFilter
                    ? action.payload.filteringModifier
                    : { filterPredicate: undefined, externalFilterQuery: undefined }));
            }
            return column;
        });
        this.updateFilteringApplied();
        if (reload) {
            this.reload();
        }
    }
    updateFilteringApplied() {
        this.filteringApplied = this.columns.some(this.isColumnFilteringApplied);
    }
    isColumnFilteringApplied(column) {
        const { filterable, filterPredicate, externalFilterQuery } = column;
        return !!(filterable && (filterPredicate || externalFilterQuery));
    }
    updatePagination({ itemsPerPage, page }) {
        this.pagination = Object.assign(Object.assign({}, this.pagination), { pageSize: itemsPerPage, currentPage: page });
        this.loadData();
        this.emitConfigChange();
    }
    clickReload() {
        this.gainsightService.triggerEvent('dataGrid:Reload');
        this.searchText = '';
        this.reload();
        this.onReload.next();
    }
    reload() {
        this.pagination = Object.assign(Object.assign({}, this.pagination), { currentPage: 1 });
        this.recreateLoadMoreComponent = true;
        this.loadData(true);
        this.scrollToTop();
    }
    loadNextPage() {
        this.pagination = Object.assign(Object.assign({}, this.pagination), { currentPage: this.pagination.nextPage });
        this.loadData();
        return this.dataSource.resultList$
            .pipe(take(1)) // in order for `toPromise` to work, the observable needs to complete
            .toPromise()
            .then(result => {
            return Object.assign(Object.assign({}, result), { paging: Object.assign(Object.assign({}, result.paging), { next: this.loadNextPage.bind(this) }) });
        });
    }
    getCellRendererSpec({ value, row, columnName }) {
        return this._getCellRendererSpec({ type: 'CELL', value, row, columnName });
    }
    getHeaderCellRendererSpec({ value, columnName }) {
        return this._getCellRendererSpec({ type: 'HEADER', value, row: undefined, columnName });
    }
    getFilteringFormRendererSpec({ column, dropdown }) {
        return {
            renderer: get(this.getColumnRenderer(column), 'filteringFormRendererDef.template') ||
                column.filteringFormRendererComponent,
            context: {
                property: column,
                applyFilter: this.applyFilter.bind(this, column.name, dropdown),
                resetFilter: this.resetFilter.bind(this, column.name, dropdown)
            }
        };
    }
    setAllItemsSelected(selected) {
        this.dataSource.selection$
            .pipe(first())
            .subscribe(({ filteredDataIds }) => this.setItemsSelected(filteredDataIds, selected));
    }
    setAllItemsInCurrentPageSelected(selected) {
        this.dataSource.data$.pipe(first()).subscribe(data => this.setItemsSelected(data, selected));
    }
    setItemsSelected(items, selected) {
        const itemIds = items.map((item) => typeof item === 'object' ? item[this.selectionPrimaryKey] : item);
        this.selectedItemIds = selected
            ? union(this.selectedItemIds, itemIds)
            : without(this.selectedItemIds, ...itemIds);
        this.gainsightService.triggerEvent('dataGrid:ItemCheckboxClicked', { itemSelected: selected });
        this.itemsSelect.emit(this.selectedItemIds);
    }
    cancel(triggerCustomEvent = true) {
        if (triggerCustomEvent) {
            this.gainsightService.triggerEvent('dataGrid:CancelSelection');
        }
        this.selectedItemIds = [];
        this.itemsSelect.emit(this.selectedItemIds);
    }
    isItemSelected(item) {
        return this.selectedItemIds.includes(item[this.selectionPrimaryKey]);
    }
    onColumnDrop({ previousIndex, currentIndex }) {
        const differentIndex = previousIndex !== currentIndex;
        if (differentIndex) {
            this.gainsightService.triggerEvent('dataGrid:ColumnPositionChanged', {
                columnName: this.columnNames[previousIndex]
            });
            const column = this.columns.splice(previousIndex, 1);
            this.columns.splice(currentIndex, 0, column[0]);
            this.emitConfigChange();
        }
        this.updateColumnNames();
        this.updateGridColumnsSize();
    }
    updateGridColumnsSize() {
        this.styles = Object.assign(Object.assign({}, this.styles), { gridTemplateColumns: this.sanitizer.bypassSecurityTrustStyle(this.columns
                .filter(column => column.visible)
                .map(({ gridTrackSize }) => gridTrackSize)
                .join(' ')), gridInfiniteScrollColumn: this.sanitizer.bypassSecurityTrustStyle(`1 / span ${this.columns.filter(column => column.visible).length}`) });
    }
    updateThEls() {
        setTimeout(() => {
            this.thEls = this.thRefs
                ? this.thRefs.toArray().map(({ nativeElement }) => nativeElement)
                : [];
        }, 0);
    }
    // To be removed when columns are transformed to observables.
    isDropDownPlacedRight(column) {
        return (indexOf(this.columns.filter(c => c.visible), column) >
            this.columns.filter(c => c.visible).length / 2);
    }
    emitConfigChange() {
        if (this.columnsInitialized) {
            const columns = this.columns.map(column => {
                if (column.custom) {
                    const { visible, sortOrder, name, header, path } = column;
                    return { visible, sortOrder, name, header, path, custom: true };
                }
                else {
                    const { visible, sortOrder, name } = column;
                    return { visible, sortOrder, name };
                }
            });
            this.onConfigChange.emit({ columns, pagination: this.pagination });
        }
    }
    loadData(reload = false) {
        const { rows, columns, pagination, searchText, serverSideDataCallback, selectable, selectionPrimaryKey, infiniteScroll } = this;
        this.dataSource.loadData({
            rows,
            columns,
            pagination,
            searchText,
            serverSideDataCallback,
            selectable,
            selectionPrimaryKey,
            infiniteScroll,
            reload
        });
    }
    updateColumns() {
        const specialColumn = {
            sortable: false,
            positionFixed: true
        };
        const checkboxColumn = this.selectable
            ? Object.assign(Object.assign({}, specialColumn), { name: "checkbox" /* Checkbox */, gridTrackSize: '32px' }) : undefined;
        const actionsColumn = this.actionControls.length > 0
            ? Object.assign(Object.assign({}, specialColumn), { name: "actions" /* Actions */, gridTrackSize: this.actionControls.length > 2 ? '40px' : 'minmax(40px, auto)' }) : undefined;
        const columns = [checkboxColumn, ...this.columns, actionsColumn]
            .filter(Boolean)
            .map(this.withColumnDefaults);
        this.columns = uniqBy(columns, 'name');
        this.updateColumnNames();
        this.updateGridColumnsSize();
        this.updateThEls();
        this.updateFilteringApplied();
    }
    withColumnDefaults(column) {
        const dataType = column.dataType || "text-short" /* TextShort */;
        const { headerCSSClassName, cellCSSClassName } = column;
        return Object.assign(Object.assign({ visible: true, positionFixed: false, resizable: true, sortable: true, sortOrder: '', filterable: false }, column), { dataType, gridTrackSize: column.gridTrackSize ||
                `minmax(${minColumnGridTrackSize}px, ${ratiosByColumnTypes[dataType]}fr)`, headerCSSClassName: (typeof headerCSSClassName === 'string'
                ? headerCSSClassName.split(' ')
                : headerCSSClassName) || [], cellCSSClassName: (typeof cellCSSClassName === 'string' ? cellCSSClassName.split(' ') : cellCSSClassName) ||
                [] });
    }
    updateColumnNames() {
        this.columnNames = this.columns.map(({ name }) => name);
    }
    setupResizeHandle() {
        const resizeHandleDrag$ = this.resizeHandleMouseDown$.pipe(takeUntil(this.unsubscribe$), tap(() => this.clearMouseHighlights()), mergeMap(({ event, targetColumnName }) => {
            this.columns = this.columns.map(column => {
                if (column.name === targetColumnName) {
                    return Object.assign(Object.assign({}, column), { headerCSSClassName: union(column.headerCSSClassName, ['header--being-resized']) });
                }
                return column;
            });
            this.headerBeingResized = {
                columnName: targetColumnName,
                el: event.target.parentNode
            };
            this.styles = Object.assign(Object.assign({}, this.styles), { tableCursor: 'col-resize' });
            return this.resizeHandleContainerMouseMove$.pipe(tap(() => this.clearMouseHighlights()), takeUntil(this.resizeHandleContainerMouseUp$));
        }));
        resizeHandleDrag$.subscribe((event) => {
            requestAnimationFrame(() => {
                this.columns = this.columns.map((column, i) => {
                    if (this.headerBeingResized && column.name === this.headerBeingResized.columnName) {
                        const scrollContainerDiv = this.scrollContainer.nativeElement;
                        // Read scrollContainerEl's offset left relative to the document.
                        const horizontalOffset = scrollContainerDiv.getBoundingClientRect().left;
                        // Adjust with the scrollContainerEl horizontal scroll position.
                        const horizontalScrollOffset = scrollContainerDiv.scrollLeft - horizontalOffset;
                        // Read left offset of the resized header.
                        const headerOffsetLeft = this.headerBeingResized.el.offsetLeft || 0;
                        // Calculate the desired width.
                        const width = horizontalScrollOffset + event.clientX - headerOffsetLeft;
                        return Object.assign(Object.assign({}, column), { 
                            // Update the column object with the new size value, enforce our minimum size.
                            gridTrackSize: `${Math.max(minColumnGridTrackSize, width)}px` });
                    }
                    // For the other headers which don't have a set width, fix it to their computed width.
                    if (column.gridTrackSize.startsWith('minmax')) {
                        return Object.assign(Object.assign({}, column), { 
                            // isn't fixed yet (it would be a px value)
                            gridTrackSize: `${_parseInt(this.thEls[i].clientWidth)}px` });
                    }
                    return column;
                });
                /*
                 * Update the column sizes.
                 * Note: grid-template-columns sets the width for all columns in one value.
                 */
                this.updateGridColumnsSize();
            });
        });
        this.resizeHandleContainerMouseUp$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
            if (this.headerBeingResized) {
                this.columns = this.columns.map(column => {
                    if (column.name === this.headerBeingResized.columnName) {
                        return Object.assign(Object.assign({}, column), { headerCSSClassName: without(column.headerCSSClassName, 'header--being-resized') });
                    }
                    return column;
                });
                this.headerBeingResized = undefined;
                this.styles = Object.assign(Object.assign({}, this.styles), { tableCursor: 'auto' });
            }
        });
    }
    clearMouseHighlights() {
        if (window.getSelection) {
            window.getSelection().removeAllRanges();
        }
    }
    _getCellRendererSpec({ type, value, row, columnName }) {
        const column = this.columns.find(({ name }) => name === columnName);
        const columnRenderer = this.getColumnRenderer(column);
        const rendererTemplate = get(columnRenderer, `${type === 'HEADER' ? 'headerCellRendererDef' : 'cellRendererDef'}.template`);
        const { cellRendererComponent, headerCellRendererComponent } = column;
        const rendererComponent = type === 'HEADER' ? headerCellRendererComponent : cellRendererComponent;
        return {
            renderer: rendererTemplate || rendererComponent,
            context: {
                value,
                item: row,
                property: column
            }
        };
    }
    getColumnRenderer(column) {
        return this.columnRenderers.toArray().find(({ name }) => name === column.name);
    }
    updateFilteringLabelsParams(stats) {
        this.filteringLabelsParams = {
            filteredItemsCount: stats.filteredSize,
            allItemsCount: stats.size
        };
    }
    updatePaginationLabelParams(stats) {
        this.pagination.nextPage = stats.nextPage;
        const pageFirstItemIdx = (stats.currentPage - 1) * stats.firstPageSize + 1;
        this.paginationLabelParams = {
            pageFirstItemIdx,
            pageLastItemIdx: pageFirstItemIdx + (stats.currentPageSize - 1),
            itemsTotal: stats.filteredSize
        };
    }
    createLoadMoreComponent(stats) {
        if (this.infiniteScroll &&
            stats &&
            stats.nextPage &&
            (!this.loadMoreComponent || this.recreateLoadMoreComponent)) {
            this.recreateLoadMoreComponent = false;
            this.infiniteScrollContainer.clear();
            const componentFactory = this.cfr.resolveComponentFactory(LoadMoreComponent);
            const componentRef = this.infiniteScrollContainer.createComponent(componentFactory);
            const instance = componentRef.instance;
            instance.useIntersection = this.infiniteScroll === 'auto' || this.infiniteScroll === 'hidden';
            instance.hidden = this.infiniteScroll === 'hidden';
            instance.paging = {
                nextPage: stats.nextPage,
                next: this.loadNextPage.bind(this)
            };
            instance.loadNextLabel = this.loadMoreItemsLabel;
            instance.loadingLabel = this.loadingItemsLabel;
            this.loadMoreComponent = instance;
        }
        else if (this.loadMoreComponent && !stats.nextPage) {
            this.loadMoreComponent.paging = {
                nextPage: null
            };
        }
    }
    scrollToTop() {
        if (this.infiniteScroll) {
            this.scrollContainer.nativeElement.scrollTop = 0;
        }
    }
}
DataGridComponent.ɵfac = function DataGridComponent_Factory(t) { return new (t || DataGridComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.GainsightService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.BsModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.AlertService)); };
DataGridComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: DataGridComponent, selectors: [["c8y-data-grid"]], contentQueries: function DataGridComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, ColumnDirective, 4);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.columnRenderers = _t);
    } }, viewQuery: function DataGridComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 7);
        ɵngcc0.ɵɵviewQuery(_c1, 5, ViewContainerRef);
        ɵngcc0.ɵɵviewQuery(CdkHeaderCell, 5, ElementRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.scrollContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.infiniteScrollContainer = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.thRefs = _t);
    } }, hostAttrs: [1, "d-contents"], inputs: { title: "title", loadMoreItemsLabel: "loadMoreItemsLabel", loadingItemsLabel: "loadingItemsLabel", showSearch: "showSearch", searchText: "searchText", configureColumnsEnabled: "configureColumnsEnabled", showCounterWarning: "showCounterWarning", _columns: ["columns", "_columns"], _rows: ["rows", "_rows"], _pagination: ["pagination", "_pagination"], _infiniteScroll: ["infiniteScroll", "_infiniteScroll"], _serverSideDataCallback: ["serverSideDataCallback", "_serverSideDataCallback"], _selectable: ["selectable", "_selectable"], _selectionPrimaryKey: ["selectionPrimaryKey", "_selectionPrimaryKey"], _displayOptions: ["displayOptions", "_displayOptions"], _actionControls: ["actionControls", "_actionControls"], _bulkActionControls: ["bulkActionControls", "_bulkActionControls"], _headerActionControls: ["headerActionControls", "_headerActionControls"], refresh: "refresh" }, outputs: { rowMouseOver: "rowMouseOver", rowMouseLeave: "rowMouseLeave", rowClick: "rowClick", onConfigChange: "onConfigChange", onBeforeFilter: "onBeforeFilter", onBeforeSearch: "onBeforeSearch", onFilter: "onFilter", itemsSelect: "itemsSelect", onReload: "onReload", onAddCustomColumn: "onAddCustomColumn", onRemoveCustomColumn: "onRemoveCustomColumn" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c16, decls: 18, vars: 33, consts: [[1, "table-data-grid-scroll", 3, "ngClass"], ["scroll", ""], ["class", "table-data-grid__loading--wrapper", 4, "ngIf"], ["class", "table-data-grid-header separator large-padding", 4, "ngIf"], ["cdk-table", "", 1, "table", "table-hover", "table-filtered-sorted", "table-data-grid", "large-padding", 3, "dataSource", "trackBy", "mousemove", "mouseup"], [3, "cdkColumnDef", 4, "ngFor", "ngForOf", "ngForTrackBy"], ["cdkColumnDef", "infiniteScrollFooter"], ["cdk-footer-cell", "", 3, "grid-column", 4, "cdkFooterCellDef"], ["cdk-header-row", "", 4, "cdkHeaderRowDef"], ["cdk-row", "", 3, "mouseover", "mouseleave", "click", 4, "cdkRowDef", "cdkRowDefColumns"], ["cdk-footer-row", "", 3, "ngClass", 4, "cdkFooterRowDef"], ["class", "row m-0 p-t-40 p-b-40", 4, "ngIf"], ["class", "table-data-grid-footer separator large-padding", 4, "ngIf"], [1, "table-data-grid__loading--wrapper"], [1, "table-data-grid__loading--loader"], [3, "message"], [1, "table-data-grid-header", "separator", "large-padding"], [3, "ngClass"], [4, "ngIf"], [1, "flex-item-right"], [1, "btnbar", "flex-row"], [4, "ngFor", "ngForOf"], ["class", "dropdown", "dropdown", "", "container", "body", "placement", "bottom left", 3, "insideClick", 4, "ngIf"], [1, "btnbar-btn", "btn-link", 3, "title", "disabled", "click"], ["c8yIcon", "refresh", 1, "m-r-4"], ["class", "input-group input-group-search m-l-sm-16", 4, "ngIf"], ["class", "table-data-grid-header-bulk-actions animated slideInDown fast", 4, "ngIf"], [1, "hidden-xs", "hidden-sm"], ["placement", "right", "triggers", "focus", "c8yProductExperience", "", 1, "btn-clean", "text-primary", 3, "popover", "actionName"], ["c8yIcon", "question-circle-o"], ["class", "hidden-xs hidden-sm", 4, "ngIf"], ["translate", "", 1, "label", "label-default", "m-r-4"], ["class", "m-r-4", "ngNonBindable", "", "translate", "", 3, "translateParams", 4, "ngIf"], ["translate", "", 1, "m-r-4", 3, "translateParams"], [1, "m-l-8", "btn", "btn-xs", "btn-default", "m-r-4", 3, "title", "click"], [1, "badge", "badge-info", "m-r-4"], ["translate", "", 3, "translateParams"], ["placement", "right", "triggers", "focus", 1, "btn-clean", "text-primary", 3, "popover"], ["c8yIcon", "warning"], [4, "ngIf", "ngIfElse"], ["customTemplate", ""], ["c8yProductExperience", "", 1, "btnbar-btn", "btn-link", 3, "title", "actionName", "actionData", "click"], ["c8yIcon", "headerActionControl.icon", 1, "m-r-4"], [4, "ngTemplateOutlet", "ngTemplateOutletContext"], ["dropdown", "", "container", "body", "placement", "bottom left", 1, "dropdown", 3, "insideClick"], ["ddConfigureColumns", "bs-dropdown"], ["dropdownToggle", "", "c8yProductExperience", "", 1, "btnbar-btn", "c8y-dropdown", 3, "title", "actionName"], ["c8yIcon", "columns", 1, "m-r-4"], ["class", "dropdown-menu", 3, "click", 4, "dropdownMenu"], [1, "dropdown-menu", 3, "click"], [1, "bg-white"], ["cdkDropList", "", 1, "list-group", "m-0", 3, "cdkDropListDropped"], ["cdkDrag", "", "cdkDragLockAxis", "y", 4, "ngFor", "ngForOf"], ["cdkDrag", "", "cdkDragLockAxis", "y"], [1, "list-group-item", "draggable-after", "p-0", "a-i-center"], [1, "c8y-checkbox", "p-l-16", 3, "title"], ["type", "checkbox", "c8yProductExperience", "", 3, "ngModel", "actionName", "ngModelChange", "change"], ["class", "btn btn-dot showOnHover max-width-fit a-i-center", "placement", "left", "container", "body", 3, "tooltip", "click", 4, "ngIf"], ["placement", "left", "container", "body", 1, "btn", "btn-dot", "showOnHover", "max-width-fit", "a-i-center", 3, "tooltip", "click"], [3, "placement", "title", "outsideClick"], ["poConfirm", ""], ["c8yIcon", "minus-circle", 1, "text-danger"], [1, "btn", "btn-add-block", "m-0", 3, "title", "click"], ["c8yIcon", "plus-circle"], [1, "input-group", "input-group-search", "m-l-sm-16"], ["type", "search", "c8yProductExperience", "", 1, "form-control", 3, "placeholder", "ngModel", "actionName", "input"], [1, "input-group-addon"], ["c8yIcon", "search", 4, "ngIf"], ["c8yIcon", "times", "class", "pointer", "c8yProductExperience", "", 3, "actionName", "click", 4, "ngIf"], ["c8yIcon", "search"], ["c8yIcon", "times", "c8yProductExperience", "", 1, "pointer", 3, "actionName", "click"], [1, "table-data-grid-header-bulk-actions", "animated", "slideInDown", "fast"], [1, "visible-xs"], [3, "ngSwitch", 4, "ngFor", "ngForOf"], [1, "btnbar-btn", 3, "title", "click"], ["c8yIcon", "times"], [1, "interact", 3, "click"], [3, "ngSwitch"], ["class", "btnbar-btn", "c8yProductExperience", "", 3, "title", "actionName", "click", 4, "ngSwitchCase"], ["class", "btnbar-btn", "c8yProductExperience", "", 3, "title", "actionName", "click", 4, "ngSwitchDefault"], ["c8yProductExperience", "", 1, "btnbar-btn", 3, "title", "actionName", "click"], ["c8yIcon", "sign-out"], ["c8yIcon", "trash"], [3, "c8yIcon"], [3, "cdkColumnDef"], [4, "ngSwitchCase"], [4, "ngSwitchDefault"], ["cdk-header-cell", "", "data-type", "icon", 4, "cdkHeaderCellDef"], ["cdk-cell", "", "data-type", "icon", 4, "cdkCellDef"], ["cdk-header-cell", "", "data-type", "icon"], [1, "c8y-checkbox"], ["type", "checkbox", 3, "checked", "indeterminate", "change"], ["cdk-cell", "", "data-type", "icon"], ["type", "checkbox", 3, "checked", "change"], ["class", "dropdown", "dropdown", "", "container", "body", "placement", "bottom right", 4, "ngIf"], ["class", "btn btn-icon btn-xs btn-default", "container", "body", "c8yProductExperience", "", 3, "tooltip", "actionName", "click", 4, "ngSwitchCase"], ["class", "btn btn-dot showOnHover", "container", "body", "c8yProductExperience", "", 3, "tooltip", "actionName", "click", 4, "ngSwitchCase"], ["class", "btn btn-icon btn-xs btn-default showOnHover", "container", "body", "c8yProductExperience", "", 3, "tooltip", "actionName", "click", 4, "ngSwitchDefault"], ["container", "body", "c8yProductExperience", "", 1, "btn", "btn-icon", "btn-xs", "btn-default", 3, "tooltip", "actionName", "click"], ["c8yIcon", "pencil"], ["container", "body", "c8yProductExperience", "", 1, "btn", "btn-dot", "showOnHover", 3, "tooltip", "actionName", "click"], ["container", "body", "c8yProductExperience", "", 1, "btn", "btn-icon", "btn-xs", "btn-default", "showOnHover", 3, "tooltip", "actionName", "click"], [3, "c8yIcon", 4, "ngIf"], ["dropdown", "", "container", "body", "placement", "bottom right", 1, "dropdown"], ["dropdownToggle", "", "c8yProductExperience", "", 1, "dropdown-toggle", "c8y-dropdown", 3, "title", "actionName"], ["c8yIcon", "ellipsis-v"], ["class", "dropdown-menu dropdown-menu-right", 4, "dropdownMenu"], [1, "dropdown-menu", "dropdown-menu-right"], ["c8yProductExperience", "", 3, "title", "actionName", "click", 4, "ngSwitchCase"], ["c8yProductExperience", "", 3, "title", "actionName", "actionData", "click", 4, "ngSwitchDefault"], ["c8yProductExperience", "", 3, "title", "actionName", "click"], ["c8yIcon", "download"], ["c8yProductExperience", "", 3, "title", "actionName", "actionData", "click"], ["cdk-header-cell", "", 3, "ngClass", "sorted", "filtered", "hidden", 4, "cdkHeaderCellDef"], ["cdk-cell", "", 3, "ngClass", "hidden", 4, "cdkCellDef"], ["cdk-header-cell", "", 3, "ngClass"], [3, "title", 4, "ngIf"], ["class", "dropdown", "dropdown", "", "container", "body", 3, "placement", "insideClick", 4, "ngIf"], ["class", "btn-sort", 3, "title", "click", 4, "ngIf"], ["class", "resize-handle", 3, "mousedown", 4, "ngIf"], [3, "title"], [3, "spec"], ["dropdown", "", "container", "body", 1, "dropdown", 3, "placement", "insideClick"], ["dropdown", "bs-dropdown"], ["dropdownToggle", "", "c8yProductExperience", "", 1, "btn-header", "c8y-dropdown", 3, "title", "actionName"], ["c8yIcon", "filter", 3, "title"], ["class", "dropdown-menu", 3, "ngClass", "click", 4, "dropdownMenu"], [1, "dropdown-menu", 3, "ngClass", "click"], [1, "data-grid__dropdown"], [1, "btn-sort", 3, "title", "click"], ["c8yIcon", "long-arrow-up", 4, "ngSwitchCase"], ["c8yIcon", "long-arrow-down", 4, "ngSwitchCase"], ["c8yIcon", "exchange", 4, "ngSwitchDefault"], ["c8yIcon", "long-arrow-up"], ["c8yIcon", "long-arrow-down"], ["c8yIcon", "exchange"], [1, "resize-handle", 3, "mousedown"], ["cdk-cell", "", 3, "ngClass"], ["cdk-footer-cell", ""], ["infiniteScrollContainer", ""], ["cdk-header-row", ""], ["cdk-row", "", 3, "mouseover", "mouseleave", "click"], ["cdk-footer-row", "", 3, "ngClass"], [1, "row", "m-0", "p-t-40", "p-b-40"], [1, "col-md-4", "col-md-offset-4"], [1, "table-data-grid-footer", "separator", "large-padding"], [1, "col-sm-4", "no-gutter"], ["class", "counter", 4, "ngIf"], [1, "col-sm-4", "no-gutter", "text-center"], ["class", "form-group form-inline", 4, "ngIf"], [1, "col-sm-4", "no-gutter", "text-right"], ["previousText", " ", "nextText", " ", 3, "hidden", "ngModel", "totalItems", "itemsPerPage", "maxSize", "boundaryLinks", "pageChanged", "numPages", 4, "ngIf"], [1, "counter"], ["translate", "", 1, "text-muted", 3, "translateParams"], [1, "form-group", "form-inline"], [1, "m-r-4"], [1, "c8y-select-wrapper"], [1, "form-control", 3, "ngModel", "ngModelChange"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], ["previousText", " ", "nextText", " ", 3, "ngModel", "totalItems", "itemsPerPage", "maxSize", "boundaryLinks", "pageChanged", "numPages"]], template: function DataGridComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef(_c13);
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵpipe(2, "async");
        ɵngcc0.ɵɵtemplate(3, DataGridComponent_div_3_Template, 3, 1, "div", 2);
        ɵngcc0.ɵɵpipe(4, "async");
        ɵngcc0.ɵɵtemplate(5, DataGridComponent_div_5_Template, 18, 20, "div", 3);
        ɵngcc0.ɵɵelementStart(6, "table", 4);
        ɵngcc0.ɵɵlistener("mousemove", function DataGridComponent_Template_table_mousemove_6_listener($event) { return ctx.resizeHandleContainerMouseMove$.emit($event); })("mouseup", function DataGridComponent_Template_table_mouseup_6_listener($event) { return ctx.resizeHandleContainerMouseUp$.emit($event); });
        ɵngcc0.ɵɵtemplate(7, DataGridComponent_ng_container_7_Template, 5, 4, "ng-container", 5);
        ɵngcc0.ɵɵelementContainerStart(8, 6);
        ɵngcc0.ɵɵtemplate(9, DataGridComponent_td_9_Template, 3, 2, "td", 7);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵtemplate(10, DataGridComponent_tr_10_Template, 1, 0, "tr", 8);
        ɵngcc0.ɵɵtemplate(11, DataGridComponent_tr_11_Template, 1, 0, "tr", 9);
        ɵngcc0.ɵɵelementContainerStart(12);
        ɵngcc0.ɵɵtemplate(13, DataGridComponent_tr_13_Template, 1, 3, "tr", 10);
        ɵngcc0.ɵɵelementContainerEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵtemplate(14, DataGridComponent_div_14_Template, 3, 0, "div", 11);
        ɵngcc0.ɵɵpipe(15, "async");
        ɵngcc0.ɵɵpipe(16, "async");
        ɵngcc0.ɵɵtemplate(17, DataGridComponent_div_17_Template, 10, 9, "div", 12);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction1(30, _c14, ɵngcc0.ɵɵpipeBind1(2, 22, ctx.dataSource.loading$) && !ctx.loadMoreComponent));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(4, 24, ctx.dataSource.loading$) && !ctx.loadMoreComponent);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.displayOptions.gridHeader);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵstyleProp("grid-template-columns", ctx.styles.gridTemplateColumns);
        ɵngcc0.ɵɵclassProp("table-striped", ctx.displayOptions.striped)("table-bordered", ctx.displayOptions.bordered)("table-data-grid-with-checkboxes", ctx.selectable)("table-data-grid-with-actions", ctx.actionControls.length > 0);
        ɵngcc0.ɵɵproperty("dataSource", ctx.dataSource)("trackBy", ctx.trackByName);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.columns)("ngForTrackBy", ctx.trackByName);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("cdkHeaderRowDef", ctx.columnNames);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("cdkRowDefColumns", ctx.columnNames);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("cdkFooterRowDef", ɵngcc0.ɵɵpureFunction0(32, _c15));
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ɵngcc0.ɵɵpipeBind1(15, 26, ctx.dataSource.loading$) && ɵngcc0.ɵɵpipeBind1(16, 28, ctx.dataSource.stats$).filteredSize === 0);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵproperty("ngIf", ctx.pagination && !ctx.infiniteScroll);
    } }, directives: [ɵngcc5.NgClass, ɵngcc5.NgIf, ɵngcc6.CdkTable, ɵngcc5.NgForOf, ɵngcc6.CdkColumnDef, ɵngcc6.CdkFooterCellDef, ɵngcc6.CdkHeaderRowDef, ɵngcc6.CdkRowDef, ɵngcc6.CdkFooterRowDef, ɵngcc7.ProgressBarComponent, ɵngcc8.IconDirective, ɵngcc9.ProductExperienceDirective, ɵngcc10.PopoverDirective, ɵngcc11.C8yTranslateDirective, ɵngcc5.NgTemplateOutlet, ɵngcc12.BsDropdownDirective, ɵngcc12.BsDropdownToggleDirective, ɵngcc12.BsDropdownMenuDirective, ɵngcc13.CdkDropList, ɵngcc13.CdkDrag, ɵngcc14.CheckboxControlValueAccessor, ɵngcc14.NgControlStatus, ɵngcc14.NgModel, ɵngcc15.TooltipDirective, ɵngcc16.PopoverConfirmComponent, ɵngcc14.DefaultValueAccessor, ɵngcc5.NgSwitch, ɵngcc5.NgSwitchCase, ɵngcc5.NgSwitchDefault, ɵngcc6.CdkHeaderCellDef, ɵngcc6.CdkCellDef, ɵngcc6.CdkHeaderCell, ɵngcc6.CdkCell, ɵngcc17.CellRendererComponent, ɵngcc18.FilteringFormRendererComponent, ɵngcc6.CdkFooterCell, ɵngcc6.CdkHeaderRow, ɵngcc6.CdkRow, ɵngcc6.CdkFooterRow, ɵngcc14.SelectControlValueAccessor, ɵngcc14.NgSelectOption, ɵngcc14.ɵNgSelectMultipleOption, ɵngcc19.PaginationComponent], pipes: [ɵngcc5.AsyncPipe, ɵngcc20.C8yTranslatePipe, ɵngcc21.IsControlVisiblePipe, ɵngcc22.MapFunctionPipe], encapsulation: 2 });
DataGridComponent.ctorParameters = () => [
    { type: DomSanitizer },
    { type: ElementRef },
    { type: ChangeDetectorRef },
    { type: ComponentFactoryResolver },
    { type: GainsightService },
    { type: BsModalService },
    { type: AlertService }
];
DataGridComponent.propDecorators = {
    title: [{ type: Input }],
    loadMoreItemsLabel: [{ type: Input }],
    loadingItemsLabel: [{ type: Input }],
    showSearch: [{ type: Input }],
    refresh: [{ type: Input }],
    _columns: [{ type: Input, args: ['columns',] }],
    _rows: [{ type: Input, args: ['rows',] }],
    _pagination: [{ type: Input, args: ['pagination',] }],
    _infiniteScroll: [{ type: Input, args: ['infiniteScroll',] }],
    _serverSideDataCallback: [{ type: Input, args: ['serverSideDataCallback',] }],
    _selectable: [{ type: Input, args: ['selectable',] }],
    _selectionPrimaryKey: [{ type: Input, args: ['selectionPrimaryKey',] }],
    _displayOptions: [{ type: Input, args: ['displayOptions',] }],
    _actionControls: [{ type: Input, args: ['actionControls',] }],
    _bulkActionControls: [{ type: Input, args: ['bulkActionControls',] }],
    _headerActionControls: [{ type: Input, args: ['headerActionControls',] }],
    searchText: [{ type: Input }],
    configureColumnsEnabled: [{ type: Input }],
    showCounterWarning: [{ type: Input }],
    rowMouseOver: [{ type: Output }],
    rowMouseLeave: [{ type: Output }],
    rowClick: [{ type: Output }],
    onConfigChange: [{ type: Output }],
    onBeforeFilter: [{ type: Output }],
    onBeforeSearch: [{ type: Output }],
    onFilter: [{ type: Output }],
    itemsSelect: [{ type: Output }],
    onReload: [{ type: Output }],
    onAddCustomColumn: [{ type: Output }],
    onRemoveCustomColumn: [{ type: Output }],
    columnRenderers: [{ type: ContentChildren, args: [ColumnDirective,] }],
    scrollContainer: [{ type: ViewChild, args: ['scroll', { static: true },] }],
    infiniteScrollContainer: [{ type: ViewChild, args: ['infiniteScrollContainer', { static: false, read: ViewContainerRef },] }],
    thRefs: [{ type: ViewChildren, args: [CdkHeaderCell, { read: ElementRef },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DataGridComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-data-grid',
                template: "<div\n  #scroll\n  class=\"table-data-grid-scroll\"\n  [ngClass]=\"{ 'table-data-grid__overlay': (dataSource.loading$ | async) && !loadMoreComponent }\"\n>\n  <div\n    class=\"table-data-grid__loading--wrapper\"\n    *ngIf=\"(dataSource.loading$ | async) && !loadMoreComponent\"\n  >\n    <div class=\"table-data-grid__loading--loader\">\n      <c8y-progress-bar [message]=\"loadingItemsLabel\"></c8y-progress-bar>\n    </div>\n  </div>\n\n  <div *ngIf=\"displayOptions.gridHeader\" class=\"table-data-grid-header separator large-padding\">\n    <h4 [ngClass]=\"{ 'm-r-16': !!title }\">{{ title | translate }}</h4>\n\n    <ng-container *ngIf=\"displayOptions.filter\">\n      <span *ngIf=\"!filteringApplied\">\n        <span class=\"label label-default m-r-4\" translate>No filters</span>\n        <small\n          *ngIf=\"!!filteringLabelsParams.allItemsCount\"\n          class=\"m-r-4\"\n          ngNonBindable\n          translate\n          [translateParams]=\"filteringLabelsParams\"\n        >\n          {{ filteredItemsCount }} of {{ allItemsCount }} items\n        </small>\n      </span>\n      <span *ngIf=\"filteringApplied\">\n        <ng-container *ngIf=\"!!filteringLabelsParams.allItemsCount\">\n          <span class=\"badge badge-info m-r-4\">\n            {{ (dataSource.stats$ | async).filteredSize }}\n          </span>\n          <small ngNonBindable translate [translateParams]=\"filteringLabelsParams\">\n            of {{ allItemsCount }} items\n          </small>\n        </ng-container>\n        <button\n          title=\" {{ 'Clear filters' | translate }}\"\n          class=\"m-l-8 btn btn-xs btn-default m-r-4\"\n          (click)=\"clearFilters()\"\n        >\n          {{ 'Clear filters' | translate }}\n        </button>\n      </span>\n\n      <span class=\"hidden-xs hidden-sm\">\n        <button\n          class=\"btn-clean text-primary\"\n          popover=\"{{ 'Click the column headers to apply filters.' | translate }}\"\n          placement=\"right\"\n          triggers=\"focus\"\n          c8yProductExperience\n          [actionName]=\"'dataGrid:ApplyFilterInfo'\"\n        >\n          <i c8yIcon=\"question-circle-o\"></i>\n        </button>\n      </span>\n\n      <span class=\"hidden-xs hidden-sm\" *ngIf=\"showCounterWarning\">\n        <button\n          class=\"btn-clean text-primary\"\n          popover=\"{{\n            'The counter for the total number of items might be inaccurate.' | translate\n          }}\"\n          placement=\"right\"\n          triggers=\"focus\"\n        >\n          <i c8yIcon=\"warning\"></i>\n        </button>\n      </span>\n    </ng-container>\n\n    <div class=\"flex-item-right\">\n      <div class=\"btnbar flex-row\">\n        <ng-container *ngFor=\"let headerActionControl of headerActionControls\">\n          <ng-container *ngIf=\"headerActionControl | isControlVisible\">\n            <ng-container *ngIf=\"!headerActionControl.template; else customTemplate\">\n              <button\n                title=\"{{ headerActionControl.text | translate }}\"\n                class=\"btnbar-btn btn-link\"\n                (click)=\"headerActionControl.callback()\"\n                c8yProductExperience\n                [actionName]=\"'dataGrid:' + headerActionControl.text\"\n                [actionData]=\"{ type: headerActionControl.type }\"\n              >\n                <i c8yIcon=\"headerActionControl.icon\" class=\"m-r-4\"></i>\n                <span>{{ headerActionControl.text | translate }}</span>\n              </button>\n            </ng-container>\n            <ng-template #customTemplate>\n              <ng-container\n                *ngTemplateOutlet=\"\n                  headerActionControl.template;\n                  context: { headerActionControl: headerActionControl }\n                \"\n              ></ng-container>\n            </ng-template>\n          </ng-container>\n        </ng-container>\n\n        <div\n          *ngIf=\"configureColumnsEnabled\"\n          class=\"dropdown\"\n          dropdown\n          #ddConfigureColumns=\"bs-dropdown\"\n          [insideClick]=\"true\"\n          container=\"body\"\n          placement=\"bottom left\"\n        >\n          <button\n            title=\"{{ 'Configure columns' | translate }}\"\n            class=\"btnbar-btn c8y-dropdown\"\n            dropdownToggle\n            c8yProductExperience\n            [actionName]=\"'dataGrid:ConfigureColumns'\"\n          >\n            <i c8yIcon=\"columns\" class=\"m-r-4\"></i>\n            <span>{{ 'Configure columns' | translate }}</span>\n          </button>\n\n          <ul *dropdownMenu class=\"dropdown-menu\" (click)=\"$event.stopPropagation()\">\n            <li class=\"bg-white\">\n              <div cdkDropList (cdkDropListDropped)=\"onColumnDrop($event)\" class=\"list-group m-0\">\n                <div *ngFor=\"let column of columns\" cdkDrag cdkDragLockAxis=\"y\">\n                  <ng-container *ngIf=\"!column.positionFixed\">\n                    <div class=\"list-group-item draggable-after p-0 a-i-center\">\n                      <label\n                        title=\"{{ (column.header | translate) || column.name }}\"\n                        class=\"c8y-checkbox p-l-16\"\n                      >\n                        <input\n                          type=\"checkbox\"\n                          [(ngModel)]=\"column.visible\"\n                          (change)=\"updateGridColumnsSize(); emitConfigChange()\"\n                          c8yProductExperience\n                          [actionName]=\"\n                            'dataGrid:ConfigureColumns:' + (column.header || column.name)\n                          \"\n                        />\n                        <span></span>\n                        <span>{{ (column.header | translate) || column.name }}</span>\n                      </label>\n                      <button\n                        *ngIf=\"column.custom\"\n                        class=\"btn btn-dot showOnHover max-width-fit a-i-center\"\n                        tooltip=\"{{ 'Remove`column,verb`' | translate }}\"\n                        placement=\"left\"\n                        container=\"body\"\n                        (click)=\"removeCustomColumn(poConfirm, column, ddConfigureColumns)\"\n                      >\n                        <c8y-popover-confirm\n                          [placement]=\"'left'\"\n                          [title]=\"'Confirm removal' | translate\"\n                          [outsideClick]=\"true\"\n                          #poConfirm\n                        ></c8y-popover-confirm>\n                        <i c8yIcon=\"minus-circle\" class=\"text-danger\"></i>\n                      </button>\n                    </div>\n                  </ng-container>\n                </div>\n              </div>\n            </li>\n            <li *ngIf=\"onAddCustomColumn?.observers?.length\">\n              <button\n                title=\"{{ 'Add custom column' | translate }}\"\n                class=\"btn btn-add-block m-0\"\n                (click)=\"openCustomColumnModal(); ddConfigureColumns.hide()\"\n              >\n                <i c8yIcon=\"plus-circle\"></i>\n                <span>{{ 'Add custom column' | translate }}</span>\n              </button>\n            </li>\n          </ul>\n        </div>\n\n        <button\n          title=\"{{ 'Reload' | translate }}\"\n          class=\"btnbar-btn btn-link\"\n          [disabled]=\"dataSource.loading$ | async\"\n          (click)=\"clickReload()\"\n        >\n          <i c8yIcon=\"refresh\" class=\"m-r-4\"></i>\n          <span>{{ 'Reload' | translate }}</span>\n        </button>\n\n        <div\n          *ngIf=\"!serverSideDataCallback || showSearch\"\n          class=\"input-group input-group-search m-l-sm-16\"\n        >\n          <input\n            type=\"search\"\n            class=\"form-control\"\n            placeholder=\"{{ 'Search\u2026' | translate }}\"\n            [ngModel]=\"searchText\"\n            (input)=\"searchText$.emit($event.target.value)\"\n            c8yProductExperience\n            [actionName]=\"'dataGrid:SearchInput'\"\n          />\n          <div class=\"input-group-addon\">\n            <i c8yIcon=\"search\" *ngIf=\"searchText.length === 0\"></i>\n            <i\n              c8yIcon=\"times\"\n              class=\"pointer\"\n              *ngIf=\"searchText.length > 0\"\n              (click)=\"searchText = ''; searchText$.emit('')\"\n              c8yProductExperience\n              [actionName]=\"'dataGrid:SearchInputClear'\"\n            ></i>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"table-data-grid-header-bulk-actions animated slideInDown fast\"\n      *ngIf=\"selectedItemIds.length !== 0\"\n    >\n      <h4>\n        <span ngNonBindable translate [translateParams]=\"{ count: selectedItemIds.length }\">\n          {{ count }} selected items.\n        </span>\n        <br class=\"visible-xs\" />\n        <small *ngIf=\"!serverSideDataCallback && selectedItemIds.length >= pagination.pageSize\">\n          <a (click)=\"setAllItemsSelected(true)\" class=\"interact\">\n            <span\n              ngNonBindable\n              translate\n              [translateParams]=\"{ count: (dataSource.stats$ | async).filteredSize }\"\n            >\n              Select all {{ count }} items\n            </span>\n          </a>\n        </small>\n      </h4>\n      <div class=\"flex-item-right\">\n        <div class=\"btnbar flex-row\">\n          <ng-container\n            *ngFor=\"let bulkActionControl of bulkActionControls\"\n            [ngSwitch]=\"bulkActionControl.type\"\n          >\n            <ng-container *ngIf=\"bulkActionControl | isControlVisible: selectedItemIds\">\n              <button\n                title=\"{{ 'Export' | translate }}\"\n                *ngSwitchCase=\"builtInActionType.Export\"\n                class=\"btnbar-btn\"\n                (click)=\"bulkActionControl.callback(selectedItemIds, reload.bind(this))\"\n                c8yProductExperience\n                [actionName]=\"'dataGrid:BulkExport'\"\n              >\n                <i c8yIcon=\"sign-out\"></i>\n                <span>{{ 'Export' | translate }}</span>\n              </button>\n\n              <button\n                title=\"{{ 'Delete' | translate }}\"\n                *ngSwitchCase=\"builtInActionType.Delete\"\n                class=\"btnbar-btn\"\n                (click)=\"bulkActionControl.callback(selectedItemIds, reload.bind(this))\"\n                c8yProductExperience\n                [actionName]=\"'dataGrid:BulkDelete'\"\n              >\n                <i c8yIcon=\"trash\"></i>\n                <span>{{ 'Delete' | translate }}</span>\n              </button>\n\n              <button\n                title=\"{{ bulkActionControl.text | translate }}\"\n                *ngSwitchDefault\n                class=\"btnbar-btn\"\n                (click)=\"bulkActionControl.callback(selectedItemIds, reload.bind(this))\"\n                c8yProductExperience\n                [actionName]=\"'dataGrid:Bulk:' + bulkActionControl.text\"\n              >\n                <i c8yIcon=\"{{ bulkActionControl.icon }}\"></i>\n                <span>{{ bulkActionControl.text | translate }}</span>\n              </button>\n            </ng-container>\n          </ng-container>\n\n          <button title=\"{{ 'Cancel' | translate }}\" class=\"btnbar-btn\" (click)=\"cancel()\">\n            <i c8yIcon=\"times\"></i>\n            <span>{{ 'Cancel' | translate }}</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <table\n    class=\"table table-hover table-filtered-sorted table-data-grid large-padding\"\n    cdk-table\n    [dataSource]=\"dataSource\"\n    [trackBy]=\"trackByName\"\n    [class.table-striped]=\"displayOptions.striped\"\n    [class.table-bordered]=\"displayOptions.bordered\"\n    [class.table-data-grid-with-checkboxes]=\"selectable\"\n    [class.table-data-grid-with-actions]=\"actionControls.length > 0\"\n    [style.grid-template-columns]=\"styles.gridTemplateColumns\"\n    (mousemove)=\"resizeHandleContainerMouseMove$.emit($event)\"\n    (mouseup)=\"resizeHandleContainerMouseUp$.emit($event)\"\n  >\n    <ng-container\n      *ngFor=\"let column of columns; let i = index; trackBy: trackByName\"\n      [cdkColumnDef]=\"column.name\"\n    >\n      <ng-container [ngSwitch]=\"column.name\">\n        <ng-container *ngSwitchCase=\"'checkbox'\">\n          <th cdk-header-cell *cdkHeaderCellDef data-type=\"icon\">\n            <div>\n              <label class=\"c8y-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  [checked]=\"currentPageSelectionState.allSelected\"\n                  [indeterminate]=\"\n                    !(\n                      currentPageSelectionState.allSelected ||\n                      currentPageSelectionState.allDeselected\n                    )\n                  \"\n                  (change)=\"setAllItemsInCurrentPageSelected($event.target.checked)\"\n                />\n                <span></span>\n              </label>\n            </div>\n          </th>\n\n          <td cdk-cell *cdkCellDef=\"let row\" data-type=\"icon\">\n            <label class=\"c8y-checkbox\">\n              <input\n                type=\"checkbox\"\n                [checked]=\"isItemSelected(row)\"\n                (change)=\"setItemsSelected([row], $event.target.checked)\"\n              />\n              <span></span>\n            </label>\n          </td>\n        </ng-container>\n\n        <ng-container *ngSwitchCase=\"'actions'\">\n          <th cdk-header-cell *cdkHeaderCellDef data-type=\"icon\"></th>\n\n          <td cdk-cell *cdkCellDef=\"let row\" data-type=\"icon\">\n            <ng-container *ngIf=\"actionControls.length <= 2\">\n              <ng-container\n                *ngFor=\"let actionControl of actionControls\"\n                [ngSwitch]=\"actionControl.type\"\n              >\n                <ng-container *ngIf=\"actionControl.showIf ? actionControl.showIf(row) : true\">\n                  <button\n                    *ngSwitchCase=\"builtInActionType.Edit\"\n                    class=\"btn btn-icon btn-xs btn-default\"\n                    tooltip=\"{{ 'Edit' | translate }}\"\n                    container=\"body\"\n                    (click)=\"actionControl.callback(row, reload.bind(this))\"\n                    c8yProductExperience\n                    [actionName]=\"'dataGridEntry:Edit'\"\n                  >\n                    <i c8yIcon=\"pencil\"></i>\n                  </button>\n                  <button\n                    *ngSwitchCase=\"builtInActionType.Delete\"\n                    class=\"btn btn-dot showOnHover\"\n                    tooltip=\"{{ 'Delete' | translate }}\"\n                    container=\"body\"\n                    (click)=\"actionControl.callback(row, reload.bind(this))\"\n                    c8yProductExperience\n                    [actionName]=\"'dataGridEntry:Delete'\"\n                  >\n                    <i class=\"text-danger\" c8yIcon=\"minus-circle\"></i>\n                  </button>\n                  <button\n                    *ngSwitchDefault\n                    class=\"btn btn-icon btn-xs btn-default showOnHover\"\n                    (click)=\"actionControl.callback(row, reload.bind(this))\"\n                    tooltip=\"{{ (actionControl.icon ? actionControl.text : '') | translate }}\"\n                    container=\"body\"\n                    c8yProductExperience\n                    [actionName]=\"'dataGridEntry:' + actionControl.text\"\n                  >\n                    <i *ngIf=\"actionControl.icon\" c8yIcon=\"{{ actionControl.icon }}\"></i>\n                    <span *ngIf=\"!actionControl.icon\">{{ actionControl.text | translate }}</span>\n                  </button>\n                </ng-container>\n              </ng-container>\n            </ng-container>\n\n            <div [ngClass]=\"{ 'm-l-auto overflow-visible': actionControls.length > 2 }\">\n              <div\n                *ngIf=\"actionControls.length > 2\"\n                class=\"dropdown\"\n                dropdown\n                container=\"body\"\n                placement=\"bottom right\"\n              >\n                <button\n                  title=\"{{ 'Actions' | translate }}\"\n                  class=\"dropdown-toggle c8y-dropdown\"\n                  dropdownToggle\n                  c8yProductExperience\n                  [actionName]=\"'dataGridEntry:Actions'\"\n                >\n                  <i c8yIcon=\"ellipsis-v\"></i>\n                </button>\n                <ul class=\"dropdown-menu dropdown-menu-right\" *dropdownMenu>\n                  <li *ngFor=\"let actionControl of actionControls\" [ngSwitch]=\"actionControl.type\">\n                    <ng-container *ngIf=\"actionControl | isControlVisible: row\">\n                      <button\n                        title=\"{{ 'Edit' | translate }}\"\n                        *ngSwitchCase=\"builtInActionType.Edit\"\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                        c8yProductExperience\n                        [actionName]=\"'dataGridActions:Edit'\"\n                      >\n                        <i c8yIcon=\"pencil\"></i>\n                        {{ 'Edit' | translate }}\n                      </button>\n                      <button\n                        title=\"{{ 'Delete' | translate }}\"\n                        *ngSwitchCase=\"builtInActionType.Delete\"\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                        c8yProductExperience\n                        [actionName]=\"'dataGridActions:Delete'\"\n                      >\n                        <i c8yIcon=\"trash\"></i>\n                        {{ 'Delete' | translate }}\n                      </button>\n                      <button\n                        title=\"{{ 'Export' | translate }}\"\n                        *ngSwitchCase=\"builtInActionType.Export\"\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                        c8yProductExperience\n                        [actionName]=\"'dataGridActions:Export'\"\n                      >\n                        <i c8yIcon=\"download\"></i>\n                        {{ 'Export' | translate }}\n                      </button>\n                      <button\n                        title=\"{{ actionControl.text | translate }}\"\n                        *ngSwitchDefault\n                        (click)=\"actionControl.callback(row, reload.bind(this))\"\n                        c8yProductExperience\n                        [actionName]=\"'dataGridActions:' + actionControl.text\"\n                        [actionData]=\"{ type: actionControl.type }\"\n                      >\n                        <i c8yIcon=\"{{ actionControl.icon }}\"></i>\n                        {{ actionControl.text | translate }}\n                      </button>\n                    </ng-container>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </td>\n        </ng-container>\n\n        <ng-container *ngSwitchDefault>\n          <th\n            cdk-header-cell\n            *cdkHeaderCellDef\n            [ngClass]=\"column.headerCSSClassName\"\n            [attr.data-type]=\"column.dataType\"\n            [class.sorted]=\"column.sortOrder\"\n            [class.filtered]=\"column | map: isColumnFilteringApplied\"\n            [class.hidden]=\"!column.visible\"\n          >\n            <div *ngIf=\"!column.filterable\" [title]=\"(column.header | translate) || column.name\">\n              <ng-container\n                *ngIf=\"\n                  [\n                    {\n                      columnName: column.name,\n                      value: (column.header | translate) || column.name\n                    }\n                  ] | map: getHeaderCellRendererSpec:this as cellRendererSpec\n                \"\n              >\n                <c8y-cell-renderer [spec]=\"cellRendererSpec\"></c8y-cell-renderer>\n              </ng-container>\n            </div>\n\n            <!-- isDropDownPlacedRight to be removed when columns are transformed to observables. -->\n            <div\n              *ngIf=\"column.filterable\"\n              class=\"dropdown\"\n              dropdown\n              #dropdown=\"bs-dropdown\"\n              container=\"body\"\n              placement=\"bottom {{ isDropDownPlacedRight(column) ? 'right' : 'left' }} \"\n              [insideClick]=\"true\"\n            >\n              <button\n                class=\"btn-header c8y-dropdown\"\n                dropdownToggle\n                [title]=\"(column.header | translate) || column.name\"\n                c8yProductExperience\n                [actionName]=\"'dataGridFilterColumn:' + (column.header || column.name)\"\n              >\n                <ng-container\n                  *ngIf=\"\n                    [\n                      {\n                        columnName: column.name,\n                        value: (column.header | translate) || column.name\n                      }\n                    ] | map: getHeaderCellRendererSpec:this as cellRendererSpec\n                  \"\n                >\n                  <c8y-cell-renderer [spec]=\"cellRendererSpec\"></c8y-cell-renderer>\n                </ng-container>\n                <i c8yIcon=\"filter\" title=\"{{ 'Filter' | translate }}\"></i>\n              </button>\n\n              <!-- isDropDownPlacedRight to be removed when columns are transformed to observables. -->\n              <ul\n                *dropdownMenu\n                class=\"dropdown-menu\"\n                [ngClass]=\"{ 'dropdown-menu-right-grid': isDropDownPlacedRight(column) }\"\n                (click)=\"$event.stopPropagation()\"\n              >\n                <li class=\"data-grid__dropdown\">\n                  <ng-container\n                    *ngIf=\"\n                      [\n                        {\n                          column: column,\n                          dropdown: dropdown\n                        }\n                      ] | map: getFilteringFormRendererSpec:this as filteringFormRendererSpec\n                    \"\n                  >\n                    <c8y-filtering-form-renderer\n                      [spec]=\"filteringFormRendererSpec\"\n                    ></c8y-filtering-form-renderer>\n                  </ng-container>\n                </li>\n              </ul>\n            </div>\n\n            <button\n              *ngIf=\"column.sortable\"\n              class=\"btn-sort\"\n              title=\"{{ 'Sort' | translate }}\"\n              (click)=\"changeSortOrder(column.name)\"\n            >\n              <ng-container [ngSwitch]=\"column.sortOrder\">\n                <i *ngSwitchCase=\"'asc'\" c8yIcon=\"long-arrow-up\"></i>\n                <i *ngSwitchCase=\"'desc'\" c8yIcon=\"long-arrow-down\"></i>\n                <i *ngSwitchDefault c8yIcon=\"exchange\"></i>\n              </ng-container>\n            </button>\n\n            <span\n              *ngIf=\"column.resizable\"\n              class=\"resize-handle\"\n              (mousedown)=\"\n                resizeHandleMouseDown$.emit({ event: $event, targetColumnName: column.name })\n              \"\n            ></span>\n          </th>\n\n          <td\n            cdk-cell\n            *cdkCellDef=\"let row\"\n            [ngClass]=\"column.cellCSSClassName\"\n            [attr.data-cell-title]=\"column.header | translate\"\n            [attr.data-type]=\"column.dataType\"\n            [class.hidden]=\"!column.visible\"\n          >\n            <ng-container\n              *ngIf=\"\n                [\n                  {\n                    value: resolveCellValue(row, column.path),\n                    row: row,\n                    columnName: column.name\n                  }\n                ] | map: getCellRendererSpec:this as cellRendererSpec\n              \"\n            >\n              <c8y-cell-renderer [spec]=\"cellRendererSpec\"></c8y-cell-renderer>\n            </ng-container>\n          </td>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n\n    <ng-container cdkColumnDef=\"infiniteScrollFooter\">\n      <td cdk-footer-cell *cdkFooterCellDef [style.grid-column]=\"styles.gridInfiniteScrollColumn\">\n        <template #infiniteScrollContainer></template>\n      </td>\n    </ng-container>\n\n    <tr cdk-header-row *cdkHeaderRowDef=\"columnNames\"></tr>\n\n    <tr\n      cdk-row\n      *cdkRowDef=\"let row; columns: columnNames\"\n      (mouseover)=\"rowMouseOver.emit(row)\"\n      (mouseleave)=\"rowMouseLeave.emit(row)\"\n      (click)=\"rowClick.emit(row)\"\n    ></tr>\n\n    <ng-container>\n      <tr\n        [ngClass]=\"{ hidden: !infiniteScroll }\"\n        cdk-footer-row\n        *cdkFooterRowDef=\"['infiniteScrollFooter']\"\n      ></tr>\n    </ng-container>\n  </table>\n\n  <div\n    class=\"row m-0 p-t-40 p-b-40\"\n    *ngIf=\"!(dataSource.loading$ | async) && (dataSource.stats$ | async).filteredSize === 0\"\n  >\n    <div class=\"col-md-4 col-md-offset-4\">\n      <ng-content select=\"c8y-ui-empty-state, .c8y-empty-state\"></ng-content>\n    </div>\n  </div>\n\n  <div *ngIf=\"pagination && !infiniteScroll\" class=\"table-data-grid-footer separator large-padding\">\n    <div class=\"col-sm-4 no-gutter\">\n      <div *ngIf=\"(dataSource.stats$ | async).currentPageSize > 0\" class=\"counter\">\n        <span class=\"text-muted\" ngNonBindable translate [translateParams]=\"paginationLabelParams\">\n          {{ pageFirstItemIdx }} - {{ pageLastItemIdx }} of {{ itemsTotal }}\n        </span>\n      </div>\n    </div>\n\n    <div class=\"col-sm-4 no-gutter text-center\">\n      <div\n        *ngIf=\"(dataSource.stats$ | async).filteredSize > minPossiblePageSize\"\n        class=\"form-group form-inline\"\n      >\n        <label class=\"m-r-4\">{{ 'Items per page' | translate }}</label>\n        <div class=\"c8y-select-wrapper\">\n          <select\n            class=\"form-control\"\n            [ngModel]=\"pagination.pageSize\"\n            (ngModelChange)=\"\n              updatePagination({ itemsPerPage: $event, page: pagination.currentPage })\n            \"\n          >\n            <option *ngFor=\"let pageSize of possiblePageSizes\" [ngValue]=\"pageSize\">\n              {{ pageSize }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-sm-4 no-gutter text-right\">\n      <pagination\n        *ngIf=\"(dataSource.stats$ | async).filteredSize > 0\"\n        [class.hidden]=\"hidePagination$ | async\"\n        [ngModel]=\"pagination.currentPage\"\n        (pageChanged)=\"updatePagination($event)\"\n        [totalItems]=\"(dataSource.stats$ | async).filteredSize\"\n        [itemsPerPage]=\"pagination.pageSize\"\n        (numPages)=\"totalPagesCount$.next($event)\"\n        [maxSize]=\"5\"\n        [boundaryLinks]=\"false\"\n        previousText=\" \"\n        nextText=\" \"\n      ></pagination>\n    </div>\n  </div>\n</div>\n",
                host: { class: 'd-contents' }
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc2.GainsightService }, { type: ɵngcc3.BsModalService }, { type: ɵngcc4.AlertService }]; }, { title: [{
            type: Input
        }], loadMoreItemsLabel: [{
            type: Input
        }], loadingItemsLabel: [{
            type: Input
        }], showSearch: [{
            type: Input
        }], searchText: [{
            type: Input
        }], configureColumnsEnabled: [{
            type: Input
        }], showCounterWarning: [{
            type: Input
        }], rowMouseOver: [{
            type: Output
        }], rowMouseLeave: [{
            type: Output
        }], rowClick: [{
            type: Output
        }], onConfigChange: [{
            type: Output
        }], onBeforeFilter: [{
            type: Output
        }], onBeforeSearch: [{
            type: Output
        }], onFilter: [{
            type: Output
        }], itemsSelect: [{
            type: Output
        }], onReload: [{
            type: Output
        }], onAddCustomColumn: [{
            type: Output
        }], onRemoveCustomColumn: [{
            type: Output
        }], _columns: [{
            type: Input,
            args: ['columns']
        }], _rows: [{
            type: Input,
            args: ['rows']
        }], _pagination: [{
            type: Input,
            args: ['pagination']
        }], _infiniteScroll: [{
            type: Input,
            args: ['infiniteScroll']
        }], _serverSideDataCallback: [{
            type: Input,
            args: ['serverSideDataCallback']
        }], _selectable: [{
            type: Input,
            args: ['selectable']
        }], _selectionPrimaryKey: [{
            type: Input,
            args: ['selectionPrimaryKey']
        }], _displayOptions: [{
            type: Input,
            args: ['displayOptions']
        }], _actionControls: [{
            type: Input,
            args: ['actionControls']
        }], _bulkActionControls: [{
            type: Input,
            args: ['bulkActionControls']
        }], _headerActionControls: [{
            type: Input,
            args: ['headerActionControls']
        }], refresh: [{
            type: Input
        }], columnRenderers: [{
            type: ContentChildren,
            args: [ColumnDirective]
        }], scrollContainer: [{
            type: ViewChild,
            args: ['scroll', { static: true }]
        }], infiniteScrollContainer: [{
            type: ViewChild,
            args: ['infiniteScrollContainer', { static: false, read: ViewContainerRef }]
        }], thRefs: [{
            type: ViewChildren,
            args: [CdkHeaderCell, { read: ElementRef }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,