export const minColumnGridTrackSize = 80;
/** Maps column types to relative widths. */
export const ratiosByColumnTypes = {
    /** The width ration for icon column type. */
    icon: 1,
    /** The width ration for numeric column type. */
    numeric: 1,
    /** The width ration for short text column type. */
    'text-short': 1.67,
    /** The width ration for long text column type. */
    'text-long': 3.33
};
/** Filtering actions. */
export var FilteringActionType;
(function (FilteringActionType) {
    /** Action invoked when filter settings are to be applied. */
    FilteringActionType["ApplyFilter"] = "APPLY_FILTER";
    /** Action invoked when filter settings are to be cleared. */
    FilteringActionType["ResetFilter"] = "RESET_FILTER";
})(FilteringActionType || (FilteringActionType = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1ncmlkLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9kYXRhLWdyaWQvZGF0YS1ncmlkLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVPQSxNQUFNLENBQUMsTUFBTSxzQkFBc0IsR0FBRyxFQUFFLENBQUM7QUFFekMsNENBQTRDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLG1CQUFtQixHQUFHO0lBQ2pDLDZDQUE2QztJQUM3QyxJQUFJLEVBQUUsQ0FBQztJQUVQLGdEQUFnRDtJQUNoRCxPQUFPLEVBQUUsQ0FBQztJQUVWLG1EQUFtRDtJQUNuRCxZQUFZLEVBQUUsSUFBSTtJQUVsQixrREFBa0Q7SUFDbEQsV0FBVyxFQUFFLElBQUk7Q0FDbEIsQ0FBQztBQWFGLHlCQUF5QjtBQUN6QixNQUFNLENBQU4sSUFBWSxtQkFNWDtBQU5ELFdBQVksbUJBQW1CO0lBQzdCLDZEQUE2RDtJQUM3RCxtREFBNEIsQ0FBQTtJQUU1Qiw2REFBNkQ7SUFDN0QsbURBQTRCLENBQUE7QUFDOUIsQ0FBQyxFQU5XLG1CQUFtQixLQUFuQixtQkFBbUIsUUFNOUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZW1wbGF0ZVJlZiwgVHlwZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSVJlc3VsdExpc3QgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5cbi8qXG4gKiBGb3IgcmVmZXJlbmNlOiB0aGUgc3RydWN0dXJlIG9mIGN1cnJlbnQgZGV2aWNlIGNvbHVtbi1yZWxhdGVkIG9iamVjdHMuXG4gKiBUT0RPOiBDYW4gYmUgcmVtb3ZlZCB3aGVuIFwiQWxsIGRldmljZXNcIiBpcyBmdWxseSBtaWdyYXRlZC5cbiAqXG4gKiBTZXJ2aWNlcyBpbnZvbHZlZDpcbiAqIC0gYzh5RmlsdGVyaW5nU29ydGluZ0NvbHVtbnNcbiAqIC0gYzh5RmlsdGVyaW5nU29ydGluZ0ludmVudG9yeVF1ZXJpZXNcbiAqIC0gYzh5RGV2aWNlTGlzdENvbHVtbnNcbiAqIC0gYzh5RmlsdGVyaW5nU29ydGluZ0NvbGxlY3Rpb25zPz8gLT4gZm9yIG90aGVyIHRhYmxlcyBpbiB0ZW5hbnQvY2VsbCBJRCB1c2FnZSBzdGF0aXN0aWNzIGZlYXR1cmVcbiAqXG4gKiBDb21wb25lbnRzIGludm9sdmVkOlxuICogLSBjOHlGaWx0ZXJlZFNvcnRlZExpc3QgLT4gdGhpcyBuZWVkcyB0byBiZSBncmF2ZWx5IGFkYXB0ZWRcbiAqXG4gKiBTdGF0ZXMgc2F2ZWQgaW4gdXNlciBwcmVmZXJlbmNlczpcbiAqIC0gQ29sdW1ucyBjb25maWcgKEFMTF9ERVZJQ0VTX0NPTFVNTlNfQ09ORklHX1VTRVJfUFJFRkVSRU5DRVNfS0VZKVxuICogLSBDb2x1bW5zIG1ldGEgKEFMTF9ERVZJQ0VTX0NPTFVNTlNfTUVUQV9VU0VSX1BSRUZFUkVOQ0VTX0tFWV9QUkVGSVgpXG4gKlxuICogU3RhdGVzIHNhdmVkIGluIGR5bmFtaWMgZ3JvdXAgb2JqZWN0OlxuICogLSBDb2x1bW5zIGNvbmZpZyAoQ09MVU1OU19DT05GSUdfRlJBR01FTlQpXG4gKiAtIENvbHVtbnMgbWV0YSAoQ09MVU1OU19NRVRBX0ZSQUdNRU5UKVxuICogLSBRdWVyeSBzdHJpbmcgKFFVRVJZX1NUUklOR19GUkFHTUVOVClcbiAqXG4gKiBUTy1GVVRVUkUtU0VMRiBub3RlOlxuICogLSBgY29sLmNvbmZpZy5maWx0ZXJpbmdgIGFuZCBgY29sLmNvbmZpZy5zb3J0aW5nYCAodGhlIG1vZGVscykgcG9wdWxhdGVcbiAqIGBjb2wuZmlsdGVyaW5nYCBhbmQgYGNvbC5zb3J0aW5nYCAodGhlIHZpZXdzKS5cbiAqIC0gYGdldEZpbHRlcmAgY2FuIHJldHVybiBhIHF1ZXJ5IG9iamVjdCAoZm9yIHNlcnZlci1zaWRlIGZpbHRlcmluZykgb3JcbiAqIGEgZmlsdGVyIGZ1bmN0aW9uIChmb3Igc2VydmVyLXNpZGUgZmlsdGVyaW5nKS5cbiAqL1xuaW50ZXJmYWNlIERldmljZUNvbHVtbiB7XG4gIG5hbWU6IHN0cmluZztcbiAgaGVhZGVyOiBzdHJpbmc7XG4gIGNvbmZpZzoge1xuICAgIGZpbHRlcmluZzogb2JqZWN0O1xuICAgIHNvcnRpbmc6IHtcbiAgICAgIG9yZGVyOiBudW1iZXI7XG4gICAgfTtcbiAgICBvdmVycmlkZTogRGV2aWNlQ29sdW1uO1xuICB9O1xuICBjZWxsOiB7XG4gICAgY2xhc3M6IHN0cmluZztcbiAgICBpbm5lckNsYXNzOiBzdHJpbmc7XG4gICAgc2NvcGVFeHRlbnNpb25zOiBvYmplY3Q7XG4gICAgdGVtcGxhdGU6IHN0cmluZztcbiAgICBzdHlsZTogb2JqZWN0O1xuICB9O1xuICBmaWx0ZXJpbmc6IHtcbiAgICBmb3JtOiBvYmplY3RbXTtcbiAgICBzY2hlbWE6IHtcbiAgICAgIHR5cGU6IHN0cmluZztcbiAgICAgIHByb3BlcnRpZXM6IHtcbiAgICAgICAgdHlwZTogc3RyaW5nO1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG4gICAgICB9O1xuICAgIH07XG4gICAgZ2V0RmlsdGVyKGZpbHRlcmluZ01vZGVsOiBvYmplY3QpOiBvYmplY3QgfCBGaWx0ZXJGdW5jdGlvbjtcbiAgfTtcbiAgc29ydGluZzoge1xuICAgIHBhdGg/OiBzdHJpbmc7XG4gICAgcGF0aHM/OiBzdHJpbmc7XG4gIH07XG4gIG1ldGE6IHtcbiAgICBjdXN0b206IGJvb2xlYW47XG4gICAga2V5OiBzdHJpbmc7XG4gICAgaGVhZGVyTmFtZTogc3RyaW5nO1xuICAgIGZyYWdtZW50UGF0aDogc3RyaW5nO1xuICAgIGFjdGl2ZTogYm9vbGVhbjtcbiAgICBmaWx0ZXJpbmdNb2RlOiAnRVFVQUxJVFknIHwgJ0VYSVNURU5DRSc7XG4gIH07XG59XG5cbnR5cGUgRmlsdGVyRnVuY3Rpb24gPSAoaXRlbTogb2JqZWN0KSA9PiBib29sZWFuO1xuXG4vKiogRGVzY3JpYmVzIHRoZSBpbnRlcmZhY2Ugb2YgdGhlIGRhdGEgZ3JpZC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YUdyaWQge1xuICAvKiogVGhlIGxpc3Qgb2YgY29sdW1ucy4gKi9cbiAgY29sdW1uczogQ29sdW1uW107XG5cbiAgLyoqIFRoZSBsaXN0IG9mIGl0ZW1zLiAqL1xuICByb3dzOiBSb3dbXTtcblxuICAvKiogUGFnaW5hdGlvbiBvYmplY3QuICovXG4gIHBhZ2luYXRpb246IFBhZ2luYXRpb247XG5cbiAgLyoqIEEgY2FsbGJhY2sgZnVuY3Rpb24gdG8gZmV0Y2ggc2VydmVyIGRhdGEuICovXG4gIHNlcnZlclNpZGVEYXRhQ2FsbGJhY2s6IFNlcnZlclNpZGVEYXRhQ2FsbGJhY2s7XG5cbiAgLyoqIFdoZXRoZXIgaXRlbXMgYXJlIHNlbGVjdGFibGUuICovXG4gIHNlbGVjdGFibGU6IGJvb2xlYW47XG5cbiAgLyoqIFRoZSBuYW1lIG9mIHRoZSBwcmltYXJ5IGtleSBwcm9wZXJ0eS4gKi9cbiAgc2VsZWN0aW9uUHJpbWFyeUtleTogc3RyaW5nO1xuXG4gIC8qKiBEYXRhIGdyaWQgZGlzcGxheSBvcHRpb25zLiAqL1xuICBkaXNwbGF5T3B0aW9uczogRGlzcGxheU9wdGlvbnM7XG5cbiAgLyoqIEluZGl2aWR1YWwgYWN0aW9uIGNvbnRyb2xzLiAqL1xuICBhY3Rpb25Db250cm9sczogQWN0aW9uQ29udHJvbFtdO1xuXG4gIC8qKiBCdWxrIGFjdGlvbiBjb250cm9scy4gKi9cbiAgYnVsa0FjdGlvbkNvbnRyb2xzOiBCdWxrQWN0aW9uQ29udHJvbFtdO1xuXG4gIC8qKiBIZWFkZXIgYWN0aW9uIGNvbnRyb2xzLiAqL1xuICBoZWFkZXJBY3Rpb25Db250cm9scz86IEhlYWRlckFjdGlvbkNvbnRyb2xbXTtcbn1cblxuLyoqIERlc2NyaWJlcyBhIGRhdGEgZ3JpZCBjb2x1bW4uICovXG5leHBvcnQgaW50ZXJmYWNlIENvbHVtbiB7XG4gIC8qKiBUaGUgbmFtZSBmb3IgdGhlIGNvbHVtbi4gKi9cbiAgbmFtZTogc3RyaW5nIHwgU3BlY2lhbENvbHVtbk5hbWU7XG4gIC8qKiBUaGUgY29sdW1uJ3MgaGVhZGVyIChpZiBub3QgZ2l2ZW4sIGBuYW1lYCBpcyB1c2VkIGJ5IGRlZmF1bHQpLiAqL1xuICBoZWFkZXI/OiBzdHJpbmc7XG4gIC8qKiBUaGUgcGF0aCBpbiBhIHJvdyBpdGVtIHRvIHJlYWQgdGhlIGNlbGwgdmFsdWUgZnJvbS4gKi9cbiAgcGF0aD86IHN0cmluZztcbiAgLyoqIFdoZXRoZXIgdGhlIGNvbHVtbiBpcyBkaXNwbGF5ZWQuICovXG4gIHZpc2libGU/OiBib29sZWFuO1xuICAvKiogV2hldGhlciB0aGUgY29sdW1uIGNhbiBiZSBtb3ZlZCB0byBhbm90aGVyIHBvc2l0aW9uLiAqL1xuICBwb3NpdGlvbkZpeGVkPzogYm9vbGVhbjtcbiAgLyoqIE1hcmtzIGEgdXNlciBjb25maWd1cmVkIGN1c3RvbSBjb2x1bW4gKi9cbiAgY3VzdG9tPzogYm9vbGVhbjtcbiAgLyoqIFdoZXRoZXIgdGhlIGNvbHVtbiBjYW4gYmUgcmVzaXplZC4gKi9cbiAgcmVzaXphYmxlPzogYm9vbGVhbjtcbiAgLyoqIE9wdGlvbmFsIHR5cGUgb2YgZGF0YSBpbiB0aGUgY29sdW1uICh1c2VkIHRvIHNldCBkYXRhLXR5cGUgYXR0cmlidXRlLCBlLmcuIGZvciBhZGRpdGlvbmFsIHN0eWxpbmcpLiAqL1xuICBkYXRhVHlwZT86IENvbHVtbkRhdGFUeXBlO1xuICAvKiogVGhlIGNvbHVtbidzIHNpemUsIGUuZy4gXCI0MCBweFwiLiAqL1xuICBncmlkVHJhY2tTaXplPzogc3RyaW5nO1xuICAvKiogQWRkaXRpb25hbCBDU1MgY2xhc3NlcyBmb3IgdGhlIGhlYWRlciBjZWxsLiAqL1xuICBoZWFkZXJDU1NDbGFzc05hbWU/OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgLyoqIEFkZGl0aW9uYWwgQ1NTIGNsYXNzZXMgZm9yIGRhdGEgY2VsbHMuICovXG4gIGNlbGxDU1NDbGFzc05hbWU/OiBzdHJpbmcgfCBzdHJpbmdbXTtcblxuICAvKiogV2hldGhlciB0aGUgY29sdW1uIGlzIHNvcnRhYmxlLiAqL1xuICBzb3J0YWJsZT86IGJvb2xlYW47XG4gIC8qKiBXaGV0aGVyIHRoZSBzb3J0IG9yZGVyIGlzIGFzY2VuZGluZywgZGVzY2VuZGluZyBvciBub3Qgc3BlY2lmaWVkLiAqL1xuICBzb3J0T3JkZXI/OiBTb3J0T3JkZXI7XG5cbiAgLyoqIFdoZXRoZXIgdGhlIGNvbHVtbiBpcyBmaWx0ZXJhYmxlLiAqL1xuICBmaWx0ZXJhYmxlPzogYm9vbGVhbjtcbiAgLyoqIFRoZSBzdHJpbmcgdG8gc2VhcmNoIGZvciBvciBhIGZ1bmN0aW9uIGZvciBjbGllbnQtc2lkZSBmaWx0ZXJpbmcuICovXG4gIGZpbHRlclByZWRpY2F0ZT86IHN0cmluZyB8IEZpbHRlclByZWRpY2F0ZUZ1bmN0aW9uO1xuICAvKiogQ3VzdG9tIGZpbHRlcmluZyBmb3JtIHJlbmRlcmVyIGNhbiBzZXQgYW55IHZhbHVlIGhlcmUgYW5kIGl0IGNhbiBiZSB1c2VkIHRvIGJ1aWxkIGEgcXVlcnkgdG8gdGhlIHNlcnZlci4gKi9cbiAgZXh0ZXJuYWxGaWx0ZXJRdWVyeT86IGFueTtcblxuICAvKiogQ3VzdG9tIGRhdGEgY2VsbCByZW5kZXJlciBjb21wb25lbnQuIEluamVjdCBgQ2VsbFJlbmRlcmVyQ29udGV4dGAgdG8gZ2V0IGFjY2VzcyB0byBkYXRhIHZhbHVlLCBpdGVtIGFuZCBjb2x1bW4gb2JqZWN0LiAqL1xuICBjZWxsUmVuZGVyZXJDb21wb25lbnQ/OiBUeXBlPGFueT47XG4gIC8qKiBDdXN0b20gaGVhZGVyIGNlbGwgcmVuZGVyZXIgY29tcG9uZW50LiBJbmplY3QgYENlbGxSZW5kZXJlckNvbnRleHRgIHRvIGdldCBhY2Nlc3MgdG8gaGVhZGVyIHZhbHVlIGFuZCBjb2x1bW4gb2JqZWN0LiAqL1xuICBoZWFkZXJDZWxsUmVuZGVyZXJDb21wb25lbnQ/OiBUeXBlPGFueT47XG4gIC8qKiBDdXN0b20gZmlsdGVyaW5nIGZvcm0gcmVuZGVyZXIgY29tcG9uZW50LiBJbmplY3QgYEZpbHRlcmluZ0Zvcm1SZW5kZXJlckNvbnRleHRgIHRvIGdldCBhY2Nlc3MgdG8gY29sdW1uIG9iamVjdCBhbmQgbWV0aG9kczogYXBwbHlGaWx0ZXIsIHJlc2V0RmlsdGVyLiAqL1xuICBmaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQ/OiBUeXBlPGFueT47XG59XG5cbi8qKiBEZXNjcmliZXMgYSBjb2x1bW4gY29uZmlndXJhdGlvbi4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQ29sdW1uQ29uZmlnIHtcbiAgLyoqIFRoZSBuYW1lIGZvciB0aGUgY29sdW1uLiAqL1xuICBuYW1lPzogc3RyaW5nO1xuXG4gIC8qKiBXaGV0aGVyIHRoZSBjb2x1bW4gaXMgZGlzcGxheWVkLiAqL1xuICB2aXNpYmxlPzogYm9vbGVhbjtcblxuICAvKiogV2hldGhlciB0aGUgc29ydCBvcmRlciBpcyBhc2NlbmRpbmcsIGRlc2NlbmRpbmcgb3Igbm90IHNwZWNpZmllZC4gKi9cbiAgc29ydE9yZGVyPzogU29ydE9yZGVyO1xuXG4gIC8qKiBUaGUgc2V0dGluZ3Mgb2YgZmlsdGVyIGluIGEgY29sdW1uLiAqL1xuICBmaWx0ZXI/OiBGaWx0ZXI7XG59XG5cbi8qKiBEZXNjcmliZXMgYSBjdXN0b20gY29sdW1uIGNvbmZpZ3VyYXRpb24uICovXG5leHBvcnQgaW50ZXJmYWNlIEN1c3RvbUNvbHVtbkNvbmZpZyBleHRlbmRzIENvbHVtbkNvbmZpZyB7XG4gIC8qKiBKU09OIHBhdGggdG8gdGhlIG1hbmFnZWQgb2JqZWN0IHByb3BlcnR5IHRvIGJlIGRpc3BsYXllZCAqL1xuICBwYXRoOiBzdHJpbmc7XG5cbiAgLyoqIENvbHVtbiBoZWFkZXIgdGl0bGUgKi9cbiAgaGVhZGVyOiBzdHJpbmc7XG5cbiAgLyoqIEZsYWcgdG8gaWRlbnRpZnkgY3VzdG9tIGNvbHVtbnMgKi9cbiAgY3VzdG9tOiBib29sZWFuO1xufVxuXG4vKiogRGVzY3JpYmVzIHRoZSBzZXR0aW5ncyBvZiBmaWx0ZXIgaW4gYSBjb2x1bW4uICovXG5leHBvcnQgaW50ZXJmYWNlIEZpbHRlciB7XG4gIC8qKiBDdXN0b20gZmlsdGVyaW5nIGZvcm0gcmVuZGVyZXIgY2FuIHNldCBhbnkgdmFsdWUgaGVyZSBhbmQgaXQgY2FuIGJlIHVzZWQgdG8gYnVpbGQgYSBxdWVyeSB0byB0aGUgc2VydmVyLiAqL1xuICBleHRlcm5hbEZpbHRlclF1ZXJ5PzogYW55O1xufVxuXG4vKiogRGVzY3JpYmVzIGFuIG9iamVjdCB3aXRoIGRhdGEgZ3JpZCBjb25maWd1cmF0aW9uLiAqL1xuZXhwb3J0IGludGVyZmFjZSBHcmlkQ29uZmlnIHtcbiAgLyoqIFRoZSBjb25maWd1cmF0aW9uIG9iamVjdHMgZm9yIGFsbCB0aGUgY29sdW1ucy4gKi9cbiAgY29sdW1uczogQ29sdW1uQ29uZmlnW107XG5cbiAgLyoqIFBhZ2luYXRpb24gb2JqZWN0LiAqL1xuICBwYWdpbmF0aW9uOiBQYWdpbmF0aW9uO1xufVxuXG4vKiogICovXG5leHBvcnQgY29uc3QgZW51bSBTcGVjaWFsQ29sdW1uTmFtZSB7XG4gIC8qKiBDb2x1bW4gd2l0aCBjaGVja2JveC4gKi9cbiAgQ2hlY2tib3ggPSAnY2hlY2tib3gnLFxuXG4gIC8qKiBDb2x1bW4gd2l0aCByb3cgYWN0aW9ucy4gKi9cbiAgQWN0aW9ucyA9ICdhY3Rpb25zJ1xufVxuXG4vKiogICovXG5leHBvcnQgY29uc3QgZW51bSBDb2x1bW5EYXRhVHlwZSB7XG4gIC8qKiBDb2x1bW4gd2l0aCBpY29uLiAqL1xuICBJY29uID0gJ2ljb24nLFxuXG4gIC8qKiBOdW1lcmljIGNvbHVtbi4gKi9cbiAgTnVtZXJpYyA9ICdudW1lcmljJyxcblxuICAvKiogQ29sdW1uIHdpdGggc2hvcnQgdGV4dC4gKi9cbiAgVGV4dFNob3J0ID0gJ3RleHQtc2hvcnQnLFxuXG4gIC8qKiBDb2x1bW4gd2l0aCBsb25nIHRleHQuICovXG4gIFRleHRMb25nID0gJ3RleHQtbG9uZydcbn1cblxuLyoqIENsYXNzZXMgZm9yIGNvbHVtbiBkYXRhIHJlY29yZC4gKi9cbmV4cG9ydCBjb25zdCBlbnVtIENvbHVtbkRhdGFSZWNvcmRDbGFzc05hbWUge1xuICAvKiogQW4gaWNvbi4gKi9cbiAgSWNvbiA9ICdkYXRhLXJlY29yZC1pY29uJyxcblxuICAvKiogQSBoZWFkZXIuICovXG4gIEhlYWRlciA9ICdkYXRhLXJlY29yZC1oZWFkZXInLFxuXG4gIC8qKiBEZWZhdWx0IC0gZW1wdHkuICovXG4gIERlZmF1bHQgPSAnJ1xufVxuXG5leHBvcnQgY29uc3QgbWluQ29sdW1uR3JpZFRyYWNrU2l6ZSA9IDgwO1xuXG4vKiogTWFwcyBjb2x1bW4gdHlwZXMgdG8gcmVsYXRpdmUgd2lkdGhzLiAqL1xuZXhwb3J0IGNvbnN0IHJhdGlvc0J5Q29sdW1uVHlwZXMgPSB7XG4gIC8qKiBUaGUgd2lkdGggcmF0aW9uIGZvciBpY29uIGNvbHVtbiB0eXBlLiAqL1xuICBpY29uOiAxLFxuXG4gIC8qKiBUaGUgd2lkdGggcmF0aW9uIGZvciBudW1lcmljIGNvbHVtbiB0eXBlLiAqL1xuICBudW1lcmljOiAxLFxuXG4gIC8qKiBUaGUgd2lkdGggcmF0aW9uIGZvciBzaG9ydCB0ZXh0IGNvbHVtbiB0eXBlLiAqL1xuICAndGV4dC1zaG9ydCc6IDEuNjcsXG5cbiAgLyoqIFRoZSB3aWR0aCByYXRpb24gZm9yIGxvbmcgdGV4dCBjb2x1bW4gdHlwZS4gKi9cbiAgJ3RleHQtbG9uZyc6IDMuMzNcbn07XG5cbi8qKiBTb3J0aW5nIG9yZGVyOiBhc2NlbmRpbmcsIGRlc2NlbmRpbmcsIG9yIG5vdCBzcGVjaWZpZWQuICovXG5leHBvcnQgdHlwZSBTb3J0T3JkZXIgPSAnYXNjJyB8ICdkZXNjJyB8ICcnO1xuXG4vKipcbiAqIEEgZmlsdGVyIHByZWRpY2F0ZSBmdW5jdGlvbi5cbiAqIEBwYXJhbSBpdGVtIFRoZSBjdXJyZW50IGl0ZW0gdG8gYmUgY2hlY2tlZC5cbiAqIEBwYXJhbSBwYXRoIFRoZSBwcm9wZXJ0eSBwYXRoIGNvbmZpZ3VyZWQgaW4gdGhlIGN1cnJlbnQgY29sdW1uLlxuICogQHJldHVybnMgVGhlIGJvb2xlYW4gdmFsdWUgaW5kaWNhdGluZyB3aGV0aGVyIHRoZSBpdGVtIG1hdGNoZXMgYSBjb25kaXRpb24gb3Igbm90LlxuICovXG5leHBvcnQgdHlwZSBGaWx0ZXJQcmVkaWNhdGVGdW5jdGlvbiA9IChpdGVtOiBvYmplY3QsIHBhdGg6IHN0cmluZykgPT4gYm9vbGVhbjtcblxuLyoqIEZpbHRlcmluZyBhY3Rpb25zLiAqL1xuZXhwb3J0IGVudW0gRmlsdGVyaW5nQWN0aW9uVHlwZSB7XG4gIC8qKiBBY3Rpb24gaW52b2tlZCB3aGVuIGZpbHRlciBzZXR0aW5ncyBhcmUgdG8gYmUgYXBwbGllZC4gKi9cbiAgQXBwbHlGaWx0ZXIgPSAnQVBQTFlfRklMVEVSJyxcblxuICAvKiogQWN0aW9uIGludm9rZWQgd2hlbiBmaWx0ZXIgc2V0dGluZ3MgYXJlIHRvIGJlIGNsZWFyZWQuICovXG4gIFJlc2V0RmlsdGVyID0gJ1JFU0VUX0ZJTFRFUidcbn1cblxuLyoqIERlc2NyaWJlcyBhbiBpdGVtIGluIHRoZSByb3cuICovXG5leHBvcnQgaW50ZXJmYWNlIFJvdyB7XG4gIC8qKiBUaGUgdW5pcXVlIGlkZW50aWZpZXIgb2YgdGhlIGl0ZW0uICovXG4gIGlkOiBzdHJpbmc7XG5cbiAgLyoqIEFueSBpdGVtIHByb3BlcnR5LiAqL1xuICBba2V5OiBzdHJpbmddOiBhbnk7XG59XG5cbi8qKiBEZXNjcmliZXMgYSBwYWdpbmF0aW9uIG9iamVjdC4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUGFnaW5hdGlvbiB7XG4gIC8qKiBUaGUgbnVtYmVyIG9mIHRoZSBjdXJyZW50IHBhZ2UuICovXG4gIGN1cnJlbnRQYWdlOiBudW1iZXI7XG5cbiAgLyoqIFRoZSBudW1iZXIgb2YgdGhlIG5leHQgcGFnZS4gKi9cbiAgbmV4dFBhZ2U/OiBudW1iZXI7XG5cbiAgLyoqIFRoZSBudW1iZXIgb2YgaXRlbXMgb24gYSBzaW5nbGUgcGFnZS4gKi9cbiAgcGFnZVNpemU6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBBIGNhbGxiYWNrIGZ1bmN0aW9uIHRvIGZldGNoIHNlcnZlciBkYXRhLlxuICogQHBhcmFtIGRhdGFTb3VyY2VNb2RpZmllciBUaGUgY3VycmVudCBkYXRhIHNvdXJjZSBtb2RpZmllci5cbiAqIEByZXR1cm5zIFJldHVybnMgdGhlIHJlc3VsdCBmcm9tIHNlcnZlci5cbiAqL1xuZXhwb3J0IHR5cGUgU2VydmVyU2lkZURhdGFDYWxsYmFjayA9IChcbiAgZGF0YVNvdXJjZU1vZGlmaWVyOiBEYXRhU291cmNlTW9kaWZpZXJcbikgPT4gU2VydmVyU2lkZURhdGFSZXN1bHQ7XG5cbi8qKiBEZXNjcmliZXMgYSBkYXRhIHNvdXJjZSBtb2RpZmllciBmb3IgcmVxdWVzdGluZyBzZXJ2ZXIgZGF0YS4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGF0YVNvdXJjZU1vZGlmaWVyIHtcbiAgLyoqIFRoZSBsaXN0IG9mIGNvbHVtbnMuICovXG4gIGNvbHVtbnM6IENvbHVtbltdO1xuXG4gIC8qKiBUZXh0IHRvIHNlYXJjaC4gKi9cbiAgc2VhcmNoVGV4dDogc3RyaW5nO1xuXG4gIC8qKiBQYWdpbmF0aW9uIG9iamVjdC4gKi9cbiAgcGFnaW5hdGlvbjogUGFnaW5hdGlvbjtcblxuICAvKiogU2VsZWN0aW9uIGluZm8gb2JqZWN0LiAqL1xuICBzZWxlY3Rpb246IHtcbiAgICAvKiogV2hldGhlciB0aGUgc2VsZWN0aW9uIGlzIGVuYWJsZWQuICovXG4gICAgZW5hYmxlZDogYm9vbGVhbjtcblxuICAgIC8qKiBUaGUgbmFtZSBvZiB0aGUgcHJpbWFyeSBrZXkuICovXG4gICAgcHJpbWFyeUtleTogc3RyaW5nO1xuICB9O1xufVxuXG4vKiogRGVzY3JpYmVzIGEgcmVzdWx0IGZyb20gc2VydmVyIHdpdGggZGF0YSBhbmQgYWRkaXRpb25hbCBzdGF0aXN0aWNzLiAqL1xuZXhwb3J0IHR5cGUgU2VydmVyU2lkZURhdGFSZXN1bHQgPSBJUmVzdWx0TGlzdDxvYmplY3Q+ICYge1xuICAvKiogVGhlIHJlYWwgZ3JhbmQgdG90YWwgbnVtYmVyIG9mIGl0ZW1zICh0aGUgd2hvbGUgZGF0YXNldCkuICovXG4gIHNpemU6IG51bWJlcjtcblxuICAvKiogVGhlIG51bWJlciBvZiBpdGVtcyBhZnRlciBmaWx0ZXJpbmcgYXBwbGllZCB0byB0aGUgd2hvbGUgZGF0YXNldCAoc3Vic2V0KS4gKi9cbiAgZmlsdGVyZWRTaXplOiBudW1iZXI7XG5cbiAgLyoqIFRoZSBsaXN0IG9mIGlkcyBvZiBhbGwgZmlsdGVyZWQgaXRlbXMgKHN1YnNldCkuICovXG4gIGZpbHRlcmVkRGF0YUlkcz86IHN0cmluZ1tdO1xufTtcblxuLyoqIERlc2NyaWJlcyBhbiBvYmplY3Qgd2l0aCBkYXRhIHNvdXJjZSBzdGF0aXN0aWNzLiAqL1xuZXhwb3J0IGludGVyZmFjZSBEYXRhU291cmNlU3RhdHMge1xuICAvKiogVGhlIHJlYWwgZ3JhbmQgdG90YWwgbnVtYmVyIG9mIGl0ZW1zICh0aGUgd2hvbGUgZGF0YXNldCkuICovXG4gIHNpemU6IG51bWJlcjtcblxuICAvKiogVGhlIG51bWJlciBvZiBpdGVtcyBhZnRlciBmaWx0ZXJpbmcgYXBwbGllZCB0byB0aGUgd2hvbGUgZGF0YXNldCAoc3Vic2V0KS4gKi9cbiAgZmlsdGVyZWRTaXplOiBudW1iZXI7XG5cbiAgLyoqIFRoZSBudW1iZXIgb2YgdGhlIGN1cnJlbnQgcGFnZS4gKi9cbiAgY3VycmVudFBhZ2U6IG51bWJlcjtcblxuICAvKiogVGhlIG51bWJlciBvZiB0aGUgbmV4dCBwYWdlLiAqL1xuICBuZXh0UGFnZT86IG51bWJlcjtcblxuICAvKiogVGhlIG51bWJlciBvZiBpdGVtcyBjdXJyZW50bHkgc2hvd24gaW4gdGhlIGxpc3QgdmlldywgYS5rLmEuIGN1cnJlbnQgcGFnZSAod2hhdCB0aGUgdXNlciBzZWVzIG9uIHNjcmVlbikuICovXG4gIGN1cnJlbnRQYWdlU2l6ZTogbnVtYmVyO1xuXG4gIC8qKiBUaGUgbnVtYmVyIG9mIGl0ZW1zIG9uIHRoZSBmaXJzdCBwYWdlLiAgKi9cbiAgZmlyc3RQYWdlU2l6ZTogbnVtYmVyO1xufVxuXG4vKiogRGVzY3JpYmVzIGRhdGEgZ3JpZCBkaXNwbGF5IG9wdGlvbnMuICovXG5leHBvcnQgaW50ZXJmYWNlIERpc3BsYXlPcHRpb25zIHtcbiAgLyoqIFNob3cgb3IgaGlkZSB6ZWJyYS1zdHJpcGluZyBpbiB0aGUgdGFibGUgKi9cbiAgc3RyaXBlZDogYm9vbGVhbjtcblxuICAvKiogU2hvdyBvciBoaWRlIGVhY2ggY2VsbCBib3JkZXIgKi9cbiAgYm9yZGVyZWQ6IGJvb2xlYW47XG5cbiAgLyoqIFNob3cgb3IgaGlkZSB0aGUgZ3JpZCBoZWFkZXIgKi9cbiAgZ3JpZEhlYWRlcjogYm9vbGVhbjtcblxuICAvKiogU2hvdyBvciBoaWRlIGZpbHRlciBsYWJlbCBpbiB0aGUgZ3JpZCBoZWFkZXIgKi9cbiAgZmlsdGVyOiBib29sZWFuO1xufVxuXG4vKiogRGVzY3JpYmVzIGEgZGF0YSBncmlkIGFjdGlvbiBjb250cm9sIGZvciBpbmRpdmlkdWFsIGl0ZW0uICovXG5leHBvcnQgaW50ZXJmYWNlIEFjdGlvbkNvbnRyb2wge1xuICAvKiogVGhlIHR5cGUgb2YgdGhlIGFjdGlvbiwgcHJlZGVmaW5lZCBvciBjdXN0b20uICovXG4gIHR5cGU6IEJ1aWx0SW5BY3Rpb25UeXBlIHwgc3RyaW5nO1xuXG4gIC8qKiBUaGUgbGFiZWwgZm9yIHRoZSBhY3Rpb24gYnV0dG9uLiAqL1xuICB0ZXh0Pzogc3RyaW5nO1xuXG4gIC8qKiBUaGUgaWNvbiBmb3IgdGhlIGFjdGlvbiBidXR0b24uICovXG4gIGljb24/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIEEgY2FsbGJhY2sgZnVuY3Rpb24uXG4gICAqIEBwYXJhbSBpdGVtIFRoZSBpdGVtIHRvIHBlcmZvcm0gdGhlIGFjdGlvbiBvbi5cbiAgICogQHBhcmFtIHJlbG9hZCBUaGUgZnVuY3Rpb24gdG8gY2FsbCwgaWYgeW91IHdhbnQgdG8gcmVsb2FkIHRoZSBncmlkLlxuICAgKi9cbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmJhbi10eXBlc1xuICBjYWxsYmFjazogKChpdGVtOiBSb3csIHJlbG9hZDogKCkgPT4gdm9pZCkgPT4gdm9pZCkgfCBGdW5jdGlvbjtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyBpZiB0aGUgYWN0aW9uIHNob3VsZCBiZSBzaG93biBmb3IgZ2l2ZW4gaXRlbSAoaWYgbm90IGRlZmluZWQsIHRoZSBhY3Rpb24gd2lsbCBiZSBzaG93biBhbHdheXMpLlxuICAgKiBAcGFyYW0gaXRlbSBUaGUgaXRlbSBmb3Igd2hpY2ggdGhlIGFjdGlvbiBpcyBzdXBwb3NlZCB0byBiZSBwZXJmb3JtZWQuXG4gICAqL1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6YmFuLXR5cGVzXG4gIHNob3dJZj86ICgoaXRlbTogUm93KSA9PiBib29sZWFuKSB8IEZ1bmN0aW9uO1xuXG4gIFtrZXk6IHN0cmluZ106IGFueTtcbn1cblxuLyoqIERlc2NyaWJlcyBhIGRhdGEgZ3JpZCBhY3Rpb24gY29udHJvbCBmb3IgbXVsdGlwbGUgaXRlbXMuICovXG5leHBvcnQgaW50ZXJmYWNlIEJ1bGtBY3Rpb25Db250cm9sIGV4dGVuZHMgQWN0aW9uQ29udHJvbCB7XG4gIC8qKlxuICAgKiBBIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICAgKiBAcGFyYW0gc2VsZWN0ZWRJdGVtSWRzIFRoZSBsaXN0IG9mIGlkcyBvZiB0aGUgc2VsZWN0ZWQgaXRlbXMuXG4gICAqIEBwYXJhbSByZWxvYWQgVGhlIGZ1bmN0aW9uIHRvIGNhbGwsIGlmIHlvdSB3YW50IHRvIHJlbG9hZCB0aGUgZ3JpZC5cbiAgICovXG4gIGNhbGxiYWNrKHNlbGVjdGVkSXRlbUlkczogc3RyaW5nW10sIHJlbG9hZDogKCkgPT4gdm9pZCk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIERldGVybWluZXMgaWYgdGhlIGFjdGlvbiBzaG91bGQgYmUgc2hvd24gZm9yIGdpdmVuIHNlbGVjdGVkIGl0ZW1zIChpZiBub3QgZGVmaW5lZCwgdGhlIGFjdGlvbiB3aWxsIGJlIHNob3duIGFsd2F5cykuXG4gICAqIEBwYXJhbSBzZWxlY3RlZEl0ZW1JZHMgVGhlIGxpc3Qgb2YgaWRzIG9mIHRoZSBzZWxlY3RlZCBpdGVtcyBmb3Igd2hpY2ggdGhlIGFjdGlvbiBpcyBzdXBwb3NlZCB0byBiZSBwZXJmb3JtZWQuXG4gICAqL1xuICBzaG93SWY/KHNlbGVjdGVkSXRlbUlkczogc3RyaW5nW10pOiBib29sZWFuO1xufVxuXG4vKiogRGVzY3JpYmVzIGEgZGF0YSBncmlkIGFjdGlvbiBjb250cm9sIGZvciB0aGUgaGVhZGVyLiAqL1xuZXhwb3J0IGludGVyZmFjZSBIZWFkZXJBY3Rpb25Db250cm9sIGV4dGVuZHMgQWN0aW9uQ29udHJvbCB7XG4gIC8qKlxuICAgKiBDdXN0b20gdGVtcGxhdGUgY2FuIGJlIHByb3ZpZGVkLiBJZiBubyB0ZW1wbGF0ZSBpcyBwcm92aWRlZCxcbiAgICogdGhlIGRlZmF1bHQgaGVhZGVyQWN0aW9uQ29udHJvbCB0ZW1wbGF0ZSBpcyB1c2VkLlxuICAgKi9cbiAgdGVtcGxhdGU/OiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gIC8qKlxuICAgKiBBIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICAgKi9cbiAgY2FsbGJhY2soKTogdm9pZDtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyBpZiB0aGUgYWN0aW9uIHNob3VsZCBiZSBzaG93bi5cbiAgICovXG4gIHNob3dJZj8oKTogYm9vbGVhbjtcbn1cblxuLyoqIFByZWRlZmluZWQgdHlwZXMgb2YgYWN0aW9ucy4gKi9cbmV4cG9ydCBjb25zdCBlbnVtIEJ1aWx0SW5BY3Rpb25UeXBlIHtcbiAgLyoqIEVkaXQgYnVpbHQtaW4gYWN0aW9uLiAqL1xuICBFZGl0ID0gJ0VESVQnLFxuXG4gIC8qKiBEZWxldGUgYnVpbHQtaW4gYWN0aW9uLiAqL1xuICBEZWxldGUgPSAnREVMRVRFJyxcblxuICAvKiogRXhwb3J0IGJ1aWx0LWluIGFjdGlvbi4gKi9cbiAgRXhwb3J0ID0gJ0VYUE9SVCdcbn1cbiJdfQ==