import { Injectable } from '@angular/core';
import { RealtimeSubjectService } from './realtime-subject.service';
import { RealtimeService } from './realtime.service';
/**
 * A service for handling bulk operation realtime notifications in RxJS fashion.
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './realtime-subject.service';
export class OperationBulkRealtimeService extends RealtimeService {
    constructor(realtimeSubject) {
        super(realtimeSubject);
        this.realtimeSubject = realtimeSubject;
    }
    /**
     * Get an Observable of all CREATE realtime notifications.
     *
     * @returns An [[Observable]] of newly created entity objects.
     */
    onCreate$() {
        return super.onCreate$();
    }
    channel() {
        return '/bulkOperations/*';
    }
}
OperationBulkRealtimeService.ɵfac = function OperationBulkRealtimeService_Factory(t) { return new (t || OperationBulkRealtimeService)(ɵngcc0.ɵɵinject(ɵngcc1.RealtimeSubjectService)); };
OperationBulkRealtimeService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: OperationBulkRealtimeService, factory: OperationBulkRealtimeService.ɵfac });
OperationBulkRealtimeService.ctorParameters = () => [
    { type: RealtimeSubjectService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(OperationBulkRealtimeService, [{
        type: Injectable
    }], function () { return [{ type: ɵngcc1.RealtimeSubjectService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9uLWJ1bGstcmVhbHRpbWUuc2VydmljZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9yZWFsdGltZS9vcGVyYXRpb24tYnVsay1yZWFsdGltZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFHM0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDcEUsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRXJEO0FBQ0E7QUFDQSxHQUFHOzs7QUFFSCxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsZUFBK0I7QUFDakYsSUFBRSxZQUFzQixlQUF1QztBQUMvRCxRQUFJLEtBQUssQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUMzQixRQUZ3QixvQkFBZSxHQUFmLGVBQWUsQ0FBd0I7QUFBQyxJQUU5RCxDQUFDO0FBQ0gsSUFDRTtBQUNGO0FBQ0U7QUFDRTtBQUVKLE9BREs7QUFDTCxJQUFFLFNBQVM7QUFBSyxRQUNaLE9BQU8sS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO0FBQzdCLElBQUUsQ0FBQztBQUNILElBQ1ksT0FBTztBQUFLLFFBQ3BCLE9BQU8sbUJBQW1CLENBQUM7QUFDL0IsSUFBRSxDQUFDO0FBQ0g7d0RBbEJDLFVBQVU7a0tBQ1Q7QUFBQztBQUFzRCxZQVBoRCxzQkFBc0I7QUFBRzs7O3VGQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJT3BlcmF0aW9uQnVsayB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFJlYWx0aW1lU3ViamVjdFNlcnZpY2UgfSBmcm9tICcuL3JlYWx0aW1lLXN1YmplY3Quc2VydmljZSc7XG5pbXBvcnQgeyBSZWFsdGltZVNlcnZpY2UgfSBmcm9tICcuL3JlYWx0aW1lLnNlcnZpY2UnO1xuXG4vKipcbiAqIEEgc2VydmljZSBmb3IgaGFuZGxpbmcgYnVsayBvcGVyYXRpb24gcmVhbHRpbWUgbm90aWZpY2F0aW9ucyBpbiBSeEpTIGZhc2hpb24uXG4gKi9cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBPcGVyYXRpb25CdWxrUmVhbHRpbWVTZXJ2aWNlIGV4dGVuZHMgUmVhbHRpbWVTZXJ2aWNlPElPcGVyYXRpb25CdWxrPiB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCByZWFsdGltZVN1YmplY3Q6IFJlYWx0aW1lU3ViamVjdFNlcnZpY2UpIHtcbiAgICBzdXBlcihyZWFsdGltZVN1YmplY3QpO1xuICB9XG5cbiAgLyoqXG4gICAqIEdldCBhbiBPYnNlcnZhYmxlIG9mIGFsbCBDUkVBVEUgcmVhbHRpbWUgbm90aWZpY2F0aW9ucy5cbiAgICpcbiAgICogQHJldHVybnMgQW4gW1tPYnNlcnZhYmxlXV0gb2YgbmV3bHkgY3JlYXRlZCBlbnRpdHkgb2JqZWN0cy5cbiAgICovXG4gIG9uQ3JlYXRlJCgpOiBPYnNlcnZhYmxlPElPcGVyYXRpb25CdWxrPiB7XG4gICAgcmV0dXJuIHN1cGVyLm9uQ3JlYXRlJCgpO1xuICB9XG5cbiAgcHJvdGVjdGVkIGNoYW5uZWwoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gJy9idWxrT3BlcmF0aW9ucy8qJztcbiAgfVxufVxuIl19