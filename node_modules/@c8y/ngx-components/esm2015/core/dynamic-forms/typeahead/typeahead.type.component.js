import { ChangeDetectionStrategy, ChangeDetectorRef, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import { TranslateService } from '@ngx-translate/core';
import { pick, get } from 'lodash-es';
import { defer, isObservable, of, pipe } from 'rxjs';
import { map, startWith, switchMap, tap } from 'rxjs/operators';
import { gettext } from '../../i18n';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@ngx-translate/core';
import * as ɵngcc2 from '../../select/typeahead.component';
import * as ɵngcc3 from '@angular/forms';
import * as ɵngcc4 from '@ngx-formly/core';
import * as ɵngcc5 from '../../common/forOf.directive';
import * as ɵngcc6 from '../../list-group/list-item.component';
import * as ɵngcc7 from '../../search/highlight.component';
import * as ɵngcc8 from '@angular/common';
import * as ɵngcc9 from '../../i18n/c8y-translate.directive';
import * as ɵngcc10 from '../../common/loading.component';

function TypeaheadTypeComponent_c8y_li_2_Template(rf, ctx) { if (rf & 1) {
    const _r7 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 4);
    ɵngcc0.ɵɵlistener("click", function TypeaheadTypeComponent_c8y_li_2_Template_c8y_li_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const opt_r5 = restoredCtx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(); ctx_r6.selectOption(opt_r5); return ctx_r6.setPipe(""); });
    ɵngcc0.ɵɵelement(1, "c8y-highlight", 5);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const opt_r5 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("text", opt_r5[ctx_r0.labelProp])("pattern", ctx_r0.pattern);
} }
function TypeaheadTypeComponent_ng_template_3_c8y_li_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 7);
    ɵngcc0.ɵɵelementStart(1, "p");
    ɵngcc0.ɵɵelementStart(2, "strong", 8);
    ɵngcc0.ɵɵtext(3, "No match found.");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} }
function TypeaheadTypeComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵtemplate(0, TypeaheadTypeComponent_ng_template_3_c8y_li_0_Template, 4, 0, "c8y-li", 6);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngIf", ctx_r2.pattern.length > 0 && !ctx_r2.match);
} }
function TypeaheadTypeComponent_ng_template_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "c8y-li", 9);
    ɵngcc0.ɵɵelement(1, "c8y-loading");
    ɵngcc0.ɵɵelementEnd();
} }
export class TypeaheadTypeComponent extends FieldType {
    constructor(cdRef, translateService) {
        super();
        this.cdRef = cdRef;
        this.translateService = translateService;
        this.match = false;
        this.placeholder$ = defer(() => { var _a; return of((_a = this.to) === null || _a === void 0 ? void 0 : _a.placeholder); }).pipe(switchMap(placeholder => placeholder
            ? of(placeholder)
            : this.defaultPlaceholder$.pipe(startWith(this.translateService.instant(gettext('Start typing to search'))))));
        this.defaultPlaceholder$ = defer(() => { var _a, _b, _c; return isObservable((_a = this.to) === null || _a === void 0 ? void 0 : _a.c8yForOptions) ? (_b = this.to) === null || _b === void 0 ? void 0 : _b.c8yForOptions : of((_c = this.to) === null || _c === void 0 ? void 0 : _c.c8yForOptions); }).pipe(map(({ data }) => get(data[0], this.labelProp || 'name')), map(example => {
            return !!example
                ? this.translateService.instant(gettext('Start typing to search, for example, {{ example }}'), { example })
                : this.translateService.instant(gettext('No items'));
        }));
        this.excludeLabelProp = false;
    }
    ngOnInit() {
        if (this.to) {
            if (this.to.excludeDisplayProperty) {
                this.excludeLabelProp = this.to.excludeDisplayProperty;
            }
            if (this.to.displayProperty) {
                this.setPipe('');
                this.labelProp = this.to.displayProperty;
                this.valueProps = this.to.valueProperties;
            }
            else {
                console.error('To correctly use the typeahead select you need to specify displayProperty: string within templateOptions!');
            }
        }
    }
    selectOption(opt) {
        if (this.valueProps && this.valueProps.length > 0) {
            const pickList = this.excludeLabelProp
                ? this.valueProps
                : [...this.valueProps, this.labelProp];
            this.formControl.setValue(pick(opt, pickList));
            this.selected = { [this.labelProp]: opt[this.labelProp] };
        }
        else {
            this.formControl.setValue(opt);
        }
    }
    setPipe(filterStr) {
        this.pattern = filterStr;
        this.filterPipe = pipe(map((data) => {
            return data.filter((el) => el[this.labelProp] &&
                el[this.labelProp].toLowerCase().indexOf(filterStr.toLowerCase()) > -1);
        }), tap(data => {
            this.match = data.length > 0;
            this.cdRef.detectChanges();
        }));
    }
}
TypeaheadTypeComponent.ɵfac = function TypeaheadTypeComponent_Factory(t) { return new (t || TypeaheadTypeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TranslateService)); };
TypeaheadTypeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: TypeaheadTypeComponent, selectors: [["c8y-typeahead-type"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 7, vars: 18, consts: [[3, "required", "placeholder", "displayProperty", "selected", "allowFreeEntries", "container", "disabled", "formControl", "formlyAttributes", "onSearch"], ["class", "p-l-8 p-r-8 c8y-list__item--link", 3, "click", 4, "c8yFor", "c8yForOf", "c8yForLoadMore", "c8yForPipe", "c8yForNotFound", "c8yForLoadingTemplate"], ["notFoundTemplate", ""], ["loading", ""], [1, "p-l-8", "p-r-8", "c8y-list__item--link", 3, "click"], [3, "text", "pattern"], ["class", "bg-gray-lighter p-8", 4, "ngIf"], [1, "bg-gray-lighter", "p-8"], ["translate", ""], [1, "text-center", "p-t-8", "p-relative"]], template: function TypeaheadTypeComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-typeahead", 0);
        ɵngcc0.ɵɵlistener("onSearch", function TypeaheadTypeComponent_Template_c8y_typeahead_onSearch_0_listener($event) { return ctx.setPipe($event); });
        ɵngcc0.ɵɵpipe(1, "async");
        ɵngcc0.ɵɵtemplate(2, TypeaheadTypeComponent_c8y_li_2_Template, 2, 2, "c8y-li", 1);
        ɵngcc0.ɵɵtemplate(3, TypeaheadTypeComponent_ng_template_3_Template, 1, 1, "ng-template", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵtemplate(5, TypeaheadTypeComponent_ng_template_5_Template, 2, 0, "ng-template", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(4);
        const _r3 = ɵngcc0.ɵɵreference(6);
        ɵngcc0.ɵɵclassProp("is-invalid", ctx.showError);
        ɵngcc0.ɵɵproperty("required", (ctx.to == null ? null : ctx.to.required) || false)("placeholder", ɵngcc0.ɵɵpipeBind1(1, 16, ctx.placeholder$))("displayProperty", ctx.to == null ? null : ctx.to.displayProperty)("selected", ctx.selected)("allowFreeEntries", (ctx.to == null ? null : ctx.to.allowFreeEntries) || false)("container", (ctx.to == null ? null : ctx.to.container) || "")("disabled", ctx.to == null ? null : ctx.to.disabled)("formControl", ctx.formControl)("formlyAttributes", ctx.field);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("c8yForOf", ctx.to == null ? null : ctx.to.c8yForOptions)("c8yForLoadMore", (ctx.to == null ? null : ctx.to.loadMore) || "auto")("c8yForPipe", ctx.filterPipe)("c8yForNotFound", _r1)("c8yForLoadingTemplate", _r3);
    } }, directives: [ɵngcc2.TypeaheadComponent, ɵngcc3.RequiredValidator, ɵngcc3.NgControlStatus, ɵngcc3.FormControlDirective, ɵngcc4.FormlyAttributes, ɵngcc5.ForOfDirective, ɵngcc6.ListItemComponent, ɵngcc7.HighlightComponent, ɵngcc8.NgIf, ɵngcc9.C8yTranslateDirective, ɵngcc10.LoadingComponent], pipes: [ɵngcc8.AsyncPipe], encapsulation: 2, changeDetection: 0 });
TypeaheadTypeComponent.CONFIG = {
    types: [{ name: 'typeahead', component: TypeaheadTypeComponent }]
};
TypeaheadTypeComponent.ctorParameters = () => [
    { type: ChangeDetectorRef },
    { type: TranslateService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TypeaheadTypeComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-typeahead-type',
                template: "<c8y-typeahead\n  [required]=\"to?.required || false\"\n  [placeholder]=\"placeholder$ | async\"\n  [displayProperty]=\"to?.displayProperty\"\n  [selected]=\"selected\"\n  [allowFreeEntries]=\"to?.allowFreeEntries || false\"\n  [container]=\"to?.container || ''\"\n  [disabled]=\"to?.disabled\"\n  (onSearch)=\"setPipe($event)\"\n  [formControl]=\"formControl\"\n  [class.is-invalid]=\"showError\"\n  [formlyAttributes]=\"field\">\n\n  <c8y-li *c8yFor=\"let opt of to?.c8yForOptions; loadMore: to?.loadMore || 'auto'; pipe: filterPipe; notFound: notFoundTemplate; loadingTemplate: loading;\"\n          (click)=\"selectOption(opt); setPipe('')\"\n          class=\"p-l-8 p-r-8 c8y-list__item--link\">\n    <c8y-highlight [text]=\"opt[labelProp]\" [pattern]=\"pattern\"></c8y-highlight>\n  </c8y-li>\n  <ng-template #notFoundTemplate>\n    <c8y-li class=\"bg-gray-lighter p-8\" *ngIf=\"pattern.length > 0 && !match\">\n      <p><strong translate>No match found.</strong></p>\n    </c8y-li>\n  </ng-template>\n  <ng-template #loading>\n    <c8y-li class=\"text-center p-t-8 p-relative\">\n      <c8y-loading></c8y-loading>\n    </c8y-li>\n  </ng-template>\n</c8y-typeahead>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.TranslateService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,