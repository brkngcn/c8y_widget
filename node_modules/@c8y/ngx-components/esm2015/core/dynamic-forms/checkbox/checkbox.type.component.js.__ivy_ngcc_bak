import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
export class FieldCheckbox extends FieldType {
    constructor() {
        super(...arguments);
        this.defaultOptions = {
            templateOptions: {
                indeterminate: true,
                formCheck: 'custom' // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline' | 'nolabel'
            }
        };
    }
}
FieldCheckbox.CONFIG = {
    types: [
        {
            name: 'checkbox',
            component: FieldCheckbox
        },
        {
            name: 'boolean',
            extends: 'checkbox'
        },
        {
            name: 'switch',
            extends: 'checkbox',
            defaultOptions: {
                templateOptions: {
                    switchMode: true,
                    indeterminate: false,
                }
            },
        }
    ]
};
FieldCheckbox.decorators = [
    { type: Component, args: [{
                selector: 'c8y-field-checkbox',
                template: "  <label\n    [class.c8y-checkbox]=\"!to.switchMode\"\n    [class.c8y-switch]=\"to.switchMode\"\n    [class.has-error]=\"showError\">\n    <input\n      type=\"checkbox\"\n      [class.is-invalid]=\"showError\"\n      [class.form-check-input]=\"to.formCheck.indexOf('custom') === -1\"\n      [class.position-static]=\"to.formCheck === 'nolabel'\"\n      [class.custom-control-input]=\"to.formCheck.indexOf('custom') === 0\"\n      [indeterminate]=\"to.indeterminate && formControl.value == null\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n    /><span></span><span> {{ to.label | humanize}} </span>\n    <span *ngIf=\"to.required && to.hideRequiredMarker !== true\"><em class=\"m-l-4\" translate>(required)</em></span>\n    <button\n      *ngIf=\"!!to.description\"\n      class=\"btn-clean m-l-4 flex-item-middle\"\n      [popover]=\"to.description\"\n      placement=\"auto\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-primary\"></i>\n  </button>\n  </label>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tib3gudHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9jb3JlL2R5bmFtaWMtZm9ybXMvY2hlY2tib3gvY2hlY2tib3gudHlwZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQWdCLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTzNELE1BQU0sT0FBTyxhQUFjLFNBQVEsU0FBUztJQUw1Qzs7UUE4QkUsbUJBQWMsR0FBRztZQUNmLGVBQWUsRUFBRTtnQkFDZixhQUFhLEVBQUUsSUFBSTtnQkFDbkIsU0FBUyxFQUFFLFFBQVEsQ0FBQyxrRkFBa0Y7YUFDdkc7U0FDRixDQUFDO0lBQ0osQ0FBQzs7QUE5QmlCLG9CQUFNLEdBQWlCO0lBQ3JDLEtBQUssRUFBRTtRQUNMO1lBQ0UsSUFBSSxFQUFFLFVBQVU7WUFDaEIsU0FBUyxFQUFFLGFBQWE7U0FDekI7UUFDRDtZQUNFLElBQUksRUFBRSxTQUFTO1lBQ2YsT0FBTyxFQUFFLFVBQVU7U0FDcEI7UUFDRDtZQUNFLElBQUksRUFBRSxRQUFRO1lBQ2QsT0FBTyxFQUFFLFVBQVU7WUFDbkIsY0FBYyxFQUFFO2dCQUNkLGVBQWUsRUFBRTtvQkFDZixVQUFVLEVBQUUsSUFBSTtvQkFDaEIsYUFBYSxFQUFFLEtBQUs7aUJBQ3JCO2FBQ0Y7U0FFRjtLQUNGO0NBQ0YsQ0FBQzs7WUE1QkgsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLGtqQ0FBNkM7Z0JBQzdDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2FBQ2hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlnT3B0aW9uLCBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWZpZWxkLWNoZWNrYm94JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NoZWNrYm94LnR5cGUuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBGaWVsZENoZWNrYm94IGV4dGVuZHMgRmllbGRUeXBlIHtcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJRzogQ29uZmlnT3B0aW9uID0ge1xuICAgIHR5cGVzOiBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdjaGVja2JveCcsXG4gICAgICAgIGNvbXBvbmVudDogRmllbGRDaGVja2JveFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ2Jvb2xlYW4nLFxuICAgICAgICBleHRlbmRzOiAnY2hlY2tib3gnXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBuYW1lOiAnc3dpdGNoJyxcbiAgICAgICAgZXh0ZW5kczogJ2NoZWNrYm94JyxcbiAgICAgICAgZGVmYXVsdE9wdGlvbnM6IHtcbiAgICAgICAgICB0ZW1wbGF0ZU9wdGlvbnM6IHtcbiAgICAgICAgICAgIHN3aXRjaE1vZGU6IHRydWUsXG4gICAgICAgICAgICBpbmRldGVybWluYXRlOiBmYWxzZSxcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgIH1cbiAgICBdXG4gIH07XG5cbiAgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICBpbmRldGVybWluYXRlOiB0cnVlLFxuICAgICAgZm9ybUNoZWNrOiAnY3VzdG9tJyAvLyAnY3VzdG9tJyB8ICdjdXN0b20taW5saW5lJyB8ICdjdXN0b20tc3dpdGNoJyB8ICdzdGFja2VkJyB8ICdpbmxpbmUnIHwgJ25vbGFiZWwnXG4gICAgfVxuICB9O1xufVxuIl19