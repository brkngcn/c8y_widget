import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';
import { FormlySelectModule } from '@ngx-formly/core/select';
import { BsDatepickerModule } from 'ngx-bootstrap/datepicker';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { CommonModule as C8YCommonModule } from '../common/common.module';
import { DropAreaModule } from '../drop-area/drop-area.module';
import { FormsModule } from '../forms/index';
import { ListGroupModule } from '../list-group/list-group.module';
import { SearchModule } from '../search/search.module';
import { SelectModule } from '../select/select.module';
import { C8yTranslateModule } from '../i18n/c8y-translate.module';
import { ArrayTypeComponent } from './array/array.type.component';
import { FieldCheckbox } from './checkbox/checkbox.type.component';
import { FieldDate } from './date/date.type.component';
import { FieldFile } from './file/file.type.component';
import { WrapperFormField } from './form-field/form-field.wrapper.component';
import { FieldInput } from './input/input.type.component';
import { ObjectTypeComponent } from './object/object.type.component';
import { FieldRadio } from './radio/radio.type.component';
import { FieldDateTime } from './date-time/date-time.type.component';
import { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';
import { TypeaheadTypeComponent } from './typeahead/typeahead.type.component';
import * as ɵngcc0 from '@angular/core';
export const FIELD_TYPES = [
    FieldCheckbox,
    ArrayTypeComponent,
    WrapperFormField,
    FieldFile,
    FieldInput,
    FieldRadio,
    ObjectTypeComponent,
    FieldDate,
    FieldDateTime,
    TypeaheadTypeComponent
];
export function fieldTypeFactory() {
    // tslint:disable-next-line:no-string-literal
    return FIELD_TYPES.map(type => type['CONFIG']).reduce((formlyConfig, typeConfig) => (Object.assign(Object.assign({}, formlyConfig), { types: [...formlyConfig.types, ...(typeConfig.types || [])], wrappers: [...formlyConfig.wrappers, ...(typeConfig.wrappers || [])] })), { types: [], wrappers: [] });
}
/**
 * This module declares field type components for dynamic forms that match C8Y styleguide.
 *
 * @dynamic
 */
export class DynamicFormsUIThemeModule {
}
DynamicFormsUIThemeModule.ɵfac = function DynamicFormsUIThemeModule_Factory(t) { return new (t || DynamicFormsUIThemeModule)(); };
DynamicFormsUIThemeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: DynamicFormsUIThemeModule });
DynamicFormsUIThemeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        {
            provide: FORMLY_CONFIG,
            useFactory: fieldTypeFactory,
            multi: true
        }
    ], imports: [[
            CommonModule,
            C8YCommonModule,
            PopoverModule,
            ReactiveFormsModule,
            C8yTranslateModule,
            DropAreaModule,
            FormsModule,
            FormlyModule,
            FormlySelectModule,
            DateTimePickerModule,
            SelectModule,
            ListGroupModule,
            SearchModule,
            BsDatepickerModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(DynamicFormsUIThemeModule, [{
        type: NgModule,
        args: [{
                declarations: [...FIELD_TYPES],
                entryComponents: [...FIELD_TYPES],
                imports: [
                    CommonModule,
                    C8YCommonModule,
                    PopoverModule,
                    ReactiveFormsModule,
                    C8yTranslateModule,
                    DropAreaModule,
                    FormsModule,
                    FormlyModule,
                    FormlySelectModule,
                    DateTimePickerModule,
                    SelectModule,
                    ListGroupModule,
                    SearchModule,
                    BsDatepickerModule
                ],
                providers: [
                    {
                        provide: FORMLY_CONFIG,
                        useFactory: fieldTypeFactory,
                        multi: true
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DynamicFormsUIThemeModule, { declarations: function () { return [FieldCheckbox,
        ArrayTypeComponent,
        WrapperFormField,
        FieldFile,
        FieldInput,
        FieldRadio,
        ObjectTypeComponent,
        FieldDate,
        FieldDateTime,
        TypeaheadTypeComponent]; }, imports: function () { return [CommonModule,
        C8YCommonModule,
        PopoverModule,
        ReactiveFormsModule,
        C8yTranslateModule,
        DropAreaModule,
        FormsModule,
        FormlyModule,
        FormlySelectModule,
        DateTimePickerModule,
        SelectModule,
        ListGroupModule,
        SearchModule,
        BsDatepickerModule]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1mb3Jtcy11aS10aGVtZS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvZHluYW1pYy1mb3Jtcy9keW5hbWljLWZvcm1zLXVpLXRoZW1lLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBUSxNQUFNLGVBQWUsQ0FBQztBQUMvQyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUNyRCxPQUFPLEVBQTJCLFlBQVksRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN4RixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksSUFBSSxlQUFlLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUMxRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNsRSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDdkQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDJDQUEyQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3JFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDOztBQUU5RSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQTJCO0FBQ25ELElBQUUsYUFBYTtBQUNmLElBQUUsa0JBQWtCO0FBQ3BCLElBQUUsZ0JBQWdCO0FBQ2xCLElBQUUsU0FBUztBQUNYLElBQUUsVUFBVTtBQUNaLElBQUUsVUFBVTtBQUNaLElBQUUsbUJBQW1CO0FBQ3JCLElBQUUsU0FBUztBQUNYLElBQUUsYUFBYTtBQUNmLElBQUUsc0JBQXNCO0FBQ3hCLENBQUMsQ0FBQztBQUVGLE1BQU0sVUFBVSxnQkFBZ0I7QUFDaEMsSUFBRSw2Q0FBNkM7QUFDL0MsSUFBRSxPQUFPLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQ25ELENBQUMsWUFBMEIsRUFBRSxVQUF3QixFQUFFLEVBQUUsQ0FDdkQsQ0FBQyxnQ0FDSSxZQUFZLEtBQ2YsS0FBSyxFQUFFLENBQUMsR0FBRyxZQUFZLENBQUMsS0FBSyxFQUFFLEdBQUcsQ0FBQyxVQUFVLENBQUMsS0FBSyxJQUFJLEVBQUUsQ0FBQyxDQUFDLEVBQzNELFFBQVEsRUFBRSxDQUFDLEdBQUcsWUFBWSxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLFFBQVEsSUFBSSxFQUFFLENBQUMsQ0FBQyxHQUNwRCxDQUFBLEVBQ3BCLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLENBQzVCLENBQUM7QUFDSixDQUFDO0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBNEJILE1BQU0sT0FBTyx5QkFBeUI7QUFBRztxREEzQnhDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQztLQUM5QixlQUFlLEVBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQyxrQkFDakMsT0FBTyxFQUFFLHNCQUNQLFlBQVk7WUFDWixlQUFlLHNCQUNmLGFBQWEsc0JBQ2I7O09BQW1CLHNCQUNuQjtXQUFrQixzQkFDbEI7S0FBYztHQUNkO0lBQVc7T0FDWCxZQUFZO2VBQ1o7SUFBa0Isc0JBQ2xCO21CQUFvQjtRQUNwQixZQUFZO1VBQ1osZUFBZTttQkFDZjtNQUFZO0VBQ1osa0JBQWtCO01BQ25CLGtCQUNELFNBQVM7Q0FBRSxzQkFDVDt1QkFDRTtDQUFPLEVBQUUsYUFBYTtnQkFDdEIsVUFBVSxFQUFFO2FBQWdCO3dCQUM1QixLQUFLLEVBQUUsSUFBSSxzQkFDWixrQkFDRixjQUNGOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dDQUNJO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdNb2R1bGUsIFR5cGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJlYWN0aXZlRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb25maWdPcHRpb24sIEZpZWxkVHlwZSwgRm9ybWx5TW9kdWxlLCBGT1JNTFlfQ09ORklHIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5pbXBvcnQgeyBGb3JtbHlTZWxlY3RNb2R1bGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlL3NlbGVjdCc7XG5pbXBvcnQgeyBCc0RhdGVwaWNrZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL2RhdGVwaWNrZXInO1xuaW1wb3J0IHsgUG9wb3Zlck1vZHVsZSB9IGZyb20gJ25neC1ib290c3RyYXAvcG9wb3Zlcic7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgYXMgQzhZQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgRHJvcEFyZWFNb2R1bGUgfSBmcm9tICcuLi9kcm9wLWFyZWEvZHJvcC1hcmVhLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJy4uL2Zvcm1zL2luZGV4JztcbmltcG9ydCB7IExpc3RHcm91cE1vZHVsZSB9IGZyb20gJy4uL2xpc3QtZ3JvdXAvbGlzdC1ncm91cC5tb2R1bGUnO1xuaW1wb3J0IHsgU2VhcmNoTW9kdWxlIH0gZnJvbSAnLi4vc2VhcmNoL3NlYXJjaC5tb2R1bGUnO1xuaW1wb3J0IHsgU2VsZWN0TW9kdWxlIH0gZnJvbSAnLi4vc2VsZWN0L3NlbGVjdC5tb2R1bGUnO1xuaW1wb3J0IHsgQzh5VHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnLi4vaTE4bi9jOHktdHJhbnNsYXRlLm1vZHVsZSc7XG5pbXBvcnQgeyBBcnJheVR5cGVDb21wb25lbnQgfSBmcm9tICcuL2FycmF5L2FycmF5LnR5cGUuY29tcG9uZW50JztcbmltcG9ydCB7IEZpZWxkQ2hlY2tib3ggfSBmcm9tICcuL2NoZWNrYm94L2NoZWNrYm94LnR5cGUuY29tcG9uZW50JztcbmltcG9ydCB7IEZpZWxkRGF0ZSB9IGZyb20gJy4vZGF0ZS9kYXRlLnR5cGUuY29tcG9uZW50JztcbmltcG9ydCB7IEZpZWxkRmlsZSB9IGZyb20gJy4vZmlsZS9maWxlLnR5cGUuY29tcG9uZW50JztcbmltcG9ydCB7IFdyYXBwZXJGb3JtRmllbGQgfSBmcm9tICcuL2Zvcm0tZmllbGQvZm9ybS1maWVsZC53cmFwcGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBGaWVsZElucHV0IH0gZnJvbSAnLi9pbnB1dC9pbnB1dC50eXBlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBPYmplY3RUeXBlQ29tcG9uZW50IH0gZnJvbSAnLi9vYmplY3Qvb2JqZWN0LnR5cGUuY29tcG9uZW50JztcbmltcG9ydCB7IEZpZWxkUmFkaW8gfSBmcm9tICcuL3JhZGlvL3JhZGlvLnR5cGUuY29tcG9uZW50JztcbmltcG9ydCB7IEZpZWxkRGF0ZVRpbWUgfSBmcm9tICcuL2RhdGUtdGltZS9kYXRlLXRpbWUudHlwZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgRGF0ZVRpbWVQaWNrZXJNb2R1bGUgfSBmcm9tICcuLi9kYXRlLXRpbWUtcGlja2VyL2RhdGUtdGltZS1waWNrZXIubW9kdWxlJztcbmltcG9ydCB7IFR5cGVhaGVhZFR5cGVDb21wb25lbnQgfSBmcm9tICcuL3R5cGVhaGVhZC90eXBlYWhlYWQudHlwZS5jb21wb25lbnQnO1xuXG5leHBvcnQgY29uc3QgRklFTERfVFlQRVM6IEFycmF5PFR5cGU8RmllbGRUeXBlPj4gPSBbXG4gIEZpZWxkQ2hlY2tib3gsXG4gIEFycmF5VHlwZUNvbXBvbmVudCxcbiAgV3JhcHBlckZvcm1GaWVsZCxcbiAgRmllbGRGaWxlLFxuICBGaWVsZElucHV0LFxuICBGaWVsZFJhZGlvLFxuICBPYmplY3RUeXBlQ29tcG9uZW50LFxuICBGaWVsZERhdGUsXG4gIEZpZWxkRGF0ZVRpbWUsXG4gIFR5cGVhaGVhZFR5cGVDb21wb25lbnRcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBmaWVsZFR5cGVGYWN0b3J5KCkge1xuICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tc3RyaW5nLWxpdGVyYWxcbiAgcmV0dXJuIEZJRUxEX1RZUEVTLm1hcCh0eXBlID0+IHR5cGVbJ0NPTkZJRyddKS5yZWR1Y2UoXG4gICAgKGZvcm1seUNvbmZpZzogQ29uZmlnT3B0aW9uLCB0eXBlQ29uZmlnOiBDb25maWdPcHRpb24pID0+XG4gICAgICAoe1xuICAgICAgICAuLi5mb3JtbHlDb25maWcsXG4gICAgICAgIHR5cGVzOiBbLi4uZm9ybWx5Q29uZmlnLnR5cGVzLCAuLi4odHlwZUNvbmZpZy50eXBlcyB8fCBbXSldLFxuICAgICAgICB3cmFwcGVyczogWy4uLmZvcm1seUNvbmZpZy53cmFwcGVycywgLi4uKHR5cGVDb25maWcud3JhcHBlcnMgfHwgW10pXVxuICAgICAgfSBhcyBDb25maWdPcHRpb24pLFxuICAgIHsgdHlwZXM6IFtdLCB3cmFwcGVyczogW10gfVxuICApO1xufVxuXG4vKipcbiAqIFRoaXMgbW9kdWxlIGRlY2xhcmVzIGZpZWxkIHR5cGUgY29tcG9uZW50cyBmb3IgZHluYW1pYyBmb3JtcyB0aGF0IG1hdGNoIEM4WSBzdHlsZWd1aWRlLlxuICpcbiAqIEBkeW5hbWljXG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogWy4uLkZJRUxEX1RZUEVTXSxcbiAgZW50cnlDb21wb25lbnRzOiBbLi4uRklFTERfVFlQRVNdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlLFxuICAgIEM4WUNvbW1vbk1vZHVsZSxcbiAgICBQb3BvdmVyTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGUsXG4gICAgQzh5VHJhbnNsYXRlTW9kdWxlLFxuICAgIERyb3BBcmVhTW9kdWxlLFxuICAgIEZvcm1zTW9kdWxlLFxuICAgIEZvcm1seU1vZHVsZSxcbiAgICBGb3JtbHlTZWxlY3RNb2R1bGUsXG4gICAgRGF0ZVRpbWVQaWNrZXJNb2R1bGUsXG4gICAgU2VsZWN0TW9kdWxlLFxuICAgIExpc3RHcm91cE1vZHVsZSxcbiAgICBTZWFyY2hNb2R1bGUsXG4gICAgQnNEYXRlcGlja2VyTW9kdWxlXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHtcbiAgICAgIHByb3ZpZGU6IEZPUk1MWV9DT05GSUcsXG4gICAgICB1c2VGYWN0b3J5OiBmaWVsZFR5cGVGYWN0b3J5LFxuICAgICAgbXVsdGk6IHRydWVcbiAgICB9XG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY0Zvcm1zVUlUaGVtZU1vZHVsZSB7fVxuIl19