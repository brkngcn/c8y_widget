import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldType } from '@ngx-formly/core';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
import * as ɵngcc2 from '@angular/forms';
import * as ɵngcc3 from '../../forms/required-input-placeholder.directive';
import * as ɵngcc4 from '@ngx-formly/core';

function FieldInput_input_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 2);
} if (rf & 2) {
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-invalid", ctx_r0.showError);
    ɵngcc0.ɵɵproperty("type", ctx_r0.type)("formControl", ctx_r0.formControl)("formlyAttributes", ctx_r0.field)("required", ctx_r0.to.required);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r0.to.autocomplete ? ctx_r0.to.autocomplete : null);
} }
function FieldInput_ng_template_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "input", 3);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassProp("is-invalid", ctx_r2.showError);
    ɵngcc0.ɵɵproperty("formControl", ctx_r2.formControl)("formlyAttributes", ctx_r2.field)("required", ctx_r2.to.required);
    ɵngcc0.ɵɵattribute("autocomplete", ctx_r2.to.autocomplete ? ctx_r2.to.autocomplete : null);
} }
export class FieldInput extends FieldType {
    get type() {
        return this.to.type || 'text';
    }
}
FieldInput.ɵfac = /*@__PURE__*/ function () { let ɵFieldInput_BaseFactory; return function FieldInput_Factory(t) { return (ɵFieldInput_BaseFactory || (ɵFieldInput_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(FieldInput)))(t || FieldInput); }; }();
FieldInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FieldInput, selectors: [["c8y-field-input"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 2, consts: [["class", "form-control", 3, "type", "formControl", "formlyAttributes", "required", "is-invalid", 4, "ngIf", "ngIfElse"], ["numberTmp", ""], [1, "form-control", 3, "type", "formControl", "formlyAttributes", "required"], ["type", "number", 1, "form-control", 3, "formControl", "formlyAttributes", "required"]], template: function FieldInput_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, FieldInput_input_0_Template, 1, 7, "input", 0);
        ɵngcc0.ɵɵtemplate(1, FieldInput_ng_template_1_Template, 1, 6, "ng-template", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.type !== "number")("ngIfElse", _r1);
    } }, directives: [ɵngcc1.NgIf, ɵngcc2.DefaultValueAccessor, ɵngcc3.RequiredInputPlaceholderDirective, ɵngcc2.NgControlStatus, ɵngcc2.FormControlDirective, ɵngcc4.FormlyAttributes, ɵngcc2.RequiredValidator, ɵngcc2.NumberValueAccessor], encapsulation: 2, changeDetection: 0 });
FieldInput.CONFIG = {
    types: [
        {
            name: 'input',
            component: FieldInput,
            wrappers: ['c8y-form-field']
        },
        { name: 'string', extends: 'input' },
        { name: 'typeahead', extends: 'input' },
        {
            name: 'number',
            extends: 'input',
            defaultOptions: {
                templateOptions: {
                    type: 'number'
                }
            }
        },
        {
            name: 'integer',
            extends: 'input',
            defaultOptions: {
                templateOptions: {
                    type: 'number'
                }
            }
        }
    ]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FieldInput, [{
        type: Component,
        args: [{
                selector: 'c8y-field-input',
                template: "<input\n  *ngIf=\"type !== 'number'; else numberTmp\"\n  [type]=\"type\"\n  [formControl]=\"formControl\"\n  class=\"form-control\"\n  [formlyAttributes]=\"field\"\n  [required]=\"to.required\"\n  [attr.autocomplete]=\"to.autocomplete ? to.autocomplete : null\"\n  [class.is-invalid]=\"showError\"\n/>\n<ng-template #numberTmp>\n  <input\n    type=\"number\"\n    [formControl]=\"formControl\"\n    class=\"form-control\"\n    [formlyAttributes]=\"field\"\n    [required]=\"to.required\"\n    [attr.autocomplete]=\"to.autocomplete ? to.autocomplete : null\"\n    [class.is-invalid]=\"showError\"\n  />\n</ng-template>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQudHlwZS5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvZHluYW1pYy1mb3Jtcy9pbnB1dC9pbnB1dC50eXBlLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25FLE9BQU8sRUFBZ0IsU0FBUyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTzNELE1BQU0sT0FBTyxVQUFXLFNBQVEsU0FBUztBQUN6QyxJQThCRSxJQUFJLElBQUk7QUFDVixRQUFJLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksTUFBTSxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNIOzs7Ozs7Ozt1UkFBQztBQWpDaUIsaUJBQU0sR0FBaUI7QUFDekMsSUFBSSxLQUFLLEVBQUU7QUFDWCxRQUFNO0FBQ04sWUFBUSxJQUFJLEVBQUUsT0FBTztBQUNyQixZQUFRLFNBQVMsRUFBRSxVQUFVO0FBQzdCLFlBQVEsUUFBUSxFQUFFLENBQUMsZ0JBQWdCLENBQUM7QUFDcEMsU0FBTztBQUNQLFFBQU0sRUFBRSxJQUFJLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUU7QUFDMUMsUUFBTSxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUUsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUM3QyxRQUFNO0FBQ04sWUFBUSxJQUFJLEVBQUUsUUFBUTtBQUN0QixZQUFRLE9BQU8sRUFBRSxPQUFPO0FBQ3hCLFlBQVEsY0FBYyxFQUFFO0FBQ3hCLGdCQUFVLGVBQWUsRUFBRTtBQUMzQixvQkFBWSxJQUFJLEVBQUUsUUFBUTtBQUMxQixpQkFBVztBQUNYLGFBQVM7QUFDVCxTQUFPO0FBQ1AsUUFBTTtBQUNOLFlBQVEsSUFBSSxFQUFFLFNBQVM7QUFDdkIsWUFBUSxPQUFPLEVBQUUsT0FBTztBQUN4QixZQUFRLGNBQWMsRUFBRTtBQUN4QixnQkFBVSxlQUFlLEVBQUU7QUFDM0Isb0JBQVksSUFBSSxFQUFFLFFBQVE7QUFDMUIsaUJBQVc7QUFDWCxhQUFTO0FBQ1QsU0FBTztBQUNQLEtBQUs7QUFDTCxDQUFHLENBQUM7c0NBbENILFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2FBQzNCOzs7NmlCQUEwQyxrQkFDMUMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sY0FDaEQ7OzswQkFDSTtBQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uZmlnT3B0aW9uLCBGaWVsZFR5cGUgfSBmcm9tICdAbmd4LWZvcm1seS9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWZpZWxkLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL2lucHV0LnR5cGUuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcbmV4cG9ydCBjbGFzcyBGaWVsZElucHV0IGV4dGVuZHMgRmllbGRUeXBlIHtcbiAgc3RhdGljIHJlYWRvbmx5IENPTkZJRzogQ29uZmlnT3B0aW9uID0ge1xuICAgIHR5cGVzOiBbXG4gICAgICB7XG4gICAgICAgIG5hbWU6ICdpbnB1dCcsXG4gICAgICAgIGNvbXBvbmVudDogRmllbGRJbnB1dCxcbiAgICAgICAgd3JhcHBlcnM6IFsnYzh5LWZvcm0tZmllbGQnXVxuICAgICAgfSxcbiAgICAgIHsgbmFtZTogJ3N0cmluZycsIGV4dGVuZHM6ICdpbnB1dCcgfSxcbiAgICAgIHsgbmFtZTogJ3R5cGVhaGVhZCcsIGV4dGVuZHM6ICdpbnB1dCcgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ251bWJlcicsXG4gICAgICAgIGV4dGVuZHM6ICdpbnB1dCcsXG4gICAgICAgIGRlZmF1bHRPcHRpb25zOiB7XG4gICAgICAgICAgdGVtcGxhdGVPcHRpb25zOiB7XG4gICAgICAgICAgICB0eXBlOiAnbnVtYmVyJ1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbmFtZTogJ2ludGVnZXInLFxuICAgICAgICBleHRlbmRzOiAnaW5wdXQnLFxuICAgICAgICBkZWZhdWx0T3B0aW9uczoge1xuICAgICAgICAgIHRlbXBsYXRlT3B0aW9uczoge1xuICAgICAgICAgICAgdHlwZTogJ251bWJlcidcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICBdXG4gIH07XG5cbiAgZ2V0IHR5cGUoKSB7XG4gICAgcmV0dXJuIHRoaXMudG8udHlwZSB8fCAndGV4dCc7XG4gIH1cbn1cbiJdfQ==