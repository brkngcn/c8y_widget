import { ChangeDetectionStrategy, Component } from '@angular/core';
import { FieldWrapper } from '@ngx-formly/core';
export class WrapperFormField extends FieldWrapper {
    constructor() {
        super(...arguments);
        this.maxHelpBlockLength = 64;
    }
    ngOnInit() {
        this.showDescriptionAsPopup =
            this.field.type === 'radio' || this.field.type === 'typeahead' ||
                (this.to.description && this.to.description.length > this.maxHelpBlockLength);
    }
}
WrapperFormField.CONFIG = {
    wrappers: [{ name: 'c8y-form-field', component: WrapperFormField }]
};
WrapperFormField.decorators = [
    { type: Component, args: [{
                selector: 'c8y-wrapper-form-field',
                template: "<div class=\"form-group\" [class.has-error]=\"showError\">\n  <label *ngIf=\"to.label && to.hideLabel !== true\" [attr.for]=\"id\">\n    {{ to.label | humanize }} <i\n      *ngIf=\"to.tooltip\"\n      class=\"text-info\"\n      c8yIcon=\"info-circle\"\n      title=\"{{ to.tooltip | translate }}\"\n    ></i>\n    <button\n      *ngIf=\"to.description && showDescriptionAsPopup\"\n      class=\"btn-clean m-l-4 flex-item-middle\"\n      [popover]=\"to.description | translate\"\n      placement=\"auto\"\n      outsideClick=\"true\"\n      type=\"button\"\n    >\n      <i c8yIcon=\"question-circle-o\" class=\"text-info\"></i>\n    </button>\n  </label>\n\n  <ng-template #fieldComponent></ng-template>\n\n  <div *ngIf=\"showError\" class=\"c8y-messages\">\n    <formly-validation-message\n      class=\"form-control-feedback-message\"\n      [field]=\"field\"\n    ></formly-validation-message>\n  </div>\n\n  <div class=\"help-block\" *ngIf=\"!showError && to.description && !showDescriptionAsPopup\">\n    {{ to.description | translate }}\n  </div>\n</div>\n",
                changeDetection: ChangeDetectionStrategy.OnPush
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC53cmFwcGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2NvcmUvZHluYW1pYy1mb3Jtcy9mb3JtLWZpZWxkL2Zvcm0tZmllbGQud3JhcHBlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUMzRSxPQUFPLEVBQWdCLFlBQVksRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBTzlELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSxZQUFZO0lBTGxEOztRQVVFLHVCQUFrQixHQUFXLEVBQUUsQ0FBQztJQVFsQyxDQUFDO0lBTEMsUUFBUTtRQUNOLElBQUksQ0FBQyxzQkFBc0I7WUFDekIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssT0FBTyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLFdBQVc7Z0JBQzlELENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxXQUFXLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ2xGLENBQUM7O0FBWGUsdUJBQU0sR0FBaUI7SUFDckMsUUFBUSxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLENBQUM7Q0FDcEUsQ0FBQzs7WUFSSCxTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtnQkFDbEMsa2pDQUFrRDtnQkFDbEQsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07YUFDaEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbmZpZ09wdGlvbiwgRmllbGRXcmFwcGVyIH0gZnJvbSAnQG5neC1mb3JtbHkvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS13cmFwcGVyLWZvcm0tZmllbGQnLFxuICB0ZW1wbGF0ZVVybDogJy4vZm9ybS1maWVsZC53cmFwcGVyLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgV3JhcHBlckZvcm1GaWVsZCBleHRlbmRzIEZpZWxkV3JhcHBlciBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIHN0YXRpYyByZWFkb25seSBDT05GSUc6IENvbmZpZ09wdGlvbiA9IHtcbiAgICB3cmFwcGVyczogW3sgbmFtZTogJ2M4eS1mb3JtLWZpZWxkJywgY29tcG9uZW50OiBXcmFwcGVyRm9ybUZpZWxkIH1dXG4gIH07XG5cbiAgbWF4SGVscEJsb2NrTGVuZ3RoOiBudW1iZXIgPSA2NDtcbiAgc2hvd0Rlc2NyaXB0aW9uQXNQb3B1cDogYm9vbGVhbjtcblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNob3dEZXNjcmlwdGlvbkFzUG9wdXAgPVxuICAgICAgdGhpcy5maWVsZC50eXBlID09PSAncmFkaW8nIHx8IHRoaXMuZmllbGQudHlwZSA9PT0gJ3R5cGVhaGVhZCcgfHxcbiAgICAgICh0aGlzLnRvLmRlc2NyaXB0aW9uICYmIHRoaXMudG8uZGVzY3JpcHRpb24ubGVuZ3RoID4gdGhpcy5tYXhIZWxwQmxvY2tMZW5ndGgpO1xuICB9XG59XG4iXX0=