import { __awaiter } from "tslib";
import { Component, Output, EventEmitter, ViewChild } from '@angular/core';
import { UserService, FetchClient, Client } from '@c8y/client';
import { AppStateService } from '../common/ui-state.service';
import { AlertService } from '../alert/alert.service';
import { LoginService } from '../login/login.service';
import { clone } from 'lodash-es';
import { gettext } from '../i18n/gettext';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
import * as ɵngcc2 from '../common/ui-state.service';
import * as ɵngcc3 from '../alert/alert.service';
import * as ɵngcc4 from '../login/login.service';
import * as ɵngcc5 from '../modal/modal.component';
import * as ɵngcc6 from '@angular/forms';
import * as ɵngcc7 from '../forms/form-group.component';
import * as ɵngcc8 from '../i18n/c8y-translate.directive';
import * as ɵngcc9 from '../forms/required-input-placeholder.directive';
import * as ɵngcc10 from '../forms/messages.component';
import * as ɵngcc11 from '../forms/message.directive';
import * as ɵngcc12 from '../i18n/c8y-translate.pipe';

const _c0 = ["modal"];
export class PasswordConfirmModalComponent {
    constructor(user, ui, client, alert, loginService) {
        this.user = user;
        this.ui = ui;
        this.client = client;
        this.alert = alert;
        this.loginService = loginService;
        this.passwordConfirmedEmitter = new EventEmitter();
        this.loading = false;
    }
    passwordConfirm() {
        return __awaiter(this, void 0, void 0, function* () {
            if (this.password) {
                const supportUserName = this.ui.currentSupportUserName.value;
                const userId = this.ui.currentUser.value.id;
                const credentials = {
                    password: this.password,
                    user: `${supportUserName ? `${supportUserName}$` : ''}${userId}`,
                    tenant: this.client.tenant
                };
                try {
                    this.loading = true;
                    const strategy = clone(this.loginService.useBasicAuth({}));
                    delete credentials.tfa;
                    strategy.updateCredentials(credentials);
                    const newClient = this.createNewClient(strategy, this.client.baseUrl);
                    yield newClient.user.current();
                    this.emitSuccessAndClose();
                }
                catch (e) {
                    if (e.res && e.res.status === 401 && e.data && /pin|totp/i.test(e.data.message)) {
                        this.emitSuccessAndClose();
                    }
                    else {
                        this.alert.danger(gettext("Provided password doesn't match your current one."));
                    }
                }
                finally {
                    this.loading = false;
                }
            }
        });
    }
    cancel() {
        this.passwordConfirmedEmitter.emit(false);
        this.modal._dismiss();
    }
    createNewClient(strategy, baseUrl) {
        return new Client(strategy, baseUrl);
    }
    emitSuccessAndClose() {
        this.passwordConfirmedEmitter.emit(true);
        this.modal._dismiss();
    }
}
PasswordConfirmModalComponent.ɵfac = function PasswordConfirmModalComponent_Factory(t) { return new (t || PasswordConfirmModalComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UserService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.AppStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FetchClient), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.AlertService), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.LoginService)); };
PasswordConfirmModalComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: PasswordConfirmModalComponent, selectors: [["c8y-password-confirm-modal"]], viewQuery: function PasswordConfirmModalComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵviewQuery(_c0, 5);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.modal = _t.first);
    } }, outputs: { passwordConfirmedEmitter: "passwordConfirmedEmitter" }, decls: 21, vars: 16, consts: [[3, "customFooter", "title"], ["modal", ""], [3, "ngSubmit"], ["confirmForm", "ngForm"], [1, "d-block", "p-24", "p-b-0"], [3, "hasWarning"], ["translate", "", "for", "currentPassword"], ["id", "currentPassword", "type", "password", "name", "password", "required", "", 1, "form-control", 3, "ngModel", "placeholder", "ngModelChange"], ["translate", ""], [1, "modal-footer", "separator-top", "bg-white", "sticky-bottom"], ["type", "button", "translate", "", 1, "btn", "btn-default", 3, "title", "click"], ["type", "submit", "translate", "", 1, "btn", "btn-primary", 3, "title", "disabled"]], template: function PasswordConfirmModalComponent_Template(rf, ctx) { if (rf & 1) {
        const _r2 = ɵngcc0.ɵɵgetCurrentView();
        ɵngcc0.ɵɵelementStart(0, "c8y-modal", 0, 1);
        ɵngcc0.ɵɵpipe(2, "translate");
        ɵngcc0.ɵɵelementStart(3, "form", 2, 3);
        ɵngcc0.ɵɵlistener("ngSubmit", function PasswordConfirmModalComponent_Template_form_ngSubmit_3_listener() { ɵngcc0.ɵɵrestoreView(_r2); const _r1 = ɵngcc0.ɵɵreference(4); return _r1.form.valid && ctx.passwordConfirm(); });
        ɵngcc0.ɵɵelementStart(5, "div", 4);
        ɵngcc0.ɵɵelementStart(6, "c8y-form-group", 5);
        ɵngcc0.ɵɵelementStart(7, "label", 6);
        ɵngcc0.ɵɵtext(8, "Enter your password");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(9, "input", 7);
        ɵngcc0.ɵɵlistener("ngModelChange", function PasswordConfirmModalComponent_Template_input_ngModelChange_9_listener($event) { return ctx.password = $event; });
        ɵngcc0.ɵɵpipe(10, "translate");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(11, "c8y-messages");
        ɵngcc0.ɵɵelementStart(12, "c8y-message", 8);
        ɵngcc0.ɵɵtext(13, " Enter the password of the user that you are currently logged in with. ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(14, "div", 9);
        ɵngcc0.ɵɵelementStart(15, "button", 10);
        ɵngcc0.ɵɵlistener("click", function PasswordConfirmModalComponent_Template_button_click_15_listener() { return ctx.cancel(); });
        ɵngcc0.ɵɵpipe(16, "translate");
        ɵngcc0.ɵɵtext(17, " Cancel ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(18, "button", 11);
        ɵngcc0.ɵɵpipe(19, "translate");
        ɵngcc0.ɵɵtext(20, " Confirm ");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r1 = ɵngcc0.ɵɵreference(4);
        ɵngcc0.ɵɵproperty("customFooter", true)("title", ɵngcc0.ɵɵpipeBind1(2, 8, "Confirm your current password"));
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵproperty("hasWarning", true);
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("placeholder", ɵngcc0.ɵɵpipeBind1(10, 10, "Enter your password"));
        ɵngcc0.ɵɵproperty("ngModel", ctx.password);
        ɵngcc0.ɵɵadvance(6);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(16, 12, "Cancel"));
        ɵngcc0.ɵɵadvance(3);
        ɵngcc0.ɵɵpropertyInterpolate("title", ɵngcc0.ɵɵpipeBind1(19, 14, "Confirm"));
        ɵngcc0.ɵɵproperty("disabled", !_r1.form.valid || ctx.loading);
    } }, directives: [ɵngcc5.ModalComponent, ɵngcc6.ɵNgNoValidate, ɵngcc6.NgControlStatusGroup, ɵngcc6.NgForm, ɵngcc7.FormGroupComponent, ɵngcc8.C8yTranslateDirective, ɵngcc9.RequiredInputPlaceholderDirective, ɵngcc6.DefaultValueAccessor, ɵngcc6.RequiredValidator, ɵngcc6.NgControlStatus, ɵngcc6.NgModel, ɵngcc10.MessagesComponent, ɵngcc11.MessageDirective], pipes: [ɵngcc12.C8yTranslatePipe], encapsulation: 2 });
PasswordConfirmModalComponent.ctorParameters = () => [
    { type: UserService },
    { type: AppStateService },
    { type: FetchClient },
    { type: AlertService },
    { type: LoginService }
];
PasswordConfirmModalComponent.propDecorators = {
    passwordConfirmedEmitter: [{ type: Output }],
    modal: [{ type: ViewChild, args: ['modal', { static: false },] }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(PasswordConfirmModalComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-password-confirm-modal',
                template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Confirm your current password' | translate\" #modal>\r\n  <form #confirmForm=\"ngForm\" (ngSubmit)=\"confirmForm.form.valid && passwordConfirm()\">\r\n    <div class=\"d-block p-24 p-b-0\">\r\n      <c8y-form-group [hasWarning]=\"true\">\r\n        <label translate for=\"currentPassword\">Enter your password</label>\r\n        <input\r\n          id=\"currentPassword\"\r\n          [(ngModel)]=\"password\"\r\n          type=\"password\"\r\n          name=\"password\"\r\n          class=\"form-control\"\r\n          placeholder=\"{{ 'Enter your password' | translate }}\"\r\n          required\r\n        />\r\n        <c8y-messages>\r\n          <c8y-message translate>\r\n            Enter the password of the user that you are currently logged in with.\r\n          </c8y-message>\r\n        </c8y-messages>\r\n      </c8y-form-group>\r\n    </div>\r\n    <div class=\"modal-footer separator-top bg-white sticky-bottom\">\r\n      <button\r\n        title=\"{{ 'Cancel' | translate }}\"\r\n        class=\"btn btn-default\"\r\n        type=\"button\"\r\n        (click)=\"cancel()\"\r\n        translate\r\n      >\r\n        Cancel\r\n      </button>\r\n      <button\r\n        title=\"{{ 'Confirm' | translate }}\"\r\n        class=\"btn btn-primary\"\r\n        type=\"submit\"\r\n        [disabled]=\"!confirmForm.form.valid || loading\"\r\n        translate\r\n      >\r\n        Confirm\r\n      </button>\r\n    </div>\r\n  </form>\r\n</c8y-modal>\r\n"
            }]
    }], function () { return [{ type: ɵngcc1.UserService }, { type: ɵngcc2.AppStateService }, { type: ɵngcc1.FetchClient }, { type: ɵngcc3.AlertService }, { type: ɵngcc4.LoginService }]; }, { passwordConfirmedEmitter: [{
            type: Output
        }], modal: [{
            type: ViewChild,
            args: ['modal', { static: false }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvYXV0aGVudGljYXRpb24vcGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUFFLFdBQVcsRUFBZ0IsV0FBVyxFQUFFLE1BQU0sRUFBbUIsTUFBTSxhQUFhLENBQUM7QUFDOUYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUV0RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLEtBQUssRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNsQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0saUJBQWlCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7QUFNMUMsTUFBTSxPQUFPLDZCQUE2QjtBQUMxQyxJQU1FLFlBQ1MsSUFBaUIsRUFDakIsRUFBbUIsRUFDbEIsTUFBbUIsRUFDbkIsS0FBbUIsRUFDbkIsWUFBMEI7QUFDbkMsUUFMUSxTQUFJLEdBQUosSUFBSSxDQUFhO0FBQUMsUUFDbEIsT0FBRSxHQUFGLEVBQUUsQ0FBaUI7QUFBQyxRQUNuQixXQUFNLEdBQU4sTUFBTSxDQUFhO0FBQUMsUUFDcEIsVUFBSyxHQUFMLEtBQUssQ0FBYztBQUFDLFFBQ3BCLGlCQUFZLEdBQVosWUFBWSxDQUFjO0FBQ3RDLFFBWlksNkJBQXdCLEdBQUcsSUFBSSxZQUFZLEVBQVcsQ0FBQztBQUNuRSxRQUFFLFlBQU8sR0FBRyxLQUFLLENBQUM7QUFDbEIsSUFVSyxDQUFDO0FBQ04sSUFDUSxlQUFlO0FBQ3ZCO0FBQ3FDLFlBRGpDLElB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RFEsV0FBVztBQUFJLFlBRTFDLFlBQVk7QUFBSSxZQUVoQixZQUFZO0FBQUc7QUFBRztBQUNOLHVDQVFsQixNQUFNO0FBQUssb0JBSVgsU0FBUyxTQUFDLE9BQU8sRUFBRSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUU7QUFBTTs7Ozs7Ozs7Ozs7O29CQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXJTZXJ2aWNlLCBJQ3JlZGVudGlhbHMsIEZldGNoQ2xpZW50LCBDbGllbnQsIElBdXRoZW50aWNhdGlvbiB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFwcFN0YXRlU2VydmljZSB9IGZyb20gJy4uL2NvbW1vbi91aS1zdGF0ZS5zZXJ2aWNlJztcbmltcG9ydCB7IEFsZXJ0U2VydmljZSB9IGZyb20gJy4uL2FsZXJ0L2FsZXJ0LnNlcnZpY2UnO1xuaW1wb3J0IHsgTW9kYWxDb21wb25lbnQgfSBmcm9tICcuLi9tb2RhbC9tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi4vbG9naW4vbG9naW4uc2VydmljZSc7XG5pbXBvcnQgeyBjbG9uZSB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bi9nZXR0ZXh0JztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXBhc3N3b3JkLWNvbmZpcm0tbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vcGFzc3dvcmQtY29uZmlybS1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnQge1xuICBAT3V0cHV0KCkgcGFzc3dvcmRDb25maXJtZWRFbWl0dGVyID0gbmV3IEV2ZW50RW1pdHRlcjxib29sZWFuPigpO1xuICBsb2FkaW5nID0gZmFsc2U7XG4gIHBhc3N3b3JkOiBzdHJpbmc7XG5cbiAgQFZpZXdDaGlsZCgnbW9kYWwnLCB7IHN0YXRpYzogZmFsc2UgfSkgcHJpdmF0ZSBtb2RhbDogTW9kYWxDb21wb25lbnQ7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHVzZXI6IFVzZXJTZXJ2aWNlLFxuICAgIHB1YmxpYyB1aTogQXBwU3RhdGVTZXJ2aWNlLFxuICAgIHByaXZhdGUgY2xpZW50OiBGZXRjaENsaWVudCxcbiAgICBwcml2YXRlIGFsZXJ0OiBBbGVydFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZVxuICApIHt9XG5cbiAgYXN5bmMgcGFzc3dvcmRDb25maXJtKCkge1xuICAgIGlmICh0aGlzLnBhc3N3b3JkKSB7XG4gICAgICBjb25zdCBzdXBwb3J0VXNlck5hbWUgPSB0aGlzLnVpLmN1cnJlbnRTdXBwb3J0VXNlck5hbWUudmFsdWU7XG4gICAgICBjb25zdCB1c2VySWQgPSB0aGlzLnVpLmN1cnJlbnRVc2VyLnZhbHVlLmlkO1xuICAgICAgY29uc3QgY3JlZGVudGlhbHM6IElDcmVkZW50aWFscyA9IHtcbiAgICAgICAgcGFzc3dvcmQ6IHRoaXMucGFzc3dvcmQsXG4gICAgICAgIHVzZXI6IGAke3N1cHBvcnRVc2VyTmFtZSA/IGAke3N1cHBvcnRVc2VyTmFtZX0kYCA6ICcnfSR7dXNlcklkfWAsXG4gICAgICAgIHRlbmFudDogdGhpcy5jbGllbnQudGVuYW50XG4gICAgICB9O1xuICAgICAgdHJ5IHtcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgICAgY29uc3Qgc3RyYXRlZ3kgPSBjbG9uZSh0aGlzLmxvZ2luU2VydmljZS51c2VCYXNpY0F1dGgoe30pKTtcbiAgICAgICAgZGVsZXRlIGNyZWRlbnRpYWxzLnRmYTtcbiAgICAgICAgc3RyYXRlZ3kudXBkYXRlQ3JlZGVudGlhbHMoY3JlZGVudGlhbHMpO1xuICAgICAgICBjb25zdCBuZXdDbGllbnQgPSB0aGlzLmNyZWF0ZU5ld0NsaWVudChzdHJhdGVneSwgdGhpcy5jbGllbnQuYmFzZVVybCk7XG4gICAgICAgIGF3YWl0IG5ld0NsaWVudC51c2VyLmN1cnJlbnQoKTtcbiAgICAgICAgdGhpcy5lbWl0U3VjY2Vzc0FuZENsb3NlKCk7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChlLnJlcyAmJiBlLnJlcy5zdGF0dXMgPT09IDQwMSAmJiBlLmRhdGEgJiYgL3Bpbnx0b3RwL2kudGVzdChlLmRhdGEubWVzc2FnZSkpIHtcbiAgICAgICAgICB0aGlzLmVtaXRTdWNjZXNzQW5kQ2xvc2UoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGlzLmFsZXJ0LmRhbmdlcihnZXR0ZXh0KFwiUHJvdmlkZWQgcGFzc3dvcmQgZG9lc24ndCBtYXRjaCB5b3VyIGN1cnJlbnQgb25lLlwiKSk7XG4gICAgICAgIH1cbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIGNhbmNlbCgpIHtcbiAgICB0aGlzLnBhc3N3b3JkQ29uZmlybWVkRW1pdHRlci5lbWl0KGZhbHNlKTtcbiAgICB0aGlzLm1vZGFsLl9kaXNtaXNzKCk7XG4gIH1cblxuICBjcmVhdGVOZXdDbGllbnQoc3RyYXRlZ3k6IElBdXRoZW50aWNhdGlvbiwgYmFzZVVybDogc3RyaW5nKSB7XG4gICAgcmV0dXJuIG5ldyBDbGllbnQoc3RyYXRlZ3ksIGJhc2VVcmwpO1xuICB9XG5cbiAgcHJpdmF0ZSBlbWl0U3VjY2Vzc0FuZENsb3NlKCkge1xuICAgIHRoaXMucGFzc3dvcmRDb25maXJtZWRFbWl0dGVyLmVtaXQodHJ1ZSk7XG4gICAgdGhpcy5tb2RhbC5fZGlzbWlzcygpO1xuICB9XG59XG4iXX0=