import { NgModule } from '@angular/core';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { CommonModule } from '../common/common.module';
import { PasswordCheckListComponent } from './password-check-list.component';
import { PasswordConfirm } from './password-confirm.directive';
import { PasswordStrengthCheckerService } from './password-strength-checker.service';
import { PasswordStrengthComponent } from './password-strength.component';
import { NewPasswordComponent } from './new-password.component';
import { PasswordConfirmModalComponent } from './password-confirm-modal.component';
import { ModalModule } from '../modal/modal.module';
import { FormsModule } from '../forms/forms.module';
import { TotpChallengeComponent } from './totp-challenge.component';
import { SmsChallengeComponent } from './sms-challenge.component';
import { TotpSetupComponent } from './totp-setup.component';
import { PasswordService } from './password.service';
import { QRCodeModule } from 'angularx-qrcode';
import { ProvidePhoneNumberComponent } from './provide-phone-number.component';
import { CurrentPasswordModalComponent } from './current-password-modal.component';
/**
 * The angular module definition for new password.
 * @exports PasswordStrengthComponent
 * @exports PasswordCheckListComponent
 * @exports PasswordConfirm
 * @exports NewPasswordComponent
 * @exports PasswordConfirmModalComponent
 */
export class AuthenticationModule {
}
AuthenticationModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    TotpChallengeComponent,
                    PasswordConfirm,
                    PasswordStrengthComponent,
                    PasswordCheckListComponent,
                    NewPasswordComponent,
                    PasswordConfirmModalComponent,
                    CurrentPasswordModalComponent,
                    SmsChallengeComponent,
                    TotpSetupComponent,
                    ProvidePhoneNumberComponent
                ],
                imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule],
                exports: [
                    TotpChallengeComponent,
                    PasswordStrengthComponent,
                    PasswordCheckListComponent,
                    PasswordConfirm,
                    NewPasswordComponent,
                    PasswordConfirmModalComponent,
                    CurrentPasswordModalComponent,
                    SmsChallengeComponent,
                    TotpSetupComponent,
                    ProvidePhoneNumberComponent
                ],
                entryComponents: [PasswordConfirmModalComponent],
                providers: [PasswordStrengthCheckerService, PasswordService]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0aGVudGljYXRpb24ubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS9hdXRoZW50aWNhdGlvbi9hdXRoZW50aWNhdGlvbi5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLGlDQUFpQyxDQUFDO0FBQzdFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNyRixPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMxRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNoRSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUNuRixPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDcEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3BELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzVELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFDL0UsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFbkY7Ozs7Ozs7R0FPRztBQThCSCxNQUFNLE9BQU8sb0JBQW9COzs7WUE3QmhDLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osc0JBQXNCO29CQUN0QixlQUFlO29CQUNmLHlCQUF5QjtvQkFDekIsMEJBQTBCO29CQUMxQixvQkFBb0I7b0JBQ3BCLDZCQUE2QjtvQkFDN0IsNkJBQTZCO29CQUM3QixxQkFBcUI7b0JBQ3JCLGtCQUFrQjtvQkFDbEIsMkJBQTJCO2lCQUM1QjtnQkFDRCxPQUFPLEVBQUUsQ0FBQyxXQUFXLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxXQUFXLEVBQUUsWUFBWSxDQUFDO2dCQUM5RSxPQUFPLEVBQUU7b0JBQ1Asc0JBQXNCO29CQUN0Qix5QkFBeUI7b0JBQ3pCLDBCQUEwQjtvQkFDMUIsZUFBZTtvQkFDZixvQkFBb0I7b0JBQ3BCLDZCQUE2QjtvQkFDN0IsNkJBQTZCO29CQUM3QixxQkFBcUI7b0JBQ3JCLGtCQUFrQjtvQkFDbEIsMkJBQTJCO2lCQUM1QjtnQkFDRCxlQUFlLEVBQUUsQ0FBQyw2QkFBNkIsQ0FBQztnQkFDaEQsU0FBUyxFQUFFLENBQUMsOEJBQThCLEVBQUUsZUFBZSxDQUFDO2FBQzdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFRvb2x0aXBNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3Rvb2x0aXAnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQgfSBmcm9tICcuL3Bhc3N3b3JkLWNoZWNrLWxpc3QuY29tcG9uZW50JztcbmltcG9ydCB7IFBhc3N3b3JkQ29uZmlybSB9IGZyb20gJy4vcGFzc3dvcmQtY29uZmlybS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENoZWNrZXJTZXJ2aWNlIH0gZnJvbSAnLi9wYXNzd29yZC1zdHJlbmd0aC1jaGVja2VyLnNlcnZpY2UnO1xuaW1wb3J0IHsgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudCB9IGZyb20gJy4vcGFzc3dvcmQtc3RyZW5ndGguY29tcG9uZW50JztcbmltcG9ydCB7IE5ld1Bhc3N3b3JkQ29tcG9uZW50IH0gZnJvbSAnLi9uZXctcGFzc3dvcmQuY29tcG9uZW50JztcbmltcG9ydCB7IFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50IH0gZnJvbSAnLi9wYXNzd29yZC1jb25maXJtLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBNb2RhbE1vZHVsZSB9IGZyb20gJy4uL21vZGFsL21vZGFsLm1vZHVsZSc7XG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJy4uL2Zvcm1zL2Zvcm1zLm1vZHVsZSc7XG5pbXBvcnQgeyBUb3RwQ2hhbGxlbmdlQ29tcG9uZW50IH0gZnJvbSAnLi90b3RwLWNoYWxsZW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgU21zQ2hhbGxlbmdlQ29tcG9uZW50IH0gZnJvbSAnLi9zbXMtY2hhbGxlbmdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUb3RwU2V0dXBDb21wb25lbnQgfSBmcm9tICcuL3RvdHAtc2V0dXAuY29tcG9uZW50JztcbmltcG9ydCB7IFBhc3N3b3JkU2VydmljZSB9IGZyb20gJy4vcGFzc3dvcmQuc2VydmljZSc7XG5pbXBvcnQgeyBRUkNvZGVNb2R1bGUgfSBmcm9tICdhbmd1bGFyeC1xcmNvZGUnO1xuaW1wb3J0IHsgUHJvdmlkZVBob25lTnVtYmVyQ29tcG9uZW50IH0gZnJvbSAnLi9wcm92aWRlLXBob25lLW51bWJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ3VycmVudFBhc3N3b3JkTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL2N1cnJlbnQtcGFzc3dvcmQtbW9kYWwuY29tcG9uZW50JztcblxuLyoqXG4gKiBUaGUgYW5ndWxhciBtb2R1bGUgZGVmaW5pdGlvbiBmb3IgbmV3IHBhc3N3b3JkLlxuICogQGV4cG9ydHMgUGFzc3dvcmRTdHJlbmd0aENvbXBvbmVudFxuICogQGV4cG9ydHMgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnRcbiAqIEBleHBvcnRzIFBhc3N3b3JkQ29uZmlybVxuICogQGV4cG9ydHMgTmV3UGFzc3dvcmRDb21wb25lbnRcbiAqIEBleHBvcnRzIFBhc3N3b3JkQ29uZmlybU1vZGFsQ29tcG9uZW50XG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFRvdHBDaGFsbGVuZ2VDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDb25maXJtLFxuICAgIFBhc3N3b3JkU3RyZW5ndGhDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDaGVja0xpc3RDb21wb25lbnQsXG4gICAgTmV3UGFzc3dvcmRDb21wb25lbnQsXG4gICAgUGFzc3dvcmRDb25maXJtTW9kYWxDb21wb25lbnQsXG4gICAgQ3VycmVudFBhc3N3b3JkTW9kYWxDb21wb25lbnQsXG4gICAgU21zQ2hhbGxlbmdlQ29tcG9uZW50LFxuICAgIFRvdHBTZXR1cENvbXBvbmVudCxcbiAgICBQcm92aWRlUGhvbmVOdW1iZXJDb21wb25lbnRcbiAgXSxcbiAgaW1wb3J0czogW0Zvcm1zTW9kdWxlLCBUb29sdGlwTW9kdWxlLCBDb21tb25Nb2R1bGUsIE1vZGFsTW9kdWxlLCBRUkNvZGVNb2R1bGVdLFxuICBleHBvcnRzOiBbXG4gICAgVG90cENoYWxsZW5nZUNvbXBvbmVudCxcbiAgICBQYXNzd29yZFN0cmVuZ3RoQ29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ2hlY2tMaXN0Q29tcG9uZW50LFxuICAgIFBhc3N3b3JkQ29uZmlybSxcbiAgICBOZXdQYXNzd29yZENvbXBvbmVudCxcbiAgICBQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudCxcbiAgICBDdXJyZW50UGFzc3dvcmRNb2RhbENvbXBvbmVudCxcbiAgICBTbXNDaGFsbGVuZ2VDb21wb25lbnQsXG4gICAgVG90cFNldHVwQ29tcG9uZW50LFxuICAgIFByb3ZpZGVQaG9uZU51bWJlckNvbXBvbmVudFxuICBdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtQYXNzd29yZENvbmZpcm1Nb2RhbENvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1Bhc3N3b3JkU3RyZW5ndGhDaGVja2VyU2VydmljZSwgUGFzc3dvcmRTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBBdXRoZW50aWNhdGlvbk1vZHVsZSB7fVxuIl19