import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { UserService } from '@c8y/client';
import { Status } from '../common/status.model';
import { gettext } from '../i18n/gettext';
import { ModalService } from '../modal/modal.service';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { LoginService } from '../login/login.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@c8y/client';
import * as ɵngcc2 from '../modal/modal.service';
import * as ɵngcc3 from 'ngx-bootstrap/modal';
import * as ɵngcc4 from '../login/login.service';
import * as ɵngcc5 from '../modal/modal.component';
import * as ɵngcc6 from '../authentication/totp-setup.component';
import * as ɵngcc7 from '../authentication/totp-challenge.component';
import * as ɵngcc8 from '../i18n/c8y-translate.pipe';
export class UserTotpSetupComponent {
    constructor(user, modalService, modal, loginService) {
        this.user = user;
        this.modalService = modalService;
        this.modal = modal;
        this.loginService = loginService;
    }
    totpSetupVerified(token) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.user.activateTotp();
            this.modal.hide();
            try {
                yield this.modalService.acknowledge(gettext('Logout required'), gettext('You must log out in order to apply your changes'), Status.WARNING, gettext('Log out'));
                yield this.loginService.logout();
            }
            catch (ex) {
                // intended empty
            }
        });
    }
    close() {
        this.modal.hide();
    }
}
UserTotpSetupComponent.ɵfac = function UserTotpSetupComponent_Factory(t) { return new (t || UserTotpSetupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UserService), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ModalService), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.BsModalRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.LoginService)); };
UserTotpSetupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: UserTotpSetupComponent, selectors: [["c8y-user-totp-setup"]], decls: 4, vars: 4, consts: [[3, "customFooter", "title"], [3, "onSuccess", "totpUnconfirmedEmitter"]], template: function UserTotpSetupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "c8y-modal", 0);
        ɵngcc0.ɵɵpipe(1, "translate");
        ɵngcc0.ɵɵelement(2, "c8y-totp-setup");
        ɵngcc0.ɵɵelementStart(3, "c8y-totp-challenge", 1);
        ɵngcc0.ɵɵlistener("onSuccess", function UserTotpSetupComponent_Template_c8y_totp_challenge_onSuccess_3_listener($event) { return ctx.totpSetupVerified($event); })("totpUnconfirmedEmitter", function UserTotpSetupComponent_Template_c8y_totp_challenge_totpUnconfirmedEmitter_3_listener() { return ctx.close(); });
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("customFooter", true)("title", ɵngcc0.ɵɵpipeBind1(1, 2, "Set up two-factor authentication"));
    } }, directives: [ɵngcc5.ModalComponent, ɵngcc6.TotpSetupComponent, ɵngcc7.TotpChallengeComponent], pipes: [ɵngcc8.C8yTranslatePipe], encapsulation: 2 });
UserTotpSetupComponent.ctorParameters = () => [
    { type: UserService },
    { type: ModalService },
    { type: BsModalRef },
    { type: LoginService }
];
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(UserTotpSetupComponent, [{
        type: Component,
        args: [{
                selector: 'c8y-user-totp-setup',
                template: "<c8y-modal [customFooter]=\"true\" [title]=\"'Set up two-factor authentication' | translate\">\n  <c8y-totp-setup></c8y-totp-setup>\n  <c8y-totp-challenge (onSuccess)=\"totpSetupVerified($event)\" (totpUnconfirmedEmitter)=\"close()\"></c8y-totp-challenge>\n</c8y-modal>\n"
            }]
    }], function () { return [{ type: ɵngcc1.UserService }, { type: ɵngcc2.ModalService }, { type: ɵngcc3.BsModalRef }, { type: ɵngcc4.LoginService }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci10b3RwLXNldHVwLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vY29yZS91c2VyL3VzZXItdG90cC1zZXR1cC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMxQyxPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDaEQsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzFDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDOzs7Ozs7Ozs7O0FBTXRELE1BQU0sT0FBTyxzQkFBc0I7QUFDbkMsSUFBRSxZQUNVLElBQWlCLEVBQ2pCLFlBQTBCLEVBQzFCLEtBQWlCLEVBQ2pCLFlBQTBCO0FBQUksUUFIOUIsU0FBSSxHQUFKLElBQUksQ0FBYTtBQUFDLFFBQ2xCLGlCQUFZLEdBQVosWUFBWSxDQUFjO0FBQUMsUUFDM0IsVUFBSyxHQUFMLEtBQUssQ0FBWTtBQUFDLFFBQ2xCLGlCQUFZLEdBQVosWUFBWSxDQUFjO0FBQUMsSUFBRyxDQUFDO0FBQzNDLElBQ1EsaUJBQWlCLENBQUMsS0FBSztBQUMvQjtBQUVHLFlBRkMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO0FBQ25DLFlBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN0QixZQUFJLElBQUk7QUFDUixnQkFBTSxNQUFNLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUNqQyxPQUFPLENBQUMsaUJBQWlCLENBQUMsRUFDMUIsT0FBTyxDQUFDLGlEQUFpRCxDQUFDLEVBQzFELE1BQU0sQ0FBQyxPQUFPLEVBQ2QsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUNuQixDQUFDO0FBQ1IsZ0JBQU0sTUFBTSxJQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sRUFBRSxDQUFDO0FBQ3ZDLGFBQUs7QUFBQyxZQUFBLE9BQU8sRUFBRSxFQUFFO0FBQ2pCLGdCQUFNLGlCQUFpQjtBQUN2QixhQUFLO0FBQ0wsUUFBRSxDQUFDO0FBRUYsS0FGRTtBQUNILElBQ0UsS0FBSztBQUNQLFFBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsQ0FBQztBQUN0QixJQUFFLENBQUM7QUFDSDtrREE5QkMsU0FBUyxTQUFDLGtCQUNULFFBQVEsRUFBRSxxQkFBcUIsa0JBQy9CO2lIQUErQyxjQUNoRDs7Ozs7Ozs7Ozs4SkFDSTtBQUFDO0FBRUwsWUFiUSxXQUFXO0FBQUksWUFHZixZQUFZO0FBQUksWUFDaEIsVUFBVTtBQUFJLFlBQ2QsWUFBWTtBQUFHOzs7Ozs7O3VLQUFFO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFVzZXJTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgU3RhdHVzIH0gZnJvbSAnLi4vY29tbW9uL3N0YXR1cy5tb2RlbCc7XG5pbXBvcnQgeyBnZXR0ZXh0IH0gZnJvbSAnLi4vaTE4bi9nZXR0ZXh0JztcbmltcG9ydCB7IE1vZGFsU2VydmljZSB9IGZyb20gJy4uL21vZGFsL21vZGFsLnNlcnZpY2UnO1xuaW1wb3J0IHsgQnNNb2RhbFJlZiB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgTG9naW5TZXJ2aWNlIH0gZnJvbSAnLi4vbG9naW4vbG9naW4uc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS11c2VyLXRvdHAtc2V0dXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vdXNlci10b3RwLXNldHVwLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBVc2VyVG90cFNldHVwQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSB1c2VyOiBVc2VyU2VydmljZSxcbiAgICBwcml2YXRlIG1vZGFsU2VydmljZTogTW9kYWxTZXJ2aWNlLFxuICAgIHByaXZhdGUgbW9kYWw6IEJzTW9kYWxSZWYsXG4gICAgcHJpdmF0ZSBsb2dpblNlcnZpY2U6IExvZ2luU2VydmljZSkgeyB9XG5cbiAgYXN5bmMgdG90cFNldHVwVmVyaWZpZWQodG9rZW4pIHtcbiAgICBhd2FpdCB0aGlzLnVzZXIuYWN0aXZhdGVUb3RwKCk7XG4gICAgdGhpcy5tb2RhbC5oaWRlKCk7XG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMubW9kYWxTZXJ2aWNlLmFja25vd2xlZGdlKFxuICAgICAgICBnZXR0ZXh0KCdMb2dvdXQgcmVxdWlyZWQnKSxcbiAgICAgICAgZ2V0dGV4dCgnWW91IG11c3QgbG9nIG91dCBpbiBvcmRlciB0byBhcHBseSB5b3VyIGNoYW5nZXMnKSxcbiAgICAgICAgU3RhdHVzLldBUk5JTkcsXG4gICAgICAgIGdldHRleHQoJ0xvZyBvdXQnKVxuICAgICAgKTtcbiAgICAgIGF3YWl0IHRoaXMubG9naW5TZXJ2aWNlLmxvZ291dCgpO1xuICAgIH0gY2F0Y2ggKGV4KSB7XG4gICAgICAvLyBpbnRlbmRlZCBlbXB0eVxuICAgIH1cbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMubW9kYWwuaGlkZSgpO1xuICB9XG59XG4iXX0=