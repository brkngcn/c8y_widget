import { NgModule } from '@angular/core';
import { CdkStepperModule, CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';
import { C8yStepper } from './stepper.component';
import { CommonModule } from '../common/common.module';
import { C8yStepperIcon } from './stepper-icon.directive';
import { C8yStepperProgress } from './stepper-progress.component';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { C8yStepperButtons } from './stepper-buttons.component';
import { StepperService } from './stepper.service';
import { StepperOutletComponent } from './stepper-outlet.component';
import { FormsModule } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';
const ɵ0 = { displayDefaultIndicatorType: false };
/**
 * The angular module definition for c8y-stepper (Wizard).
 * @exports C8yStepper
 * @exports C8yStepperIcon
 * @exports C8yStepperButtons
 * @exports CdkStep
 */
export class StepperModule {
}
StepperModule.ɵfac = function StepperModule_Factory(t) { return new (t || StepperModule)(); };
StepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: StepperModule });
StepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [
        StepperService,
        {
            /**
             * This enables additional states, like: edit, done and error
             * These states are used to display custom icons, if needed.
             * Any change in here will most probably result in not showing custom icons anymore
             */
            provide: STEPPER_GLOBAL_OPTIONS,
            useValue: ɵ0
        }
    ], imports: [[CommonModule, CdkStepperModule, TooltipModule, FormsModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(StepperModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, CdkStepperModule, TooltipModule, FormsModule],
                declarations: [
                    C8yStepper,
                    C8yStepperIcon,
                    C8yStepperProgress,
                    C8yStepperButtons,
                    StepperOutletComponent
                ],
                exports: [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons, StepperOutletComponent],
                providers: [
                    StepperService,
                    {
                        /**
                         * This enables additional states, like: edit, done and error
                         * These states are used to display custom icons, if needed.
                         * Any change in here will most probably result in not showing custom icons anymore
                         */
                        provide: STEPPER_GLOBAL_OPTIONS,
                        useValue: ɵ0
                    }
                ]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StepperModule, { declarations: function () { return [C8yStepper,
        C8yStepperIcon,
        C8yStepperProgress,
        C8yStepperButtons,
        StepperOutletComponent]; }, imports: function () { return [CommonModule, CdkStepperModule, TooltipModule, FormsModule]; }, exports: function () { return [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons, StepperOutletComponent]; } }); })();
export { ɵ0 };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2NvcmUvc3RlcHBlci9zdGVwcGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN6RixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDdEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDaEUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDRCQUE0QixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFDN0MsV0EyQmdCLEVBQUUsMkJBQTJCLEVBQUUsS0FBSyxFQUFFO0FBMUJ0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBd0JILE1BQU0sT0FBTyxhQUFhO0FBQUc7eUNBdkI1QixRQUFRLFNBQUMsa0JBQ1IsT0FBTyxFQUFFLENBQUM7R0FBWSxFQUFFLGdCQUFnQixFQUFFLGFBQWEsRUFBRSxXQUFXLENBQUMsa0JBQ3JFLFlBQVksRUFBRTttQkFDWixVQUFVLHNCQUNWLGNBQWM7YUFDZDtPQUFrQjs7R0FDbEIsaUJBQWlCLHNCQUNqQixzQkFBc0I7UUFDdkIsa0JBQ0QsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLE9BQU8sRUFBRSxjQUFjO0FBQUUsaUJBQWlCLEVBQUUsc0JBQXNCLENBQUMsa0JBQ3pGLFNBQVMsRUFBRSxzQkFDVDtXQUFjO2lCQUNkLDBCQUNFOzs7Ozs7O3dDQUlHLHlCQUNILE9BQU8sRUFBRTtTQUFzQjtHQUMvQixRQUFRLElBQXdDO0tBQ2pELGtCQUNGO0NBQ0Y7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzhQQUNJO0FBQUM7QUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDZGtTdGVwcGVyTW9kdWxlLCBDZGtTdGVwLCBTVEVQUEVSX0dMT0JBTF9PUFRJT05TIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3N0ZXBwZXInO1xuaW1wb3J0IHsgQzh5U3RlcHBlciB9IGZyb20gJy4vc3RlcHBlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgQzh5U3RlcHBlckljb24gfSBmcm9tICcuL3N0ZXBwZXItaWNvbi5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgQzh5U3RlcHBlclByb2dyZXNzIH0gZnJvbSAnLi9zdGVwcGVyLXByb2dyZXNzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBUb29sdGlwTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC90b29sdGlwJztcbmltcG9ydCB7IEM4eVN0ZXBwZXJCdXR0b25zIH0gZnJvbSAnLi9zdGVwcGVyLWJ1dHRvbnMuY29tcG9uZW50JztcbmltcG9ydCB7IFN0ZXBwZXJTZXJ2aWNlIH0gZnJvbSAnLi9zdGVwcGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgU3RlcHBlck91dGxldENvbXBvbmVudCB9IGZyb20gJy4vc3RlcHBlci1vdXRsZXQuY29tcG9uZW50JztcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuXG4vKipcbiAqIFRoZSBhbmd1bGFyIG1vZHVsZSBkZWZpbml0aW9uIGZvciBjOHktc3RlcHBlciAoV2l6YXJkKS5cbiAqIEBleHBvcnRzIEM4eVN0ZXBwZXJcbiAqIEBleHBvcnRzIEM4eVN0ZXBwZXJJY29uXG4gKiBAZXhwb3J0cyBDOHlTdGVwcGVyQnV0dG9uc1xuICogQGV4cG9ydHMgQ2RrU3RlcFxuICovXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlLCBDZGtTdGVwcGVyTW9kdWxlLCBUb29sdGlwTW9kdWxlLCBGb3Jtc01vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEM4eVN0ZXBwZXIsXG4gICAgQzh5U3RlcHBlckljb24sXG4gICAgQzh5U3RlcHBlclByb2dyZXNzLFxuICAgIEM4eVN0ZXBwZXJCdXR0b25zLFxuICAgIFN0ZXBwZXJPdXRsZXRDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW0M4eVN0ZXBwZXIsIENka1N0ZXAsIEM4eVN0ZXBwZXJJY29uLCBDOHlTdGVwcGVyQnV0dG9ucywgU3RlcHBlck91dGxldENvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIFN0ZXBwZXJTZXJ2aWNlLFxuICAgIHtcbiAgICAgIC8qKlxuICAgICAgICogVGhpcyBlbmFibGVzIGFkZGl0aW9uYWwgc3RhdGVzLCBsaWtlOiBlZGl0LCBkb25lIGFuZCBlcnJvclxuICAgICAgICogVGhlc2Ugc3RhdGVzIGFyZSB1c2VkIHRvIGRpc3BsYXkgY3VzdG9tIGljb25zLCBpZiBuZWVkZWQuXG4gICAgICAgKiBBbnkgY2hhbmdlIGluIGhlcmUgd2lsbCBtb3N0IHByb2JhYmx5IHJlc3VsdCBpbiBub3Qgc2hvd2luZyBjdXN0b20gaWNvbnMgYW55bW9yZVxuICAgICAgICovXG4gICAgICBwcm92aWRlOiBTVEVQUEVSX0dMT0JBTF9PUFRJT05TLFxuICAgICAgdXNlVmFsdWU6IHsgZGlzcGxheURlZmF1bHRJbmRpY2F0b3JUeXBlOiBmYWxzZSB9XG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJNb2R1bGUge31cbiJdfQ==