{"version":3,"file":"kpi-widget-view.component.d.ts","sources":["kpi-widget-view.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { MeasurementRealtimeService } from '@c8y/ngx-components';\nimport { DatapointLibraryService, KPIDetails } from '@c8y/ngx-components/datapoint-selector';\nimport { Observable } from 'rxjs';\nimport { ContextDashboardComponent } from '@c8y/ngx-components/context-dashboard';\nimport { KpiWidgetConfig } from '../kpi-widget.model';\ninterface MeasurementValue {\n    unit?: string;\n    value: number;\n    date: string;\n}\ndeclare enum ColorClass {\n    danger = \"text-danger\",\n    warning = \"text-warning\",\n    unknown = \"\"\n}\nexport declare class KpiWidgetViewComponent implements OnInit {\n    private measurementRealtime;\n    private datapointLib;\n    private dashboard;\n    config: KpiWidgetConfig;\n    state$: Observable<{\n        latestMeasurement: MeasurementValue;\n        previousValue: MeasurementValue;\n        trend: string;\n        unit: string;\n        colorClass: ColorClass;\n    }>;\n    noDataInitiallyInDB: boolean;\n    constructor(measurementRealtime: MeasurementRealtimeService, datapointLib: DatapointLibraryService, dashboard: ContextDashboardComponent);\n    ngOnInit(): Promise<void>;\n    setupObservable(datapoint: KPIDetails): Observable<{\n        latestMeasurement: MeasurementValue;\n        previousValue: any;\n        trend: string;\n        unit: string;\n        colorClass: ColorClass;\n    }>;\n    private getLatestMeasurement$;\n    private getDatapointLibraryEntry$;\n    private getColorClass$;\n    private getLastTwoValuesOfObservable$;\n    private getTrendOfLatestMeasurements$;\n    private inRangeOf;\n    private assignContextFromContextDashboard;\n}\nexport {};\n"]}