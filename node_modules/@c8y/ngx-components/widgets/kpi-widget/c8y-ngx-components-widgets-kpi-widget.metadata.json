{"__symbolic":"module","version":4,"metadata":{"KpiWidgetModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":23,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":24,"character":12},{"__symbolic":"reference","module":"@c8y/ngx-components/datapoint-selector","name":"DatapointSelectorModule","line":24,"character":24},{"__symbolic":"reference","module":"@c8y/ngx-components/icon-selector","name":"IconSelectorModule","line":24,"character":49},{"__symbolic":"reference","module":"ngx-bootstrap/popover","name":"PopoverModule","line":24,"character":69}],"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵb"}],"providers":[{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"HOOK_COMPONENTS","line":28,"character":15},"useValue":[{"id":"kpi.widget","label":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":32,"character":17},"arguments":["KPI Widget"]},"description":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":33,"character":23},"arguments":["Displays the last measurement value of a device."]},"component":{"__symbolic":"reference","name":"ɵa"},"configComponent":{"__symbolic":"reference","name":"ɵb"},"previewImage":"","data":{"settings":{"noNewWidgets":false,"widgetDefaults":{"_width":2,"_height":2},"ng1":{"options":{"noDeviceTarget":true,"groupsSelectable":false}}}}}],"multi":true}]}]}],"members":{}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":20,"character":1},"arguments":[{"selector":"c8y-kpi-widget-view","providers":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"MeasurementRealtimeService","line":23,"character":14}],"template":"<div\n  class=\"kpi-widget__container d-flex d-col fit-h fit-w a-i-center j-c-center\"\n  *ngIf=\"state$ | async as lastState; else noMeasurementFound\"\n>\n  <div class=\"d-flex a-i-center j-c-center fit-w\">\n    <div\n      class=\"m-r-16 flex-no-shrink text-muted\"\n      [ngClass]=\"lastState.colorClass\"\n      *ngIf=\"config.icon && config.showIcon\"\n    >\n      <i class=\"icon-32\" [c8yIcon]=\"config.icon\"></i>\n    </div>\n    <div class=\"text-truncate\">\n      <span\n        class=\"text-truncate text-medium\"\n        [ngClass]=\"lastState.colorClass\"\n        [ngStyle]=\"{ 'font-size': (config.fontSize || '36') + 'px' }\"\n        title=\"{{\n          lastState.colorClass === 'text-danger'\n            ? ('Within red range:' | translate)\n            : lastState.colorClass === 'text-warning'\n            ? ('Within yellow range:' | translate)\n            : ''\n        }} {{\n          lastState.latestMeasurement.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')\n        }} {{ lastState.unit || '' }}\"\n      >\n        {{\n          lastState.latestMeasurement.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')\n        }}\n        <small class=\"text-regular\">{{ lastState.unit || '' }}</small>\n      </span>\n    </div>\n    <div\n      class=\"dot dot-info dot-30 m-l-16 flex-no-shrink\"\n      *ngIf=\"config?.showTrend && lastState.previousValue as previousValue\"\n    >\n      <i\n        class=\"icon-20\"\n        [title]=\"\n          ('Previous value' | translate) +\n          ': ' +\n          (previousValue.value\n            | number\n              : '1.' +\n                  (config.numberOfDecimalPlaces || '0') +\n                  '-' +\n                  (config.numberOfDecimalPlaces || '0')) +\n          ' (' +\n          (previousValue.date | date: 'medium') +\n          ')'\n        \"\n        c8yIcon=\"arrow-dotted-up\"\n        [ngStyle]=\"{ transform: 'rotate(' + lastState.trend + ')' }\"\n      ></i>\n    </div>\n  </div>\n  <div class=\"d-flex j-c-center\">\n    <p *ngIf=\"config?.showTimestamp\" class=\"icon-flex text-center text-muted small\">\n      <i c8yIcon=\"calendar\"></i>\n      {{ lastState.latestMeasurement.date | date: 'medium' }}\n    </p>\n  </div>\n</div>\n\n<ng-template #noMeasurementFound>\n  <div class=\"d-flex fit-h fit-w j-c-center a-i-center\">\n    <c8y-ui-empty-state\n      *ngIf=\"noDataInitiallyInDB\"\n      class=\"fit-w\"\n      [icon]=\"'line-chart'\"\n      [title]=\"'No measurement to display.' | translate\"\n      [subtitle]=\"'Waiting for measurements to be created.' | translate\"\n      [horizontal]=\"true\"\n    ></c8y-ui-empty-state>\n    <c8y-loading *ngIf=\"!noDataInitiallyInDB\"></c8y-loading>\n  </div>\n</ng-template>\n"}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":26,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Optional","line":41,"character":5}}]],"parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"MeasurementRealtimeService","line":39,"character":33},{"__symbolic":"reference","module":"@c8y/ngx-components/datapoint-selector","name":"DatapointLibraryService","line":40,"character":26},{"__symbolic":"reference","module":"@c8y/ngx-components/context-dashboard","name":"ContextDashboardComponent","line":41,"character":35}]}],"ngOnInit":[{"__symbolic":"method"}],"setupObservable":[{"__symbolic":"method"}],"getLatestMeasurement$":[{"__symbolic":"method"}],"getDatapointLibraryEntry$":[{"__symbolic":"method"}],"getColorClass$":[{"__symbolic":"method"}],"getLastTwoValuesOfObservable$":[{"__symbolic":"method"}],"getTrendOfLatestMeasurements$":[{"__symbolic":"method"}],"inRangeOf":[{"__symbolic":"method"}],"assignContextFromContextDashboard":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":41,"character":1},"arguments":[{"selector":"c8y-kpi-widget-config","viewProviders":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"ControlContainer","line":44,"character":29},"useExisting":{"__symbolic":"reference","module":"@angular/forms","name":"NgForm","line":44,"character":60}}],"template":"<form [formGroup]=\"formGroup\" class=\"row\">\n  <div class=\"col-sm-6\">\n    <c8y-datapoint-selection-list\n      [defaultFormOptions]=\"defaultFormOptions\"\n      [config]=\"datapointSelectionConfig\"\n      [minActiveCount]=\"1\"\n      [maxActiveCount]=\"1\"\n      formControlName=\"datapoints\"\n      name=\"datapoints\"\n    >\n    </c8y-datapoint-selection-list>\n  </div>\n  <div class=\"col-sm-6\">\n    <c8y-form-group>\n      <label translate>Icon</label>\n      <div class=\"d-flex a-i-center\">\n        <div class=\"p-r-8 icon-32 text-muted\">\n          <i [c8yIcon]=\"formGroup.value.icon\"></i>\n        </div>\n        <button class=\"btn btn-default btn-xs\" (click)=\"openIconSelector()\">\n          {{ 'Change' | translate }}\n        </button>\n      </div>\n    </c8y-form-group>\n    <c8y-form-group>\n      <label [title]=\"'Number of decimal places' | translate\" translate>\n        Number of decimal places\n      </label>\n      <input\n        class=\"form-control\"\n        formControlName=\"numberOfDecimalPlaces\"\n        name=\"numberOfDecimalPlaces\"\n        type=\"number\"\n        [placeholder]=\"'e.g. {{ example }}' | translate: { example: 1 }\"\n      />\n      <c8y-messages [show]=\"formGroup.controls?.numberOfDecimalPlaces?.touched && formGroup?.controls?.numberOfDecimalPlaces?.errors\">\n      </c8y-messages>\n    </c8y-form-group>\n    <div>\n      <label> {{ 'Display' | translate }}</label>\n      <div class=\"d-flex gap-16 flex-wrap\">\n        <c8y-form-group>\n          <label [title]=\"'Show timestamp' | translate\" class=\"c8y-checkbox\">\n            <input type=\"checkbox\" formControlName=\"showTimestamp\" name=\"showTimestamp\" />\n            <span></span>\n            <span translate>Show timestamp</span>\n          </label>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label [title]=\"'Show icon' | translate\" class=\"c8y-checkbox\">\n            <input type=\"checkbox\" formControlName=\"showIcon\" name=\"showIcon\" />\n            <span></span>\n            <span translate>Show icon</span>\n          </label>\n        </c8y-form-group>\n\n        <c8y-form-group>\n          <label [title]=\"'Show trend icon' | translate\" class=\"c8y-checkbox\">\n            <input type=\"checkbox\" formControlName=\"showTrend\" name=\"showTrend\" />\n            <span></span>\n            <span translate>Show trend icon</span>\n            <button\n              class=\"btn btn-clean\"\n              popover=\"{{\n                'Indicates the trend between the last two measurement values.' | translate\n              }}\"\n              container=\"body\"\n              [outsideClick]=\"true\"\n            >\n              <i [c8yIcon]=\"'question-circle-o'\" class=\"text-info\"></i>\n            </button>\n          </label>\n        </c8y-form-group>\n      </div>\n\n      <c8y-form-group>\n        <label [title]=\"'Font size of measurement value (px)' | translate\" translate>\n          Font size of measurement value (px)\n        </label>\n        <input\n          class=\"form-control\"\n          formControlName=\"fontSize\"\n          name=\"fontSize\"\n          type=\"number\"\n          [placeholder]=\"'e.g. {{ example }}' | translate: { example: 36 }\"\n        />\n        <c8y-messages [show]=\"formGroup.controls?.fontSize?.touched && formGroup?.controls?.fontSize?.errors\">\n        </c8y-messages>\n      </c8y-form-group>\n    </div>\n  </div>\n</form>\n"}]}],"members":{"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":47,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/forms","name":"FormBuilder","line":63,"character":25},{"__symbolic":"reference","module":"@angular/forms","name":"NgForm","line":64,"character":18},{"__symbolic":"reference","module":"@c8y/ngx-components/icon-selector","name":"IconSelectorService","line":65,"character":26},{"__symbolic":"reference","module":"@c8y/ngx-components/context-dashboard","name":"WidgetConfigComponent","line":66,"character":26},{"__symbolic":"reference","module":"@c8y/ngx-components/datapoint-selector","name":"DatapointLibraryService","line":67,"character":30}]}],"onBeforeSave":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"openIconSelector":[{"__symbolic":"method"}],"initForm":[{"__symbolic":"method"}]}}},"origins":{"KpiWidgetModule":"./kpi-widget.module","ɵa":"./kpi-widget-view/kpi-widget-view.component","ɵb":"./kpi-widget-config/kpi-widget-config.component"},"importAs":"@c8y/ngx-components/widgets/kpi-widget"}