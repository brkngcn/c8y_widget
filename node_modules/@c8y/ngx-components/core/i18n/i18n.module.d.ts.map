{"version":3,"file":"i18n.module.d.ts","sources":["i18n.module.d.ts"],"names":[],"mappingssBAAsomDjB;;;;AACL","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { MissingTranslationHandler, TranslateService as NgxTranslateService, TranslateCompiler, TranslateFakeCompiler, TranslateLoader, TranslateParser, TranslateStore } from '@ngx-translate/core';\nimport { OptionsService } from '../common/options.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { MissingTranslationCustomHandler } from './missing-translation-custom.handler';\nimport { TranslateCustomLoader } from './translate.loader';\nimport { TranslateParserCustom } from './translate.parser';\nimport { CachedLocaleDictionaryService } from './cached-locale-dictionary.service';\nexport declare function translateLoaderFactory(httpClient: HttpClient, optionsService: OptionsService, cachedLocaleDictionaryService: CachedLocaleDictionaryService, localePath: string, languages: any): TranslateCustomLoader;\nexport declare function localePathFactory(options: OptionsService): string;\nexport declare function languagesFactory(options: OptionsService): import(\"..\").Languages;\nexport declare function localeId(appStateService: AppStateService): {\n    readonly lang: any;\n    toLowerCase(): any;\n    toString(): any;\n};\nexport declare function getAngularLocalesLanguageString(language: any): any;\n/**\n * The angular module definition for i18n (translation).\n * @exports I18nModule\n */\nexport declare class I18nModule {\n    static providers(): (typeof TranslateStore | typeof NgxTranslateService | {\n        provide: import(\"@angular/core\").InjectionToken<string>;\n        useFactory: typeof localeId;\n        deps: (typeof AppStateService)[];\n        useValue?: undefined;\n        multi?: undefined;\n        useClass?: undefined;\n    } | {\n        provide: import(\"@angular/core\").InjectionToken<unknown>;\n        useValue: {\n            '^Access is denied$': {\n                gettext: any;\n            };\n            '^Alarm created$': {\n                gettext: any;\n            };\n            '^Alarm updated$': {\n                gettext: any;\n            };\n            '^API is not available with the new domain$': {\n                gettext: any;\n            };\n            '^Application with given name already exist$': {\n                gettext: any;\n            };\n            '^Application with id (.+?) is already assigned to the tenant (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                };\n            };\n            '^Apply software changes: (.+?)\\\\.?$': {\n                gettext: any;\n                placeholders: {\n                    softwareChanges: {\n                        capture: string;\n                        translate: {\n                            'install \"(.+?)\" \\\\(version: (.+?)\\\\)': {\n                                gettext: any;\n                                placeholders: {\n                                    softwareName: string;\n                                    softwareVersion: string;\n                                };\n                            };\n                            'install \"([^\"]+)\"(?! \\\\(version: .+?\\\\))': {\n                                gettext: any;\n                                placeholders: {\n                                    softwareName: string;\n                                };\n                            };\n                            'delete \"(.+?)\" \\\\(version: (.+?)\\\\)': {\n                                gettext: any;\n                                placeholders: {\n                                    softwareName: string;\n                                    softwareVersion: string;\n                                };\n                            };\n                            'delete \"([^\"]+)\"(?! \\\\(version: .+?\\\\))': {\n                                gettext: any;\n                                placeholders: {\n                                    softwareName: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            '^Assign device profile (.+?) to device (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    profileName: string;\n                    deviceName: string;\n                };\n            };\n            '^(.+)pplication for tenant (.+) with properties \\\\( (.+?) \\\\) already exists$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                    valuesList: string;\n                };\n            };\n            '^Authentication failed! : User account is locked$': {\n                gettext: any;\n            };\n            '^Availability monitoring record$': {\n                gettext: any;\n            };\n            '^Can not activate a certificate which is either expired or not yet valid$': {\n                gettext: any;\n            };\n            '^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.': {\n                gettext: any;\n                placeholders: {\n                    fingerprint: string;\n                };\n            };\n            '^Cannot change password. : Provided token does not exist.$': {\n                gettext: any;\n            };\n            '^Cannot deploy module (.*)$': {\n                gettext: any;\n                placeholders: {\n                    errorMessage: string;\n                };\n            };\n            \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+) \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                gettext: any;\n                placeholders: {\n                    moduleName: string;\n                    expression: string;\n                    incorrectExpression: string;\n                    line: string;\n                    column: string;\n                };\n            };\n            \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+) near reserved keyword '(.+?)' \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                gettext: any;\n                placeholders: {\n                    moduleName: string;\n                    expression: string;\n                    incorrectExpression: string;\n                    line: string;\n                    column: string;\n                    keyword: string;\n                };\n            };\n            \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+), please check the where clause \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                gettext: any;\n                placeholders: {\n                    moduleName: string;\n                    expression: string;\n                    incorrectExpression: string;\n                    line: string;\n                    column: string;\n                };\n            };\n            \"^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\\\((.+?)\\\\) \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                gettext: any;\n                placeholders: {\n                    moduleName: string;\n                    expression: string;\n                    scriptName: string;\n                    scriptDialect: string;\n                    missingSyntax: string;\n                    affectedStatement: string;\n                };\n            };\n            \"^Cannot execute bulk operation on empty group. Group with id='(\\\\d+?)' doesn't have child assets.$\": {\n                gettext: any;\n                placeholders: {\n                    groupId: string;\n                };\n            };\n            \"^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\\\d+?)' doesn't have child assets$\": {\n                gettext: any;\n                placeholders: {\n                    groupId: string;\n                };\n            };\n            '^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    failureReason: string;\n                };\n            };\n            '^Cannot reschedule bulk operation. All its operations are successful$': {\n                gettext: any;\n            };\n            '^Cannot reset user password : Cannot find user with such email.$': {\n                gettext: any;\n            };\n            '^Cannot update/delete application binary via this endpoint$': {\n                gettext: any;\n            };\n            \"^Can't delete user because it is used by another managed object$\": {\n                gettext: any;\n            };\n            '^Cep module created$': {\n                gettext: any;\n            };\n            '^Cep module updated$': {\n                gettext: any;\n            };\n            '^Cep module deleted$': {\n                gettext: any;\n            };\n            '^Cep module \"(.+?)\" created$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Cep module \"(.+?)\" updated$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Cep module \"(.+?)\" deleted$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Command state is invalid: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    violations: {\n                        capture: string;\n                        translate: {\n                            '(\\\\w+?) - may not be null': {\n                                gettext: any;\n                                placeholders: {\n                                    field: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            '^Could not connect to endpoint (.+)\\\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\\\. If you expected that key, please remove the previous one from configuration to allow for connection\\\\.$': {\n                gettext: any;\n                placeholders: {\n                    endpointName: string;\n                    keyType: string;\n                    fingerprint: string;\n                    host: string;\n                    port: string;\n                };\n            };\n            '^Could not login to ssh server on endpoint \"(.+)\"\\\\. Provided credential for user \"(.+)\" is incorrect\\\\.$': {\n                gettext: any;\n                placeholders: {\n                    endpointName: string;\n                    userName: string;\n                };\n            };\n            '^Could not save object remoteAccessUpdate: (.+)$': {\n                gettext: string;\n                placeholders: {\n                    errorMessages: {\n                        capture: string;\n                        translate: {\n                            'Could not recognize host-key format': {\n                                gettext: any;\n                            };\n                            'Could not recognize key-pair format': {\n                                gettext: any;\n                            };\n                        };\n                    };\n                };\n            };\n            '^Could not update user. : Error persisting user (.+?)!$': {\n                gettext: any;\n                placeholders: {\n                    username: string;\n                };\n            };\n            '^Create bulk operation$': {\n                gettext: any;\n            };\n            '^Create bulk operation: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    updatesList: {\n                        capture: string;\n                        translate: {\n                            \"status='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    status: string;\n                                };\n                            };\n                            \"generalStatus='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    generalStatus: string;\n                                };\n                            };\n                            \"progress='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    progress: string;\n                                };\n                            };\n                            'note=(.+?)': {\n                                gettext: any;\n                                placeholders: {\n                                    note: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            '^Creation ramp must be greater than (\\\\d+?)$': {\n                gettext: any;\n                placeholders: {\n                    minSeconds: string;\n                };\n            };\n            '^Created container$': {\n                gettext: any;\n            };\n            '^Created pod: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    imageName: string;\n                };\n            };\n            '^Creating device on LoRa platform failed$': {\n                gettext: any;\n            };\n            '^CSV file contained empty dataset$': {\n                gettext: any;\n            };\n            '^Cycle detected for route (.+?)!$': {\n                gettext: any;\n                placeholders: {\n                    route: string;\n                };\n            };\n            '^Data broker processing is currently overloaded and may stop forwarding your data\\\\. Please contact support\\\\.$': {\n                gettext: any;\n            };\n            '^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\\\. Please contact support\\\\.$': {\n                gettext: any;\n            };\n            '^DATAHUB_ADMINISTRATOR$': {\n                gettext: any;\n            };\n            '^DATAHUB_MANAGER$': {\n                gettext: any;\n            };\n            '^DATAHUB_READER$': {\n                gettext: any;\n            };\n            '^Delete bulk operation$': {\n                gettext: any;\n            };\n            '^Delete bulk operation: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    updatesList: {\n                        capture: string;\n                        translate: {\n                            \"status='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    status: string;\n                                };\n                            };\n                            \"generalStatus='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    generalStatus: string;\n                                };\n                            };\n                            \"progress='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    progress: string;\n                                };\n                            };\n                            'note=(.+?)': {\n                                gettext: any;\n                                placeholders: {\n                                    note: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            \"^Device id '(.+?)' contains '(.+?)' character which is not permitted.$\": {\n                gettext: any;\n                placeholders: {\n                    deviceId: string;\n                    invalidCharacter: string;\n                };\n            };\n            \"^Device name: '(.+?)', alarm text: '(.+?)'$\": {\n                gettext: any;\n                placeholders: {\n                    deviceName: string;\n                    alarmText: string;\n                };\n            };\n            '^Device (.+?) already registered to a tenant.$': {\n                gettext: any;\n                placeholders: {\n                    devEUI: string;\n                };\n            };\n            '^Display name$': {\n                gettext: any;\n            };\n            '^Domain name in uploaded certificate differs from the one in use$': {\n                gettext: any;\n            };\n            '^Domain name is already in use by another tenant!$': {\n                gettext: any;\n            };\n            '^Duplicated connector for instanceUrl (.+?)!$': {\n                gettext: any;\n                placeholders: {\n                    targetUrl: string;\n                };\n            };\n            '^Duplicated connector for name (.+?)!$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Entry is outside of the target dir: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    path: string;\n                };\n            };\n            '^Error during password validation. : Password must have at least (\\\\d+?) characters and no more than (\\\\d+?) and must contain only Latin1 characters.$': {\n                gettext: any;\n                placeholders: {\n                    minCharactersCount: string;\n                    maxCharactersCount: string;\n                };\n            };\n            '^Error during password validation. : Your password has been used already. Choose another.$': {\n                gettext: any;\n            };\n            \"^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                gettext: any;\n                placeholders: {\n                    moduleName: string;\n                    statementNumber: string;\n                    expression: string;\n                    keyword: string;\n                };\n            };\n            '^External id not found; external id = ID \\\\[type=(.+?), value=(.+?)\\\\]$': {\n                gettext: any;\n                placeholders: {\n                    type: string;\n                    value: string;\n                };\n            };\n            '^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\\\d+)$': {\n                gettext: any;\n                placeholders: {\n                    applicationId: string;\n                };\n            };\n            '^Http status code: 404\\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}': {\n                gettext: any;\n            };\n            '^Failed to delete application.  : Cannot remove application assigned to other tenants.$': {\n                gettext: any;\n            };\n            '^Failed to extract certificate from PKCS12$': {\n                gettext: any;\n            };\n            '^Failed to update domain at the platform$': {\n                gettext: any;\n            };\n            \"^Finding device data from database failed : No managedObject for id '(.+?)'!$\": {\n                gettext: any;\n                placeholders: {\n                    deviceId: string;\n                };\n            };\n            '^Following mandatory fields should be included: (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    fields: string;\n                };\n            };\n            '^Global Role updated$': {\n                gettext: any;\n            };\n            '^Global Role (.+?) updated$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Global Role (.+?) updated: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    updatesList: {\n                        capture: string;\n                        translate: {\n                            'applications \\\\[([^\\\\]]+?)\\\\] added': {\n                                gettext: any;\n                                placeholders: {\n                                    list: string;\n                                };\n                            };\n                            'applications \\\\[([^\\\\]]+?)\\\\] removed': {\n                                gettext: any;\n                                placeholders: {\n                                    list: string;\n                                };\n                            };\n                            'roles \\\\[([^\\\\]]+?)\\\\] added': {\n                                gettext: any;\n                                placeholders: {\n                                    list: string;\n                                };\n                            };\n                            'roles \\\\[([^\\\\]]+?)\\\\] removed': {\n                                gettext: any;\n                                placeholders: {\n                                    list: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            '^Global Roles$': {\n                gettext: any;\n            };\n            '^Operation updated: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    updatesList: {\n                        capture: string;\n                        translate: {\n                            \"status='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    status: string;\n                                };\n                            };\n                            \"description='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    description: string;\n                                };\n                            };\n                            \"device name='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    deviceName: string;\n                                };\n                            };\n                            \"failure reason='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    failureReason: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            '^ID \\\\[type=(.+?), value=(.+?)\\\\] was already bound to different Global ID.$': {\n                gettext: any;\n                placeholders: {\n                    type: string;\n                    value: string;\n                };\n            };\n            '^Invalid credentials! : Bad credentials$': {\n                gettext: any;\n            };\n            '^Invalid credentials! : No phone number provided$': {\n                gettext: any;\n            };\n            '^Inventory Role removed$': {\n                gettext: any;\n            };\n            '^Inventory Role (.+?) removed': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Inventory Role updated$': {\n                gettext: any;\n            };\n            '^Inventory Role (.+?) updated': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^I/O error: Connection refused; nested exception is Connection refused : Connection refused': {\n                gettext: any;\n            };\n            '^I/O error: Read timed out; nested exception is Read timed out : Read timed out': {\n                gettext: any;\n            };\n            '^Log file requested$': {\n                gettext: any;\n            };\n            '^Managed object deleted$': {\n                gettext: any;\n            };\n            '^Managed object \"(.+?)\" deleted$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Maximum file size exceeded$': {\n                gettext: any;\n            };\n            \"^Message with ID (.+?) doesn't exist in smart rest template (.+?)$\": {\n                gettext: any;\n                placeholders: {\n                    messageId: string;\n                    templateId: string;\n                };\n            };\n            '^name of Application cannot start with \\'(.+)\\' prefix.$': {\n                gettext: any;\n                placeholders: {\n                    prefix: string;\n                };\n            };\n            '^NewDeviceRequest for id = (.+?) already exists.$': {\n                gettext: any;\n                placeholders: {\n                    id: string;\n                };\n            };\n            '^NewDeviceRequest for device id (.+?) is in state BLOCKED, not PENDING_ACCEPTANCE.$': {\n                gettext: any;\n                placeholders: {\n                    deviceId: string;\n                };\n            };\n            '^No communication with device since (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    timestamp: string;\n                };\n            };\n            '^No data received from device within required interval.$': {\n                gettext: any;\n            };\n            '^No LoRa provider settings are found. Please configure the connectivity settings.$': {\n                gettext: any;\n            };\n            '^Not within any context!$': {\n                gettext: any;\n            };\n            '^Maximum age cannot be bigger than 10 years.$': {\n                gettext: any;\n            };\n            '^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\\\d+) characters.$': {\n                gettext: any;\n                placeholders: {\n                    maxLength: string;\n                };\n            };\n            '^Microservice not available.*$': {\n                gettext: any;\n            };\n            '^Operation created$': {\n                gettext: any;\n            };\n            '^Operation updated$': {\n                gettext: any;\n            };\n            \"^Operation created: status='(.+?)'.\": {\n                gettext: any;\n                placeholders: {\n                    status: string;\n                };\n            };\n            '^Option created$': {\n                gettext: any;\n            };\n            '^Option \"(.+?)\" created$': {\n                gettext: any;\n                placeholders: {\n                    option: string;\n                };\n            };\n            '^Option deleted$': {\n                gettext: any;\n            };\n            '^Option \"(.+?)\" deleted$': {\n                gettext: any;\n                placeholders: {\n                    option: string;\n                };\n            };\n            '^Owner field error. : Cannot introduce cyclic dependency.': {\n                gettext: any;\n            };\n            '^Password change is temporary blocked.$': {\n                gettext: any;\n            };\n            '^Password cipher does not match': {\n                gettext: any;\n            };\n            '^Platform application cannot be added to, nor removed from any tenant.$': {\n                gettext: any;\n            };\n            '^Private key must be provided in KEY_PAIR credentials$': {\n                gettext: any;\n            };\n            '^Private key cipher does not match': {\n                gettext: any;\n            };\n            '^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$': {\n                gettext: any;\n                placeholders: {\n                    protocol: string;\n                    credentialsType: string;\n                };\n            };\n            '^Provided security key does not match key stored for device (.+?).$': {\n                gettext: any;\n                placeholders: {\n                    deviceId: string;\n                };\n            };\n            '^Provided security key does not match key stored for device (.+?).Reached maximum number of failed attempts while trying to register this device. Request will now be blocked and has to be removed manually to restart the process.$': {\n                gettext: any;\n                placeholders: {\n                    deviceId: string;\n                };\n            };\n            '^pulling image \"(.+)\"$': {\n                gettext: any;\n                placeholders: {\n                    imageName: string;\n                };\n            };\n            '^Real-time event processing is currently overloaded and may stop processing your events\\\\. Please contact support\\\\.$': {\n                gettext: any;\n            };\n            '^Resource ID \\\\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\\\] for this request not found.$': {\n                gettext: any;\n                placeholders: {\n                    id: string;\n                };\n            };\n            '^Retrieve configuration snapshot from device (.+?)': {\n                gettext: any;\n                placeholders: {\n                    deviceName: string;\n                };\n            };\n            '^Retrieve (.+?) configuration snapshot from device (.+?)': {\n                gettext: any;\n                placeholders: {\n                    configurationType: string;\n                    deviceName: string;\n                };\n            };\n            '^Scaled up replica set (.+) to (\\\\d+)$': {\n                gettext: any;\n                placeholders: {\n                    replicaSetName: string;\n                    scaleNumber: string;\n                };\n            };\n            '^Send configuration snapshot (.+?) of configuration type (.+?) to device (.+?)': {\n                gettext: any;\n                placeholders: {\n                    snapshotName: string;\n                    configurationType: string;\n                    deviceName: string;\n                };\n            };\n            '^Send configuration snapshot (.+?) to device (.+?)': {\n                gettext: any;\n                placeholders: {\n                    snapshotName: string;\n                    deviceName: string;\n                };\n            };\n            '^Simulator state is invalid: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    violations: {\n                        capture: string;\n                        translate: {\n                            '(\\\\w+?) - may not be null': {\n                                gettext: any;\n                                placeholders: {\n                                    field: string;\n                                };\n                            };\n                            '(\\\\w+?) - must be less than or equal to (\\\\d+)': {\n                                gettext: any;\n                                placeholders: {\n                                    field: string;\n                                    maxValue: string;\n                                };\n                            };\n                            '(\\\\w+?) - should not contain null values': {\n                                gettext: any;\n                                placeholders: {\n                                    field: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            \"^Smart rest template (.+?) doesn't exist$\": {\n                gettext: any;\n                placeholders: {\n                    templateId: string;\n                };\n            };\n            '^Smart rule created$': {\n                gettext: any;\n            };\n            '^Smart rule updated$': {\n                gettext: any;\n            };\n            '^Smart rule enabled$': {\n                gettext: any;\n            };\n            '^Smart rule disabled$': {\n                gettext: any;\n            };\n            '^Smart rule deleted$': {\n                gettext: any;\n            };\n            '^Smart rule \"(.+?)\" created$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Smart rule \"(.+?)\" updated$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Smart rule \"(.+?)\" enabled$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Smart rule \"(.+?)\" disabled$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Smart rule \"(.+?)\" deleted$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Started container$': {\n                gettext: any;\n            };\n            '^Successfully assigned (.+) to (.+)$': {\n                gettext: any;\n                placeholders: {\n                    imageName: string;\n                    address: string;\n                };\n            };\n            '^Successfully pulled image \"(.+)\"$': {\n                gettext: any;\n                placeholders: {\n                    imageName: string;\n                };\n            };\n            '^Tenant creation failed. : Tenant with given id already exists.$': {\n                gettext: any;\n            };\n            '^Tenant id cannot be a reserved sql keyword \"(.+?)\".$': {\n                gettext: any;\n                placeholders: {\n                    tenantId: string;\n                };\n            };\n            '^Tenant \"(.+?)\" activated$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                };\n            };\n            '^Tenant (.+?) has sub-tenants, please remove them first!$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                };\n            };\n            '^Tenant activated$': {\n                gettext: any;\n            };\n            '^Tenant \"(.+?)\" created$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                };\n            };\n            '^Tenant created$': {\n                gettext: any;\n            };\n            '^Tenant \"(.+?)\" deleted$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                };\n            };\n            '^Tenant deleted$': {\n                gettext: any;\n            };\n            '^Tenant \"(.+?)\" suspended$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                };\n            };\n            '^Tenant suspended$': {\n                gettext: any;\n            };\n            '^Tenant \"(.+?)\" updated: (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    tenant: string;\n                    properties: string;\n                };\n            };\n            '^Tenant updated$': {\n                gettext: any;\n            };\n            '^Too Many Requests$': {\n                gettext: any;\n            };\n            \"^User alias equals username '(.+)'$\": {\n                gettext: any;\n            };\n            '^User created$': {\n                gettext: any;\n            };\n            '^User (.+?) created$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^User deleted$': {\n                gettext: any;\n            };\n            '^User (.+?) deleted$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^User logout$': {\n                gettext: any;\n            };\n            '^(.+?) user logout$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^(.+?) user logged in to the platform with OAuth internal login mode$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^(.+?) user login with OAuth internal mode failed$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^User updated$': {\n                gettext: any;\n            };\n            '^User (.+?) updated: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    updatesList: {\n                        capture: string;\n                        translate: {\n                            \"delegatedBy='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    delegate: string;\n                                };\n                            };\n                            \"owner='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    owner: string;\n                                };\n                            };\n                            'inventory assignment \\\\[(.+?)\\\\] added': {\n                                gettext: any;\n                                placeholders: {\n                                    inventoryAssignment: string;\n                                };\n                            };\n                            'inventory assignment \\\\[(.+?)\\\\] removed': {\n                                gettext: any;\n                                placeholders: {\n                                    inventoryAssignment: string;\n                                };\n                            };\n                            'applications \\\\[(.+?)\\\\] added$': {\n                                gettext: any;\n                                placeholders: {\n                                    applicationsList: string;\n                                };\n                            };\n                            'applications \\\\[(.+?)\\\\] removed$': {\n                                gettext: any;\n                                placeholders: {\n                                    applicationsList: string;\n                                };\n                            };\n                            'global roles \\\\[(.+?)\\\\] added$': {\n                                gettext: any;\n                                placeholders: {\n                                    globalRolesList: string;\n                                };\n                            };\n                            'global roles \\\\[(.+?)\\\\] removed$': {\n                                gettext: any;\n                                placeholders: {\n                                    globalRolesList: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            \"^User with username '(.+?)' already exists! : Duplicated: (.+?)$\": {\n                gettext: any;\n                placeholders: {\n                    username: string;\n                };\n            };\n            \"^User with username or alias '(.+)' already exists! : Duplicated: (.+)$\": {\n                gettext: any;\n                placeholders: {\n                    usernameOrAlias: string;\n                };\n            };\n            \"^User with email '(.+?)' already exists! : Duplicated: (.+?)$\": {\n                gettext: any;\n                placeholders: {\n                    email: string;\n                };\n            };\n            '^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$': {\n                gettext: any;\n                placeholders: {\n                    option: string;\n                };\n            };\n            '^unable to find option with given key (.+?) : There is no system property for key (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    option: string;\n                };\n            };\n            '^Write failed with error code 16733 and error message \\'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"\\'$': {\n                gettext: any;\n            };\n            '^Write failed with error code 17280 and error message \\'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }\\'$': {\n                gettext: any;\n            };\n            '^You have reached devices limit. No more devices can be registered.$': {\n                gettext: any;\n            };\n            '^(.+) succeeded for volume \"(.+)\"': {\n                gettext: any;\n                placeholders: {\n                    operation: string;\n                    volume: string;\n                };\n            };\n            \"^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\\\[(.+)\\\\] for statement '(.+)': (.+) : (.+)$\": {\n                gettext: any;\n                placeholders: {\n                    tenantId: string;\n                    moduleName: string;\n                    methodName: string;\n                    classPath: string;\n                    parameters: string;\n                    statement: string;\n                    exceptionType: string;\n                    exceptionMessage: string;\n                };\n            };\n            '^No nodes are available that match all of the predicates: (.+).$': {\n                gettext: any;\n                placeholders: {\n                    predicates: string;\n                };\n            };\n            '^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n                gettext: any;\n                placeholders: {\n                    requestMethod: string;\n                    uri: string;\n                    protocol: string;\n                };\n            };\n            '^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n                gettext: any;\n                placeholders: {\n                    requestMethod: string;\n                    uri: string;\n                    protocol: string;\n                };\n            };\n            '^Error syncing pod$': {\n                gettext: any;\n            };\n            '^Failed create pod sandbox.$': {\n                gettext: any;\n            };\n            '^Exception on tenant (.+) in statement \\'(.+)\\': Http status code: (\\\\d+) \\\\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\\\}$': {\n                gettext: any;\n                placeholders: {\n                    tenantId: string;\n                    statement: string;\n                    httpStatusCode: string;\n                    message: string;\n                };\n            };\n            \"^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$\": {\n                gettext: any;\n                placeholders: {\n                    userName: string;\n                };\n            };\n            '^Added new child device to \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                gettext: any;\n                placeholders: {\n                    parentDeviceName: string;\n                    parentDeviceId: string;\n                };\n            };\n            '^Updated child device of \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                gettext: any;\n                placeholders: {\n                    parentDeviceName: string;\n                    parentDeviceId: string;\n                };\n            };\n            '^Added child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    id: string;\n                };\n            };\n            '^Removed child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    id: string;\n                };\n            };\n            '^Change value of \"(.+)\" to (.+) (.+).$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    value: string;\n                    unit: string;\n                };\n            };\n            '^Change value of \"(.+)\" to (.+).$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    value: string;\n                };\n            };\n            '^Change status of \"(.+)\" to \"(.+)\".$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    label: string;\n                };\n            };\n            '^Send message \"(.+)\".$': {\n                gettext: any;\n                placeholders: {\n                    str: string;\n                };\n            };\n            '^Close relay (.+).$': {\n                gettext: any;\n                placeholders: {\n                    number: string;\n                };\n            };\n            '^Open relay (.+).$': {\n                gettext: any;\n                placeholders: {\n                    number: string;\n                };\n            };\n            '^Change trace status to (.+).$': {\n                gettext: any;\n                placeholders: {\n                    state: string;\n                };\n            };\n            '^Change relay status to (.+).$': {\n                gettext: any;\n                placeholders: {\n                    status: string;\n                };\n            };\n            '^Closing relay (.+).$': {\n                gettext: any;\n                placeholders: {\n                    number: string;\n                };\n            };\n            '^Opening relay (.+).$': {\n                gettext: any;\n                placeholders: {\n                    number: string;\n                };\n            };\n            '^Update bulk operation$': {\n                gettext: any;\n            };\n            '^Update bulk operation: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    updatesList: {\n                        capture: string;\n                        translate: {\n                            \"status='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    status: string;\n                                };\n                            };\n                            \"generalStatus='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    generalStatus: string;\n                                };\n                            };\n                            \"progress='(.+?)'\": {\n                                gettext: any;\n                                placeholders: {\n                                    progress: string;\n                                };\n                            };\n                            'note=(.+?)': {\n                                gettext: any;\n                                placeholders: {\n                                    note: string;\n                                };\n                            };\n                        };\n                    };\n                };\n            };\n            '^Update firmware to: \"?(.+?)\"? \\\\(version: (.+)\\\\)\\\\.?$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                    version: string;\n                };\n            };\n            '^Update firmware to: \"?(.+?)\"?\\\\.?$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Update configuration to (.+).$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Apply device profile: (.+).?$': {\n                gettext: any;\n                placeholders: {\n                    name: string;\n                };\n            };\n            '^Execute generic command: (.+).?$': {\n                gettext: any;\n                placeholders: {\n                    command: string;\n                };\n            };\n            '^Failed to refresh application. : Cannot refresh non local-hosted application.$': {\n                gettext: any;\n            };\n            '^Failed to refresh application. : Cannot refresh application without active version id.$': {\n                gettext: any;\n            };\n            '^Scaled down replica set (.+) to (\\\\d+)$': {\n                gettext: any;\n                placeholders: {\n                    replicaSetName: string;\n                    scaleNumber: string;\n                };\n            };\n            '^Deleted pod: (.+)$': {\n                gettext: any;\n                placeholders: {\n                    imageName: string;\n                };\n            };\n            '^Container image \"(.+)\" already present on machine$': {\n                gettext: any;\n                placeholders: {\n                    imageName: string;\n                };\n            };\n            '^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$': {\n                gettext: any;\n            };\n            '^Authentication with id: (.+?) configuration updated.$': {\n                gettext: any;\n                placeholders: {\n                    id: string;\n                };\n            };\n            '^Authentication configuration with id: (.+?) added.$': {\n                gettext: any;\n                placeholders: {\n                    id: string;\n                };\n            };\n            '^Configuration type: basic.$': {\n                gettext: any;\n            };\n            '^Configuration type: oauth2_internal.$': {\n                gettext: any;\n            };\n            '^Configuration type: oauth2.$': {\n                gettext: any;\n            };\n            '^Application activated$': {\n                gettext: any;\n            };\n            '^Hosted application \"(.+?)\" activated: activeVersionId \\\\[(.+?)\\\\] added$': {\n                gettext: any;\n                placeholders: {\n                    appName: string;\n                    activeVersionId: string;\n                };\n            };\n            '^Application deleted$': {\n                gettext: any;\n            };\n            '^Hosted application \"(.+?)\" deleted for tenant \"(.+?)\"$': {\n                gettext: any;\n                placeholders: {\n                    appName: string;\n                    tenant: string;\n                };\n            };\n            '^LWM2M device type$': {\n                gettext: any;\n            };\n            '^LWM2M server URI$': {\n                gettext: any;\n            };\n            '^coaps://<LWM2M-server-domain>:<coaps-port>$': {\n                gettext: any;\n            };\n            '^CREATE$': {\n                gettext: any;\n            };\n            '^DELETE$': {\n                gettext: any;\n            };\n            '^Endpoint client ID$': {\n                gettext: any;\n            };\n            '^Server public key$': {\n                gettext: any;\n            };\n            '^Generate bootstrap server config$': {\n                gettext: any;\n            };\n            '^LWM2M bootstrap short server ID$': {\n                gettext: any;\n            };\n            '^LWM2M short server ID$': {\n                gettext: any;\n            };\n            '^Registration lifetime$': {\n                gettext: any;\n            };\n            '^in seconds$': {\n                gettext: any;\n            };\n            '^Security instance offset$': {\n                gettext: any;\n            };\n            '^Default minimum period$': {\n                gettext: any;\n            };\n            '^Default maximum period$': {\n                gettext: any;\n            };\n            '^Binding mode$': {\n                gettext: any;\n            };\n            '^applicable for LWM2M 1\\\\.0$': {\n                gettext: any;\n            };\n            '^Awake time registration parameter$': {\n                gettext: any;\n            };\n            '^in milliseconds, 0 means device is always online$': {\n                gettext: any;\n            };\n            '^Use common timestamp resources 5518 and 6050 or object specific timestamp for object 6 reported by the device if available$': {\n                gettext: any;\n            };\n            '^Notification storing when disabled or offline$': {\n                gettext: any;\n            };\n            '^Disable timeout$': {\n                gettext: any;\n            };\n            '^LWM2M request timeout$': {\n                gettext: any;\n            };\n            '^in milliseconds$': {\n                gettext: any;\n            };\n            '^Binary delivery encoding$': {\n                gettext: any;\n            };\n            '^Firmware update delivery method$': {\n                gettext: any;\n            };\n            '^Firmware update supported device protocol$': {\n                gettext: any;\n            };\n            '^Firmware update reset mechanism$': {\n                gettext: any;\n            };\n            '^Firmware update URL$': {\n                gettext: any;\n            };\n            '^Failed to find operation data in the internal memory store\\\\. Try again!$': {\n                gettext: any;\n            };\n            '^Security mode$': {\n                gettext: any;\n            };\n            '^Bootstrap PSK ID$': {\n                gettext: any;\n            };\n            '^Bootstrap pre-shared key$': {\n                gettext: any;\n            };\n            '^LWM2M PSK ID$': {\n                gettext: any;\n            };\n            '^LWM2M pre-shared key$': {\n                gettext: any;\n            };\n            '^LWM2M bulk device upload operation$': {\n                gettext: any;\n            };\n            '^This operation is only triggered by the agent when user uploads a CSV file with all required information to register new LWM2M devices\\\\. The source of the operation is the LWM2M device connector\\\\. Users are not able to trigger this operation using the shell command\\\\.$': {\n                gettext: any;\n            };\n            '^Write$': {\n                gettext: any;\n            };\n            '^Execute$': {\n                gettext: any;\n            };\n            '^Execute with parameters$': {\n                gettext: any;\n            };\n            '^Delete Instance$': {\n                gettext: any;\n            };\n            '^Create Instance$': {\n                gettext: any;\n            };\n            '^Read Object$': {\n                gettext: any;\n            };\n            '^Read Instance$': {\n                gettext: any;\n            };\n            '^LWM2M bulk device removal operation$': {\n                gettext: any;\n            };\n            '^This operation is only triggered by the agent when user uploads a CSV file with a list of endpoint IDs to delete from C8Y\\\\.The source of the operation is the LWM2M device connector\\\\. Users are not able to trigger this operation using the shell command\\\\.$': {\n                gettext: any;\n            };\n            '^Could not find device$': {\n                gettext: any;\n            };\n            '^Exception occurred while removing device (.+?)$': {\n                gettext: any;\n                placeholders: {\n                    exceptionMessage: string;\n                };\n            };\n            '^This command can be used to migrate LWM2M devices which are created in a non-standard way\\\\. It can take comma-separated device managed object IDs as parameters\\\\. If the IDs are specified then the migration will be done only for those devices\\\\. If the command is sent without any parameters then the agent will look up for possible Lwm2m devices that are not created in a standard way and try to migrate them\\\\. Usage: migrateLwm2mDevices 1122,3344 or migrateLwm2mDevices$': {\n                gettext: any;\n            };\n            '^Unable to migrate devices$': {\n                gettext: any;\n            };\n            '^Error while processing report$': {\n                gettext: any;\n            };\n            '^Expected 1 endpointId argument$': {\n                gettext: any;\n            };\n            '^LWM2M device registration$': {\n                gettext: any;\n            };\n            '^The required and optional properties to register and setup LWM2M Devices$': {\n                gettext: any;\n            };\n            '^Bootstrap$': {\n                gettext: any;\n            };\n            '^Advanced$': {\n                gettext: any;\n            };\n            '^Bulk LWM2M device registration$': {\n                gettext: any;\n            };\n            '^This command returns a list of shell commands with description that can be created for the Lwm2m device connector\\\\.$': {\n                gettext: any;\n            };\n            '^The following operations are supported:': {\n                gettext: any;\n            };\n            '^PSK template$': {\n                gettext: any;\n            };\n            '^A bulk registration CSV template showing all mandatory fields$': {\n                gettext: any;\n            };\n            '^Mandatory fields template$': {\n                gettext: any;\n            };\n            '^General template$': {\n                gettext: any;\n            };\n            '^A bulk registration CSV template for NO_SEC devices with all optional fields$': {\n                gettext: any;\n            };\n            '^A general bulk registration CSV template showing all possible fields$': {\n                gettext: any;\n            };\n            '^A bulk registration CSV template for PSK devices with all optional fields$': {\n                gettext: any;\n            };\n            '^NO_SEC template$': {\n                gettext: any;\n            };\n        };\n        multi: boolean;\n        useFactory?: undefined;\n        deps?: undefined;\n        useClass?: undefined;\n    } | {\n        provide: import(\"@angular/core\").InjectionToken<unknown>;\n        useFactory: typeof localePathFactory;\n        deps: (typeof OptionsService)[];\n        useValue?: undefined;\n        multi?: undefined;\n        useClass?: undefined;\n    } | {\n        provide: import(\"@angular/core\").InjectionToken<unknown>;\n        useFactory: typeof languagesFactory;\n        deps: (typeof OptionsService)[];\n        useValue?: undefined;\n        multi?: undefined;\n        useClass?: undefined;\n    } | {\n        provide: typeof TranslateLoader;\n        useFactory: typeof translateLoaderFactory;\n        deps: (import(\"@angular/core\").InjectionToken<unknown> | typeof OptionsService | typeof CachedLocaleDictionaryService | typeof HttpClient)[];\n        useValue?: undefined;\n        multi?: undefined;\n        useClass?: undefined;\n    } | {\n        provide: typeof TranslateCompiler;\n        useClass: typeof TranslateFakeCompiler;\n        useFactory?: undefined;\n        deps?: undefined;\n        useValue?: undefined;\n        multi?: undefined;\n    } | {\n        provide: typeof TranslateParser;\n        useClass: typeof TranslateParserCustom;\n        useFactory?: undefined;\n        deps?: undefined;\n        useValue?: undefined;\n        multi?: undefined;\n    } | {\n        provide: typeof MissingTranslationHandler;\n        useClass: typeof MissingTranslationCustomHandler;\n        useFactory?: undefined;\n        deps?: undefined;\n        useValue?: undefined;\n        multi?: undefined;\n    } | {\n        provide: import(\"@angular/core\").InjectionToken<string>;\n        useValue: boolean;\n        useFactory?: undefined;\n        deps?: undefined;\n        multi?: undefined;\n        useClass?: undefined;\n    })[];\n    static forRoot(): {\n        ngModule: typeof I18nModule;\n        providers: (typeof TranslateStore | typeof NgxTranslateService | {\n            provide: import(\"@angular/core\").InjectionToken<string>;\n            useFactory: typeof localeId;\n            deps: (typeof AppStateService)[];\n            useValue?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: import(\"@angular/core\").InjectionToken<unknown>;\n            useValue: {\n                '^Access is denied$': {\n                    gettext: any;\n                };\n                '^Alarm created$': {\n                    gettext: any;\n                };\n                '^Alarm updated$': {\n                    gettext: any;\n                };\n                '^API is not available with the new domain$': {\n                    gettext: any;\n                };\n                '^Application with given name already exist$': {\n                    gettext: any;\n                };\n                '^Application with id (.+?) is already assigned to the tenant (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                    };\n                };\n                '^Apply software changes: (.+?)\\\\.?$': {\n                    gettext: any;\n                    placeholders: {\n                        softwareChanges: {\n                            capture: string;\n                            translate: {\n                                'install \"(.+?)\" \\\\(version: (.+?)\\\\)': {\n                                    gettext: any;\n                                    placeholders: {\n                                        softwareName: string;\n                                        softwareVersion: string;\n                                    };\n                                };\n                                'install \"([^\"]+)\"(?! \\\\(version: .+?\\\\))': {\n                                    gettext: any;\n                                    placeholders: {\n                                        softwareName: string;\n                                    };\n                                };\n                                'delete \"(.+?)\" \\\\(version: (.+?)\\\\)': {\n                                    gettext: any;\n                                    placeholders: {\n                                        softwareName: string;\n                                        softwareVersion: string;\n                                    };\n                                };\n                                'delete \"([^\"]+)\"(?! \\\\(version: .+?\\\\))': {\n                                    gettext: any;\n                                    placeholders: {\n                                        softwareName: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                '^Assign device profile (.+?) to device (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        profileName: string;\n                        deviceName: string;\n                    };\n                };\n                '^(.+)pplication for tenant (.+) with properties \\\\( (.+?) \\\\) already exists$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                        valuesList: string;\n                    };\n                };\n                '^Authentication failed! : User account is locked$': {\n                    gettext: any;\n                };\n                '^Availability monitoring record$': {\n                    gettext: any;\n                };\n                '^Can not activate a certificate which is either expired or not yet valid$': {\n                    gettext: any;\n                };\n                '^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.': {\n                    gettext: any;\n                    placeholders: {\n                        fingerprint: string;\n                    };\n                };\n                '^Cannot change password. : Provided token does not exist.$': {\n                    gettext: any;\n                };\n                '^Cannot deploy module (.*)$': {\n                    gettext: any;\n                    placeholders: {\n                        errorMessage: string;\n                    };\n                };\n                \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+) \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                    gettext: any;\n                    placeholders: {\n                        moduleName: string;\n                        expression: string;\n                        incorrectExpression: string;\n                        line: string;\n                        column: string;\n                    };\n                };\n                \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+) near reserved keyword '(.+?)' \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                    gettext: any;\n                    placeholders: {\n                        moduleName: string;\n                        expression: string;\n                        incorrectExpression: string;\n                        line: string;\n                        column: string;\n                        keyword: string;\n                    };\n                };\n                \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+), please check the where clause \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                    gettext: any;\n                    placeholders: {\n                        moduleName: string;\n                        expression: string;\n                        incorrectExpression: string;\n                        line: string;\n                        column: string;\n                    };\n                };\n                \"^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\\\((.+?)\\\\) \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                    gettext: any;\n                    placeholders: {\n                        moduleName: string;\n                        expression: string;\n                        scriptName: string;\n                        scriptDialect: string;\n                        missingSyntax: string;\n                        affectedStatement: string;\n                    };\n                };\n                \"^Cannot execute bulk operation on empty group. Group with id='(\\\\d+?)' doesn't have child assets.$\": {\n                    gettext: any;\n                    placeholders: {\n                        groupId: string;\n                    };\n                };\n                \"^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\\\d+?)' doesn't have child assets$\": {\n                    gettext: any;\n                    placeholders: {\n                        groupId: string;\n                    };\n                };\n                '^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        failureReason: string;\n                    };\n                };\n                '^Cannot reschedule bulk operation. All its operations are successful$': {\n                    gettext: any;\n                };\n                '^Cannot reset user password : Cannot find user with such email.$': {\n                    gettext: any;\n                };\n                '^Cannot update/delete application binary via this endpoint$': {\n                    gettext: any;\n                };\n                \"^Can't delete user because it is used by another managed object$\": {\n                    gettext: any;\n                };\n                '^Cep module created$': {\n                    gettext: any;\n                };\n                '^Cep module updated$': {\n                    gettext: any;\n                };\n                '^Cep module deleted$': {\n                    gettext: any;\n                };\n                '^Cep module \"(.+?)\" created$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Cep module \"(.+?)\" updated$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Cep module \"(.+?)\" deleted$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Command state is invalid: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        violations: {\n                            capture: string;\n                            translate: {\n                                '(\\\\w+?) - may not be null': {\n                                    gettext: any;\n                                    placeholders: {\n                                        field: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                '^Could not connect to endpoint (.+)\\\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\\\. If you expected that key, please remove the previous one from configuration to allow for connection\\\\.$': {\n                    gettext: any;\n                    placeholders: {\n                        endpointName: string;\n                        keyType: string;\n                        fingerprint: string;\n                        host: string;\n                        port: string;\n                    };\n                };\n                '^Could not login to ssh server on endpoint \"(.+)\"\\\\. Provided credential for user \"(.+)\" is incorrect\\\\.$': {\n                    gettext: any;\n                    placeholders: {\n                        endpointName: string;\n                        userName: string;\n                    };\n                };\n                '^Could not save object remoteAccessUpdate: (.+)$': {\n                    gettext: string;\n                    placeholders: {\n                        errorMessages: {\n                            capture: string;\n                            translate: {\n                                'Could not recognize host-key format': {\n                                    gettext: any;\n                                };\n                                'Could not recognize key-pair format': {\n                                    gettext: any;\n                                };\n                            };\n                        };\n                    };\n                };\n                '^Could not update user. : Error persisting user (.+?)!$': {\n                    gettext: any;\n                    placeholders: {\n                        username: string;\n                    };\n                };\n                '^Create bulk operation$': {\n                    gettext: any;\n                };\n                '^Create bulk operation: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        updatesList: {\n                            capture: string;\n                            translate: {\n                                \"status='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        status: string;\n                                    };\n                                };\n                                \"generalStatus='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        generalStatus: string;\n                                    };\n                                };\n                                \"progress='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        progress: string;\n                                    };\n                                };\n                                'note=(.+?)': {\n                                    gettext: any;\n                                    placeholders: {\n                                        note: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                '^Creation ramp must be greater than (\\\\d+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        minSeconds: string;\n                    };\n                };\n                '^Created container$': {\n                    gettext: any;\n                };\n                '^Created pod: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        imageName: string;\n                    };\n                };\n                '^Creating device on LoRa platform failed$': {\n                    gettext: any;\n                };\n                '^CSV file contained empty dataset$': {\n                    gettext: any;\n                };\n                '^Cycle detected for route (.+?)!$': {\n                    gettext: any;\n                    placeholders: {\n                        route: string;\n                    };\n                };\n                '^Data broker processing is currently overloaded and may stop forwarding your data\\\\. Please contact support\\\\.$': {\n                    gettext: any;\n                };\n                '^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\\\. Please contact support\\\\.$': {\n                    gettext: any;\n                };\n                '^DATAHUB_ADMINISTRATOR$': {\n                    gettext: any;\n                };\n                '^DATAHUB_MANAGER$': {\n                    gettext: any;\n                };\n                '^DATAHUB_READER$': {\n                    gettext: any;\n                };\n                '^Delete bulk operation$': {\n                    gettext: any;\n                };\n                '^Delete bulk operation: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        updatesList: {\n                            capture: string;\n                            translate: {\n                                \"status='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        status: string;\n                                    };\n                                };\n                                \"generalStatus='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        generalStatus: string;\n                                    };\n                                };\n                                \"progress='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        progress: string;\n                                    };\n                                };\n                                'note=(.+?)': {\n                                    gettext: any;\n                                    placeholders: {\n                                        note: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                \"^Device id '(.+?)' contains '(.+?)' character which is not permitted.$\": {\n                    gettext: any;\n                    placeholders: {\n                        deviceId: string;\n                        invalidCharacter: string;\n                    };\n                };\n                \"^Device name: '(.+?)', alarm text: '(.+?)'$\": {\n                    gettext: any;\n                    placeholders: {\n                        deviceName: string;\n                        alarmText: string;\n                    };\n                };\n                '^Device (.+?) already registered to a tenant.$': {\n                    gettext: any;\n                    placeholders: {\n                        devEUI: string;\n                    };\n                };\n                '^Display name$': {\n                    gettext: any;\n                };\n                '^Domain name in uploaded certificate differs from the one in use$': {\n                    gettext: any;\n                };\n                '^Domain name is already in use by another tenant!$': {\n                    gettext: any;\n                };\n                '^Duplicated connector for instanceUrl (.+?)!$': {\n                    gettext: any;\n                    placeholders: {\n                        targetUrl: string;\n                    };\n                };\n                '^Duplicated connector for name (.+?)!$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Entry is outside of the target dir: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        path: string;\n                    };\n                };\n                '^Error during password validation. : Password must have at least (\\\\d+?) characters and no more than (\\\\d+?) and must contain only Latin1 characters.$': {\n                    gettext: any;\n                    placeholders: {\n                        minCharactersCount: string;\n                        maxCharactersCount: string;\n                    };\n                };\n                '^Error during password validation. : Your password has been used already. Choose another.$': {\n                    gettext: any;\n                };\n                \"^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n                    gettext: any;\n                    placeholders: {\n                        moduleName: string;\n                        statementNumber: string;\n                        expression: string;\n                        keyword: string;\n                    };\n                };\n                '^External id not found; external id = ID \\\\[type=(.+?), value=(.+?)\\\\]$': {\n                    gettext: any;\n                    placeholders: {\n                        type: string;\n                        value: string;\n                    };\n                };\n                '^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\\\d+)$': {\n                    gettext: any;\n                    placeholders: {\n                        applicationId: string;\n                    };\n                };\n                '^Http status code: 404\\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}': {\n                    gettext: any;\n                };\n                '^Failed to delete application.  : Cannot remove application assigned to other tenants.$': {\n                    gettext: any;\n                };\n                '^Failed to extract certificate from PKCS12$': {\n                    gettext: any;\n                };\n                '^Failed to update domain at the platform$': {\n                    gettext: any;\n                };\n                \"^Finding device data from database failed : No managedObject for id '(.+?)'!$\": {\n                    gettext: any;\n                    placeholders: {\n                        deviceId: string;\n                    };\n                };\n                '^Following mandatory fields should be included: (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        fields: string;\n                    };\n                };\n                '^Global Role updated$': {\n                    gettext: any;\n                };\n                '^Global Role (.+?) updated$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Global Role (.+?) updated: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        updatesList: {\n                            capture: string;\n                            translate: {\n                                'applications \\\\[([^\\\\]]+?)\\\\] added': {\n                                    gettext: any;\n                                    placeholders: {\n                                        list: string;\n                                    };\n                                };\n                                'applications \\\\[([^\\\\]]+?)\\\\] removed': {\n                                    gettext: any;\n                                    placeholders: {\n                                        list: string;\n                                    };\n                                };\n                                'roles \\\\[([^\\\\]]+?)\\\\] added': {\n                                    gettext: any;\n                                    placeholders: {\n                                        list: string;\n                                    };\n                                };\n                                'roles \\\\[([^\\\\]]+?)\\\\] removed': {\n                                    gettext: any;\n                                    placeholders: {\n                                        list: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                '^Global Roles$': {\n                    gettext: any;\n                };\n                '^Operation updated: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        updatesList: {\n                            capture: string;\n                            translate: {\n                                \"status='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        status: string;\n                                    };\n                                };\n                                \"description='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        description: string;\n                                    };\n                                };\n                                \"device name='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        deviceName: string;\n                                    };\n                                };\n                                \"failure reason='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        failureReason: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                '^ID \\\\[type=(.+?), value=(.+?)\\\\] was already bound to different Global ID.$': {\n                    gettext: any;\n                    placeholders: {\n                        type: string;\n                        value: string;\n                    };\n                };\n                '^Invalid credentials! : Bad credentials$': {\n                    gettext: any;\n                };\n                '^Invalid credentials! : No phone number provided$': {\n                    gettext: any;\n                };\n                '^Inventory Role removed$': {\n                    gettext: any;\n                };\n                '^Inventory Role (.+?) removed': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Inventory Role updated$': {\n                    gettext: any;\n                };\n                '^Inventory Role (.+?) updated': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^I/O error: Connection refused; nested exception is Connection refused : Connection refused': {\n                    gettext: any;\n                };\n                '^I/O error: Read timed out; nested exception is Read timed out : Read timed out': {\n                    gettext: any;\n                };\n                '^Log file requested$': {\n                    gettext: any;\n                };\n                '^Managed object deleted$': {\n                    gettext: any;\n                };\n                '^Managed object \"(.+?)\" deleted$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Maximum file size exceeded$': {\n                    gettext: any;\n                };\n                \"^Message with ID (.+?) doesn't exist in smart rest template (.+?)$\": {\n                    gettext: any;\n                    placeholders: {\n                        messageId: string;\n                        templateId: string;\n                    };\n                };\n                '^name of Application cannot start with \\'(.+)\\' prefix.$': {\n                    gettext: any;\n                    placeholders: {\n                        prefix: string;\n                    };\n                };\n                '^NewDeviceRequest for id = (.+?) already exists.$': {\n                    gettext: any;\n                    placeholders: {\n                        id: string;\n                    };\n                };\n                '^NewDeviceRequest for device id (.+?) is in state BLOCKED, not PENDING_ACCEPTANCE.$': {\n                    gettext: any;\n                    placeholders: {\n                        deviceId: string;\n                    };\n                };\n                '^No communication with device since (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        timestamp: string;\n                    };\n                };\n                '^No data received from device within required interval.$': {\n                    gettext: any;\n                };\n                '^No LoRa provider settings are found. Please configure the connectivity settings.$': {\n                    gettext: any;\n                };\n                '^Not within any context!$': {\n                    gettext: any;\n                };\n                '^Maximum age cannot be bigger than 10 years.$': {\n                    gettext: any;\n                };\n                '^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\\\d+) characters.$': {\n                    gettext: any;\n                    placeholders: {\n                        maxLength: string;\n                    };\n                };\n                '^Microservice not available.*$': {\n                    gettext: any;\n                };\n                '^Operation created$': {\n                    gettext: any;\n                };\n                '^Operation updated$': {\n                    gettext: any;\n                };\n                \"^Operation created: status='(.+?)'.\": {\n                    gettext: any;\n                    placeholders: {\n                        status: string;\n                    };\n                };\n                '^Option created$': {\n                    gettext: any;\n                };\n                '^Option \"(.+?)\" created$': {\n                    gettext: any;\n                    placeholders: {\n                        option: string;\n                    };\n                };\n                '^Option deleted$': {\n                    gettext: any;\n                };\n                '^Option \"(.+?)\" deleted$': {\n                    gettext: any;\n                    placeholders: {\n                        option: string;\n                    };\n                };\n                '^Owner field error. : Cannot introduce cyclic dependency.': {\n                    gettext: any;\n                };\n                '^Password change is temporary blocked.$': {\n                    gettext: any;\n                };\n                '^Password cipher does not match': {\n                    gettext: any;\n                };\n                '^Platform application cannot be added to, nor removed from any tenant.$': {\n                    gettext: any;\n                };\n                '^Private key must be provided in KEY_PAIR credentials$': {\n                    gettext: any;\n                };\n                '^Private key cipher does not match': {\n                    gettext: any;\n                };\n                '^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$': {\n                    gettext: any;\n                    placeholders: {\n                        protocol: string;\n                        credentialsType: string;\n                    };\n                };\n                '^Provided security key does not match key stored for device (.+?).$': {\n                    gettext: any;\n                    placeholders: {\n                        deviceId: string;\n                    };\n                };\n                '^Provided security key does not match key stored for device (.+?).Reached maximum number of failed attempts while trying to register this device. Request will now be blocked and has to be removed manually to restart the process.$': {\n                    gettext: any;\n                    placeholders: {\n                        deviceId: string;\n                    };\n                };\n                '^pulling image \"(.+)\"$': {\n                    gettext: any;\n                    placeholders: {\n                        imageName: string;\n                    };\n                };\n                '^Real-time event processing is currently overloaded and may stop processing your events\\\\. Please contact support\\\\.$': {\n                    gettext: any;\n                };\n                '^Resource ID \\\\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\\\] for this request not found.$': {\n                    gettext: any;\n                    placeholders: {\n                        id: string;\n                    };\n                };\n                '^Retrieve configuration snapshot from device (.+?)': {\n                    gettext: any;\n                    placeholders: {\n                        deviceName: string;\n                    };\n                };\n                '^Retrieve (.+?) configuration snapshot from device (.+?)': {\n                    gettext: any;\n                    placeholders: {\n                        configurationType: string;\n                        deviceName: string;\n                    };\n                };\n                '^Scaled up replica set (.+) to (\\\\d+)$': {\n                    gettext: any;\n                    placeholders: {\n                        replicaSetName: string;\n                        scaleNumber: string;\n                    };\n                };\n                '^Send configuration snapshot (.+?) of configuration type (.+?) to device (.+?)': {\n                    gettext: any;\n                    placeholders: {\n                        snapshotName: string;\n                        configurationType: string;\n                        deviceName: string;\n                    };\n                };\n                '^Send configuration snapshot (.+?) to device (.+?)': {\n                    gettext: any;\n                    placeholders: {\n                        snapshotName: string;\n                        deviceName: string;\n                    };\n                };\n                '^Simulator state is invalid: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        violations: {\n                            capture: string;\n                            translate: {\n                                '(\\\\w+?) - may not be null': {\n                                    gettext: any;\n                                    placeholders: {\n                                        field: string;\n                                    };\n                                };\n                                '(\\\\w+?) - must be less than or equal to (\\\\d+)': {\n                                    gettext: any;\n                                    placeholders: {\n                                        field: string;\n                                        maxValue: string;\n                                    };\n                                };\n                                '(\\\\w+?) - should not contain null values': {\n                                    gettext: any;\n                                    placeholders: {\n                                        field: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                \"^Smart rest template (.+?) doesn't exist$\": {\n                    gettext: any;\n                    placeholders: {\n                        templateId: string;\n                    };\n                };\n                '^Smart rule created$': {\n                    gettext: any;\n                };\n                '^Smart rule updated$': {\n                    gettext: any;\n                };\n                '^Smart rule enabled$': {\n                    gettext: any;\n                };\n                '^Smart rule disabled$': {\n                    gettext: any;\n                };\n                '^Smart rule deleted$': {\n                    gettext: any;\n                };\n                '^Smart rule \"(.+?)\" created$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Smart rule \"(.+?)\" updated$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Smart rule \"(.+?)\" enabled$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Smart rule \"(.+?)\" disabled$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Smart rule \"(.+?)\" deleted$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Started container$': {\n                    gettext: any;\n                };\n                '^Successfully assigned (.+) to (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        imageName: string;\n                        address: string;\n                    };\n                };\n                '^Successfully pulled image \"(.+)\"$': {\n                    gettext: any;\n                    placeholders: {\n                        imageName: string;\n                    };\n                };\n                '^Tenant creation failed. : Tenant with given id already exists.$': {\n                    gettext: any;\n                };\n                '^Tenant id cannot be a reserved sql keyword \"(.+?)\".$': {\n                    gettext: any;\n                    placeholders: {\n                        tenantId: string;\n                    };\n                };\n                '^Tenant \"(.+?)\" activated$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                    };\n                };\n                '^Tenant (.+?) has sub-tenants, please remove them first!$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                    };\n                };\n                '^Tenant activated$': {\n                    gettext: any;\n                };\n                '^Tenant \"(.+?)\" created$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                    };\n                };\n                '^Tenant created$': {\n                    gettext: any;\n                };\n                '^Tenant \"(.+?)\" deleted$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                    };\n                };\n                '^Tenant deleted$': {\n                    gettext: any;\n                };\n                '^Tenant \"(.+?)\" suspended$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                    };\n                };\n                '^Tenant suspended$': {\n                    gettext: any;\n                };\n                '^Tenant \"(.+?)\" updated: (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        tenant: string;\n                        properties: string;\n                    };\n                };\n                '^Tenant updated$': {\n                    gettext: any;\n                };\n                '^Too Many Requests$': {\n                    gettext: any;\n                };\n                \"^User alias equals username '(.+)'$\": {\n                    gettext: any;\n                };\n                '^User created$': {\n                    gettext: any;\n                };\n                '^User (.+?) created$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^User deleted$': {\n                    gettext: any;\n                };\n                '^User (.+?) deleted$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^User logout$': {\n                    gettext: any;\n                };\n                '^(.+?) user logout$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^(.+?) user logged in to the platform with OAuth internal login mode$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^(.+?) user login with OAuth internal mode failed$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^User updated$': {\n                    gettext: any;\n                };\n                '^User (.+?) updated: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        updatesList: {\n                            capture: string;\n                            translate: {\n                                \"delegatedBy='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        delegate: string;\n                                    };\n                                };\n                                \"owner='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        owner: string;\n                                    };\n                                };\n                                'inventory assignment \\\\[(.+?)\\\\] added': {\n                                    gettext: any;\n                                    placeholders: {\n                                        inventoryAssignment: string;\n                                    };\n                                };\n                                'inventory assignment \\\\[(.+?)\\\\] removed': {\n                                    gettext: any;\n                                    placeholders: {\n                                        inventoryAssignment: string;\n                                    };\n                                };\n                                'applications \\\\[(.+?)\\\\] added$': {\n                                    gettext: any;\n                                    placeholders: {\n                                        applicationsList: string;\n                                    };\n                                };\n                                'applications \\\\[(.+?)\\\\] removed$': {\n                                    gettext: any;\n                                    placeholders: {\n                                        applicationsList: string;\n                                    };\n                                };\n                                'global roles \\\\[(.+?)\\\\] added$': {\n                                    gettext: any;\n                                    placeholders: {\n                                        globalRolesList: string;\n                                    };\n                                };\n                                'global roles \\\\[(.+?)\\\\] removed$': {\n                                    gettext: any;\n                                    placeholders: {\n                                        globalRolesList: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                \"^User with username '(.+?)' already exists! : Duplicated: (.+?)$\": {\n                    gettext: any;\n                    placeholders: {\n                        username: string;\n                    };\n                };\n                \"^User with username or alias '(.+)' already exists! : Duplicated: (.+)$\": {\n                    gettext: any;\n                    placeholders: {\n                        usernameOrAlias: string;\n                    };\n                };\n                \"^User with email '(.+?)' already exists! : Duplicated: (.+?)$\": {\n                    gettext: any;\n                    placeholders: {\n                        email: string;\n                    };\n                };\n                '^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$': {\n                    gettext: any;\n                    placeholders: {\n                        option: string;\n                    };\n                };\n                '^unable to find option with given key (.+?) : There is no system property for key (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        option: string;\n                    };\n                };\n                '^Write failed with error code 16733 and error message \\'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"\\'$': {\n                    gettext: any;\n                };\n                '^Write failed with error code 17280 and error message \\'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }\\'$': {\n                    gettext: any;\n                };\n                '^You have reached devices limit. No more devices can be registered.$': {\n                    gettext: any;\n                };\n                '^(.+) succeeded for volume \"(.+)\"': {\n                    gettext: any;\n                    placeholders: {\n                        operation: string;\n                        volume: string;\n                    };\n                };\n                \"^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\\\[(.+)\\\\] for statement '(.+)': (.+) : (.+)$\": {\n                    gettext: any;\n                    placeholders: {\n                        tenantId: string;\n                        moduleName: string;\n                        methodName: string;\n                        classPath: string;\n                        parameters: string;\n                        statement: string;\n                        exceptionType: string;\n                        exceptionMessage: string;\n                    };\n                };\n                '^No nodes are available that match all of the predicates: (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        predicates: string;\n                    };\n                };\n                '^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n                    gettext: any;\n                    placeholders: {\n                        requestMethod: string;\n                        uri: string;\n                        protocol: string;\n                    };\n                };\n                '^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n                    gettext: any;\n                    placeholders: {\n                        requestMethod: string;\n                        uri: string;\n                        protocol: string;\n                    };\n                };\n                '^Error syncing pod$': {\n                    gettext: any;\n                };\n                '^Failed create pod sandbox.$': {\n                    gettext: any;\n                };\n                '^Exception on tenant (.+) in statement \\'(.+)\\': Http status code: (\\\\d+) \\\\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\\\}$': {\n                    gettext: any;\n                    placeholders: {\n                        tenantId: string;\n                        statement: string;\n                        httpStatusCode: string;\n                        message: string;\n                    };\n                };\n                \"^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$\": {\n                    gettext: any;\n                    placeholders: {\n                        userName: string;\n                    };\n                };\n                '^Added new child device to \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                    gettext: any;\n                    placeholders: {\n                        parentDeviceName: string;\n                        parentDeviceId: string;\n                    };\n                };\n                '^Updated child device of \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                    gettext: any;\n                    placeholders: {\n                        parentDeviceName: string;\n                        parentDeviceId: string;\n                    };\n                };\n                '^Added child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        id: string;\n                    };\n                };\n                '^Removed child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        id: string;\n                    };\n                };\n                '^Change value of \"(.+)\" to (.+) (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        value: string;\n                        unit: string;\n                    };\n                };\n                '^Change value of \"(.+)\" to (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        value: string;\n                    };\n                };\n                '^Change status of \"(.+)\" to \"(.+)\".$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        label: string;\n                    };\n                };\n                '^Send message \"(.+)\".$': {\n                    gettext: any;\n                    placeholders: {\n                        str: string;\n                    };\n                };\n                '^Close relay (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        number: string;\n                    };\n                };\n                '^Open relay (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        number: string;\n                    };\n                };\n                '^Change trace status to (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        state: string;\n                    };\n                };\n                '^Change relay status to (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        status: string;\n                    };\n                };\n                '^Closing relay (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        number: string;\n                    };\n                };\n                '^Opening relay (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        number: string;\n                    };\n                };\n                '^Update bulk operation$': {\n                    gettext: any;\n                };\n                '^Update bulk operation: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        updatesList: {\n                            capture: string;\n                            translate: {\n                                \"status='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        status: string;\n                                    };\n                                };\n                                \"generalStatus='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        generalStatus: string;\n                                    };\n                                };\n                                \"progress='(.+?)'\": {\n                                    gettext: any;\n                                    placeholders: {\n                                        progress: string;\n                                    };\n                                };\n                                'note=(.+?)': {\n                                    gettext: any;\n                                    placeholders: {\n                                        note: string;\n                                    };\n                                };\n                            };\n                        };\n                    };\n                };\n                '^Update firmware to: \"?(.+?)\"? \\\\(version: (.+)\\\\)\\\\.?$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                        version: string;\n                    };\n                };\n                '^Update firmware to: \"?(.+?)\"?\\\\.?$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Update configuration to (.+).$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Apply device profile: (.+).?$': {\n                    gettext: any;\n                    placeholders: {\n                        name: string;\n                    };\n                };\n                '^Execute generic command: (.+).?$': {\n                    gettext: any;\n                    placeholders: {\n                        command: string;\n                    };\n                };\n                '^Failed to refresh application. : Cannot refresh non local-hosted application.$': {\n                    gettext: any;\n                };\n                '^Failed to refresh application. : Cannot refresh application without active version id.$': {\n                    gettext: any;\n                };\n                '^Scaled down replica set (.+) to (\\\\d+)$': {\n                    gettext: any;\n                    placeholders: {\n                        replicaSetName: string;\n                        scaleNumber: string;\n                    };\n                };\n                '^Deleted pod: (.+)$': {\n                    gettext: any;\n                    placeholders: {\n                        imageName: string;\n                    };\n                };\n                '^Container image \"(.+)\" already present on machine$': {\n                    gettext: any;\n                    placeholders: {\n                        imageName: string;\n                    };\n                };\n                '^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$': {\n                    gettext: any;\n                };\n                '^Authentication with id: (.+?) configuration updated.$': {\n                    gettext: any;\n                    placeholders: {\n                        id: string;\n                    };\n                };\n                '^Authentication configuration with id: (.+?) added.$': {\n                    gettext: any;\n                    placeholders: {\n                        id: string;\n                    };\n                };\n                '^Configuration type: basic.$': {\n                    gettext: any;\n                };\n                '^Configuration type: oauth2_internal.$': {\n                    gettext: any;\n                };\n                '^Configuration type: oauth2.$': {\n                    gettext: any;\n                };\n                '^Application activated$': {\n                    gettext: any;\n                };\n                '^Hosted application \"(.+?)\" activated: activeVersionId \\\\[(.+?)\\\\] added$': {\n                    gettext: any;\n                    placeholders: {\n                        appName: string;\n                        activeVersionId: string;\n                    };\n                };\n                '^Application deleted$': {\n                    gettext: any;\n                };\n                '^Hosted application \"(.+?)\" deleted for tenant \"(.+?)\"$': {\n                    gettext: any;\n                    placeholders: {\n                        appName: string;\n                        tenant: string;\n                    };\n                };\n                '^LWM2M device type$': {\n                    gettext: any;\n                };\n                '^LWM2M server URI$': {\n                    gettext: any;\n                };\n                '^coaps://<LWM2M-server-domain>:<coaps-port>$': {\n                    gettext: any;\n                };\n                '^CREATE$': {\n                    gettext: any;\n                };\n                '^DELETE$': {\n                    gettext: any;\n                };\n                '^Endpoint client ID$': {\n                    gettext: any;\n                };\n                '^Server public key$': {\n                    gettext: any;\n                };\n                '^Generate bootstrap server config$': {\n                    gettext: any;\n                };\n                '^LWM2M bootstrap short server ID$': {\n                    gettext: any;\n                };\n                '^LWM2M short server ID$': {\n                    gettext: any;\n                };\n                '^Registration lifetime$': {\n                    gettext: any;\n                };\n                '^in seconds$': {\n                    gettext: any;\n                };\n                '^Security instance offset$': {\n                    gettext: any;\n                };\n                '^Default minimum period$': {\n                    gettext: any;\n                };\n                '^Default maximum period$': {\n                    gettext: any;\n                };\n                '^Binding mode$': {\n                    gettext: any;\n                };\n                '^applicable for LWM2M 1\\\\.0$': {\n                    gettext: any;\n                };\n                '^Awake time registration parameter$': {\n                    gettext: any;\n                };\n                '^in milliseconds, 0 means device is always online$': {\n                    gettext: any;\n                };\n                '^Use common timestamp resources 5518 and 6050 or object specific timestamp for object 6 reported by the device if available$': {\n                    gettext: any;\n                };\n                '^Notification storing when disabled or offline$': {\n                    gettext: any;\n                };\n                '^Disable timeout$': {\n                    gettext: any;\n                };\n                '^LWM2M request timeout$': {\n                    gettext: any;\n                };\n                '^in milliseconds$': {\n                    gettext: any;\n                };\n                '^Binary delivery encoding$': {\n                    gettext: any;\n                };\n                '^Firmware update delivery method$': {\n                    gettext: any;\n                };\n                '^Firmware update supported device protocol$': {\n                    gettext: any;\n                };\n                '^Firmware update reset mechanism$': {\n                    gettext: any;\n                };\n                '^Firmware update URL$': {\n                    gettext: any;\n                };\n                '^Failed to find operation data in the internal memory store\\\\. Try again!$': {\n                    gettext: any;\n                };\n                '^Security mode$': {\n                    gettext: any;\n                };\n                '^Bootstrap PSK ID$': {\n                    gettext: any;\n                };\n                '^Bootstrap pre-shared key$': {\n                    gettext: any;\n                };\n                '^LWM2M PSK ID$': {\n                    gettext: any;\n                };\n                '^LWM2M pre-shared key$': {\n                    gettext: any;\n                };\n                '^LWM2M bulk device upload operation$': {\n                    gettext: any;\n                };\n                '^This operation is only triggered by the agent when user uploads a CSV file with all required information to register new LWM2M devices\\\\. The source of the operation is the LWM2M device connector\\\\. Users are not able to trigger this operation using the shell command\\\\.$': {\n                    gettext: any;\n                };\n                '^Write$': {\n                    gettext: any;\n                };\n                '^Execute$': {\n                    gettext: any;\n                };\n                '^Execute with parameters$': {\n                    gettext: any;\n                };\n                '^Delete Instance$': {\n                    gettext: any;\n                };\n                '^Create Instance$': {\n                    gettext: any;\n                };\n                '^Read Object$': {\n                    gettext: any;\n                };\n                '^Read Instance$': {\n                    gettext: any;\n                };\n                '^LWM2M bulk device removal operation$': {\n                    gettext: any;\n                };\n                '^This operation is only triggered by the agent when user uploads a CSV file with a list of endpoint IDs to delete from C8Y\\\\.The source of the operation is the LWM2M device connector\\\\. Users are not able to trigger this operation using the shell command\\\\.$': {\n                    gettext: any;\n                };\n                '^Could not find device$': {\n                    gettext: any;\n                };\n                '^Exception occurred while removing device (.+?)$': {\n                    gettext: any;\n                    placeholders: {\n                        exceptionMessage: string;\n                    };\n                };\n                '^This command can be used to migrate LWM2M devices which are created in a non-standard way\\\\. It can take comma-separated device managed object IDs as parameters\\\\. If the IDs are specified then the migration will be done only for those devices\\\\. If the command is sent without any parameters then the agent will look up for possible Lwm2m devices that are not created in a standard way and try to migrate them\\\\. Usage: migrateLwm2mDevices 1122,3344 or migrateLwm2mDevices$': {\n                    gettext: any;\n                };\n                '^Unable to migrate devices$': {\n                    gettext: any;\n                };\n                '^Error while processing report$': {\n                    gettext: any;\n                };\n                '^Expected 1 endpointId argument$': {\n                    gettext: any;\n                };\n                '^LWM2M device registration$': {\n                    gettext: any;\n                };\n                '^The required and optional properties to register and setup LWM2M Devices$': {\n                    gettext: any;\n                };\n                '^Bootstrap$': {\n                    gettext: any;\n                };\n                '^Advanced$': {\n                    gettext: any;\n                };\n                '^Bulk LWM2M device registration$': {\n                    gettext: any;\n                };\n                '^This command returns a list of shell commands with description that can be created for the Lwm2m device connector\\\\.$': {\n                    gettext: any;\n                };\n                '^The following operations are supported:': {\n                    gettext: any;\n                };\n                '^PSK template$': {\n                    gettext: any;\n                };\n                '^A bulk registration CSV template showing all mandatory fields$': {\n                    gettext: any;\n                };\n                '^Mandatory fields template$': {\n                    gettext: any;\n                };\n                '^General template$': {\n                    gettext: any;\n                };\n                '^A bulk registration CSV template for NO_SEC devices with all optional fields$': {\n                    gettext: any;\n                };\n                '^A general bulk registration CSV template showing all possible fields$': {\n                    gettext: any;\n                };\n                '^A bulk registration CSV template for PSK devices with all optional fields$': {\n                    gettext: any;\n                };\n                '^NO_SEC template$': {\n                    gettext: any;\n                };\n            };\n            multi: boolean;\n            useFactory?: undefined;\n            deps?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: import(\"@angular/core\").InjectionToken<unknown>;\n            useFactory: typeof localePathFactory;\n            deps: (typeof OptionsService)[];\n            useValue?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: import(\"@angular/core\").InjectionToken<unknown>;\n            useFactory: typeof languagesFactory;\n            deps: (typeof OptionsService)[];\n            useValue?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: typeof TranslateLoader;\n            useFactory: typeof translateLoaderFactory;\n            deps: (import(\"@angular/core\").InjectionToken<unknown> | typeof OptionsService | typeof CachedLocaleDictionaryService | typeof HttpClient)[];\n            useValue?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        } | {\n            provide: typeof TranslateCompiler;\n            useClass: typeof TranslateFakeCompiler;\n            useFactory?: undefined;\n            deps?: undefined;\n            useValue?: undefined;\n            multi?: undefined;\n        } | {\n            provide: typeof TranslateParser;\n            useClass: typeof TranslateParserCustom;\n            useFactory?: undefined;\n            deps?: undefined;\n            useValue?: undefined;\n            multi?: undefined;\n        } | {\n            provide: typeof MissingTranslationHandler;\n            useClass: typeof MissingTranslationCustomHandler;\n            useFactory?: undefined;\n            deps?: undefined;\n            useValue?: undefined;\n            multi?: undefined;\n        } | {\n            provide: import(\"@angular/core\").InjectionToken<string>;\n            useValue: boolean;\n            useFactory?: undefined;\n            deps?: undefined;\n            multi?: undefined;\n            useClass?: undefined;\n        })[];\n    };\n}\n"]}