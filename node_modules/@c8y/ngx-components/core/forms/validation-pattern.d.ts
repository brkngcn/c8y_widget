export interface ValidationRules {
    pattern?: RegExp;
    message?: string;
    maxLength?: number;
    minLength?: number;
}
export declare enum DatapointLibraryValidationErrors {
    IS_REQUIRED = "required",
    PATTERN = "pattern",
    SHOULD_CONTAIN_NUMBER = "number",
    SHOULD_BE_DEFINED = "should-be-defined",
    GREATER_THAN_SCALE_MAX = "greater-than-scale-max",
    LESS_THAN_SCALE_MIN = "less-than-scale-min",
    GREATER_THAN_RANGE_MAX = "greater-than-range-max",
    LESS_THAN_RANGE_MIN = "less-than-range-min",
    MIN_ACTIVE_COUNT = "minActiveCount",
    MAX_ACTIVE_COUNT = "maxActiveCount"
}
export declare class ValidationPattern {
    static readonly messages: {
        readonly deviceId: any;
        readonly domain: any;
        readonly email: any;
        readonly emails: any;
        readonly internationalPhoneNumber: any;
        readonly loginAlias: any;
        readonly max: any;
        readonly min: any;
        readonly minLength: any;
        readonly minlength: any;
        readonly maxLength: any;
        readonly maxlength: any;
        readonly pattern: any;
        readonly opcuaBrowsePath: any;
        readonly password: any;
        readonly passwordConfirm: any;
        readonly passwordStrength: any;
        readonly phoneNumber: any;
        readonly required: any;
        readonly tenantId: any;
        readonly urlSegment: any;
        readonly user: any;
        readonly noDots: any;
        readonly number: any;
        readonly "should-be-defined": any;
        readonly "greater-than-scale-max": any;
        readonly "less-than-scale-min": any;
        readonly "greater-than-range-max": any;
        readonly "less-than-range-min": any;
    };
    static readonly rules: {
        deviceId: {
            pattern: RegExp;
        };
        domain: {
            pattern: RegExp;
        };
        groupName: {
            maxLength: number;
        };
        hostname: {
            pattern: RegExp;
        };
        ip: {
            pattern: RegExp;
        };
        opcuaBrowsePath: {
            pattern: RegExp;
        };
        password: {
            pattern: RegExp;
        };
        phoneNumber: {
            pattern: RegExp;
        };
        tenantId: {
            pattern: RegExp;
        };
        user: {
            pattern: RegExp;
        };
        urlSegment: {
            pattern: RegExp;
        };
        loginAlias: {
            pattern: RegExp;
        };
        noDots: {
            pattern: RegExp;
        };
    };
    static get(key: string): ValidationRules;
}
