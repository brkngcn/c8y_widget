{"version":3,"file":"docs.service.d.ts","sources":["docs.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Injector } from '@angular/core';\nimport { OptionsService } from '../common/options.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { DocLink, DocLinkExtension } from './docs.models';\nimport { ExtensionPoint } from '../common/extension-hooks';\nimport { Observable, Subject } from 'rxjs';\nimport { Router } from '@angular/router';\nexport declare class DocsService implements ExtensionPoint<DocLinkExtension> {\n    private options;\n    private app;\n    private injector;\n    items$: Observable<DocLink[]>;\n    /**\n     * Additional factories that can be added by plugins.\n     */\n    factories: DocLinkExtension[];\n    /**\n     * Refresh the extension factories subject.\n     * @readonly\n     */\n    readonly refreshTrigger: Subject<unknown>;\n    /**\n     * Default documentation URL.\n     */\n    readonly DEFAULT_DOCS_BASE_URL = \"https://www.cumulocity.com/guides/{{ version }}\";\n    constructor(options: OptionsService, app: AppStateService, injector: Injector, router: Router);\n    getBaseUrl(uiVersion?: string | {\n        ngx: string;\n    }): string;\n    /**\n     * Takes a URL and replaces all `{{ version }}` placeholders with the relevant docs version\n     * (the version is derived from the app state or from the provided parameter).\n     * @param url Any URL that contains `{{ version }}` placeholders.\n     * @param uiVersion A version string or object, defaults to the app state version.\n     * @returns The URL with replaced `{{ version }}` placeholders.\n     */\n    getUrlWithDocsVersion(url: string, uiVersion?: string | {\n        ngx: string;\n    }): string;\n    get templateStr(): string;\n    getUserGuideLink(link: any): any;\n    list(): Promise<DocLink[]>;\n    refresh(): void;\n    get(): {\n        url: any;\n        icon: string;\n        label: string;\n        type: \"doc\" | \"quicklink\";\n        click?: any;\n    }[];\n    private getLink;\n    private prefixWithSlash;\n    /**\n     * Returns the most relevant version of documentation for the given version of UI.\n     * For maintenance versions, it's the first version in the line, e.g. 1017.0.123 -> 10.17.0.\n     * For develop versions, it's the next minor one, e.g. 1017.123.0-SNAPSHOT -> 10.18.0.\n     *\n     * @param uiVersion The version of UI.\n     * @private\n     */\n    private getDocsVersionForUiVersion;\n}\n"]}