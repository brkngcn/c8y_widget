{"version":3,"file":"search-input.component.d.ts","sources":["search-input.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { InventoryService, IManagedObject, IResultList } from '@c8y/client';\nimport { Observable } from 'rxjs';\nimport { InventorySearchService } from './inventory-search.service';\nimport { AssetTypesService } from '../asset-types/asset-types.service';\nexport declare class SearchInputComponent {\n    private router;\n    private inventory;\n    private searchService;\n    private assetTypesService;\n    mode: 'search' | 'select';\n    container: '' | 'body';\n    filter: EventEmitter<string>;\n    search: EventEmitter<string>;\n    reset: EventEmitter<string>;\n    onClick: EventEmitter<IManagedObject>;\n    term: string;\n    selected: any;\n    filterPipe: import(\"rxjs\").UnaryFunction<Observable<IManagedObject[]>, Observable<IManagedObject[]>>;\n    results$: Observable<IResultList<IManagedObject>>;\n    recentSearchResults: IManagedObject[];\n    recentlyRegisteredResults$: Observable<IResultList<IManagedObject>>;\n    isLoading: boolean;\n    noMatch: boolean;\n    private readonly RECENT_SEARCH_STORAGE_KEY;\n    private readonly MAX_RECENT_SEARCH_RESULTS;\n    private readonly DEFAULT_FILTER;\n    private readonly KEYCODE_ENTER;\n    private readonly KEYCODE_ESC;\n    private typeahead;\n    private dropdown;\n    constructor(router: Router, inventory: InventoryService, searchService: InventorySearchService, assetTypesService: AssetTypesService);\n    ngOnInit(): Promise<void>;\n    onKeydownHandler(event: KeyboardEvent): void;\n    getIcon(mo: IManagedObject): string;\n    onOpenChange(isOpen: boolean): void;\n    open(event: Event, mo: IManagedObject, term?: any): void;\n    onReset(status: {\n        icon: string;\n        $event: MouseEvent;\n    }): void;\n    keyDown(event: KeyboardEvent): void;\n    onSearch(search: string): void;\n    onFilter(search: string): void;\n    onOpenAssetTable(): void;\n    private hideDropdown;\n    private subscribeOnSearch;\n    private navigate;\n    private mergeRequest;\n    private queryInventoryService;\n    private onLoadingDone;\n    private onTypingStarted;\n}\n"]}