{"version":3,"file":"realtime-subject.service.d.ts","sources":["realtime-subject.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Realtime } from '@c8y/client';\nimport { Observable } from 'rxjs';\nimport { RealtimeMessage } from './realtime.model';\n/**\n * Service (providedIn root) that ensures to only create a single realtime subscription for each channel\n */\nexport declare class RealtimeSubjectService {\n    protected realtime: Realtime;\n    private subjects$;\n    constructor(realtime: Realtime);\n    getObservableForChannel<T>(channel: string): Observable<RealtimeMessage<T>>;\n    protected createObservableForChannel<T>(channel: string, realtime: Realtime): Observable<RealtimeMessage<T>>;\n}\n"]}