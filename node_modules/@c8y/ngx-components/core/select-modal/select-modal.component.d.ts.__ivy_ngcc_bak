import { EventEmitter, SimpleChanges, TemplateRef } from '@angular/core';
import { IIdentified } from '@c8y/client';
import { BsModalRef } from 'ngx-bootstrap/modal';
import { ISelectModalObject, ModalLabels, ModalSelectionMode } from './select-modal.model';
interface ISelectModalInternalObject extends ISelectModalObject {
    selectedId: string | number;
}
export declare class SelectModalComponent {
    private bsModalRef;
    icon: string;
    title: string;
    subTitle: string;
    items: ISelectModalInternalObject[];
    mode: ModalSelectionMode;
    disableSelected: boolean;
    showFilter: boolean;
    additionalFilterTemplate: TemplateRef<any>;
    areMoreEntries: boolean;
    set labels(labels: ModalLabels);
    get labels(): ModalLabels;
    noItemsMessage: string;
    result: EventEmitter<IIdentified[]>;
    search: EventEmitter<string>;
    onChoiceUpdated: EventEmitter<IIdentified>;
    selected: boolean;
    filterTerm: string;
    listItems: any[];
    private debouncer;
    private _labels;
    constructor(bsModalRef: BsModalRef);
    ngOnChanges(changes: SimpleChanges): Promise<void>;
    updatePipe(filterTerm: string): void;
    updateChoice({ item, id }: {
        item: any;
        id: any;
    }): void;
    dismiss(): void;
    select(): void;
    ngOnDestroy(): void;
    private getOutput;
}
export {};
