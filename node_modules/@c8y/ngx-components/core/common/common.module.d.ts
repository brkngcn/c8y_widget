import { InjectionToken } from '@angular/core';
import { TranslateService } from '../i18n/translate.service';
import { AppStateService } from './ui-state.service';
import { UserPreferencesService } from './user-preferences/user-preferences.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './empty-state/empty-state.component';
import * as ɵngcc2 from './icon.directive';
import * as ɵngcc3 from './outlet.directive';
import * as ɵngcc4 from './humanize.pipe';
import * as ɵngcc5 from './humanize-app-name.pipe';
import * as ɵngcc6 from './if-allowed.directive';
import * as ɵngcc7 from './shorten-user-name.pipe';
import * as ɵngcc8 from './forOf.directive';
import * as ɵngcc9 from './load-more.component';
import * as ɵngcc10 from './map-function.pipe';
import * as ɵngcc11 from './progress-bar.component';
import * as ɵngcc12 from './date.pipe';
import * as ɵngcc13 from './number.pipe';
import * as ɵngcc14 from './loading.component';
import * as ɵngcc15 from './dropdown-direction.directive';
import * as ɵngcc16 from './textarea-autoresize.directive';
import * as ɵngcc17 from './operation-result.component';
import * as ɵngcc18 from './virtual-scroll/virtual-scroller-wrapper.component';
import * as ɵngcc19 from './virtual-scroll/virtual-scroll-window.directive';
import * as ɵngcc20 from './bytes.pipe';
import * as ɵngcc21 from './show-if-filter.pipe';
import * as ɵngcc22 from '@angular/common';
import * as ɵngcc23 from '../i18n/i18n.module';
import * as ɵngcc24 from 'ngx-bootstrap/tooltip';
import * as ɵngcc25 from '@angular/cdk/scrolling';
export declare function initializeServices(translateService: TranslateService, state: AppStateService, userPreferences: UserPreferencesService): () => void;
export declare const ICON_LIST: InjectionToken<unknown>;
/**
 * Commonly used directives, data access and translation. This module is the shared
 * module across all core components. It should be imported by default.
 *
 * @exports IconDirective A directive to set a c8y icon with [c8yIcon]="'rocket'".
 * @exports OutletDirective A directive which allows to set DOM or Angular templates (used for upgrade).
 * @exports I18nModule Translation module.
 * @exports NgCommonModule Angular common module.
 * @exports DataModule The data layer to allow DI with @c8y/client
 * @exports HumanizeAppNamePipe Humanize an application name (e.g. in the app switcher)
 * @exports HumanizePipe Humanize a word. E.g. `device management` gets `Device management`
 * @exports ShortenUserNamePipe Allows a short name. E.g. `Foo Bar` gets `F. Bar`
 * @exports ForOfDirective A forOf directive like ngFor but with load-more function
 * @exports LoadMoreComponent A component to load more data from a certain data-source
 * @exports ProgressBarComponent Displays either defined or undefined progress.
 * @exports DropdownDirectionDirective Determines if a dropdown opens to the bottom or to the top.
 * @exports TextareaAutoresizeDirective resizes a textarea height as the user inputs.
 * @exports OperationResultComponent displays an animated svg for success and error operations.
 */
export declare class CommonModule {
    static providers(): any[];
    static forRoot(): ({
        ngModule: typeof CommonModule;
        providers: any[];
    })&{ngModule:CommonModule};
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<CommonModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<CommonModule, [typeof ɵngcc1.EmptyStateComponent, typeof ɵngcc2.IconDirective, typeof ɵngcc3.OutletDirective, typeof ɵngcc4.HumanizePipe, typeof ɵngcc5.HumanizeAppNamePipe, typeof ɵngcc6.IfAllowedDirective, typeof ɵngcc7.ShortenUserNamePipe, typeof ɵngcc8.ForOfDirective, typeof ɵngcc9.LoadMoreComponent, typeof ɵngcc10.MapFunctionPipe, typeof ɵngcc11.ProgressBarComponent, typeof ɵngcc12.DatePipe, typeof ɵngcc13.NumberPipe, typeof ɵngcc14.LoadingComponent, typeof ɵngcc15.DropdownDirectionDirective, typeof ɵngcc16.TextareaAutoresizeDirective, typeof ɵngcc17.OperationResultComponent, typeof ɵngcc18.VirtualScrollerWrapperComponent, typeof ɵngcc19.VirtualScrollWindowDirective, typeof ɵngcc20.BytesPipe, typeof ɵngcc21.ShowIfFilterPipe], [typeof ɵngcc22.CommonModule, typeof ɵngcc23.I18nModule, typeof ɵngcc24.TooltipModule, typeof ɵngcc25.ScrollingModule], [typeof ɵngcc1.EmptyStateComponent, typeof ɵngcc2.IconDirective, typeof ɵngcc3.OutletDirective, typeof ɵngcc23.I18nModule, typeof ɵngcc22.CommonModule, typeof ɵngcc5.HumanizeAppNamePipe, typeof ɵngcc4.HumanizePipe, typeof ɵngcc6.IfAllowedDirective, typeof ɵngcc7.ShortenUserNamePipe, typeof ɵngcc8.ForOfDirective, typeof ɵngcc9.LoadMoreComponent, typeof ɵngcc10.MapFunctionPipe, typeof ɵngcc11.ProgressBarComponent, typeof ɵngcc12.DatePipe, typeof ɵngcc13.NumberPipe, typeof ɵngcc14.LoadingComponent, typeof ɵngcc15.DropdownDirectionDirective, typeof ɵngcc16.TextareaAutoresizeDirective, typeof ɵngcc17.OperationResultComponent, typeof ɵngcc18.VirtualScrollerWrapperComponent, typeof ɵngcc19.VirtualScrollWindowDirective, typeof ɵngcc20.BytesPipe, typeof ɵngcc21.ShowIfFilterPipe]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<CommonModule>;
}

//# sourceMappingURL=common.module.d.ts.map