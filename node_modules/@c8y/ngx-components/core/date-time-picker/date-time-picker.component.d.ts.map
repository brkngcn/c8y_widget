{"version":3,"file":"date-time-picker.component.d.ts","sources":["date-time-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy } from '@angular/core';\nimport { ControlValueAccessor, FormGroup, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\nexport declare class DateTimePickerComponent implements ControlValueAccessor, Validator, OnDestroy {\n    minDate: Date;\n    set _minDate(value: string);\n    maxDate: Date;\n    set _maxDate(value: string);\n    placeholder: string;\n    date: Date;\n    form: FormGroup;\n    defaultPlaceholder: any;\n    onChange: (value: string) => void;\n    onTouched: () => void;\n    private previousValue;\n    private destroy$;\n    constructor();\n    ngOnDestroy(): void;\n    /**\n     * Control Value Accessor - If form value changes by external factor, update date property and internal form with new value.\n     */\n    writeValue(value: string): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(onTouched: any): void;\n    setDisabledState(disabled: boolean): void;\n    validate(control: AbstractControl): ValidationErrors | null;\n    previousDay(): void;\n    nextDay(): void;\n    /**\n     * If internal form changes its value, then combine date and time into one Date and pass its ISO string value to onChange method\n     * @param dateTime\n     * @private\n     */\n    private setDatetime;\n}\n"]}