import { ApplicationService, FetchClient, IResult } from '@c8y/client';
import { AppStateService } from '@c8y/ngx-components';
import { BulkDescription, BulkResult } from './extensible-bulk-device-registration.model';
import { BaseExtensibleDeviceRegistrationService } from '../base-extensible-device-registration.service';
import { ExtensibleDeviceRegistrationProvider } from '../base-device-registration.model';
import * as ɵngcc0 from '@angular/core';
export declare class BulkExtensibleDeviceRegistrationService extends BaseExtensibleDeviceRegistrationService {
    protected applicationService: ApplicationService;
    protected stateService: AppStateService;
    private client;
    constructor(applicationService: ApplicationService, stateService: AppStateService, client: FetchClient);
    getDeviceRegistrationProviders(): Promise<ExtensibleDeviceRegistrationProvider[]>;
    getBulkDescription(contextPath: string): Promise<BulkDescription>;
    upload(csv: File, contextPath: any): Promise<IResult<BulkResult>>;
    getBulkUrl(contextPath: string): string;
    private createBinaryRequestBody;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<BulkExtensibleDeviceRegistrationService, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDeclaration<BulkExtensibleDeviceRegistrationService>;
}

//# sourceMappingURL=extensible-bulk-device-registration.service.d.ts.map