{"version":3,"file":"device-registration-view.component.d.ts","sources":["device-registration-view.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnDestroy, OnInit } from '@angular/core';\nimport { DeviceRegistrationStatus, IDeviceRegistration, IDeviceRegistrationLimit, Paging } from '@c8y/client';\nimport { Observable } from 'rxjs';\nimport { DeviceBootstrapRealtimeService, TenantUiService, ModalService, OptionsService } from '@c8y/ngx-components';\nimport { RegisterDeviceService } from './register-device.service';\nimport { TranslateService } from '@ngx-translate/core';\nexport declare class DeviceRegistrationViewComponent implements OnInit, OnDestroy {\n    private registerDeviceService;\n    private bootstrapRealtimeService;\n    private tenantUiService;\n    private modalService;\n    private translateService;\n    private optionsService;\n    deviceRequests$: Observable<{\n        data: IDeviceRegistration[];\n        paging?: Paging<IDeviceRegistration>;\n    }>;\n    limit$: Observable<IDeviceRegistrationLimit>;\n    limitReachedInfo$: Observable<string>;\n    requireSecurityToken: boolean;\n    isManagementTenant: boolean;\n    isLoading: boolean;\n    gridOrList: 'interact-list' | 'interact-grid';\n    status: typeof DeviceRegistrationStatus;\n    readonly statusProps: {\n        [x: number]: {\n            label: any;\n            icon: string;\n            cls: string;\n        };\n    };\n    private unsubscribe$;\n    private readonly _securityTokenPolicy;\n    constructor(registerDeviceService: RegisterDeviceService, bootstrapRealtimeService: DeviceBootstrapRealtimeService, tenantUiService: TenantUiService, modalService: ModalService, translateService: TranslateService, optionsService: OptionsService);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    updateList(data: any): void;\n    delete(id: string): Promise<void>;\n    accept(request: IDeviceRegistration): void;\n    acceptAll(): void;\n    canAcceptAll(): boolean;\n    loadAll(): void;\n    displayMode(listClass: 'interact-list' | 'interact-grid'): void;\n    setRequireSecurityToken(): Promise<void>;\n    setIsManagementTenant(): Promise<void>;\n    shouldShowSecurityTokenInput(data: IDeviceRegistration): boolean;\n    showTokenInputBasedOnSecurityMode(): boolean;\n}\n"]}