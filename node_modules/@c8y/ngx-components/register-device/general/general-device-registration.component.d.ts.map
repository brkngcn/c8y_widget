{"version":3,"file":"general-device-registration.component.d.ts","sources":["general-device-registration.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { FormlyFieldConfig, FormlyFormOptions } from '@ngx-formly/core';\nimport { TenantUiService, C8yStepper } from '@c8y/ngx-components';\nimport { FormGroup } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { IDeviceRegistration, InventoryService, TenantService } from '@c8y/client';\nimport { RegisterDeviceService } from '../register-device.service';\nimport { CdkStep } from '@angular/cdk/stepper';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\ninterface GeneralDeviceRegistrationModelType {\n    id: string;\n    tenant?: {\n        id: string;\n    };\n    group?: {\n        id: string;\n        name?: string;\n    };\n}\nexport declare class GeneralDeviceRegistrationComponent implements AfterViewInit, OnDestroy {\n    private tenantUIService;\n    private tenantService;\n    private registerDeviceService;\n    private inventoryService;\n    private cd;\n    bsModalRef: BsModalRef;\n    readonly MANAGEMENT = \"management\";\n    readonly FILTER: object;\n    form: FormGroup;\n    model: {\n        devicesToCreate: GeneralDeviceRegistrationModelType[];\n    };\n    options: FormlyFormOptions;\n    isLoading$: Observable<boolean>;\n    success: IDeviceRegistration[];\n    failed: IDeviceRegistration[];\n    fields: FormlyFieldConfig[];\n    private destroy$;\n    private lastCreatedDevices;\n    constructor(tenantUIService: TenantUiService, tenantService: TenantService, registerDeviceService: RegisterDeviceService, inventoryService: InventoryService, cd: ChangeDetectorRef, bsModalRef: BsModalRef);\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    create(eventObject: {\n        stepper: C8yStepper;\n        step: CdkStep;\n    }): void;\n    fixErrors(event: {\n        stepper: C8yStepper;\n        step: CdkStep;\n    }, failedRequests: IDeviceRegistration[]): void;\n    private canLoadTenants$;\n    private getTenants$;\n    private getGroups$;\n}\nexport {};\n"]}