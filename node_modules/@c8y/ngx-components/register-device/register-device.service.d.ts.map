{"version":3,"file":"register-device.service.d.ts","sources":["register-device.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { Router } from '@angular/router';\nimport { DeviceRegistrationService, DeviceRegistrationStatus, IDeviceRegistration, IDeviceRegistrationCreate, IDeviceRegistrationLimit, Paging } from '@c8y/client';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { AlertService, IRealtimeDeviceBootstrap } from '@c8y/ngx-components';\nexport declare class RegisterDeviceService {\n    private router;\n    private deviceRegService;\n    private alertService;\n    readonly _loading: Subject<boolean>;\n    readonly _limit: BehaviorSubject<IDeviceRegistrationLimit>;\n    readonly _deviceRegistrationRequests: BehaviorSubject<{\n        data: IDeviceRegistration[];\n        paging?: Paging<IDeviceRegistration>;\n    }>;\n    readonly deviceRegistrationRequests$: Observable<{\n        data: IDeviceRegistration[];\n        paging?: Paging<IDeviceRegistration>;\n    }>;\n    readonly loading$: Observable<boolean>;\n    readonly limit$: Observable<IDeviceRegistrationLimit>;\n    paging: Paging<IDeviceRegistration>;\n    private readonly deviceRegUrl;\n    private endSubscriptions;\n    constructor(router: Router, deviceRegService: DeviceRegistrationService, alertService: AlertService);\n    isDeviceRegistration(): boolean;\n    internalListUpdate(deviceRequests: IDeviceRegistration[], pagingObject?: Paging<IDeviceRegistration>): void;\n    onDeviceBootstrap(bsData: IRealtimeDeviceBootstrap): void;\n    list(pageSize?: number): void;\n    createMultiple(newDeviceRequests: IDeviceRegistrationCreate[]): Observable<{\n        success: IDeviceRegistration[];\n        failed: IDeviceRegistration[];\n    }>;\n    remove(id: string): void;\n    accept(request: IDeviceRegistration): void;\n    acceptAll(): void;\n    limit(): void;\n    getRequestByStatus(status: DeviceRegistrationStatus): IDeviceRegistration[];\n    ngOnDestroy(): void;\n    private updateStatusById;\n    private removeDeviceRegistrationRequestById;\n}\n"]}