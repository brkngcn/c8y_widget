import { Column, ServerSideDataResult, FilteringModifier } from '@c8y/ngx-components';
import { FormGroup } from '@angular/forms';
import { FormlyFieldConfig } from '@ngx-formly/core';
export declare type DataCallback = (serverSideDataResult: ServerSideDataResult) => ServerSideDataResult;
export interface DeviceGridColumn extends Column {
    filteringConfig?: DeviceGridFormlyColumnFilteringConfig;
    sortingConfig?: DeviceGridColumnSortingConfig;
}
export interface DeviceGridFormlyColumnFilteringConfig {
    /** Defines a FieldConfig configuration for Formly.  */
    fields?: FormlyFieldConfig[];
    /** Defines a JSON schema for filtering config model. Can be used instead of `fields` */
    schema?: object;
    /** Defines a model that will be applied to rendered form. */
    model?: object;
    /** Defines FormGroup instance */
    formGroup?: FormGroup;
    /**
     * Transforms a filtering config model (e.g. coming from schema form component) to a query object.
     * However, using schema form component is not necessary.
     * Model can be defined arbitrarily but must converted to a valid query object.
     * @param model An object with defined structure (e.g. by schema).
     * @returns A query object to be used to generate a query string (QueryUtils).
     */
    getFilter: (model: any) => any;
}
export interface DeviceGridColumnSortingConfig {
    pathSortingConfigs: PathSortingConfig[];
}
export interface PathSortingConfig {
    path: string;
    sortOrderModifier?: SortOrderModifier;
}
export interface ContextConfig {
    groupId: string;
    excludeChildren: boolean;
}
export interface FilterConfig {
    columnName: string;
    filteringModifier: FilteringModifier;
}
export declare const enum SortOrderModifier {
    Keep = 0,
    Invert = 1
}
export declare const enum DeviceGridActionType {
    Delete = "DELETE"
}
export declare const enum DeviceGridBulkActionType {
}
