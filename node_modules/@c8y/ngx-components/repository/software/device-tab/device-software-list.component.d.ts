import { AfterContentInit, EventEmitter, OnDestroy, OnInit } from '@angular/core';
import { IManagedObject, IResultList } from '@c8y/client';
import { DeviceSoftware, DeviceSoftwareChange, FilterCriteria } from '@c8y/ngx-components/repository/shared';
import { Observable } from 'rxjs';
import { DeviceSoftwareService } from './device-software.service';
export declare class DeviceSoftwareListComponent implements OnInit, AfterContentInit, OnDestroy {
    private deviceSoftwareService;
    set softwareList(softwareList: DeviceSoftware[]);
    device: IManagedObject;
    deviceSoftwareChanges: DeviceSoftwareChange[];
    filterCriteria$: Observable<FilterCriteria>;
    update: EventEmitter<DeviceSoftware>;
    remove: EventEmitter<DeviceSoftware>;
    onListEmpty: EventEmitter<boolean>;
    softwareItems$: Observable<IResultList<DeviceSoftware>>;
    showUpdate: boolean;
    showRemove: boolean;
    emptyList: boolean;
    noSearchResults: boolean;
    alreadyInstalledMessage: any;
    supportsSoftwareOperations: boolean;
    private readonly operationTypes;
    private legacySoftwareList$;
    private destroyed$;
    constructor(deviceSoftwareService: DeviceSoftwareService);
    ngOnInit(): void;
    ngAfterContentInit(): void;
    isSoftwareGoingToBeChanged(software: DeviceSoftware): boolean;
    ngOnDestroy(): void;
    private notifyListEmpty;
}
