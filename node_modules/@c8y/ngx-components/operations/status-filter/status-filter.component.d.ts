import { EventEmitter } from '@angular/core';
import { StatusOption, OperationStatusOptionsMap } from '@c8y/ngx-components/operations/shared';
import * as ɵngcc0 from '@angular/core';
export declare class StatusFilterComponent {
    statusOptions: Array<{
        selected: boolean;
        option: StatusOption;
    }>;
    /** List of filter options to be displayed */
    set options(options: OperationStatusOptionsMap);
    /**
     * Allows multiple options to be active simultaneosly.
     */
    set _multiple(multiple: boolean);
    /** Display the filter as a small button group */
    set _small(small: boolean);
    get displaySmall(): boolean;
    onFilterChanged: EventEmitter<StatusOption[]>;
    isAllButtonSelected: boolean;
    private multiple;
    private small;
    changeFilter(option: {
        selected: boolean;
        option: StatusOption;
    }): void;
    removeFilter(): void;
    /**
     * Allows the filter to be initalliy displayed with some preset filters.
     *
     * @param filters An `StatusOption` array defining filter options to be preset.
     * @param emit  (optional) If `true` component will emit `onFilterChanged` event.
     */
    preset(filters: StatusOption[], emit?: boolean): void;
    reset(): void;
    activeFilters(): StatusOption[];
    isFilterApplied(): boolean;
    private emitSelectedOptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<StatusFilterComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<StatusFilterComponent, "c8y-status-filter", never, { "options": "options"; "_multiple": "multiple"; "_small": "small"; }, { "onFilterChanged": "onFilterChanged"; }, never, never>;
}

//# sourceMappingURL=status-filter.component.d.ts.map