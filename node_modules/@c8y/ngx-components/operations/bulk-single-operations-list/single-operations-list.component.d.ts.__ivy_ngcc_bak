import { AfterViewInit, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';
import { IOperation, IOperationBulk, IResultList, OperationStatus } from '@c8y/client';
import { StatusFilterComponent } from '@c8y/ngx-components/operations/status-filter';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { StatusOption, OperationStatusOptionsMap } from '@c8y/ngx-components/operations/shared';
export declare class SingleOperationsListComponent implements AfterViewInit, OnChanges {
    private bulkOperationsService;
    bulkOperation: Partial<IOperationBulk>;
    readOnly: boolean;
    onRetryFailedOperations: EventEmitter<Partial<IOperationBulk>>;
    statusFilter: StatusFilterComponent;
    OPERATION_STATUS: {
        ALL: any;
        PENDING: OperationStatus;
        EXECUTING: OperationStatus;
        SUCCESSFUL: OperationStatus;
        FAILED: OperationStatus;
    };
    OPERATION_STATUS_LABELS: {
        PENDING: any;
        EXECUTING: any;
        FAILED: any;
        SUCCESSFUL: any;
    };
    OPERATION_STATUS_OPTIONS_MAP: OperationStatusOptionsMap;
    singleOperations: IResultList<IOperation>;
    constructor(bulkOperationsService: BulkOperationsService);
    ngAfterViewInit(): Promise<void>;
    ngOnChanges(changes: SimpleChanges): void;
    filterOperationsByType(): void;
    getFilterTypeOfSingleOperations(): any;
    getOperationsByStatus(filter: StatusOption[]): Promise<void>;
    retryBulkOperation(): void;
}
