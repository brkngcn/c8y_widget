{"version":3,"file":"bulk-operations-list.component.d.ts","sources":["bulk-operations-list.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, QueryList } from '@angular/core';\nimport { IOperationBulk, IResultList } from '@c8y/client';\nimport { DatePickerComponent, OperationBulkRealtimeService } from '@c8y/ngx-components';\nimport { BulkOperationsService, OperationType } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { StatusFilterComponent } from '@c8y/ngx-components/operations/status-filter';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { OperationStatusOptionsMap, BulkOperationListItemComponent } from '@c8y/ngx-components/operations/bulk-operation-list-item';\nimport { StatusOption } from '@c8y/ngx-components/operations/shared';\nimport { BulkOperationModalsService } from './modals/bulk-operation-modals.service';\nexport declare class BulkOperationsListComponent implements OnInit {\n    realtime: OperationBulkRealtimeService;\n    private bulkOperationsService;\n    private bulkOperationModalsService;\n    bulkTypes: OperationType[];\n    selectedTypeFilters: OperationType[];\n    bulkOperationStatusOptions: OperationStatusOptionsMap;\n    filterPipe: any;\n    refreshLoading: boolean;\n    statusFilter$: BehaviorSubject<StatusOption[]>;\n    typeFilter$: BehaviorSubject<OperationType[]>;\n    timeFilter$: BehaviorSubject<any>;\n    reload$: BehaviorSubject<void>;\n    listItems: QueryList<BulkOperationListItemComponent>;\n    statusFilter: StatusFilterComponent;\n    datePicker: DatePickerComponent;\n    bulkOperations$: Observable<IResultList<IOperationBulk>>;\n    private allFilterFragments;\n    constructor(realtime: OperationBulkRealtimeService, bulkOperationsService: BulkOperationsService, bulkOperationModalsService: BulkOperationModalsService);\n    ngOnInit(): void;\n    filterByType(bulkOperations: IOperationBulk[], typeFilter: any): IOperationBulk[];\n    resetFilter(): void;\n    isFilterApplied(): boolean;\n    filter(statusFilters: any, timeFilter: any): Promise<IResultList<IOperationBulk>>;\n    getBulkOperations(filter?: any): Promise<IResultList<IOperationBulk>>;\n    getTypeFilters(): OperationType[];\n    addBulkOperation(): void;\n    openFailedOperation(failedParentId: any): void;\n    compareOperations(operationA: IOperationBulk, operationB: IOperationBulk): number;\n    private flattenFilterFragments;\n}\n"]}