{"__symbolic":"module","version":4,"metadata":{"StepperBulkTypeConfigurationModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":16,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"StepperBulkTypeConfigurationComponent"}],"imports":[{"__symbolic":"reference","module":"@c8y/ngx-components","name":"CoreModule","line":19,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components","name":"FormsModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":21,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-stepper","name":"BulkOperationStepperModule","line":22,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/repository/shared","name":"SharedRepositoryModule","line":23,"character":4},{"__symbolic":"reference","module":"@c8y/ngx-components/operations/stepper-frames","name":"StepperFramesModule","line":24,"character":4}],"providers":[{"provide":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"HOOK_LIST_BULK_TYPE","line":28,"character":15},"useValue":{"type":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationType","line":30,"character":14},"member":"CONFIGURATION"},"c8yIcon":"cogs","name":{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@c8y/ngx-components","name":"gettext","line":32,"character":14},"arguments":["Configuration update"]},"path":{"__symbolic":"binop","operator":"+","left":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"baseUrl","line":33,"character":17},"right":"configuration"},"component":{"__symbolic":"reference","name":"StepperBulkTypeConfigurationComponent"},"fragments":["c8y_DownloadConfigFile","c8y_Configuration"],"selected":false},"multi":true}],"entryComponents":[{"__symbolic":"reference","name":"StepperBulkTypeConfigurationComponent"}],"exports":[{"__symbolic":"reference","name":"StepperBulkTypeConfigurationComponent"}]}]}],"members":{}},"StepperBulkTypeConfigurationComponent":{"__symbolic":"class","extends":{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operation-stepper","name":"BaseStepperComponent","line":19,"character":59},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"c8y-stepper-bulk-type-configuration","template":"<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select configuration' | translate;\n      completed: !!selectedConfiguration;\n      buttonsDisabled: !selectedConfiguration;\n      onNext: goToSecondStep.bind(this)\n    \"\n  >\n    <c8y-select-step-frame\n      [header]=\"'Select configuration' | translate\"\n      [noResults]=\"\n        ((textFilter$ | async)?.length || (configType$ | async)?.length) &&\n        (configurations$ | async)?.data.length === 0\n      \"\n    >\n      <div filters class=\"row\">\n        <div class=\"col-md-6\">\n          <div class=\"input-group input-group-search\">\n            <input\n              type=\"search\"\n              class=\"form-control\"\n              title=\"{{ 'Filter…' | translate }}\"\n              placeholder=\"{{ 'Filter…' | translate }}\"\n              [ngModel]=\"textFilter$ | async\"\n              (ngModelChange)=\"textFilter$.next($event)\"\n            />\n            <span class=\"input-group-addon\">\n              <i c8yIcon=\"filter\" *ngIf=\"(textFilter$ | async).length === 0\"></i>\n              <i\n                c8yIcon=\"times\"\n                class=\"text-muted\"\n                *ngIf=\"(textFilter$ | async).length > 0\"\n                (click)=\"textFilter$.next('')\"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class=\"col-xs-12 p-b-8 visible-xs visible-sm\"></div>\n        <div class=\"col-md-6\">\n          <c8y-form-group class=\"m-0\">\n            <c8y-typeahead\n              name=\"configType\"\n              [(ngModel)]=\"selectedConfigType\"\n              placeholder=\"{{ 'Type to filter configuration types…' | translate }}\"\n              (onSearch)=\"configType$.next($event)\"\n            >\n              <c8y-li\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedConfigType = { name: '' }; configType$.next('')\"\n              >\n                <span>{{ 'All configuration types' | translate }}</span>\n              </c8y-li>\n              <c8y-li\n                *ngFor=\"let configType of configTypes\"\n                class=\"p-l-8 p-r-8 c8y-list__item--link\"\n                (click)=\"selectedConfigType = configType; configType$.next(configType.name)\"\n                [active]=\"selectedConfigType === configType\"\n              >\n                <c8y-highlight\n                  [text]=\"configType.name\"\n                  [pattern]=\"configType$ | async\"\n                ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n          </c8y-form-group>\n        </div>\n      </div>\n      <c8y-li header class=\"hidden-sm hidden-xs m-r-8 m-l-8\">\n        <c8y-li-icon><i class=\"p-l-32 p-r-40\"></i></c8y-li-icon>\n        <c8y-li-body class=\"content-flex-40\">\n          <div class=\"col-5\">\n            <span class=\"text-truncate\" title=\" {{ 'Name' | translate }} \">\n              {{ 'Name' | translate }}\n            </span>\n          </div>\n          <div class=\"col-4\">\n            <span class=\"text-truncate\" title=\"{{ 'Device type' | translate }}\">\n              {{ 'Device type' | translate }}\n            </span>\n          </div>\n          <div class=\"col-3\">\n            <span class=\"text-truncate\" title=\"{{ 'Configuration type' | translate }}\">\n              {{ 'Configuration type' | translate }}\n            </span>\n          </div>\n        </c8y-li-body>\n      </c8y-li>\n      <c8y-list-group\n        list\n        [ngClass]=\"{ 'dd-low': (configurations$ | async)?.data?.length < DD_LOW_COUNT }\"\n      >\n        <c8y-li #listItem *c8yFor=\"let configuration of configurations$ | async\">\n          <c8y-li-radio (onSelect)=\"selectConfiguration(configuration)\"></c8y-li-radio>\n          <c8y-li-icon icon=\"gears\"></c8y-li-icon>\n          <c8y-li-body class=\"content-flex-40\">\n            <div class=\"col-5 m-b-xs-8\">\n              <div class=\"text-truncate\" title=\"{{ configuration.name || '-' }}\">\n                <c8y-highlight\n                  [text]=\"configuration.name || '-'\"\n                  [pattern]=\"textFilter$ | async\"\n                ></c8y-highlight>\n              </div>\n            </div>\n            <div class=\"col-4 m-b-xs-8\">\n              <div\n                class=\"text-truncate\"\n                title=\"{{ 'Device type' | translate }}: {{ getDeviceTypeTitle(configuration) }}\"\n              >\n                <span translate class=\"text-label-small m-r-8 visible-xs visible-sm\"\n                  >Device type</span\n                >\n                {{ configuration.deviceType }}\n                <em class=\"text-muted\" *ngIf=\"!configuration.deviceType\">\n                  {{ 'Undefined`device type`' | translate }}\n                </em>\n              </div>\n            </div>\n            <div class=\"col-3 m-b-xs-8\">\n              <span class=\"text-label-small m-r-8 visible-xs visible-sm\" translate>\n                Configuration type\n              </span>\n              <span\n                class=\"label label-info\"\n                *ngIf=\"configuration.configurationType\"\n                title=\"{{ 'Configuration type' | translate }}: {{\n                  configuration.configurationType\n                }}\"\n              >\n                <c8y-highlight\n                  [text]=\"configuration.configurationType\"\n                  elementClass=\"text-gray-lighter\"\n                  [pattern]=\"configType$ | async\"\n                ></c8y-highlight>\n              </span>\n              <span\n                class=\"label label-default\"\n                *ngIf=\"!configuration.configurationType\"\n                title=\"{{ 'Configuration type' | translate }}: {{ 'Undefined' | translate }}\"\n              >\n                {{ 'Undefined' | translate }}\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </c8y-select-step-frame>\n  </ng-container>\n  <ng-container *customStep=\"'Preview configuration' | translate\">\n    <c8y-preview-selection-frame\n      [header]=\"'Preview configuration' | translate\"\n      [name]=\"selectedConfiguration?.name\"\n      [type]=\"selectedConfiguration?.configurationType\"\n    >\n      <ng-container *previewBlock=\"'Device type' | translate\">\n        <ng-container *ngIf=\"selectedConfiguration?.deviceType; else noType\">\n          <span>{{ selectedConfiguration?.deviceType }}</span>\n        </ng-container>\n        <ng-template #noType>\n          <em class=\"text-muted\" translate>Undefined`device type`</em>\n        </ng-template>\n      </ng-container>\n      <ng-container *previewBlock=\"'Updated' | translate\">\n        <span>{{ selectedConfiguration?.lastUpdated | c8yDate }}</span>\n      </ng-container>\n      <ng-container *previewBlock=\"'Preview' | translate\">\n        <div\n          class=\"c8y-empty-state text-left\"\n          *ngIf=\"!this.selectedConfiguration?.binary; else binaryPreview\"\n        >\n          <h1 [c8yIcon]=\"'file-code-o'\"></h1>\n          <p>\n            <strong translate>No preview available.</strong><br />\n            <small translate>Could not fetch the file.</small>\n          </p>\n        </div>\n        <ng-template #binaryPreview>\n          <pre style=\"min-height: 98px\"><code>{{ this.selectedConfiguration?.binary }}</code></pre>\n        </ng-template>\n      </ng-container>\n    </c8y-preview-selection-frame>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@c8y/ngx-components/operations/bulk-operations-service","name":"BulkOperationsService","line":37,"character":34},{"__symbolic":"reference","module":"@c8y/ngx-components/repository/shared","name":"RepositoryService","line":38,"character":31},{"__symbolic":"reference","module":"@ngx-translate/core","name":"TranslateService","line":39,"character":23}]}],"loadConfigurationTypes":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"selectConfiguration":[{"__symbolic":"method"}],"goToSecondStep":[{"__symbolic":"method"}],"getConfigBinary":[{"__symbolic":"method"}],"getDeviceTypeTitle":[{"__symbolic":"method"}],"retrieveOperationPrototype":[{"__symbolic":"method"}],"getConfiguration":[{"__symbolic":"method"}]}}},"origins":{"StepperBulkTypeConfigurationModule":"./stepper-bulk-type-configuration.module","StepperBulkTypeConfigurationComponent":"./stepper-bulk-type-configuration.component"},"importAs":"@c8y/ngx-components/operations/stepper-bulk-type-configuration"}