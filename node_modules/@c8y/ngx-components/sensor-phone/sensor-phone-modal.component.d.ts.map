{"version":3,"file":"sensor-phone-modal.component.d.ts","sources":["sensor-phone-modal.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DeviceRegistrationService, InventoryService } from '@c8y/client';\nimport { C8yStepper, GainsightService } from '@c8y/ngx-components';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { SensorPhoneService } from './sensor-phone.service';\nexport declare class SensorPhoneModalComponent implements AfterViewInit {\n    private bsModalRef;\n    private sensorPhoneService;\n    private renderer;\n    private deviceRegistrationService;\n    private router;\n    private inventoryService;\n    private gainsightService;\n    stepper: C8yStepper;\n    container: ElementRef;\n    pendingDeviceBootstrap: boolean;\n    success: any;\n    errorMessage: any;\n    registrationData: any;\n    tenantId: any;\n    instance: any;\n    deviceId: string;\n    dashboardLink: string;\n    constructor(bsModalRef: BsModalRef, sensorPhoneService: SensorPhoneService, renderer: Renderer2, deviceRegistrationService: DeviceRegistrationService, router: Router, inventoryService: InventoryService, gainsightService: GainsightService);\n    onKeydownHandler(): void;\n    ngAfterViewInit(): void;\n    onStepperSelectionChange(stepper: Partial<C8yStepper>): void;\n    registerPhone(): Promise<void>;\n    waitForPhoneToConnect(): Promise<import(\"@c8y/client\").IDeviceRegistration>;\n    waitForDeviceAndDashboardMos(): Promise<{\n        deviceMo: import(\"@c8y/client\").IManagedObject;\n        dashboardMo: import(\"@c8y/client\").IManagedObject;\n    }>;\n    onDeviceAndDashboardMosCreated(deviceMo: any, dashboardMo: any): void;\n    generateDeviceId(): string;\n    openDashboard(): void;\n    back(): void;\n    next(): void;\n    cancel(): void;\n    retry(): void;\n    onFailure(): void;\n    deleteDeviceRequest(): Promise<void>;\n    private getCurrentStepNumber;\n}\n"]}