{"version":3,"file":"datapoint-selector-list-item.component.d.ts","sources":["datapoint-selector-list-item.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, FormBuilder, FormGroup, ValidationErrors, Validator } from '@angular/forms';\nimport { IResultList } from '@c8y/client';\nimport { Observable } from 'rxjs';\nimport { ListItemDragHandleComponent } from '@c8y/ngx-components';\nimport { DatapointAction, DatapointAttributesFormConfig, KPIDetails, ManagedObjectKPI } from '../datapoint-selection.model';\nexport declare class DatapointSelectorListItemComponent implements ControlValueAccessor, Validator {\n    private formBuilder;\n    formGroup: FormGroup;\n    defaultFormOptions: Partial<DatapointAttributesFormConfig>;\n    isSelected: boolean;\n    isCollapsed: boolean;\n    showAddRemoveButton: boolean;\n    editable: boolean;\n    showActiveToggle: boolean;\n    activeToggleDisabled: boolean;\n    showOptions: boolean;\n    datapointLibraryEntries: Observable<IResultList<ManagedObjectKPI>>;\n    actions: DatapointAction[];\n    optionToRemove: boolean;\n    hasUnlinkTemplateOption: boolean;\n    added: EventEmitter<KPIDetails>;\n    removed: EventEmitter<KPIDetails>;\n    colorPickerDisabled: boolean;\n    disableTypeaheadIfSelected: boolean;\n    highlightText: string;\n    dragHandle: ListItemDragHandleComponent;\n    pattern: string;\n    filterPipe: any;\n    isValid$: Observable<boolean>;\n    constructor(formBuilder: FormBuilder);\n    validate(control: AbstractControl): ValidationErrors;\n    writeValue(obj: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    collapse(): void;\n    addOrRemoveItem(): void;\n    remove(dp: KPIDetails): void;\n    setPipe(filterStr: string): void;\n    unlinkDatapointTemplate(): void;\n    dataPointTemplateSelected(template: ManagedObjectKPI): void;\n    private resetUnusedProperties;\n    private filterDatapointLabel;\n    private transformFormValue;\n}\n"]}