{"version":3,"file":"datapoint-selector.component.d.ts","sources":["datapoint-selector.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { IIdentified, IResultList } from '@c8y/client';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { DatapointLibraryService } from './datapoint-library.service';\nimport { KPIDetails, ManagedObjectKPI } from './datapoint-selection.model';\nexport declare class DatapointSelectorComponent implements OnInit, ControlValueAccessor {\n    private datapointService;\n    contextAsset: IIdentified;\n    allowChangingContext: boolean;\n    allowDatapointsFromMultipleAssets: boolean;\n    selectedDatapoints: KPIDetails[];\n    defaultActiveState: boolean;\n    ignoreDatapointTemplates: boolean;\n    guessDatapointUnit: boolean;\n    allowSearch: boolean;\n    searchString: string;\n    maxNumberOfDatapoints: number;\n    loadingDatapoints: boolean;\n    assetSelection: BehaviorSubject<IIdentified>;\n    datapoints$: Observable<KPIDetails[]>;\n    filteredDatapoints$: Observable<KPIDetails[]>;\n    searchStringChanges$: Observable<string>;\n    datapointLibraryEntries: Observable<IResultList<ManagedObjectKPI>>;\n    private searchString$;\n    private touched;\n    private onChange;\n    private onTouched;\n    constructor(datapointService: DatapointLibraryService);\n    ngOnInit(): void;\n    writeValue(obj: KPIDetails[]): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    datapointAdded(dp: KPIDetails): void;\n    datapointRemoved(dp: KPIDetails): void;\n    selectionChanged(evt: IIdentified | IIdentified[]): void;\n    trackByFn(_index: number, item: KPIDetails): string;\n    searchStringChanged(newValue?: string): void;\n    private setupObservables;\n    private selectAsset;\n    private clearSelection;\n    private emitCurrentSelection;\n    private markAsTouched;\n    private includesSearchString;\n}\n"]}