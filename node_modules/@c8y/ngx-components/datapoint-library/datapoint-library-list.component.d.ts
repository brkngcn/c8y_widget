import { Router } from '@angular/router';
import { IManagedObject, InventoryService, IResultList } from '@c8y/client';
import { AlertService, ModalService } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { BehaviorSubject, Observable } from 'rxjs';
import { DatapointParserService } from '@c8y/ngx-components/datapoint-library/services';
import * as ɵngcc0 from '@angular/core';
export declare class DatapointLibraryListComponent {
    private inventory;
    private router;
    private modalService;
    private translateService;
    private alertService;
    private parser;
    listClass: string;
    isLoading: boolean;
    reload$: BehaviorSubject<void>;
    datapoints$: Observable<IResultList<IManagedObject>>;
    parsePipe: import("rxjs").UnaryFunction<Observable<IManagedObject[]>, Observable<IManagedObject[]>>;
    constructor(inventory: InventoryService, router: Router, modalService: ModalService, translateService: TranslateService, alertService: AlertService, parser: DatapointParserService);
    getDatapoints(): Promise<IResultList<IManagedObject>>;
    addDatapointEntry(): void;
    editDatapointEntry(entry: IManagedObject): void;
    removeDatapointEntry(entry: IManagedObject): Promise<void>;
    reload(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DatapointLibraryListComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DatapointLibraryListComponent, "c8y-datapoint-library-list", never, {}, {}, never, never>;
}

//# sourceMappingURL=datapoint-library-list.component.d.ts.map