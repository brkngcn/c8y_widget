{"version":3,"file":"multiple-lns-connector.service.d.ts","sources":["multiple-lns-connector.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA","sourcesContent":["import { FetchClient, IApplication, IFetchResponse } from '@c8y/client';\nimport { AlertService, AppStateService } from '@c8y/ngx-components';\nimport { ActilityConnection, SigfoxConnection, ConnectionType } from './multiple-lns-connector.model';\nexport declare class MultipleLnsConnectorService {\n    private client;\n    private appStateService;\n    private alertService;\n    private headers;\n    constructor(client: FetchClient, appStateService: AppStateService, alertService: AlertService);\n    list(connectionType: ConnectionType): Promise<IFetchResponse>;\n    /**\n     * Saves the connection.\n     * @param connection The connection to be saved.\n     * @param originalName The original name of the connection, required to perform an update.\n     */\n    save(connection: ActilityConnection | SigfoxConnection, originalName?: string): Promise<IFetchResponse>;\n    detail(connectionType: ConnectionType, connectionName: string): Promise<ActilityConnection | SigfoxConnection | null>;\n    exists(connectionType: ConnectionType, connectionName: string): Promise<boolean>;\n    create(connection: ActilityConnection | SigfoxConnection): Promise<IFetchResponse>;\n    update(connection: ActilityConnection | SigfoxConnection, originalName: string): Promise<IFetchResponse>;\n    getBaseUrlByConnection(connection: ActilityConnection | SigfoxConnection): \"service/sigfox-agent\" | \"service/actility\" | \"\";\n    getBaseUrlByType(connectionType: ConnectionType): \"service/sigfox-agent\" | \"service/actility\" | \"\";\n    delete(connection: ActilityConnection | SigfoxConnection): Promise<IFetchResponse>;\n    getApplication(name: string): Partial<IApplication>;\n    download(url: string): Promise<IFetchResponse>;\n}\n"]}