"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.config = void 0;
const path = require("path");
function config(env) {
    return {
        entry: {
            bootstrap: '@c8y/cli/dist/app-bootstrap'
        },
        mode: env.mode,
        devtool: 'eval-cheap-module-source-map',
        output: {
            filename: '[name].js',
            chunkFilename: '[name].js',
            assetModuleFilename: '[name]-[contenthash][ext]',
            path: path.resolve(env.output || 'dist', 'apps', env.app.contextPath)
        },
        resolve: {
            extensions: ['.ts', '.js', '.json'],
            // always look in the root node_modules first
            // trying to avoid issues with multiple versions of rxjs
            modules: [path.resolve(env.app.rootNodeModulesPath || 'node_modules'), 'node_modules']
        },
        // We ignore this message as Ivy includes everything into the bundle when
        // used with yarn workspace in our monorepo. As the build is not done via
        // mono-repo, the production build don't have this unused files.
        ignoreWarnings: [
            {
                message: /.*? part of the TypeScript compilation but it's unused\./
            }
        ],
        module: {
            rules: [
                {
                    test: /(jpe?g|gif|png|woff(2)?|eot|ttf|svg)(\?v=[0-9]\.[0-9]\.[0-9])?$/,
                    exclude: /(\/|\\)favicon/,
                    type: 'asset/resource'
                },
                // Three.js meshes loader for the rotation3dWidget.
                // Avoiding that the file is included into the build, as
                // JSON automatically is included into WP builds.
                {
                    test: /meshes\/.*json/,
                    issuer: /rotation3dWidget\/webpack-specific.js/,
                    type: 'asset/resource'
                }
            ]
        }
    };
}
exports.config = config;
//# sourceMappingURL=base.js.map